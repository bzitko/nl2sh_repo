# sent_i = 0
# sent = Animals need water.
# hyperedge = (need/Pd.so:01:01.|f:01 animals/Cc..p water/Cc..s)
# hyperedge builder = (0.1/Pd.so:01:01.|f:01 0.0/Cc..p 0.2/Cc..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
0 0 Animals + animal NOUN  NNS nsubj 1 - -       B-ARG0 animal.n.01 animals/Cc..p
0 1 need    + need   VERB  VBP ROOT  1 - need.01 B-V    want.v.02   need/Pd.so:01:01.|f:01
0 2 water   - water  NOUN  NN  dobj  1 - -       B-ARG1 water.n.06  water/Cc..s
0 3 .       - .      PUNCT .   punct 1 - -       -      -           -

# sent_i = 1
# sent = I ate the last sandwich.
# hyperedge = (ate/Pd.so:01:01.<f:01 i/Ci (the/Md.< (last/Ma.< sandwich/Cc..s)))
# hyperedge builder = (1.1/Pd.so:01:01.<f:01 1.0/Ci (1.2/Md.< (1.3/Ma.< 1.4/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
1 0 I        + I        PRON  PRP nsubj 1 - -      B-ARG0 -             i/Ci
1 1 ate      + eat      VERB  VBD ROOT  1 - eat.01 B-V    eat.v.01      ate/Pd.so:01:01.<f:01
1 2 the      + the      DET   DT  det   4 - -      B-ARG1 -             the/Md.<
1 3 last     + last     ADJ   JJ  amod  4 - -      I-ARG1 last.a.02     last/Ma.<
1 4 sandwich - sandwich NOUN  NN  dobj  1 - -      I-ARG1 sandwich.n.01 sandwich/Cc..s
1 5 .        - .        PUNCT .   punct 1 - -      -      -             -

# sent_i = 2
# sent = All passengers with tickets can board now.
# hyperedge = ((can/Mm.< board/Pd.s?:0t:1t.-i:01) (with/Br (all/Md.< passengers/Cc..p) tickets/Cc..p) now/M)
# hyperedge builder = ((2.4/Mm.< 2.5/Pd.s?:0t:1t.-i:01) (2.2/Br (2.0/Md.< 2.1/Cc..p) 2.3/Cc..p) 2.6/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
2 0 All        + all       DET   DT  det    1 - -        -   B-ARG0     all.a.01       all/Md.<
2 1 passengers + passenger NOUN  NNS nsubj  5 - -        -   I-ARG0     passenger.n.01 passengers/Cc..p
2 2 with       + with      ADP   IN  prep   1 - -        -   I-ARG0     -              with/Br
2 3 tickets    + ticket    NOUN  NNS pobj   2 - -        -   I-ARG0     ticket.n.01    tickets/Cc..p
2 4 can        + can       AUX   MD  aux    5 - -        B-V B-ARGM-MOD -              can/Mm.<
2 5 board      + board     VERB  VB  ROOT   5 - board.01 -   B-V        board.v.01     board/Pd.s?:0t:1t.-i:01
2 6 now        - now       ADV   RB  advmod 5 - -        -   B-ARGM-TMP now            now/M
2 7 .          - .         PUNCT .   punct  5 - -        -   -          -              -

# sent_i = 3
# sent = We have been working since 9am.
# hyperedge = ((have/Mv.< (been/Mv.< working/Pd.sx:0t:0t.|pg:012345)) we/Ci (since/Tt (9/M#.<..t am/C...t)))
# hyperedge builder = ((3.1/Mv.< (3.2/Mv.< 3.3/Pd.sx:0t:0t.|pg:012345)) 3.0/Ci (3.4/Tt (3.5/M#.<..t 3.6/C...t)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
3 0 We      + we    PRON  PRP nsubj  3 -      -       -   -   B-ARG0     -                  we/Ci
3 1 have    + have  AUX   VBP aux    3 -      have.01 B-V -   -          -                  have/Mv.<
3 2 been    + be    AUX   VBN aux    3 -      be.03   -   B-V -          -                  been/Mv.<
3 3 working + work  VERB  VBG ROOT   3 -      work.01 -   -   B-V        work.v.01          working/Pd.sx:0t:0t.|pg:012345
3 4 since   + since SCONJ IN  prep   3 -      -       -   -   B-ARGM-TMP -                  since/Tt
3 5 9       - 9     NUM   CD  nummod 6 B-TIME -       -   -   I-ARGM-TMP nine.s.01          9/M#.<..t
3 6 am      - a.m.  ADV   RB  pobj   4 I-TIME -       -   -   I-ARGM-TMP ante_meridiem.r.01 am/C...t
3 7 .       - .     PUNCT .   punct  3 -      -       -   -   -          -                  -

# sent_i = 4
# sent = I will be going to France next week.
# hyperedge = ((will/Mm.< (be/Mv.< going/Pd.sxx:04t:1gt.|pg:0134)) i/Ci (to/T france/Cp..s.g) (next/Ma.<..d week/Cc..s.d))
# hyperedge builder = ((4.1/Mm.< (4.2/Mv.< 4.3/Pd.sxx:04t:1gt.|pg:0134)) 4.0/Ci (4.4/T 4.5/Cp..s.g) (4.6/Ma.<..d 4.7/Cc..s.d))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
4 0 I      + I      PRON  PRP nsubj    3 -      -     -   -   B-ARG0     -              i/Ci
4 1 will   + will   AUX   MD  aux      3 -      -     B-V -   B-ARGM-MOD -              will/Mm.<
4 2 be     + be     AUX   VB  aux      3 -      be.03 -   B-V -          -              be/Mv.<
4 3 going  + go     VERB  VBG ROOT     3 -      go.02 -   -   B-V        travel.v.01    going/Pd.sxx:04t:1gt.|pg:0134
4 4 to     + to     ADP   IN  prep     3 -      -     -   -   B-ARG4     -              to/T
4 5 France + France PROPN NNP pobj     4 B-GPE  -     -   -   I-ARG4     france.n.01    france/Cp..s.g
4 6 next   + next   ADJ   JJ  amod     7 B-DATE -     -   -   B-ARGM-TMP following.s.02 next/Ma.<..d
4 7 week   - week   NOUN  NN  npadvmod 3 I-DATE -     -   -   I-ARGM-TMP week.n.03      week/Cc..s.d
4 8 .      - .      PUNCT .   punct    3 -      -     -   -   -          -              -

# sent_i = 5
# sent = It may have been being repaired.
# hyperedge = ((may/Mm.< (have/Mv.< (been/Mv.< (being/Mv.< repaired/Pd.p:1:1.<pf:01)))) it/Ci)
# hyperedge builder = ((5.1/Mm.< (5.2/Mv.< (5.3/Mv.< (5.4/Mv.< 5.5/Pd.p:1:1.<pf:01)))) 5.0/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
5 0 It       + it     PRON  PRP nsubjpass 5 - -         -   -   -   -   B-ARG1     -           it/Ci
5 1 may      + may    AUX   MD  aux       5 - -         B-V -   -   -   B-ARGM-MOD -           may/Mm.<
5 2 have     + have   AUX   VB  aux       5 - have.01   -   B-V -   -   -          -           have/Mv.<
5 3 been     + be     AUX   VBN aux       5 - be.03     -   -   B-V -   -          -           been/Mv.<
5 4 being    + be     AUX   VBG auxpass   5 - be.03     -   -   -   B-V -          -           being/Mv.<
5 5 repaired - repair VERB  VBN ROOT      5 - repair.01 -   -   -   -   B-V        repair.v.01 repaired/Pd.p:1:1.<pf:01
5 6 .        - .      PUNCT .   punct     5 - -         -   -   -   -   -          -           -

# sent_i = 6
# sent = He has clever ideas.
# hyperedge = (has/Pd.so:01:01.|f--3s:01 he/Ci (clever/Ma.< ideas/Cc..p))
# hyperedge builder = (6.1/Pd.so:01:01.|f--3s:01 6.0/Ci (6.2/Ma.< 6.3/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
6 0 He     + he     PRON  PRP nsubj 1 - -       B-ARG0 -           he/Ci
6 1 has    + have   VERB  VBZ ROOT  1 - have.03 B-V    have.v.01   has/Pd.so:01:01.|f--3s:01
6 2 clever + clever ADJ   JJ  amod  3 - -       B-ARG1 clever.s.03 clever/Ma.<
6 3 ideas  - idea   NOUN  NNS dobj  1 - -       I-ARG1 idea.n.01   ideas/Cc..p
6 4 .      - .      PUNCT .   punct 1 - -       -      -           -

# sent_i = 7
# sent = It was a very big meal.
# hyperedge = (was/Pd.sc:12:1h.<f:12 it/Ci (a/Md.< ((very/M.< big/Ma.<) meal/Cc..s)))
# hyperedge builder = (7.1/Pd.sc:12:1h.<f:12 7.0/Ci (7.2/Md.< ((7.3/M.< 7.4/Ma.<) 7.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
7 0 It   + it   PRON  PRP nsubj  1 - -     B-ARG1 -          it/Ci
7 1 was  + be   AUX   VBD ROOT   1 - be.01 B-V    be.v.01    was/Pd.sc:12:1h.<f:12
7 2 a    + a    DET   DT  det    5 - -     B-ARG2 -          a/Md.<
7 3 very + very ADV   RB  advmod 4 - -     I-ARG2 very.r.01  very/M.<
7 4 big  + big  ADJ   JJ  amod   5 - -     I-ARG2 large.a.01 big/Ma.<
7 5 meal - meal NOUN  NN  attr   1 - -     I-ARG2 meal.n.01  meal/Cc..s
7 6 .    - .    PUNCT .   punct  1 - -     -      -          -

# sent_i = 8
# sent = The students were really bored with the film.
# hyperedge = (were/Pd.sc:12:1h.<f:12 (the/Md.< students/Cc..p) (with/Br (really/M.< bored/Ca) (the/Md.< film/Cc..s)))
# hyperedge builder = (8.2/Pd.sc:12:1h.<f:12 (8.0/Md.< 8.1/Cc..p) (8.5/Br (8.3/M.< 8.4/Ca) (8.6/Md.< 8.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
8 0 The      + the     DET   DT  det    1 - -     B-ARG1 -            the/Md.<
8 1 students + student NOUN  NNS nsubj  2 - -     I-ARG1 student.n.01 students/Cc..p
8 2 were     + be      AUX   VBD ROOT   2 - be.01 B-V    -            were/Pd.sc:12:1h.<f:12
8 3 really   + really  ADV   RB  advmod 4 - -     B-ARG2 very.r.01    really/M.<
8 4 bored    + bored   ADJ   JJ  acomp  2 - -     I-ARG2 blase.s.02   bored/Ca
8 5 with     + with    ADP   IN  prep   4 - -     I-ARG2 -            with/Br
8 6 the      + the     DET   DT  det    7 - -     I-ARG2 -            the/Md.<
8 7 film     - film    NOUN  NN  pobj   5 - -     I-ARG2 movie.n.01   film/Cc..s
8 8 .        - .       PUNCT .   punct  2 - -     -      -            -

# sent_i = 9
# sent = He spoke very softly.
# hyperedge = (spoke/Pd.s?:0m:0m.<f:0123 he/Ci (very/M.< softly/M))
# hyperedge builder = (9.1/Pd.s?:0m:0m.<f:0123 9.0/Ci (9.2/M.< 9.3/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
9 0 He     + he     PRON  PRP nsubj  1 - -        B-ARG0     -           he/Ci
9 1 spoke  + speak  VERB  VBD ROOT   1 - speak.01 B-V        talk.v.02   spoke/Pd.s?:0m:0m.<f:0123
9 2 very   + very   ADV   RB  advmod 3 - -        B-ARGM-MNR very.r.01   very/M.<
9 3 softly - softly ADV   RB  advmod 1 - -        I-ARGM-MNR softly.r.01 softly/M
9 4 .      - .      PUNCT .   punct  1 - -        -          -           -

# sent_i = 10
# sent = They did it as fast as possible.
# hyperedge = (did/Pd.so?:01m:01m.<f:01234 they/Ci it/Ci (as/Br (as/M.< fast/M) possible/Ma))
# hyperedge builder = (10.1/Pd.so?:01m:01m.<f:01234 10.0/Ci 10.2/Ci (10.5/Br (10.3/M.< 10.4/M) 10.6/Ma))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
10 0 They     + they     PRON  PRP nsubj  1 - -     B-ARG0     -             they/Ci
10 1 did      + do       VERB  VBD ROOT   1 - do.02 B-V        do.v.03       did/Pd.so?:01m:01m.<f:01234
10 2 it       + it       PRON  PRP dobj   1 - -     B-ARG1     -             it/Ci
10 3 as       + as       ADV   RB  advmod 4 - -     B-ARGM-MNR -             as/M.<
10 4 fast     + fast     ADV   RB  advmod 1 - -     I-ARGM-MNR fast.r.01     fast/M
10 5 as       + as       ADP   IN  prep   4 - -     I-ARGM-MNR -             as/Br
10 6 possible - possible ADJ   JJ  amod   5 - -     I-ARGM-MNR possible.a.01 possible/Ma
10 7 .        - .        PUNCT .   punct  1 - -     -          -             -

# sent_i = 11
# sent = They were arguing about money.
# hyperedge = ((were/Mv.< arguing/Pd.sx:02:01.|pg:012) they/Ci (about/T money/Cc..s))
# hyperedge builder = ((11.1/Mv.< 11.2/Pd.sx:02:01.|pg:012) 11.0/Ci (11.3/T 11.4/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
11 0 They    + they  PRON  PRP nsubj 2 - -        -   B-ARG0 -          they/Ci
11 1 were    + be    AUX   VBD aux   2 - be.03    B-V -      -          were/Mv.<
11 2 arguing + argue VERB  VBG ROOT  2 - argue.02 -   B-V    argue.v.02 arguing/Pd.sx:02:01.|pg:012
11 3 about   + about ADP   IN  prep  2 - -        -   B-ARG2 -          about/T
11 4 money   - money NOUN  NN  pobj  3 - -        -   I-ARG2 money.n.01 money/Cc..s
11 5 .       - .     PUNCT .   punct 2 - -        -   -      -          -

# sent_i = 12
# sent = The window was behind a large brown sofa.
# hyperedge = (was/Pd.sx:1l:1l.<f:1 (the/Md.< window/Cc..s) (behind/Tl (a/Md.< (large/Ma.< (brown/Ma.< sofa/Cc..s)))))
# hyperedge builder = (12.2/Pd.sx:1l:1l.<f:1 (12.0/Md.< 12.1/Cc..s) (12.3/Tl (12.4/Md.< (12.5/Ma.< (12.6/Ma.< 12.7/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
12 0 The    + the    DET   DT  det   1 - -     B-ARG1     -           the/Md.<
12 1 window + window NOUN  NN  nsubj 2 - -     I-ARG1     window.n.01 window/Cc..s
12 2 was    + be     AUX   VBD ROOT  2 - be.02 B-V        be.v.01     was/Pd.sx:1l:1l.<f:1
12 3 behind + behind ADP   IN  prep  2 - -     B-ARGM-LOC -           behind/Tl
12 4 a      + a      DET   DT  det   7 - -     I-ARGM-LOC -           a/Md.<
12 5 large  + large  ADJ   JJ  amod  7 - -     I-ARGM-LOC large.a.01  large/Ma.<
12 6 brown  + brown  ADJ   JJ  amod  7 - -     I-ARGM-LOC brown.s.01  brown/Ma.<
12 7 sofa   - sofa   NOUN  NN  pobj  3 - -     I-ARGM-LOC sofa.n.01   sofa/Cc..s
12 8 .      - .      PUNCT .   punct 2 - -     -          -           -

# sent_i = 13
# sent = They resumed after an unusually large meal.
# hyperedge = (resumed/Pd.sx:0t:0t.<f:012 they/Ci (after/Tt (an/Md.< ((unusually/M.< large/Ma.<) meal/Cc..s))))
# hyperedge builder = (13.1/Pd.sx:0t:0t.<f:012 13.0/Ci (13.2/Tt (13.3/Md.< ((13.4/M.< 13.5/Ma.<) 13.6/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
13 0 They      + they      PRON  PRP nsubj  1 - -         B-ARG0     -                 they/Ci
13 1 resumed   + resume    VERB  VBD ROOT   1 - resume.01 B-V        resume.v.01       resumed/Pd.sx:0t:0t.<f:012
13 2 after     + after     ADP   IN  prep   1 - -         B-ARGM-TMP subsequently.r.01 after/Tt
13 3 an        + an        DET   DT  det    6 - -         I-ARGM-TMP -                 an/Md.<
13 4 unusually + unusually ADV   RB  advmod 5 - -         I-ARGM-TMP unusually.r.01    unusually/M.<
13 5 large     + large     ADJ   JJ  amod   6 - -         I-ARGM-TMP large.a.01        large/Ma.<
13 6 meal      - meal      NOUN  NN  pobj   2 - -         I-ARGM-TMP meal.n.01         meal/Cc..s
13 7 .         - .         PUNCT .   punct  1 - -         -          -                 -

# sent_i = 14
# sent = He is jumping over the very lazy dog as fast as possible.
# hyperedge = ((is/Mv.< jumping/Pd.sx?:0dm:0dm.|pg:012) he/Ci (over/T (the/Md.< ((very/M.< lazy/Ma.<) dog/Cc..s))) (as/Br (as/M.< fast/M) possible/Ma))
# hyperedge builder = ((14.1/Mv.< 14.2/Pd.sx?:0dm:0dm.|pg:012) 14.0/Ci (14.3/T (14.4/Md.< ((14.5/M.< 14.6/Ma.<) 14.7/Cc..s))) (14.10/Br (14.8/M.< 14.9/M) 14.11/Ma))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
14 0  He       + he       PRON  PRP nsubj  2  - -       -   B-ARG0     -             he/Ci
14 1  is       + be       AUX   VBZ aux    2  - be.03   B-V -          -             is/Mv.<
14 2  jumping  + jump     VERB  VBG ROOT   2  - jump.03 -   B-V        jump.v.01     jumping/Pd.sx?:0dm:0dm.|pg:012
14 3  over     + over     ADP   IN  prep   2  - -       -   B-ARGM-DIR over.r.04     over/T
14 4  the      + the      DET   DT  det    7  - -       -   I-ARGM-DIR -             the/Md.<
14 5  very     + very     ADV   RB  advmod 6  - -       -   I-ARGM-DIR very.r.01     very/M.<
14 6  lazy     + lazy     ADJ   JJ  amod   7  - -       -   I-ARGM-DIR lazy.s.01     lazy/Ma.<
14 7  dog      + dog      NOUN  NN  pobj   3  - -       -   I-ARGM-DIR dog.n.01      dog/Cc..s
14 8  as       + as       ADV   RB  advmod 9  - -       -   B-ARGM-MNR -             as/M.<
14 9  fast     + fast     ADV   RB  advmod 2  - -       -   I-ARGM-MNR fast.r.01     fast/M
14 10 as       + as       ADP   IN  prep   9  - -       -   I-ARGM-MNR -             as/Br
14 11 possible - possible ADJ   JJ  amod   10 - -       -   I-ARGM-MNR possible.a.01 possible/Ma
14 12 .        - .        PUNCT .   punct  2  - -       -   -          -             -

# sent_i = 15
# sent = Students protested.
# hyperedge = (protested/Pd.s:0:0.<f:01 students/Cc..p)
# hyperedge builder = (15.1/Pd.s:0:0.<f:01 15.0/Cc..p)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
15 0 Students  + student NOUN  NNS nsubj 1 - -          B-ARG0 student.n.01 students/Cc..p
15 1 protested - protest VERB  VBD ROOT  1 - protest.01 B-V    protest.v.01 protested/Pd.s:0:0.<f:01
15 2 .         - .       PUNCT .   punct 1 - -          -      -            -

# sent_i = 16
# sent = John smokes.
# hyperedge = (smokes/Pd.s:0:0.|f--3s:01 john/Cp..s.p)
# hyperedge builder = (16.1/Pd.s:0:0.|f--3s:01 16.0/Cp..s.p)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
16 0 John   + John  PROPN NNP nsubj 1 B-PERSON -        B-ARG0 -          john/Cp..s.p
16 1 smokes - smoke VERB  VBZ ROOT  1 -        smoke.02 B-V    smoke.v.01 smokes/Pd.s:0:0.|f--3s:01
16 2 .      - .     PUNCT .   punct 1 -        -        -      -          -

# sent_i = 17
# sent = The president smokes.
# hyperedge = (smokes/Pd.s:0:0.|f--3s:01 (the/Md.< president/Cc..s))
# hyperedge builder = (17.2/Pd.s:0:0.|f--3s:01 (17.0/Md.< 17.1/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
17 0 The       + the       DET   DT  det   1 - -        B-ARG0 -              the/Md.<
17 1 president + president NOUN  NN  nsubj 2 - -        I-ARG0 president.n.03 president/Cc..s
17 2 smokes    - smoke     VERB  VBZ ROOT  2 - smoke.02 B-V    smoke.v.01     smokes/Pd.s:0:0.|f--3s:01
17 3 .         - .         PUNCT .   punct 2 - -        -      -              -

# sent_i = 18
# sent = The president of Utopia smokes.
# hyperedge = (smokes/Pd.s:0:0.|f--3s:01 (of/Br (the/Md.< president/Cc..s) utopia/Cp..s.g))
# hyperedge builder = (18.4/Pd.s:0:0.|f--3s:01 (18.2/Br (18.0/Md.< 18.1/Cc..s) 18.3/Cp..s.g))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
18 0 The       + the       DET   DT  det   1 -     -        B-ARG0 -              the/Md.<
18 1 president + president NOUN  NN  nsubj 4 -     -        I-ARG0 president.n.03 president/Cc..s
18 2 of        + of        ADP   IN  prep  1 -     -        I-ARG0 -              of/Br
18 3 Utopia    + Utopia    PROPN NNP pobj  2 B-GPE -        I-ARG0 utopia.n.02    utopia/Cp..s.g
18 4 smokes    - smoke     VERB  VBZ ROOT  4 -     smoke.02 B-V    smoke.v.01     smokes/Pd.s:0:0.|f--3s:01
18 5 .         - .         PUNCT .   punct 4 -     -        -      -              -

# sent_i = 19
# sent = The former president of the island of paradise of Utopia smokes.
# hyperedge = (smokes/Pd.s:0:0.|f--3s:01 (of/Br (the/Md.< (former/Ma.< president/Cc..s)) (of/Br (the/Md.< island/Cc..s) (of/Br paradise/Cc..s utopia/Cp..s.g))))
# hyperedge builder = (19.10/Pd.s:0:0.|f--3s:01 (19.3/Br (19.0/Md.< (19.1/Ma.< 19.2/Cc..s)) (19.6/Br (19.4/Md.< 19.5/Cc..s) (19.8/Br 19.7/Cc..s 19.9/Cp..s.g))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
19 0  The       + the       DET   DT  det   2  -     -        B-ARG0 -              the/Md.<
19 1  former    + former    ADJ   JJ  amod  2  -     -        I-ARG0 former.s.03    former/Ma.<
19 2  president + president NOUN  NN  nsubj 10 -     -        I-ARG0 president.n.03 president/Cc..s
19 3  of        + of        ADP   IN  prep  2  -     -        I-ARG0 -              of/Br
19 4  the       + the       DET   DT  det   5  -     -        I-ARG0 -              the/Md.<
19 5  island    + island    NOUN  NN  pobj  3  -     -        I-ARG0 island.n.01    island/Cc..s
19 6  of        + of        ADP   IN  prep  5  -     -        I-ARG0 -              of/Br
19 7  paradise  + paradise  NOUN  NN  pobj  6  -     -        I-ARG0 eden.n.01      paradise/Cc..s
19 8  of        + of        ADP   IN  prep  7  -     -        I-ARG0 -              of/Br
19 9  Utopia    + Utopia    PROPN NNP pobj  8  B-GPE -        I-ARG0 utopia.n.02    utopia/Cp..s.g
19 10 smokes    - smoke     VERB  VBZ ROOT  10 -     smoke.02 B-V    smoke.v.01     smokes/Pd.s:0:0.|f--3s:01
19 11 .         - .         PUNCT .   punct 10 -     -        -      -              -

# sent_i = 20
# sent = John resigned.
# hyperedge = (resigned/Pd.s:0:0.<f:01 john/Cp..s.p)
# hyperedge builder = (20.1/Pd.s:0:0.<f:01 20.0/Cp..s.p)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
20 0 John     + John   PROPN NNP nsubj 1 B-PERSON -         B-ARG0 -           john/Cp..s.p
20 1 resigned - resign VERB  VBD ROOT  1 -        resign.01 B-V    vacate.v.01 resigned/Pd.s:0:0.<f:01
20 2 .        - .      PUNCT .   punct 1 -        -         -      -           -

# sent_i = 21
# sent = John felt remorse.
# hyperedge = (felt/Pd.so:01:11.<f:012 john/Cp..s.p remorse/Cc..s)
# hyperedge builder = (21.1/Pd.so:01:11.<f:012 21.0/Cp..s.p 21.2/Cc..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
21 0 John    + John    PROPN NNP nsubj 1 B-PERSON -       B-ARG0 -                john/Cp..s.p
21 1 felt    + feel    VERB  VBD ROOT  1 -        feel.01 B-V    feel.v.01        felt/Pd.so:01:11.<f:012
21 2 remorse - remorse NOUN  NN  dobj  1 -        -       B-ARG1 compunction.n.01 remorse/Cc..s
21 3 .       - .       PUNCT .   punct 1 -        -       -      -                -

# sent_i = 22
# sent = John sent Mary flowers.
# hyperedge = (sent/Pd.sio:021:0g1.<f:012 john/Cp..s.p mary/Cp..s.p flowers/Cc..p)
# hyperedge builder = (22.1/Pd.sio:021:0g1.<f:012 22.0/Cp..s.p 22.2/Cp..s.p 22.3/Cc..p)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
22 0 John    + John   PROPN NNP nsubj  1 B-PERSON -       B-ARG0 -           john/Cp..s.p
22 1 sent    + send   VERB  VBD ROOT   1 -        send.01 B-V    send.v.02   sent/Pd.sio:021:0g1.<f:012
22 2 Mary    + Mary   PROPN NNP dative 1 B-PERSON -       B-ARG2 -           mary/Cp..s.p
22 3 flowers - flower NOUN  NNS dobj   1 -        -       B-ARG1 flower.n.01 flowers/Cc..p
22 4 .       - .      PUNCT .   punct  1 -        -       -      -           -

# sent_i = 23
# sent = The president smokes a cigar after dinner.
# hyperedge = (smokes/Pd.sox:01t:01t.|f--3s:01 (the/Md.< president/Cc..s) (a/Md.< cigar/Cc..s) (after/Tt dinner/Cc..s))
# hyperedge builder = (23.2/Pd.sox:01t:01t.|f--3s:01 (23.0/Md.< 23.1/Cc..s) (23.3/Md.< 23.4/Cc..s) (23.5/Tt 23.6/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
23 0 The       + the       DET   DT  det   1 - -        B-ARG0     -                 the/Md.<
23 1 president + president NOUN  NN  nsubj 2 - -        I-ARG0     president.n.03    president/Cc..s
23 2 smokes    + smoke     VERB  VBZ ROOT  2 - smoke.02 B-V        smoke.v.01        smokes/Pd.sox:01t:01t.|f--3s:01
23 3 a         + a         DET   DT  det   4 - -        B-ARG1     -                 a/Md.<
23 4 cigar     + cigar     NOUN  NN  dobj  2 - -        I-ARG1     cigar.n.01        cigar/Cc..s
23 5 after     + after     ADP   IN  prep  2 - -        B-ARGM-TMP subsequently.r.01 after/Tt
23 6 dinner    - dinner    NOUN  NN  pobj  5 - -        I-ARGM-TMP dinner.n.01       dinner/Cc..s
23 7 .         - .         PUNCT .   punct 2 - -        -          -                 -

# sent_i = 24
# sent = The president smokes a cigar in his office.
# hyperedge = (smokes/Pd.sox:01l:01l.|f--3s:01 (the/Md.< president/Cc..s) (a/Md.< cigar/Cc..s) (in/Tl ((+/Jc.rm.rc his/Mp (the/Md.< president/Cc..s)) office/Cc..s)))
# hyperedge builder = (24.2/Pd.sox:01l:01l.|f--3s:01 (24.0/Md.< 24.1/Cc..s) (24.3/Md.< 24.4/Cc..s) (24.5/Tl ((+/Jc.rm.rc 24.6/Mp (24.0/Md.< 24.1/Cc..s)) 24.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 coref1 synset atoms
24 0 The       + the       DET   DT   det   1 - -        B-ARG0     B-MAIN0 -              the/Md.<
24 1 president + president NOUN  NN   nsubj 2 - -        I-ARG0     I-MAIN0 president.n.03 president/Cc..s
24 2 smokes    + smoke     VERB  VBZ  ROOT  2 - smoke.02 B-V        -       smoke.v.01     smokes/Pd.sox:01l:01l.|f--3s:01
24 3 a         + a         DET   DT   det   4 - -        B-ARG1     -       -              a/Md.<
24 4 cigar     + cigar     NOUN  NN   dobj  2 - -        I-ARG1     -       cigar.n.01     cigar/Cc..s
24 5 in        + in        ADP   IN   prep  2 - -        B-ARGM-LOC -       -              in/Tl
24 6 his       + his       PRON  PRP$ poss  7 - -        I-ARGM-LOC B-REF0  -              his/Mp
24 7 office    - office    NOUN  NN   pobj  5 - -        I-ARGM-LOC -       office.n.01    office/Cc..s
24 8 .         - .         PUNCT .    punct 2 - -        -          -       -              -

# sent_i = 25
# sent = He went home.
# hyperedge = (went/Pd.s?:04:1g.<f:0134 he/Ci home/M)
# hyperedge builder = (25.1/Pd.s?:04:1g.<f:0134 25.0/Ci 25.2/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
25 0 He   + he   PRON  PRP nsubj  1 - -     B-ARG0 -           he/Ci
25 1 went + go   VERB  VBD ROOT   1 - go.02 B-V    travel.v.01 went/Pd.s?:04:1g.<f:0134
25 2 home - home ADV   RB  advmod 1 - -     B-ARG4 home.r.01   home/M
25 3 .    - .    PUNCT .   punct  1 - -     -      -           -

# sent_i = 26
# sent = Are you feeling ok?
# hyperedge = ((are/Mv.< feeling/P?.sc:01:11.|pg:012) you/Ci ok/Ca)
# hyperedge builder = ((26.0/Mv.< 26.2/P?.sc:01:11.|pg:012) 26.1/Ci 26.3/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
26 0 Are     + be   AUX   VBP aux   2 - be.03   B-V -      -              are/Mv.<
26 1 you     + you  PRON  PRP nsubj 2 - -       -   B-ARG0 -              you/Ci
26 2 feeling + feel VERB  VBG ROOT  2 - feel.01 -   B-V    feel.v.04      feeling/P?.sc:01:11.|pg:012
26 3 ok      - ok   ADJ   JJ  acomp 2 - -       -   B-ARG1 all_right.s.01 ok/Ca
26 4 ?       - ?    PUNCT .   punct 2 - -       -   -      -              -

# sent_i = 27
# sent = You be quiet!
# hyperedge = (be/P!.sc:12:1h.|f:12 you/Ci quiet/Ca)
# hyperedge builder = (27.1/P!.sc:12:1h.|f:12 27.0/Ci 27.2/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
27 0 You   + you   PRON  PRP nsubj 1 - -     B-ARG1 -          you/Ci
27 1 be    + be    VERB  VBP ROOT  1 - be.01 B-V    be.v.01    be/P!.sc:12:1h.|f:12
27 2 quiet - quiet ADJ   JJ  acomp 1 - -     B-ARG2 quiet.a.02 quiet/Ca
27 3 !     - !     PUNCT .   punct 1 - -     -      -          -

# sent_i = 28
# sent = What a great idea that is!
# hyperedge = (is/P!.cs:21:h1.|f--3s:12 (what/Mw.< (a/Md.< (great/Ma.< idea/Cc..s))) that/Cd)
# hyperedge builder = (28.5/P!.cs:21:h1.|f--3s:12 (28.0/Mw.< (28.1/Md.< (28.2/Ma.< 28.3/Cc..s))) 28.4/Cd)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
28 0 What  + what  DET   WDT det   3 - -     B-ARG2 -            what/Mw.<
28 1 a     + a     DET   DT  det   3 - -     I-ARG2 -            a/Md.<
28 2 great + great ADJ   JJ  amod  3 - -     I-ARG2 bang-up.s.01 great/Ma.<
28 3 idea  + idea  NOUN  NN  attr  5 - -     I-ARG2 idea.n.01    idea/Cc..s
28 4 that  + that  DET   WDT nsubj 5 - -     B-ARG1 -            that/Cd
28 5 is    - be    AUX   VBZ ROOT  5 - be.01 B-V    be.v.01      is/P!.cs:21:h1.|f--3s:12
28 6 !     - !     PUNCT .   punct 5 - -     -      -            -

# sent_i = 29
# sent = They ought to help you.
# hyperedge = (ought/Pd.sr:--:-- they/Ci ((to/Mi.< help/P.-o:01:01.-i:012) they/Ci you/Ci))
# hyperedge builder = (29.1/Pd.sr:--:-- 29.0/Ci ((29.2/Mi.< 29.3/P.-o:01:01.-i:012) 29.0/Ci 29.4/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
29 0 They  + they  PRON  PRP nsubj 1 - -       -   B-ARG0     -         they/Ci
29 1 ought + ought AUX   MD  ROOT  1 - -       B-V B-ARGM-MOD -         ought/Pd.sr:--:--
29 2 to    + to    PART  TO  aux   3 - -       -   I-ARGM-MOD -         to/Mi.<
29 3 help  + help  VERB  VB  xcomp 1 - help.01 -   B-V        help.v.01 help/P.-o:01:01.-i:012
29 4 you   - you   PRON  PRP dobj  3 - -       -   B-ARG1     -         you/Ci
29 5 .     - .     PUNCT .   punct 1 - -       -   -          -         -

# sent_i = 30
# sent = They should help you.
# hyperedge = ((should/Mm.< help/Pd.so:02:0g.-i:012) they/Ci you/Ci)
# hyperedge builder = ((30.1/Mm.< 30.2/Pd.so:02:0g.-i:012) 30.0/Ci 30.3/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
30 0 They   + they   PRON  PRP nsubj 2 - -       -   B-ARG0     -         they/Ci
30 1 should + should AUX   MD  aux   2 - -       B-V B-ARGM-MOD -         should/Mm.<
30 2 help   + help   VERB  VB  ROOT  2 - help.01 -   B-V        help.v.01 help/Pd.so:02:0g.-i:012
30 3 you    - you    PRON  PRP dobj  2 - -       -   B-ARG2     -         you/Ci
30 4 .      - .      PUNCT .   punct 2 - -       -   -          -         -

# sent_i = 31
# sent = They were trying to help you.
# hyperedge = ((were/Mv.< trying/Pd.sr:01:01.|pg:01) they/Ci ((to/Mi.< help/P.-o:01:01.-i:012) they/Ci you/Ci))
# hyperedge builder = ((31.1/Mv.< 31.2/Pd.sr:01:01.|pg:01) 31.0/Ci ((31.3/Mi.< 31.4/P.-o:01:01.-i:012) 31.0/Ci 31.5/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
31 0 They   + they PRON  PRP nsubj 2 - -       -   B-ARG0 B-ARG0 -         they/Ci
31 1 were   + be   AUX   VBD aux   2 - be.03   B-V -      -      -         were/Mv.<
31 2 trying + try  VERB  VBG ROOT  2 - try.01  -   B-V    -      try.v.01  trying/Pd.sr:01:01.|pg:01
31 3 to     + to   PART  TO  aux   4 - -       -   B-ARG1 -      -         to/Mi.<
31 4 help   + help VERB  VB  xcomp 2 - help.01 -   I-ARG1 B-V    help.v.01 help/P.-o:01:01.-i:012
31 5 you    - you  PRON  PRP dobj  4 - -       -   I-ARG1 B-ARG1 -         you/Ci
31 6 .      - .    PUNCT .   punct 2 - -       -   -      -      -         -

# sent_i = 32
# sent = They started trying to help you.
# hyperedge = (started/Pd.sr:01:01.<f:012 they/Ci (trying/P.-r:01:01.|pg:01 they/Ci ((to/Mi.< help/P.-o:02:0g.-i:012) they/Ci you/Ci)))
# hyperedge builder = (32.1/Pd.sr:01:01.<f:012 32.0/Ci (32.2/P.-r:01:01.|pg:01 32.0/Ci ((32.3/Mi.< 32.4/P.-o:02:0g.-i:012) 32.0/Ci 32.5/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
32 0 They    + they  PRON  PRP nsubj 1 - -        B-ARG0 B-ARG0 B-ARG0 -             they/Ci
32 1 started + start VERB  VBD ROOT  1 - start.01 B-V    -      -      get_down.v.07 started/Pd.sr:01:01.<f:012
32 2 trying  + try   VERB  VBG xcomp 1 - try.01   B-ARG1 B-V    -      try.v.01      trying/P.-r:01:01.|pg:01
32 3 to      + to    PART  TO  aux   4 - -        I-ARG1 B-ARG1 -      -             to/Mi.<
32 4 help    + help  VERB  VB  xcomp 2 - help.01  I-ARG1 I-ARG1 B-V    help.v.01     help/P.-o:02:0g.-i:012
32 5 you     - you   PRON  PRP dobj  4 - -        I-ARG1 I-ARG1 B-ARG2 -             you/Ci
32 6 .       - .     PUNCT .   punct 1 - -        -      -      -      -             -

# sent_i = 33
# sent = They kept trying to help you.
# hyperedge = (kept/Pd.sr:02:0h.<f:012 they/Ci (trying/P.-r:01:01.|pg:01 they/Ci ((to/Mi.< help/P.-o:02:0g.-i:012) they/Ci you/Ci)))
# hyperedge builder = (33.1/Pd.sr:02:0h.<f:012 33.0/Ci (33.2/P.-r:01:01.|pg:01 33.0/Ci ((33.3/Mi.< 33.4/P.-o:02:0g.-i:012) 33.0/Ci 33.5/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
33 0 They   + they PRON  PRP nsubj 1 - -       B-ARG0 B-ARG0 B-ARG0 -             they/Ci
33 1 kept   + keep VERB  VBD ROOT  1 - keep.02 B-V    -      -      continue.v.01 kept/Pd.sr:02:0h.<f:012
33 2 trying + try  VERB  VBG xcomp 1 - try.01  B-ARG2 B-V    -      try.v.01      trying/P.-r:01:01.|pg:01
33 3 to     + to   PART  TO  aux   4 - -       I-ARG2 B-ARG1 -      -             to/Mi.<
33 4 help   + help VERB  VB  xcomp 2 - help.01 I-ARG2 I-ARG1 B-V    help.v.01     help/P.-o:02:0g.-i:012
33 5 you    - you  PRON  PRP dobj  4 - -       I-ARG2 I-ARG1 B-ARG2 -             you/Ci
33 6 .      - .    PUNCT .   punct 1 - -       -      -      -      -             -

# sent_i = 34
# sent = There has been no trouble.
# hyperedge = ((has/Mv.< been/Pd.ec:-1:-1.<pf:1) there/Me (no/Md.< trouble/Cc..s))
# hyperedge builder = ((34.1/Mv.< 34.2/Pd.ec:-1:-1.<pf:1) 34.0/Me (34.3/Md.< 34.4/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
34 0 There   + there   PRON  EX  expl  2 - -       -   -      -            there/Me
34 1 has     + have    AUX   VBZ aux   2 - have.01 B-V -      -            has/Mv.<
34 2 been    + be      VERB  VBN ROOT  2 - be.02   -   B-V    be.v.01      been/Pd.ec:-1:-1.<pf:1
34 3 no      + no      DET   DT  det   4 - -       -   B-ARG1 no.a.01      no/Md.<
34 4 trouble - trouble NOUN  NN  attr  2 - -       -   I-ARG1 trouble.n.01 trouble/Cc..s
34 5 .       - .       PUNCT .   punct 2 - -       -   -      -            -

# sent_i = 35
# sent = American intervention in Iraq has caused considerable controversy.
# hyperedge = ((has/Mv.< caused/Pd.so:01:c1.<pf:01) (in/Br (american/Ma.<..n intervention/Cc..s) iraq/Cp..s.g) (considerable/Ma.< controversy/Cc..s))
# hyperedge builder = ((35.4/Mv.< 35.5/Pd.so:01:c1.<pf:01) (35.2/Br (35.0/Ma.<..n 35.1/Cc..s) 35.3/Cp..s.g) (35.6/Ma.< 35.7/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
35 0 American     + american     ADJ   JJ  amod  1 B-NORP -        -   B-ARG0 american.a.01     american/Ma.<..n
35 1 intervention + intervention NOUN  NN  nsubj 5 -      -        -   I-ARG0 intervention.n.02 intervention/Cc..s
35 2 in           + in           ADP   IN  prep  1 -      -        -   I-ARG0 -                 in/Br
35 3 Iraq         + Iraq         PROPN NNP pobj  2 B-GPE  -        -   I-ARG0 iraq.n.01         iraq/Cp..s.g
35 4 has          + have         AUX   VBZ aux   5 -      have.01  B-V -      -                 has/Mv.<
35 5 caused       + cause        VERB  VBN ROOT  5 -      cause.01 -   B-V    cause.v.01        caused/Pd.so:01:c1.<pf:01
35 6 considerable + considerable ADJ   JJ  amod  7 -      -        -   B-ARG1 considerable.a.01 considerable/Ma.<
35 7 controversy  - controversy  NOUN  NN  dobj  5 -      -        -   I-ARG1 controversy.n.01  controversy/Cc..s
35 8 .            - .            PUNCT .   punct 5 -      -        -   -      -                 -

# sent_i = 36
# sent = She arrived at the station quite independently of me.
# hyperedge = (arrived/Pd.sx?:14m:1lm.<f:1234 she/Ci (at/T (the/Md.< station/Cc..s)) (of/Br (quite/M.< independently/M) me/Ci))
# hyperedge builder = (36.1/Pd.sx?:14m:1lm.<f:1234 36.0/Ci (36.2/T (36.3/Md.< 36.4/Cc..s)) (36.7/Br (36.5/M.< 36.6/M) 36.8/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
36 0 She           + she           PRON  PRP nsubj  1 - -         B-ARG1     -                  she/Ci
36 1 arrived       + arrive        VERB  VBD ROOT   1 - arrive.01 B-V        arrive.v.01        arrived/Pd.sx?:14m:1lm.<f:1234
36 2 at            + at            ADP   IN  prep   1 - -         B-ARG4     -                  at/T
36 3 the           + the           DET   DT  det    4 - -         I-ARG4     -                  the/Md.<
36 4 station       + station       NOUN  NN  pobj   2 - -         I-ARG4     station.n.01       station/Cc..s
36 5 quite         + quite         ADV   RB  advmod 6 - -         B-ARGM-MNR quite.r.01         quite/M.<
36 6 independently + independently ADV   RB  advmod 1 - -         I-ARGM-MNR independently.r.02 independently/M
36 7 of            + of            ADP   IN  prep   6 - -         I-ARGM-MNR -                  of/Br
36 8 me            - I             PRON  PRP pobj   7 - -         I-ARGM-MNR -                  me/Ci
36 9 .             - .             PUNCT .   punct  1 - -         -          -                  -

# sent_i = 37
# sent = He must go straight to bed.
# hyperedge = ((must/Mm.< go/Pd.s?x:0m4:1mg.-i:0134) he/Ci straight/M (to/T bed/Cc..s))
# hyperedge builder = ((37.1/Mm.< 37.2/Pd.s?x:0m4:1mg.-i:0134) 37.0/Ci 37.3/M (37.4/T 37.5/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
37 0 He       + he       PRON  PRP nsubj  2 - -     -   B-ARG0     -             he/Ci
37 1 must     + must     AUX   MD  aux    2 - -     B-V B-ARGM-MOD -             must/Mm.<
37 2 go       + go       VERB  VB  ROOT   2 - go.02 -   B-V        travel.v.01   go/Pd.s?x:0m4:1mg.-i:0134
37 3 straight + straight ADV   RB  advmod 2 - -     -   B-ARGM-MNR directly.r.01 straight/M
37 4 to       + to       ADP   IN  prep   2 - -     -   B-ARG4     -             to/T
37 5 bed      - bed      NOUN  NN  pobj   4 - -     -   I-ARG4     bed.n.01      bed/Cc..s
37 6 .        - .        PUNCT .   punct  2 - -     -   -          -             -

# sent_i = 38
# sent = Nobody expected the film to have so dramatic an ending.
# hyperedge = (expected/Pd.sr:01:01.<f:01 nobody/Ci..s ((to/Mi.< have/P.so:01:01.-i:01) (the/Md.< film/Cc..s) ((so/M.< dramatic/Ma.<) (an/Md.< ending/Cc..s))))
# hyperedge builder = (38.1/Pd.sr:01:01.<f:01 38.0/Ci..s ((38.4/Mi.< 38.5/P.so:01:01.-i:01) (38.2/Md.< 38.3/Cc..s) ((38.6/M.< 38.7/Ma.<) (38.8/Md.< 38.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
38 0  Nobody   + nobody   PRON  NN  nsubj  1 - -         B-ARG0 -      -             nobody/Ci..s
38 1  expected + expect   VERB  VBD ROOT   1 - expect.01 B-V    -      expect.v.01   expected/Pd.sr:01:01.<f:01
38 2  the      + the      DET   DT  det    3 - -         B-ARG1 B-ARG0 -             the/Md.<
38 3  film     + film     NOUN  NN  nsubj  5 - -         I-ARG1 I-ARG0 movie.n.01    film/Cc..s
38 4  to       + to       PART  TO  aux    5 - -         I-ARG1 -      -             to/Mi.<
38 5  have     + have     VERB  VB  ccomp  1 - have.03   I-ARG1 B-V    have.v.01     have/P.so:01:01.-i:01
38 6  so       + so       ADV   RB  advmod 7 - -         I-ARG1 B-ARG1 so.r.01       so/M.<
38 7  dramatic + dramatic ADJ   JJ  amod   9 - -         I-ARG1 I-ARG1 dramatic.a.01 dramatic/Ma.<
38 8  an       + an       DET   DT  det    9 - -         I-ARG1 I-ARG1 -             an/Md.<
38 9  ending   - ending   NOUN  NN  dobj   5 - -         I-ARG1 I-ARG1 ending.n.04   ending/Cc..s
38 10 .        - .        PUNCT .   punct  1 - -         -      -      -             -

# sent_i = 39
# sent = Mr. Filbert has lost his wallet and is very much upset.
# hyperedge = (and/J ((has/Mv.< lost/Pd.so:01:01.<pf:0123) (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p) ((+/Jc.rm.rp his/Mp (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p)) wallet/Cc..s)) (is/P.-c:12:1h.|f--3s:12 (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p) ((very/M.< much/M.<) upset/Ca)))
# hyperedge builder = (39.6/J ((39.2/Mv.< 39.3/Pd.so:01:01.<pf:0123) (+/B.am 39.0/Cp.<.s 39.1/Cp..s.p) ((+/Jc.rm.rp 39.4/Mp (+/B.am 39.0/Cp.<.s 39.1/Cp..s.p)) 39.5/Cc..s)) (39.7/P.-c:12:1h.|f--3s:12 (+/B.am 39.0/Cp.<.s 39.1/Cp..s.p) ((39.8/M.< 39.9/M.<) 39.10/Ca)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
39 0  Mr.     + Mr.     PROPN NNP  compound 1  -        -       -   B-ARG0 B-ARG1 B-MAIN0 mister.n.01     mr%2e/Cp.<.s
39 1  Filbert + Filbert PROPN NNP  nsubj    3  B-PERSON -       -   I-ARG0 I-ARG1 I-MAIN0 -               filbert/Cp..s.p
39 2  has     + have    AUX   VBZ  aux      3  -        have.01 B-V -      -      -       -               has/Mv.<
39 3  lost    + lose    VERB  VBN  ROOT     3  -        lose.02 -   B-V    -      -       lose.v.01       lost/Pd.so:01:01.<pf:0123
39 4  his     + his     PRON  PRP$ poss     5  -        -       -   B-ARG1 -      B-REF0  -               his/Mp
39 5  wallet  + wallet  NOUN  NN   dobj     3  -        -       -   I-ARG1 -      -       wallet.n.01     wallet/Cc..s
39 6  and     + and     CCONJ CC   cc       3  -        -       -   -      -      -       -               and/J
39 7  is      + be      VERB  VBZ  conj     3  -        be.01   -   -      B-V    -       be.v.01         is/P.-c:12:1h.|f--3s:12
39 8  very    + very    ADV   RB   advmod   9  -        -       -   -      B-ARG2 -       very.r.01       very/M.<
39 9  much    + much    ADV   RB   advmod   10 -        -       -   -      I-ARG2 -       much.r.02       much/M.<
39 10 upset   - upset   ADJ   JJ   acomp    7  -        -       -   -      I-ARG2 -       disquieted.s.01 upset/Ca
39 11 .       - .       PUNCT .    punct    3  -        -       -   -      -      -       -               -

# sent_i = 40
# sent = Mr. Filbert has lost his wallet, and the whole family is upset.
# hyperedge = (and/J ((has/Mv.< lost/Pd.so:01:01.<pf:0123) (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p) ((+/Jc.rm.rp his/Mp (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p)) wallet/Cc..s)) (is/Pd.sc:12:1h.|f--3s:12 (the/Md.< (whole/Ma.< family/Cc..s)) upset/Ca))
# hyperedge builder = (40.7/J ((40.2/Mv.< 40.3/Pd.so:01:01.<pf:0123) (+/B.am 40.0/Cp.<.s 40.1/Cp..s.p) ((+/Jc.rm.rp 40.4/Mp (+/B.am 40.0/Cp.<.s 40.1/Cp..s.p)) 40.5/Cc..s)) (40.11/Pd.sc:12:1h.|f--3s:12 (40.8/Md.< (40.9/Ma.< 40.10/Cc..s)) 40.12/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
40 0  Mr.     + Mr.     PROPN NNP  compound 1  -        -       -   B-ARG0 -      B-MAIN0 mister.n.01     mr%2e/Cp.<.s
40 1  Filbert + Filbert PROPN NNP  nsubj    3  B-PERSON -       -   I-ARG0 -      I-MAIN0 -               filbert/Cp..s.p
40 2  has     + have    AUX   VBZ  aux      3  -        have.01 B-V -      -      -       -               has/Mv.<
40 3  lost    + lose    VERB  VBN  ROOT     3  -        lose.02 -   B-V    -      -       lose.v.01       lost/Pd.so:01:01.<pf:0123
40 4  his     + his     PRON  PRP$ poss     5  -        -       -   B-ARG1 -      B-REF0  -               his/Mp
40 5  wallet  - wallet  NOUN  NN   dobj     3  -        -       -   I-ARG1 -      -       wallet.n.01     wallet/Cc..s
40 6  ,       + ,       PUNCT ,    punct    3  -        -       -   -      -      -       -               -
40 7  and     + and     CCONJ CC   cc       3  -        -       -   -      -      -       -               and/J
40 8  the     + the     DET   DT   det      10 -        -       -   -      B-ARG1 -       -               the/Md.<
40 9  whole   + whole   ADJ   JJ   amod     10 -        -       -   -      I-ARG1 -       whole.a.01      whole/Ma.<
40 10 family  + family  NOUN  NN   nsubj    11 -        -       -   -      I-ARG1 -       family.n.02     family/Cc..s
40 11 is      + be      VERB  VBZ  conj     3  -        be.01   -   -      B-V    -       be.v.01         is/Pd.sc:12:1h.|f--3s:12
40 12 upset   - upset   ADJ   JJ   acomp    11 -        -       -   -      B-ARG2 -       disquieted.s.01 upset/Ca
40 13 .       - .       PUNCT .    punct    11 -        -       -   -      -      -       -               -

# sent_i = 41
# sent = The rains descended and the floods came.
# hyperedge = (and/J (descended/P.s:0:1.<f:01 (the/Md.< rains/Cc..p)) (came/P.s:1:1.<f:1234 (the/Md.< floods/Cc..p)))
# hyperedge builder = (41.3/J (41.2/P.s:0:1.<f:01 (41.0/Md.< 41.1/Cc..p)) (41.6/P.s:1:1.<f:1234 (41.4/Md.< 41.5/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
41 0 The       + the     DET   DT  det   1 - -          B-ARG0 -      -            the/Md.<
41 1 rains     + rain    NOUN  NNS nsubj 2 - -          I-ARG0 -      rain.n.01    rains/Cc..p
41 2 descended + descend VERB  VBD ROOT  2 - descend.01 B-V    -      descend.v.01 descended/P.s:0:1.<f:01
41 3 and       + and     CCONJ CC  cc    2 - -          -      -      -            and/J
41 4 the       + the     DET   DT  det   5 - -          -      B-ARG1 -            the/Md.<
41 5 floods    + flood   NOUN  NNS nsubj 6 - -          -      I-ARG1 flood.n.01   floods/Cc..p
41 6 came      - come    VERB  VBD conj  2 - come.01    -      B-V    come.v.03    came/P.s:1:1.<f:1234
41 7 .         - .       PUNCT .   punct 6 - -          -      -      -            -

# sent_i = 42
# sent = Penny has a new ball, but she still prefers the old one.
# hyperedge = (but/J (has/Pd.so:01:01.|f--3s:01 penny/Cp..s.p (a/Md.< (new/Ma.< ball/Cc..s))) (prefers/Pd.s?o:0t1:0t1.|f--3s:012 (+/Jc.rm.rp she/Ci penny/Cp..s.p) still/M (the/Md.< (old/Ma.< one/C#))))
# hyperedge builder = (42.6/J (42.1/Pd.so:01:01.|f--3s:01 42.0/Cp..s.p (42.2/Md.< (42.3/Ma.< 42.4/Cc..s))) (42.9/Pd.s?o:0t1:0t1.|f--3s:012 (+/Jc.rm.rp 42.7/Ci 42.0/Cp..s.p) 42.8/M (42.10/Md.< (42.11/Ma.< 42.12/C#))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
42 0  Penny   + Penny  PROPN NNP nsubj  1  B-PERSON -         B-ARG0 -          B-MAIN0 -           penny/Cp..s.p
42 1  has     + have   VERB  VBZ ROOT   1  -        have.03   B-V    -          -       have.v.01   has/Pd.so:01:01.|f--3s:01
42 2  a       + a      DET   DT  det    4  -        -         B-ARG1 -          -       -           a/Md.<
42 3  new     + new    ADJ   JJ  amod   4  -        -         I-ARG1 -          -       new.a.01    new/Ma.<
42 4  ball    - ball   NOUN  NN  dobj   1  -        -         I-ARG1 -          -       ball.n.01   ball/Cc..s
42 5  ,       + ,      PUNCT ,   punct  1  -        -         -      -          -       -           -
42 6  but     + but    CCONJ CC  cc     1  -        -         -      -          -       -           but/J
42 7  she     + she    PRON  PRP nsubj  9  -        -         -      B-ARG0     B-REF0  -           she/Ci
42 8  still   + still  ADV   RB  advmod 9  -        -         -      B-ARGM-TMP -       still.r.01  still/M
42 9  prefers + prefer VERB  VBZ conj   1  -        prefer.01 -      B-V        -       prefer.v.01 prefers/Pd.s?o:0t1:0t1.|f--3s:012
42 10 the     + the    DET   DT  det    12 -        -         -      B-ARG1     -       -           the/Md.<
42 11 old     + old    ADJ   JJ  amod   12 -        -         -      I-ARG1     -       old.a.02    old/Ma.<
42 12 one     - one    NUM   CD  dobj   9  -        -         -      I-ARG1     -       one.n.02    one/C#
42 13 .       - .      PUNCT .   punct  9  -        -         -      -          -       -           -

# sent_i = 43
# sent = The table lays on its side, several chairs were broken, and the floor was covered with slivers of glass.
# hyperedge = (and/J (lays/Pd.sx:12:1g.|f--3s:012 (the/Md.< table/Cc..s) (on/T ((+/Jc.rm.rc its/Mp (the/Md.< table/Cc..s)) side/Cc..s))) ((were/Mv.< broken/Pd.p:1:1.<pf:01234) (several/Ma.< chairs/Cc..p)) ((was/Mv.< covered/P.px:12:11.<pf:012) (the/Md.< floor/Cc..s) (with/T (of/Br slivers/Cc..p glass/Cc..s))))
# hyperedge builder = (43.12/J (43.2/Pd.sx:12:1g.|f--3s:012 (43.0/Md.< 43.1/Cc..s) (43.3/T ((+/Jc.rm.rc 43.4/Mp (43.0/Md.< 43.1/Cc..s)) 43.5/Cc..s))) ((43.9/Mv.< 43.10/Pd.p:1:1.<pf:01234) (43.7/Ma.< 43.8/Cc..p)) ((43.15/Mv.< 43.16/P.px:12:11.<pf:012) (43.13/Md.< 43.14/Cc..s) (43.17/T (43.19/Br 43.18/Cc..p 43.20/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
43 0  The     + the     DET   DT   det       1  - -        B-ARG1 -   -      -   -      B-MAIN0 -             the/Md.<
43 1  table   + table   NOUN  NN   nsubj     2  - -        I-ARG1 -   -      -   -      I-MAIN0 table.n.02    table/Cc..s
43 2  lays    + lay     VERB  VBZ  ROOT      2  - lay.01   B-V    -   -      -   -      -       lay.v.02      lays/Pd.sx:12:1g.|f--3s:012
43 3  on      + on      ADP   IN   prep      2  - -        B-ARG2 -   -      -   -      -       -             on/T
43 4  its     + its     PRON  PRP$ poss      5  - -        I-ARG2 -   -      -   -      B-REF0  -             its/Mp
43 5  side    - side    NOUN  NN   pobj      3  - -        I-ARG2 -   -      -   -      -       side.n.04     side/Cc..s
43 6  ,       + ,       PUNCT ,    punct     10 - -        -      -   -      -   -      -       -             -
43 7  several + several ADJ   JJ   amod      8  - -        -      -   B-ARG1 -   -      -       several.s.01  several/Ma.<
43 8  chairs  + chair   NOUN  NNS  nsubjpass 10 - -        -      -   I-ARG1 -   -      -       chair.n.01    chairs/Cc..p
43 9  were    + be      AUX   VBD  auxpass   10 - be.03    -      B-V -      -   -      -       -             were/Mv.<
43 10 broken  - break   VERB  VBN  conj      2  - break.01 -      -   B-V    -   -      -       break.v.02    broken/Pd.p:1:1.<pf:01234
43 11 ,       + ,       PUNCT ,    punct     10 - -        -      -   -      -   -      -       -             -
43 12 and     + and     CCONJ CC   cc        10 - -        -      -   -      -   -      -       -             and/J
43 13 the     + the     DET   DT   det       14 - -        -      -   -      -   B-ARG1 -       -             the/Md.<
43 14 floor   + floor   NOUN  NN   nsubjpass 16 - -        -      -   -      -   I-ARG1 -       floor.n.01    floor/Cc..s
43 15 was     + be      AUX   VBD  auxpass   16 - be.03    -      -   -      B-V -      -       -             was/Mv.<
43 16 covered + cover   VERB  VBN  conj      10 - cover.02 -      -   -      -   B-V    -       cover.v.01    covered/P.px:12:11.<pf:012
43 17 with    + with    ADP   IN   prep      16 - -        -      -   -      -   B-ARG2 -       -             with/T
43 18 slivers + sliver  NOUN  NNS  pobj      17 - -        -      -   -      -   I-ARG2 -       splinter.n.01 slivers/Cc..p
43 19 of      + of      ADP   IN   prep      18 - -        -      -   -      -   I-ARG2 -       -             of/Br
43 20 glass   - glass   NOUN  NN   pobj      19 - -        -      -   -      -   I-ARG2 -       glass.n.01    glass/Cc..s
43 21 .       - .       PUNCT .    punct     2  - -        -      -   -      -   -      -       -             -

# sent_i = 44
# sent = Mary knows John smokes.
# hyperedge = (knows/Pd.sr:01:01.|f--3s:012 mary/Cp..s.p (smokes/P.s:0:0.|f--3s:01 john/Cp..s.p))
# hyperedge builder = (44.1/Pd.sr:01:01.|f--3s:012 44.0/Cp..s.p (44.3/P.s:0:0.|f--3s:01 44.2/Cp..s.p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
44 0 Mary   + Mary  PROPN NNP nsubj 1 B-PERSON -        B-ARG0 -      -          mary/Cp..s.p
44 1 knows  + know  VERB  VBZ ROOT  1 -        know.01  B-V    -      know.v.01  knows/Pd.sr:01:01.|f--3s:012
44 2 John   + John  PROPN NNP nsubj 3 B-PERSON -        B-ARG1 B-ARG0 -          john/Cp..s.p
44 3 smokes - smoke VERB  VBZ ccomp 1 -        smoke.02 I-ARG1 B-V    smoke.v.01 smokes/P.s:0:0.|f--3s:01
44 4 .      - .     PUNCT .   punct 1 -        -        -      -      -          -

# sent_i = 45
# sent = The press clearly think the president deliberately lied to Congress.
# hyperedge = (think/Pd.s?r:0m1:0m1.|f:012 (the/Md.< press/Cc..s) clearly/M (lied/P.s?x:0m2:0mg.<f:0123 (the/Md.< president/Cc..s) deliberately/M (to/T congress/Cp..s.o)))
# hyperedge builder = (45.3/Pd.s?r:0m1:0m1.|f:012 (45.0/Md.< 45.1/Cc..s) 45.2/M (45.7/P.s?x:0m2:0mg.<f:0123 (45.4/Md.< 45.5/Cc..s) 45.6/M (45.8/T 45.9/Cp..s.o)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
45 0  The          + the          DET   DT  det    1 -     -        B-ARG0     -          -                                   the/Md.<
45 1  press        + press        NOUN  NN  nsubj  3 -     -        I-ARG0     -          press.n.02                          press/Cc..s
45 2  clearly      + clearly      ADV   RB  advmod 3 -     -        B-ARGM-MNR -          clearly.r.01                        clearly/M
45 3  think        + think        VERB  VBP ROOT   3 -     think.01 B-V        -          think.v.01                          think/Pd.s?r:0m1:0m1.|f:012
45 4  the          + the          DET   DT  det    5 -     -        B-ARG1     B-ARG0     -                                   the/Md.<
45 5  president    + president    NOUN  NN  nsubj  7 -     -        I-ARG1     I-ARG0     president_of_the_united_states.n.01 president/Cc..s
45 6  deliberately + deliberately ADV   RB  advmod 7 -     -        I-ARG1     B-ARGM-MNR intentionally.r.01                  deliberately/M
45 7  lied         + lie          VERB  VBD ccomp  3 -     lie.08   I-ARG1     B-V        lie.v.05                            lied/P.s?x:0m2:0mg.<f:0123
45 8  to           + to           ADP   IN  prep   7 -     -        I-ARG1     B-ARG2     -                                   to/T
45 9  Congress     - Congress     PROPN NNP pobj   8 B-ORG -        I-ARG1     I-ARG2     congress.n.01                       congress/Cp..s.o
45 10 .            - .            PUNCT .   punct  3 -     -        -          -          -                                   -

# sent_i = 46
# sent = The man went up to the 86th floor and he jumped.
# hyperedge = (and/J ((up/Ml.r.> went/P.sx:04:1g.<f:0134) (the/Md.< man/Cc..s) (to/T (the/Md.< (86th/Ma.<..# floor/Cc..s)))) (jumped/P.s:0:0.<f:012 (+/Jc.rm.rc he/Ci (the/Md.< man/Cc..s))))
# hyperedge builder = (46.8/J ((46.3/Ml.r.> 46.2/P.sx:04:1g.<f:0134) (46.0/Md.< 46.1/Cc..s) (46.4/T (46.5/Md.< (46.6/Ma.<..# 46.7/Cc..s)))) (46.10/P.s:0:0.<f:012 (+/Jc.rm.rc 46.9/Ci (46.0/Md.< 46.1/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
46 0  The    + the   DET   DT  det   1  -         -       B-ARG0     -      B-MAIN0 -          the/Md.<
46 1  man    + man   NOUN  NN  nsubj 2  -         -       I-ARG0     -      I-MAIN0 man.n.01   man/Cc..s
46 2  went   + go    VERB  VBD ROOT  2  -         go.02   B-V        -      -       rise.v.01  went/P.sx:04:1g.<f:0134
46 3  up     + up    ADP   RP  prt   2  -         -       B-ARGM-DIR -      -       rise.v.01  up/Ml.r.>
46 4  to     + to    ADP   IN  prep  2  -         -       B-ARG4     -      -       -          to/T
46 5  the    + the   DET   DT  det   7  -         -       I-ARG4     -      -       -          the/Md.<
46 6  86th   + 86th  ADJ   JJ  amod  7  B-ORDINAL -       I-ARG4     -      -       -          86th/Ma.<..#
46 7  floor  + floor NOUN  NN  pobj  4  -         -       I-ARG4     -      -       floor.n.02 floor/Cc..s
46 8  and    + and   CCONJ CC  cc    2  -         -       -          -      -       -          and/J
46 9  he     + he    PRON  PRP nsubj 10 -         -       -          B-ARG0 B-REF0  -          he/Ci
46 10 jumped - jump  VERB  VBD conj  2  -         jump.03 -          B-V    -       jump.v.08  jumped/P.s:0:0.<f:012
46 11 .      - .     PUNCT .   punct 10 -         -       -          -      -       -          -

# sent_i = 47
# sent = The man went up to the 86th floor and jumped.
# hyperedge = (and/J ((up/Ml.r.> went/Pd.sx:04:1g.<f:0134) (the/Md.< man/Cc..s) (to/T (the/Md.< (86th/Ma.<..# floor/Cc..s)))) (jumped/Pd.-:0:0.<f:012 (the/Md.< man/Cc..s)))
# hyperedge builder = (47.8/J ((47.3/Ml.r.> 47.2/Pd.sx:04:1g.<f:0134) (47.0/Md.< 47.1/Cc..s) (47.4/T (47.5/Md.< (47.6/Ma.<..# 47.7/Cc..s)))) (47.9/Pd.-:0:0.<f:012 (47.0/Md.< 47.1/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
47 0  The    + the   DET   DT  det   1 -         -       B-ARG0     B-ARG0 -          the/Md.<
47 1  man    + man   NOUN  NN  nsubj 2 -         -       I-ARG0     I-ARG0 man.n.01   man/Cc..s
47 2  went   + go    VERB  VBD ROOT  2 -         go.02   B-V        -      rise.v.01  went/Pd.sx:04:1g.<f:0134
47 3  up     + up    ADP   RP  prt   2 -         -       B-ARGM-DIR -      rise.v.01  up/Ml.r.>
47 4  to     + to    ADP   IN  prep  2 -         -       B-ARG4     -      -          to/T
47 5  the    + the   DET   DT  det   7 -         -       I-ARG4     -      -          the/Md.<
47 6  86th   + 86th  ADJ   JJ  amod  7 B-ORDINAL -       I-ARG4     -      -          86th/Ma.<..#
47 7  floor  + floor NOUN  NN  pobj  4 -         -       I-ARG4     -      floor.n.02 floor/Cc..s
47 8  and    + and   CCONJ CC  cc    2 -         -       -          -      -          and/J
47 9  jumped - jump  VERB  VBD conj  2 -         jump.03 -          B-V    jump.v.08  jumped/Pd.-:0:0.<f:012
47 10 .      - .     PUNCT .   punct 2 -         -       -          -      -          -

# sent_i = 48
# sent = I've peeled the potatoes and I've washed them.
# hyperedge = (and/J (('ve/Mv.< peeled/P.so:01:0d.<pf:01) i/Ci (the/Md.< potatoes/Cc..p)) (('ve/Mv.< washed/P.so:01:01.<pf:01234) i/Ci (+/Jc.rm.rc them/Ci (the/Md.< potatoes/Cc..p))))
# hyperedge builder = (48.5/J ((48.1/Mv.< 48.2/P.so:01:0d.<pf:01) 48.0/Ci (48.3/Md.< 48.4/Cc..p)) ((48.7/Mv.< 48.8/P.so:01:01.<pf:01234) 48.6/Ci (+/Jc.rm.rc 48.9/Ci (48.3/Md.< 48.4/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 coref2 synset atoms
48 0  I        - I      PRON  PRP nsubj 2 - -       -   B-ARG0 -   -      B-MAIN0 -       -           i/Ci
48 1  've      + have   AUX   VB  aux   2 - have.01 B-V -      -   -      -       -       -           've/Mv.<
48 2  peeled   + peel   VERB  VBN ROOT  2 - peel.01 -   B-V    -   -      -       -       skin.v.04   peeled/P.so:01:0d.<pf:01
48 3  the      + the    DET   DT  det   4 - -       -   B-ARG1 -   -      -       B-MAIN1 -           the/Md.<
48 4  potatoes + potato NOUN  NNS dobj  2 - -       -   I-ARG1 -   -      -       I-MAIN1 potato.n.01 potatoes/Cc..p
48 5  and      + and    CCONJ CC  cc    2 - -       -   -      -   -      -       -       -           and/J
48 6  I        - I      PRON  PRP nsubj 8 - -       -   -      -   B-ARG0 B-REF0  -       -           i/Ci
48 7  've      + have   AUX   VB  aux   8 - have.01 -   -      B-V -      -       -       -           've/Mv.<
48 8  washed   + wash   VERB  VBN conj  2 - wash.01 -   -      -   B-V    -       -       wash.v.02   washed/P.so:01:01.<pf:01234
48 9  them     - they   PRON  PRP dobj  8 - -       -   -      -   B-ARG1 -       B-REF1  -           them/Ci
48 10 .        - .      PUNCT .   punct 8 - -       -   -      -   -      -       -       -           -

# sent_i = 49
# sent = I've peeled the potatoes and washed them.
# hyperedge = (and/J (('ve/Mv.< peeled/Pd.so:01:0d.<pf:01) i/Ci (the/Md.< potatoes/Cc..p)) (washed/Pd.-o:01:01.<pf:01234 i/Ci (+/Jc.rm.rc them/Ci (the/Md.< potatoes/Cc..p))))
# hyperedge builder = (49.5/J ((49.1/Mv.< 49.2/Pd.so:01:0d.<pf:01) 49.0/Ci (49.3/Md.< 49.4/Cc..p)) (49.6/Pd.-o:01:01.<pf:01234 49.0/Ci (+/Jc.rm.rc 49.7/Ci (49.3/Md.< 49.4/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
49 0 I        - I      PRON  PRP nsubj 2 - -       -   B-ARG0 B-ARG0 -       -           i/Ci
49 1 've      + have   AUX   VB  aux   2 - have.01 B-V -      -      -       -           've/Mv.<
49 2 peeled   + peel   VERB  VBN ROOT  2 - peel.01 -   B-V    -      -       skin.v.04   peeled/Pd.so:01:0d.<pf:01
49 3 the      + the    DET   DT  det   4 - -       -   B-ARG1 -      B-MAIN0 -           the/Md.<
49 4 potatoes + potato NOUN  NNS dobj  2 - -       -   I-ARG1 -      I-MAIN0 potato.n.01 potatoes/Cc..p
49 5 and      + and    CCONJ CC  cc    2 - -       -   -      -      -       -           and/J
49 6 washed   + wash   VERB  VBN conj  2 - wash.01 -   -      B-V    -       wash.v.02   washed/Pd.-o:01:01.<pf:01234
49 7 them     - they   PRON  PRP dobj  6 - -       -   -      B-ARG1 B-REF0  -           them/Ci
49 8 .        - .      PUNCT .   punct 2 - -       -   -      -      -       -           -

# sent_i = 50
# sent = He took the lift up, found a convenient window and jumped.
# hyperedge = (and/J (took/Pd.so?:0kd:!!!.<f he/Ci (the/Md.< lift/Cc..s) up/M) (found/Pd.-o:01:01.<f:012 he/Ci (a/Md.< (convenient/Ma.< window/Cc..s))) (jumped/Pd.-:0:0.<f:012 he/Ci))
# hyperedge builder = (50.10/J (50.1/Pd.so?:0kd:!!!.<f 50.0/Ci (50.2/Md.< 50.3/Cc..s) 50.4/M) (50.6/Pd.-o:01:01.<f:012 50.0/Ci (50.7/Md.< (50.8/Ma.< 50.9/Cc..s))) (50.11/Pd.-:0:0.<f:012 50.0/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
50 0  He         + he         PRON  PRP nsubj  1 - -       B-ARG0     B-ARG0     B-ARG0 B-ARG0 -               he/Ci
50 1  took       + take       VERB  VBD ROOT   1 - take.LV B-V        B-ARGM-LVB -      -      take.v.09       took/Pd.so?:0kd:!!!.<f
50 2  the        + the        DET   DT  det    3 - -       -          -          -      -      -               the/Md.<
50 3  lift       + lift       NOUN  NN  dobj   1 - lift.00 B-ARGM-PRR B-V        -      -      elevator.n.01   lift/Cc..s
50 4  up         - up         ADV   RB  advmod 1 - -       -          B-ARGM-DIR -      -      up.r.01         up/M
50 5  ,          + ,          PUNCT ,   punct  1 - -       -          -          -      -      -               -
50 6  found      + find       VERB  VBD conj   1 - find.01 -          -          B-V    -      find.v.03       found/Pd.-o:01:01.<f:012
50 7  a          + a          DET   DT  det    9 - -       -          -          B-ARG1 -      -               a/Md.<
50 8  convenient + convenient ADJ   JJ  amod   9 - -       -          -          I-ARG1 -      convenient.a.01 convenient/Ma.<
50 9  window     + window     NOUN  NN  dobj   6 - -       -          -          I-ARG1 -      window.n.01     window/Cc..s
50 10 and        + and        CCONJ CC  cc     6 - -       -          -          -      -      -               and/J
50 11 jumped     - jump       VERB  VBD conj   6 - jump.03 -          -          -      B-V    jump.v.08       jumped/Pd.-:0:0.<f:012
50 12 .          - .          PUNCT .   punct  1 - -       -          -          -      -      -               -

# sent_i = 51
# sent = We can take a taxi or we can wait for a bus.
# hyperedge = (or/J ((can/Mm.< take/P.so:0k:!!.-i) we/Ci (a/Md.< taxi/Cc..s)) ((can/Mm.< wait/P.sx:12:1c.-i:12m) we/Ci (for/T (a/Md.< bus/Cc..s))))
# hyperedge builder = (51.5/J ((51.1/Mm.< 51.2/P.so:0k:!!.-i) 51.0/Ci (51.3/Md.< 51.4/Cc..s)) ((51.7/Mm.< 51.8/P.sx:12:1c.-i:12m) 51.6/Ci (51.9/T (51.10/Md.< 51.11/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
51 0  We   + we   PRON  PRP nsubj 2  - -       -   -          B-ARG0     -   -          B-MAIN0 -         we/Ci
51 1  can  + can  AUX   MD  aux   2  - -       B-V -          B-ARGM-MOD -   -          -       -         can/Mm.<
51 2  take + take VERB  VB  ROOT  2  - take.LV -   B-V        B-ARGM-LVB -   -          -       take.v.09 take/P.so:0k:!!.-i
51 3  a    + a    DET   DT  det   4  - -       -   -          -          -   -          -       -         a/Md.<
51 4  taxi + taxi NOUN  NN  dobj  2  - taxi.00 -   B-ARGM-PRR B-V        -   -          -       cab.n.03  taxi/Cc..s
51 5  or   + or   CCONJ CC  cc    2  - -       -   -          -          -   -          -       -         or/J
51 6  we   + we   PRON  PRP nsubj 8  - -       -   -          -          -   B-ARG1     B-REF0  -         we/Ci
51 7  can  + can  AUX   MD  aux   8  - -       -   -          -          B-V B-ARGM-MOD -       -         can/Mm.<
51 8  wait + wait VERB  VB  conj  2  - wait.01 -   -          -          -   B-V        -       wait.v.01 wait/P.sx:12:1c.-i:12m
51 9  for  + for  ADP   IN  prep  8  - -       -   -          -          -   B-ARG2     -       -         for/T
51 10 a    + a    DET   DT  det   11 - -       -   -          -          -   I-ARG2     -       -         a/Md.<
51 11 bus  - bus  NOUN  NN  pobj  9  - -       -   -          -          -   I-ARG2     -       bus.n.01  bus/Cc..s
51 12 .    - .    PUNCT .   punct 8  - -       -   -          -          -   -          -       -         -

# sent_i = 52
# sent = We can take a taxi or wait for a bus.
# hyperedge = (or/J ((can/Mm.< take/Pd.so:0k:!!.-i) we/Ci (a/Md.< taxi/Cc..s)) (wait/Pd.-x:12:1c.-i:12m we/Ci (for/T (a/Md.< bus/Cc..s))))
# hyperedge builder = (52.5/J ((52.1/Mm.< 52.2/Pd.so:0k:!!.-i) 52.0/Ci (52.3/Md.< 52.4/Cc..s)) (52.6/Pd.-x:12:1c.-i:12m 52.0/Ci (52.7/T (52.8/Md.< 52.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
52 0  We   + we   PRON  PRP nsubj 2 - -       -   -          B-ARG0     B-ARG1     -         we/Ci
52 1  can  + can  AUX   MD  aux   2 - -       B-V -          B-ARGM-MOD B-ARGM-MOD -         can/Mm.<
52 2  take + take VERB  VB  ROOT  2 - take.LV -   B-V        B-ARGM-LVB -          take.v.09 take/Pd.so:0k:!!.-i
52 3  a    + a    DET   DT  det   4 - -       -   -          -          -          -         a/Md.<
52 4  taxi + taxi NOUN  NN  dobj  2 - taxi.00 -   B-ARGM-PRR B-V        -          cab.n.03  taxi/Cc..s
52 5  or   + or   CCONJ CC  cc    2 - -       -   -          -          -          -         or/J
52 6  wait + wait VERB  VB  conj  2 - wait.01 -   -          -          B-V        wait.v.01 wait/Pd.-x:12:1c.-i:12m
52 7  for  + for  ADP   IN  prep  6 - -       -   -          -          B-ARG2     -         for/T
52 8  a    + a    DET   DT  det   9 - -       -   -          -          I-ARG2     -         a/Md.<
52 9  bus  - bus  NOUN  NN  pobj  7 - -       -   -          -          I-ARG2     bus.n.01  bus/Cc..s
52 10 .    - .    PUNCT .   punct 2 - -       -   -          -          -          -         -

# sent_i = 53
# sent = He jumped off the 86th floor but he survived.
# hyperedge = (but/J (jumped/P.sx:0l:0l.<f:012 he/Ci (off/Tl (the/Md.< (86th/Ma.<..# floor/Cc..s)))) (survived/P.s:0:0.<f:01 he/Ci))
# hyperedge builder = (53.6/J (53.1/P.sx:0l:0l.<f:012 53.0/Ci (53.2/Tl (53.3/Md.< (53.4/Ma.<..# 53.5/Cc..s)))) (53.8/P.s:0:0.<f:01 53.7/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
53 0 He       + he      PRON  PRP nsubj 1 -         -          B-ARG0     -      B-MAIN0 -            he/Ci
53 1 jumped   + jump    VERB  VBD ROOT  1 -         jump.03    B-V        -      -       jump.v.08    jumped/P.sx:0l:0l.<f:012
53 2 off      + off     ADP   RP  prep  1 -         -          B-ARGM-LOC -      -       -            off/Tl
53 3 the      + the     DET   DT  det   5 -         -          I-ARGM-LOC -      -       -            the/Md.<
53 4 86th     + 86th    ADJ   JJ  amod  5 B-ORDINAL -          I-ARGM-LOC -      -       -            86th/Ma.<..#
53 5 floor    + floor   NOUN  NN  pobj  2 -         -          I-ARGM-LOC -      -       floor.n.02   floor/Cc..s
53 6 but      + but     CCONJ CC  cc    1 -         -          -          -      -       -            but/J
53 7 he       + he      PRON  PRP nsubj 8 -         -          -          B-ARG0 B-REF0  -            he/Ci
53 8 survived - survive VERB  VBD conj  1 -         survive.01 -          B-V    -       survive.v.02 survived/P.s:0:0.<f:01
53 9 .        - .       PUNCT .   punct 8 -         -          -          -      -       -            -

# sent_i = 54
# sent = He jumped off the 86th floor but survived.
# hyperedge = (but/J ((off/Ml.r.> jumped/Pd.so:0l:0l.<f:012) he/Ci (the/Md.< (86th/Ma.<..# floor/Cc..s))) (survived/Pd.-:0:0.<f:01 he/Ci))
# hyperedge builder = (54.6/J ((54.2/Ml.r.> 54.1/Pd.so:0l:0l.<f:012) 54.0/Ci (54.3/Md.< (54.4/Ma.<..# 54.5/Cc..s))) (54.7/Pd.-:0:0.<f:01 54.0/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
54 0 He       + he      PRON  PRP nsubj 1 -         -          B-ARG0     B-ARG0 -            he/Ci
54 1 jumped   + jump    VERB  VBD ROOT  1 -         jump.03    B-V        -      jump.v.08    jumped/Pd.so:0l:0l.<f:012
54 2 off      + off     ADP   RP  prt   1 -         -          -          -      -            off/Ml.r.>
54 3 the      + the     DET   DT  det   5 -         -          B-ARGM-LOC -      -            the/Md.<
54 4 86th     + 86th    ADJ   JJ  amod  5 B-ORDINAL -          I-ARGM-LOC -      -            86th/Ma.<..#
54 5 floor    + floor   NOUN  NN  dobj  1 -         -          I-ARGM-LOC -      floor.n.02   floor/Cc..s
54 6 but      + but     CCONJ CC  cc    1 -         -          -          -      -            but/J
54 7 survived - survive VERB  VBD conj  1 -         survive.01 -          B-V    survive.v.02 survived/Pd.-:0:0.<f:01
54 8 .        - .       PUNCT .   punct 1 -         -          -          -      -            -

# sent_i = 55
# sent = There was a show going out, so they asked him some questions.
# hyperedge = (so/J (was/Pd.ec:-1:-1.<f:1 there/Me (+/Jr.ma (a/Md.< show/Cc..s) ((out/Ml.r.> going/P.-:1:1.|pg:1) (a/Md.< show/Cc..s)))) (asked/Pd.sio:021:0g1.<f:0123 they/Ci him/Ci (some/Md.< questions/Cc..p)))
# hyperedge builder = (55.7/J (55.1/Pd.ec:-1:-1.<f:1 55.0/Me (+/Jr.ma (55.2/Md.< 55.3/Cc..s) ((55.5/Ml.r.> 55.4/P.-:1:1.|pg:1) (55.2/Md.< 55.3/Cc..s)))) (55.9/Pd.sio:021:0g1.<f:0123 55.8/Ci 55.10/Ci (55.11/Md.< 55.12/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
55 0  There     + there    PRON  EX  expl   1  - -         -      -      -      -              there/Me
55 1  was       + be       AUX   VBD ROOT   1  - be.02     B-V    -      -      be.v.01        was/Pd.ec:-1:-1.<f:1
55 2  a         + a        DET   DT  det    3  - -         B-ARG1 B-ARG1 -      -              a/Md.<
55 3  show      + show     NOUN  NN  attr   1  - -         I-ARG1 I-ARG1 -      show.n.03      show/Cc..s
55 4  going     + go       VERB  VBG acl    3  - go_out.18 I-ARG1 B-V    -      air.v.02       going/P.-:1:1.|pg:1
55 5  out       - out      ADP   RP  prt    4  - -         I-ARG1 -      -      air.v.02       out/Ml.r.>
55 6  ,         + ,        PUNCT ,   punct  1  - -         -      -      -      -              -
55 7  so        + so       ADV   RB  cc     1  - -         -      -      -      therefore.r.01 so/J
55 8  they      + they     PRON  PRP nsubj  9  - -         -      -      B-ARG0 -              they/Ci
55 9  asked     + ask      VERB  VBD conj   1  - ask.01    -      -      B-V    ask.v.01       asked/Pd.sio:021:0g1.<f:0123
55 10 him       + he       PRON  PRP dative 9  - -         -      -      B-ARG2 -              him/Ci
55 11 some      + some     DET   DT  det    12 - -         -      -      B-ARG1 some.a.01      some/Md.<
55 12 questions - question NOUN  NNS dobj   9  - -         -      -      I-ARG1 question.n.03  questions/Cc..p
55 13 .         - .        PUNCT .   punct  1  - -         -      -      -      -              -

# sent_i = 56
# sent = A gust of wind caught him as he fell.
# hyperedge = (caught/Pd.sox:01t:01t.<f:012 (of/Br (a/Md.< gust/Cc..s) wind/Cc..s) (+/Jc.rm.rr him/Ci he/Ci) (as/T (fell/P.s:1:1.<f:1234m he/Ci)))
# hyperedge builder = (56.4/Pd.sox:01t:01t.<f:012 (56.2/Br (56.0/Md.< 56.1/Cc..s) 56.3/Cc..s) (+/Jc.rm.rr 56.5/Ci 56.7/Ci) (56.6/T (56.8/P.s:1:1.<f:1234m 56.7/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
56 0 A      + a     DET   DT  det   1 - -        B-ARG0     -      -       -          a/Md.<
56 1 gust   + gust  NOUN  NN  nsubj 4 - -        I-ARG0     -      -       gust.n.01  gust/Cc..s
56 2 of     + of    ADP   IN  prep  1 - -        I-ARG0     -      -       -          of/Br
56 3 wind   + wind  NOUN  NN  pobj  2 - -        I-ARG0     -      -       wind.n.01  wind/Cc..s
56 4 caught + catch VERB  VBD ROOT  4 - catch.01 B-V        -      -       catch.v.04 caught/Pd.sox:01t:01t.<f:012
56 5 him    + he    PRON  PRP dobj  4 - -        B-ARG1     -      B-REF0  -          him/Ci
56 6 as     + as    SCONJ IN  mark  8 - -        B-ARGM-TMP -      -       -          as/T
56 7 he     + he    PRON  PRP nsubj 8 - -        I-ARGM-TMP B-ARG1 B-MAIN0 -          he/Ci
56 8 fell   - fall  VERB  VBD advcl 4 - fall.01  I-ARGM-TMP B-V    -       fall.v.01  fell/P.s:1:1.<f:1234m
56 9 .      - .     PUNCT .   punct 4 - -        -          -      -       -          -

# sent_i = 57
# sent = He admitted that he'd changed his mind.
# hyperedge = (admitted/Pd.sr:01:01.<f:012 he/Ci (that/T (('d/Mv.< changed/P.so:01:01.<pf:0123) he/Ci ((+/Jc.rm.rr his/Mp he/Ci) mind/Cc..s))))
# hyperedge builder = (57.1/Pd.sr:01:01.<f:012 57.0/Ci (57.2/T ((57.4/Mv.< 57.5/P.so:01:01.<pf:0123) 57.3/Ci ((+/Jc.rm.rr 57.6/Mp 57.0/Ci) 57.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
57 0 He       + he     PRON  PRP  nsubj 1 - -         B-ARG0 -   -      B-MAIN0 -             he/Ci
57 1 admitted + admit  VERB  VBD  ROOT  1 - admit.01  B-V    -   -      -       admit.v.01    admitted/Pd.sr:01:01.<f:012
57 2 that     + that   SCONJ IN   mark  5 - -         B-ARG1 -   -      -       -             that/T
57 3 he       - he     PRON  PRP  nsubj 5 - -         I-ARG1 -   B-ARG0 B-REF0  -             he/Ci
57 4 'd       + have   AUX   VBD  aux   5 - have.01   I-ARG1 B-V -      -       -             'd/Mv.<
57 5 changed  + change VERB  VBN  ccomp 1 - change.01 I-ARG1 -   B-V    -       change.v.01   changed/P.so:01:01.<pf:0123
57 6 his      + his    PRON  PRP$ poss  7 - -         I-ARG1 -   B-ARG1 B-REF0  -             his/Mp
57 7 mind     - mind   NOUN  NN   dobj  5 - -         I-ARG1 -   I-ARG1 -       judgment.n.01 mind/Cc..s
57 8 .        - .      PUNCT .    punct 1 - -         -      -   -      -       -             -

# sent_i = 58
# sent = She was glad that he apologized.
# hyperedge = (was/Pd.sc:12:1h.<f:12 she/Ci (+/Br.am glad/Ca (that/T (apologized/P.s:0:0.<f:0123 he/Ci))))
# hyperedge builder = (58.1/Pd.sc:12:1h.<f:12 58.0/Ci (+/Br.am 58.2/Ca (58.3/T (58.5/P.s:0:0.<f:0123 58.4/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
58 0 She        + she       PRON  PRP nsubj 1 - -            B-ARG1 -      -              she/Ci
58 1 was        + be        AUX   VBD ROOT  1 - be.01        B-V    -      be.v.01        was/Pd.sc:12:1h.<f:12
58 2 glad       + glad      ADJ   JJ  acomp 1 - -            B-ARG2 -      glad.a.01      glad/Ca
58 3 that       + that      SCONJ IN  mark  5 - -            I-ARG2 -      -              that/T
58 4 he         + he        PRON  PRP nsubj 5 - -            I-ARG2 B-ARG0 -              he/Ci
58 5 apologized - apologize VERB  VBD ccomp 2 - apologize.01 I-ARG2 B-V    apologize.v.01 apologized/P.s:0:0.<f:0123
58 6 .          - .         PUNCT .   punct 1 - -            -      -      -              -

# sent_i = 59
# sent = She demanded that he apologize.
# hyperedge = (demanded/Pd.sr:01:01.<f:012 she/Ci (that/T (apologize/P.s:0:0.-i:0123 he/Ci)))
# hyperedge builder = (59.1/Pd.sr:01:01.<f:012 59.0/Ci (59.2/T (59.4/P.s:0:0.-i:0123 59.3/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
59 0 She       + she       PRON  PRP nsubj 1 - -            B-ARG0 -      -              she/Ci
59 1 demanded  + demand    VERB  VBD ROOT  1 - demand.01    B-V    -      demand.v.01    demanded/Pd.sr:01:01.<f:012
59 2 that      + that      SCONJ IN  mark  4 - -            B-ARG1 -      -              that/T
59 3 he        + he        PRON  PRP nsubj 4 - -            I-ARG1 B-ARG0 -              he/Ci
59 4 apologize - apologize VERB  VB  ccomp 1 - apologize.01 I-ARG1 B-V    apologize.v.01 apologize/P.s:0:0.-i:0123
59 5 .         - .         PUNCT .   punct 1 - -            -      -      -              -

# sent_i = 60
# sent = To tell you the truth, I was terrified.
# hyperedge = (was/Pd.xsc:r12:r1h.<f:12 ((to/Mi.< tell/P.io:21:g1.-i:012) you/Ci (the/Md.< truth/Cc..s)) i/Ci terrified/Ca)
# hyperedge builder = (60.7/Pd.xsc:r12:r1h.<f:12 ((60.0/Mi.< 60.1/P.io:21:g1.-i:012) 60.2/Ci (60.3/Md.< 60.4/Cc..s)) 60.6/Ci 60.8/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
60 0 To        + to        PART  TO  aux    1 - -       -      B-ARGM-ADV -            to/Mi.<
60 1 tell      + tell      VERB  VB  advcl  7 - tell.01 B-V    I-ARGM-ADV tell.v.02    tell/P.io:21:g1.-i:012
60 2 you       + you       PRON  PRP dative 1 - -       B-ARG2 I-ARGM-ADV -            you/Ci
60 3 the       + the       DET   DT  det    4 - -       B-ARG1 I-ARGM-ADV -            the/Md.<
60 4 truth     - truth     NOUN  NN  dobj   1 - -       I-ARG1 I-ARGM-ADV truth.n.03   truth/Cc..s
60 5 ,         + ,         PUNCT ,   punct  7 - -       -      -          -            -
60 6 I         + I         PRON  PRP nsubj  7 - -       -      B-ARG1     -            i/Ci
60 7 was       + be        AUX   VBD ROOT   7 - be.01   -      B-V        be.v.01      was/Pd.xsc:r12:r1h.<f:12
60 8 terrified - terrified ADJ   JJ  acomp  7 - -       -      B-ARG2     panicky.s.01 terrified/Ca
60 9 .         - .         PUNCT .   punct  7 - -       -      -          -            -

# sent_i = 61
# sent = I can't imagine him apologizing.
# hyperedge = ((ca/Mm.< (n't/Mn.< imagine/Pd.sr:01:01.-i:012)) i/Ci (apologizing/P.s:0:!.|pg him/Ci))
# hyperedge builder = ((61.1/Mm.< (61.2/Mn.< 61.3/Pd.sr:01:01.-i:012)) 61.0/Ci (61.5/P.s:0:!.|pg 61.4/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
61 0 I           + I         PRON  PRP nsubj 3 - -          -   B-ARG0     -      -              i/Ci
61 1 ca          - can       AUX   MD  aux   3 - -          B-V B-ARGM-MOD -      -              ca/Mm.<
61 2 n't         + not       PART  RB  neg   3 - -          -   B-ARGM-NEG -      not.r.01       n't/Mn.<
61 3 imagine     + imagine   VERB  VB  ROOT  3 - imagine.01 -   B-V        -      think.v.02     imagine/Pd.sr:01:01.-i:012
61 4 him         + he        PRON  PRP nsubj 5 - -          -   B-ARG1     B-ARG0 -              him/Ci
61 5 apologizing - apologize VERB  VBG ccomp 3 - -          -   I-ARG1     B-V    apologize.v.01 apologizing/P.s:0:!.|pg
61 6 .           - .         PUNCT .   punct 3 - -          -   -          -      -              -

# sent_i = 62
# sent = It would be sensible for him to apologize.
# hyperedge = ((would/Mm.< be/Pd.scx:-21:-h1.-i:12) it/Ci sensible/Ca (for/T ((to/Mi.< apologize/P.s:0:0.-i:0123) him/Ci)))
# hyperedge builder = ((62.1/Mm.< 62.2/Pd.scx:-21:-h1.-i:12) 62.0/Ci 62.3/Ca (62.4/T ((62.6/Mi.< 62.7/P.s:0:0.-i:0123) 62.5/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
62 0 It        + it        PRON  PRP nsubj 2 - -            -   -          -      -               it/Ci
62 1 would     + would     AUX   MD  aux   2 - -            B-V B-ARGM-MOD -      -               would/Mm.<
62 2 be        + be        VERB  VB  ROOT  2 - be.01        -   B-V        -      be.v.01         be/Pd.scx:-21:-h1.-i:12
62 3 sensible  + sensible  ADJ   JJ  acomp 2 - -            -   B-ARG2     -      reasonable.a.01 sensible/Ca
62 4 for       + for       SCONJ IN  mark  7 - -            -   B-ARG1     -      -               for/T
62 5 him       + he        PRON  PRP nsubj 7 - -            -   I-ARG1     B-ARG0 -               him/Ci
62 6 to        + to        PART  TO  aux   7 - -            -   I-ARG1     -      -               to/Mi.<
62 7 apologize - apologize VERB  VB  advcl 2 - apologize.01 -   I-ARG1     B-V    apologize.v.01  apologize/P.s:0:0.-i:0123
62 8 .         - .         PUNCT .   punct 2 - -            -   -          -      -               -

# sent_i = 63
# sent = It is important to know when to apologize.
# hyperedge = (is/Pd.scr:-21:-h1.|f--3s:12 it/Ci important/Ca ((to/Mi.< know/P.r:1:1.-i:012) ((to/Mi.< apologize/P.?:t:t.-i:0123) when/Mw)))
# hyperedge builder = (63.1/Pd.scr:-21:-h1.|f--3s:12 63.0/Ci 63.2/Ca ((63.3/Mi.< 63.4/P.r:1:1.-i:012) ((63.6/Mi.< 63.7/P.?:t:t.-i:0123) 63.5/Mw)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
63 0 It        + it        PRON  PRP nsubj  1 - -            -      -      -          -              it/Ci
63 1 is        + be        AUX   VBZ ROOT   1 - be.01        B-V    -      -          be.v.01        is/Pd.scr:-21:-h1.|f--3s:12
63 2 important + important ADJ   JJ  acomp  1 - -            B-ARG2 -      -          important.a.01 important/Ca
63 3 to        + to        PART  TO  aux    4 - -            B-ARG1 -      -          -              to/Mi.<
63 4 know      + know      VERB  VB  xcomp  1 - know.01      I-ARG1 B-V    -          know.v.01      know/P.r:1:1.-i:012
63 5 when      + when      ADV   WRB advmod 7 - -            I-ARG1 B-ARG1 B-ARGM-TMP -              when/Mw
63 6 to        + to        PART  TO  aux    7 - -            I-ARG1 I-ARG1 -          -              to/Mi.<
63 7 apologize - apologize VERB  VB  xcomp  4 - apologize.01 I-ARG1 I-ARG1 B-V        apologize.v.01 apologize/P.?:t:t.-i:0123
63 8 .         - .         PUNCT .   punct  1 - -            -      -      -          -              -

# sent_i = 64
# sent = The people watching the show were astonished.
# hyperedge = (were/Pd.sc:12:1h.<f:12 (+/Jr.ma (the/Md.< people/Cc..p) (watching/P.-o:01:01.|pg:01 (the/Md.< people/Cc..p) (the/Md.< show/Cc..s))) astonished/Ca)
# hyperedge builder = (64.5/Pd.sc:12:1h.<f:12 (+/Jr.ma (64.0/Md.< 64.1/Cc..p) (64.2/P.-o:01:01.|pg:01 (64.0/Md.< 64.1/Cc..p) (64.3/Md.< 64.4/Cc..s))) 64.6/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
64 0 The        + the        DET   DT  det   1 - -        B-ARG0 B-ARG1 -           the/Md.<
64 1 people     + people     NOUN  NNS nsubj 5 - -        I-ARG0 I-ARG1 people.n.01 people/Cc..p
64 2 watching   + watch      VERB  VBG acl   1 - watch.01 B-V    I-ARG1 watch.v.03  watching/P.-o:01:01.|pg:01
64 3 the        + the        DET   DT  det   4 - -        B-ARG1 I-ARG1 -           the/Md.<
64 4 show       + show       NOUN  NN  dobj  2 - -        I-ARG1 I-ARG1 show.n.03   show/Cc..s
64 5 were       + be         AUX   VBD ROOT  5 - be.01    -      B-V    be.v.01     were/Pd.sc:12:1h.<f:12
64 6 astonished - astonished ADJ   JJ  acomp 5 - -        -      B-ARG2 amazed.s.01 astonished/Ca
64 7 .          - .          PUNCT .   punct 5 - -        -      -      -           -

# sent_i = 65
# sent = He asked where she had gone.
# hyperedge = (asked/Pd.sr:01:01.<f:0123 he/Ci ((had/Mv.< gone/P.?s:40:g1.<pf:0134) where/Mw she/Ci))
# hyperedge builder = (65.1/Pd.sr:01:01.<f:0123 65.0/Ci ((65.4/Mv.< 65.5/P.?s:40:g1.<pf:0134) 65.2/Mw 65.3/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
65 0 He    + he    PRON  PRP nsubj  1 - -       B-ARG0 -   -      -           he/Ci
65 1 asked + ask   VERB  VBD ROOT   1 - ask.01  B-V    -   -      ask.v.01    asked/Pd.sr:01:01.<f:0123
65 2 where + where ADV   WRB advmod 5 - -       B-ARG1 -   B-ARG4 -           where/Mw
65 3 she   + she   PRON  PRP nsubj  5 - -       I-ARG1 -   B-ARG0 -           she/Ci
65 4 had   + have  AUX   VBD aux    5 - have.01 I-ARG1 B-V -      -           had/Mv.<
65 5 gone  - go    VERB  VBN ccomp  1 - go.02   I-ARG1 -   B-V    travel.v.01 gone/P.?s:40:g1.<pf:0134
65 6 .     - .     PUNCT .   punct  1 - -       -      -   -      -           -

# sent_i = 66
# sent = Did you know that he has retired?
# hyperedge = ((did/Mv.< know/P?.sr:01:01.-i:012) you/Ci (that/T ((has/Mv.< retired/P.s:0:0.<pf:01) he/Ci)))
# hyperedge builder = ((66.0/Mv.< 66.2/P?.sr:01:01.-i:012) 66.1/Ci (66.3/T ((66.5/Mv.< 66.6/P.s:0:0.<pf:01) 66.4/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
66 0 Did     + do     AUX   VBD aux   2 - do.01     B-V -      -   -      -           did/Mv.<
66 1 you     + you    PRON  PRP nsubj 2 - -         -   B-ARG0 -   -      -           you/Ci
66 2 know    + know   VERB  VB  ROOT  2 - know.01   -   B-V    -   -      know.v.01   know/P?.sr:01:01.-i:012
66 3 that    + that   SCONJ IN  mark  6 - -         -   B-ARG1 -   -      -           that/T
66 4 he      + he     PRON  PRP nsubj 6 - -         -   I-ARG1 -   B-ARG0 -           he/Ci
66 5 has     + have   AUX   VBZ aux   6 - have.01   -   I-ARG1 B-V -      -           has/Mv.<
66 6 retired - retire VERB  VBN ccomp 2 - retire.01 -   I-ARG1 -   B-V    retire.v.01 retired/P.s:0:0.<pf:01
66 7 ?       - ?      PUNCT .   punct 2 - -         -   -      -   -      -           -

# sent_i = 67
# sent = Tell her what a great time we had!
# hyperedge = (tell/P!.or:21:g1.-i:012 her/Ci (had/P.os:10:10.<f:01 (what/Mw.< (a/Md.< (great/Ma.< time/Cc..s))) we/Ci))
# hyperedge builder = (67.0/P!.or:21:g1.-i:012 67.1/Ci (67.7/P.os:10:10.<f:01 (67.2/Mw.< (67.3/Md.< (67.4/Ma.< 67.5/Cc..s))) 67.6/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
67 0 Tell  + tell  VERB  VB  ROOT  0 - tell.01 B-V    -      tell.v.03        tell/P!.or:21:g1.-i:012
67 1 her   + she   PRON  PRP dobj  0 - -       B-ARG2 -      -                her/Ci
67 2 what  + what  DET   WDT det   5 - -       B-ARG1 B-ARG1 -                what/Mw.<
67 3 a     + a     DET   DT  det   5 - -       I-ARG1 I-ARG1 have_a_ball.v.01 a/Md.<
67 4 great + great ADJ   JJ  amod  5 - -       I-ARG1 I-ARG1 have_a_ball.v.01 great/Ma.<
67 5 time  + time  NOUN  NN  dobj  7 - -       I-ARG1 I-ARG1 have_a_ball.v.01 time/Cc..s
67 6 we    + we    PRON  PRP nsubj 7 - -       I-ARG1 B-ARG0 -                we/Ci
67 7 had   - have  VERB  VBD ccomp 0 - have.06 I-ARG1 B-V    have_a_ball.v.01 had/P.os:10:10.<f:01
67 8 !     - !     PUNCT .   punct 0 - -       -      -      -                -

# sent_i = 68
# sent = He had said someone would do something.
# hyperedge = ((had/Mv.< said/Pd.sr:01:01.<pf:0123) he/Ci ((would/Mm.< do/P.so:01:01.-i:01234) someone/Ci..s something/Ci..s))
# hyperedge builder = ((68.1/Mv.< 68.2/Pd.sr:01:01.<pf:0123) 68.0/Ci ((68.4/Mm.< 68.5/P.so:01:01.-i:01234) 68.3/Ci..s 68.6/Ci..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
68 0 He        + he        PRON  PRP nsubj 2 - -       -   B-ARG0 -   -          -           he/Ci
68 1 had       + have      AUX   VBD aux   2 - have.01 B-V -      -   -          -           had/Mv.<
68 2 said      + say       VERB  VBN ROOT  2 - say.01  -   B-V    -   -          state.v.01  said/Pd.sr:01:01.<pf:0123
68 3 someone   + someone   PRON  NN  nsubj 5 - -       -   B-ARG1 -   B-ARG0     person.n.01 someone/Ci..s
68 4 would     + would     AUX   MD  aux   5 - -       -   I-ARG1 B-V B-ARGM-MOD -           would/Mm.<
68 5 do        + do        VERB  VB  ccomp 2 - do.02   -   I-ARG1 -   B-V        make.v.01   do/P.so:01:01.-i:01234
68 6 something - something PRON  NN  dobj  5 - -       -   I-ARG1 -   B-ARG1     -           something/Ci..s
68 7 .         - .         PUNCT .   punct 2 - -       -   -      -   -          -           -

# sent_i = 69
# sent = He had said who would do what?
# hyperedge = ((had/Mv.< said/P?.sr:01:01.<pf:0123) he/Ci ((would/Mm.< do/P.so:01:01.-i:01234) who/Cw what/Cw))
# hyperedge builder = ((69.1/Mv.< 69.2/P?.sr:01:01.<pf:0123) 69.0/Ci ((69.4/Mm.< 69.5/P.so:01:01.-i:01234) 69.3/Cw 69.6/Cw))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
69 0 He    + he    PRON  PRP nsubj 2 - -       -   B-ARG0 -   -          -            he/Ci
69 1 had   + have  AUX   VBD aux   2 - have.01 B-V -      -   -          -            had/Mv.<
69 2 said  + say   VERB  VBN ROOT  2 - say.01  -   B-V    -   -          state.v.01   said/P?.sr:01:01.<pf:0123
69 3 who   + who   PRON  WP  nsubj 5 - -       -   B-ARG1 -   B-ARG0     -            who/Cw
69 4 would + would AUX   MD  aux   5 - -       -   I-ARG1 B-V B-ARGM-MOD -            would/Mm.<
69 5 do    + do    VERB  VB  ccomp 2 - do.02   -   I-ARG1 -   B-V        perform.v.01 do/P.so:01:01.-i:01234
69 6 what  - what  PRON  WP  dobj  5 - -       -   I-ARG1 -   B-ARG1     -            what/Cw
69 7 ?     - ?     PUNCT .   punct 2 - -       -   -      -   -          -            -

# sent_i = 70
# sent = Who had he said would do what?
# hyperedge = ((had/Mv.< said/P?.sr:01:01.<f:0123) he/Ci ((would/Mm.< do/P.so:-1:-1.-i:01234) who/Cw what/Cw))
# hyperedge builder = ((70.1/Mv.< 70.3/P?.sr:01:01.<f:0123) 70.2/Ci ((70.4/Mm.< 70.5/P.so:-1:-1.-i:01234) 70.0/Cw 70.6/Cw))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
70 0 Who   + who   PRON  WP  nsubj 5 - -       -   -      -   -          -            who/Cw
70 1 had   + have  AUX   VBD aux   3 - have.01 B-V -      -   -          -            had/Mv.<
70 2 he    + he    PRON  PRP nsubj 3 - -       -   B-ARG0 -   -          -            he/Ci
70 3 said  + say   VERB  VBD ROOT  3 - say.01  -   B-V    -   -          state.v.01   said/P?.sr:01:01.<f:0123
70 4 would + would AUX   MD  aux   5 - -       -   B-ARG1 B-V B-ARGM-MOD -            would/Mm.<
70 5 do    + do    VERB  VB  ccomp 3 - do.02   -   I-ARG1 -   B-V        perform.v.01 do/P.so:-1:-1.-i:01234
70 6 what  - what  PRON  WP  dobj  5 - -       -   I-ARG1 -   B-ARG1     -            what/Cw
70 7 ?     - ?     PUNCT .   punct 3 - -       -   -      -   -          -            -

# sent_i = 71
# sent = It was alleged that he lied under oath.
# hyperedge = ((was/Mv.< alleged/Pd.pr:-1:-1.<pf:0123) it/Ci (that/T (lied/P.sx:0m:0m.<f:0123 he/Ci (under/T oath/Cc..s))))
# hyperedge builder = ((71.1/Mv.< 71.2/Pd.pr:-1:-1.<pf:0123) 71.0/Ci (71.3/T (71.5/P.sx:0m:0m.<f:0123 71.4/Ci (71.6/T 71.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
71 0 It      + it     PRON  PRP nsubjpass 2 - -         -   -      -          -           it/Ci
71 1 was     + be     AUX   VBD auxpass   2 - be.03     B-V -      -          -           was/Mv.<
71 2 alleged + allege VERB  VBN ROOT      2 - allege.01 -   B-V    -          allege.v.01 alleged/Pd.pr:-1:-1.<pf:0123
71 3 that    + that   SCONJ IN  mark      5 - -         -   B-ARG1 -          -           that/T
71 4 he      + he     PRON  PRP nsubj     5 - -         -   I-ARG1 B-ARG0     -           he/Ci
71 5 lied    + lie    VERB  VBD ccomp     2 - lie.08    -   I-ARG1 B-V        lie.v.05    lied/P.sx:0m:0m.<f:0123
71 6 under   + under  ADP   IN  prep      5 - -         -   I-ARG1 B-ARGM-MNR -           under/T
71 7 oath    - oath   NOUN  NN  pobj      6 - -         -   I-ARG1 I-ARGM-MNR oath.n.02   oath/Cc..s
71 8 .       - .      PUNCT .   punct     2 - -         -   -      -          -           -

# sent_i = 72
# sent = The chairman has resigned from the board and the company.
# hyperedge = ((has/Mv.< resigned/Pd.sx:01:01.<pf:01) (the/Md.< chairman/Cc..s) (from/T (and/J (the/Md.< board/Cc..s) (the/Md.< company/Cc..s))))
# hyperedge builder = ((72.2/Mv.< 72.3/Pd.sx:01:01.<pf:01) (72.0/Md.< 72.1/Cc..s) (72.4/T (72.7/J (72.5/Md.< 72.6/Cc..s) (72.8/Md.< 72.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
72 0  The      + the      DET   DT  det   1 - -         -   B-ARG0 -              the/Md.<
72 1  chairman + chairman NOUN  NN  nsubj 3 - -         -   I-ARG0 president.n.04 chairman/Cc..s
72 2  has      + have     AUX   VBZ aux   3 - have.01   B-V -      -              has/Mv.<
72 3  resigned + resign   VERB  VBN ROOT  3 - resign.01 -   B-V    vacate.v.01    resigned/Pd.sx:01:01.<pf:01
72 4  from     + from     ADP   IN  prep  3 - -         -   B-ARG1 -              from/T
72 5  the      + the      DET   DT  det   6 - -         -   I-ARG1 -              the/Md.<
72 6  board    + board    NOUN  NN  pobj  4 - -         -   I-ARG1 board.n.01     board/Cc..s
72 7  and      + and      CCONJ CC  cc    6 - -         -   I-ARG1 -              and/J
72 8  the      + the      DET   DT  det   9 - -         -   I-ARG1 -              the/Md.<
72 9  company  - company  NOUN  NN  conj  6 - -         -   I-ARG1 company.n.01   company/Cc..s
72 10 .        - .        PUNCT .   punct 3 - -         -   -      -              -

# sent_i = 73
# sent = The chairman has resigned from the board and from the company.
# hyperedge = ((has/Mv.< resigned/Pd.sx:01:01.<pf:01) (the/Md.< chairman/Cc..s) (and/J (from/T (the/Md.< board/Cc..s)) (from/T (the/Md.< company/Cc..s))))
# hyperedge builder = ((73.2/Mv.< 73.3/Pd.sx:01:01.<pf:01) (73.0/Md.< 73.1/Cc..s) (73.7/J (73.4/T (73.5/Md.< 73.6/Cc..s)) (73.8/T (73.9/Md.< 73.10/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
73 0  The      + the      DET   DT  det   1  - -         -   B-ARG0 -              the/Md.<
73 1  chairman + chairman NOUN  NN  nsubj 3  - -         -   I-ARG0 president.n.04 chairman/Cc..s
73 2  has      + have     AUX   VBZ aux   3  - have.01   B-V -      -              has/Mv.<
73 3  resigned + resign   VERB  VBN ROOT  3  - resign.01 -   B-V    vacate.v.01    resigned/Pd.sx:01:01.<pf:01
73 4  from     + from     ADP   IN  prep  3  - -         -   B-ARG1 -              from/T
73 5  the      + the      DET   DT  det   6  - -         -   I-ARG1 -              the/Md.<
73 6  board    + board    NOUN  NN  pobj  4  - -         -   I-ARG1 board.n.01     board/Cc..s
73 7  and      + and      CCONJ CC  cc    4  - -         -   I-ARG1 -              and/J
73 8  from     + from     ADP   IN  conj  4  - -         -   I-ARG1 -              from/T
73 9  the      + the      DET   DT  det   10 - -         -   I-ARG1 -              the/Md.<
73 10 company  - company  NOUN  NN  pobj  8  - -         -   I-ARG1 company.n.01   company/Cc..s
73 11 .        - .        PUNCT .   punct 3  - -         -   -      -              -

# sent_i = 74
# sent = The chairman has resigned from the board and gone abroad.
# hyperedge = (and/J ((has/Mv.< resigned/Pd.sx:01:01.<pf:01) (the/Md.< chairman/Cc..s) (from/T (the/Md.< board/Cc..s))) (gone/Pd.-?:04:0g.<pf:1234 (the/Md.< chairman/Cc..s) abroad/M))
# hyperedge builder = (74.7/J ((74.2/Mv.< 74.3/Pd.sx:01:01.<pf:01) (74.0/Md.< 74.1/Cc..s) (74.4/T (74.5/Md.< 74.6/Cc..s))) (74.8/Pd.-?:04:0g.<pf:1234 (74.0/Md.< 74.1/Cc..s) 74.9/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
74 0  The      + the      DET   DT  det    1 - -         -   B-ARG0 B-ARG0 -              the/Md.<
74 1  chairman + chairman NOUN  NN  nsubj  3 - -         -   I-ARG0 I-ARG0 president.n.04 chairman/Cc..s
74 2  has      + have     AUX   VBZ aux    3 - have.01   B-V -      -      -              has/Mv.<
74 3  resigned + resign   VERB  VBN ROOT   3 - resign.01 -   B-V    -      vacate.v.01    resigned/Pd.sx:01:01.<pf:01
74 4  from     + from     ADP   IN  prep   3 - -         -   B-ARG1 -      -              from/T
74 5  the      + the      DET   DT  det    6 - -         -   I-ARG1 -      -              the/Md.<
74 6  board    + board    NOUN  NN  pobj   4 - -         -   I-ARG1 -      board.n.01     board/Cc..s
74 7  and      + and      CCONJ CC  cc     3 - -         -   -      -      -              and/J
74 8  gone     + go       VERB  VBN conj   3 - go.01     -   -      B-V    travel.v.01    gone/Pd.-?:04:0g.<pf:1234
74 9  abroad   - abroad   ADV   RB  advmod 8 - -         -   -      B-ARG4 abroad.r.01    abroad/M
74 10 .        - .        PUNCT .   punct  3 - -         -   -      -      -              -

# sent_i = 75
# sent = The chairman has resigned from the board and is living in Utopia.
# hyperedge = (and/J ((has/Mv.< resigned/Pd.sx:01:01.<pf:01) (the/Md.< chairman/Cc..s) (from/T (the/Md.< board/Cc..s))) ((is/Mv.< living/P.-x:0l:0l.|pg:01) (the/Md.< chairman/Cc..s) (in/Tl utopia/Cp..s.l)))
# hyperedge builder = (75.7/J ((75.2/Mv.< 75.3/Pd.sx:01:01.<pf:01) (75.0/Md.< 75.1/Cc..s) (75.4/T (75.5/Md.< 75.6/Cc..s))) ((75.8/Mv.< 75.9/P.-x:0l:0l.|pg:01) (75.0/Md.< 75.1/Cc..s) (75.10/Tl 75.11/Cp..s.l)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
75 0  The      + the      DET   DT  det   1  -     -         -   B-ARG0 -   B-ARG0     -              the/Md.<
75 1  chairman + chairman NOUN  NN  nsubj 3  -     -         -   I-ARG0 -   I-ARG0     president.n.04 chairman/Cc..s
75 2  has      + have     AUX   VBZ aux   3  -     have.01   B-V -      -   -          -              has/Mv.<
75 3  resigned + resign   VERB  VBN ROOT  3  -     resign.01 -   B-V    -   -          vacate.v.01    resigned/Pd.sx:01:01.<pf:01
75 4  from     + from     ADP   IN  prep  3  -     -         -   B-ARG1 -   -          -              from/T
75 5  the      + the      DET   DT  det   6  -     -         -   I-ARG1 -   -          -              the/Md.<
75 6  board    + board    NOUN  NN  pobj  4  -     -         -   I-ARG1 -   -          board.n.01     board/Cc..s
75 7  and      + and      CCONJ CC  cc    3  -     -         -   -      -   -          -              and/J
75 8  is       + be       AUX   VBZ aux   9  -     be.03     -   -      B-V -          -              is/Mv.<
75 9  living   + live     VERB  VBG conj  3  -     live.01   -   -      -   B-V        populate.v.01  living/P.-x:0l:0l.|pg:01
75 10 in       + in       ADP   IN  prep  9  -     -         -   -      -   B-ARGM-LOC -              in/Tl
75 11 Utopia   - Utopia   PROPN NNP pobj  10 B-LOC -         -   -      -   I-ARGM-LOC utopia.n.02    utopia/Cp..s.l
75 12 .        - .        PUNCT .   punct 3  -     -         -   -      -   -          -              -

# sent_i = 76
# sent = The chairman has resigned from the board and the company has replaced him.
# hyperedge = (and/J ((has/Mv.< resigned/P.sx:01:01.<pf:01) (the/Md.< chairman/Cc..s) (from/T (the/Md.< board/Cc..s))) ((has/Mv.< replaced/P.so:01:01.<pf:012) (the/Md.< company/Cc..s) (+/Jc.rm.rc him/Ci (the/Md.< chairman/Cc..s))))
# hyperedge builder = (76.7/J ((76.2/Mv.< 76.3/P.sx:01:01.<pf:01) (76.0/Md.< 76.1/Cc..s) (76.4/T (76.5/Md.< 76.6/Cc..s))) ((76.10/Mv.< 76.11/P.so:01:01.<pf:012) (76.8/Md.< 76.9/Cc..s) (+/Jc.rm.rc 76.12/Ci (76.0/Md.< 76.1/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
76 0  The      + the      DET   DT  det   1  - -          -   B-ARG0 -   -      B-MAIN0 -              the/Md.<
76 1  chairman + chairman NOUN  NN  nsubj 3  - -          -   I-ARG0 -   -      I-MAIN0 president.n.04 chairman/Cc..s
76 2  has      + have     AUX   VBZ aux   3  - have.01    B-V -      -   -      -       -              has/Mv.<
76 3  resigned + resign   VERB  VBN ROOT  3  - resign.01  -   B-V    -   -      -       vacate.v.01    resigned/P.sx:01:01.<pf:01
76 4  from     + from     ADP   IN  prep  3  - -          -   B-ARG1 -   -      -       -              from/T
76 5  the      + the      DET   DT  det   6  - -          -   I-ARG1 -   -      -       -              the/Md.<
76 6  board    + board    NOUN  NN  pobj  4  - -          -   I-ARG1 -   -      -       board.n.01     board/Cc..s
76 7  and      + and      CCONJ CC  cc    3  - -          -   -      -   -      -       -              and/J
76 8  the      + the      DET   DT  det   9  - -          -   -      -   B-ARG0 -       -              the/Md.<
76 9  company  + company  NOUN  NN  nsubj 11 - -          -   -      -   I-ARG0 -       company.n.01   company/Cc..s
76 10 has      + have     AUX   VBZ aux   11 - have.01    -   -      B-V -      -       -              has/Mv.<
76 11 replaced + replace  VERB  VBN conj  3  - replace.01 -   -      -   B-V    -       replace.v.01   replaced/P.so:01:01.<pf:012
76 12 him      - he       PRON  PRP dobj  11 - -          -   -      -   B-ARG1 B-REF0  -              him/Ci
76 13 .        - .        PUNCT .   punct 11 - -          -   -      -   -      -       -              -

# sent_i = 77
# sent = The chairman has resigned from the board and he is living in Utopia.
# hyperedge = (and/J ((has/Mv.< resigned/P.sx:01:01.<pf:01) (the/Md.< chairman/Cc..s) (from/T (the/Md.< board/Cc..s))) ((is/Mv.< living/Pd.sx:0l:0l.|pg:01) (+/Jc.rm.rc he/Ci (the/Md.< chairman/Cc..s)) (in/Tl utopia/Cp..s.l)))
# hyperedge builder = (77.7/J ((77.2/Mv.< 77.3/P.sx:01:01.<pf:01) (77.0/Md.< 77.1/Cc..s) (77.4/T (77.5/Md.< 77.6/Cc..s))) ((77.9/Mv.< 77.10/Pd.sx:0l:0l.|pg:01) (+/Jc.rm.rc 77.8/Ci (77.0/Md.< 77.1/Cc..s)) (77.11/Tl 77.12/Cp..s.l)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
77 0  The      + the      DET   DT  det   1  -     -         -   B-ARG0 -   -          B-MAIN0 -              the/Md.<
77 1  chairman + chairman NOUN  NN  nsubj 3  -     -         -   I-ARG0 -   -          I-MAIN0 president.n.04 chairman/Cc..s
77 2  has      + have     AUX   VBZ aux   3  -     have.01   B-V -      -   -          -       -              has/Mv.<
77 3  resigned + resign   VERB  VBN ROOT  3  -     resign.01 -   B-V    -   -          -       vacate.v.01    resigned/P.sx:01:01.<pf:01
77 4  from     + from     ADP   IN  prep  3  -     -         -   B-ARG1 -   -          -       -              from/T
77 5  the      + the      DET   DT  det   6  -     -         -   I-ARG1 -   -          -       -              the/Md.<
77 6  board    + board    NOUN  NN  pobj  4  -     -         -   I-ARG1 -   -          -       board.n.01     board/Cc..s
77 7  and      + and      CCONJ CC  cc    3  -     -         -   -      -   -          -       -              and/J
77 8  he       + he       PRON  PRP nsubj 10 -     -         -   -      -   B-ARG0     B-REF0  -              he/Ci
77 9  is       + be       AUX   VBZ aux   10 -     be.03     -   -      B-V -          -       -              is/Mv.<
77 10 living   + live     VERB  VBG conj  3  -     live.01   -   -      -   B-V        -       populate.v.01  living/Pd.sx:0l:0l.|pg:01
77 11 in       + in       ADP   IN  prep  10 -     -         -   -      -   B-ARGM-LOC -       -              in/Tl
77 12 Utopia   - Utopia   PROPN NNP pobj  11 B-LOC -         -   -      -   I-ARGM-LOC -       utopia.n.02    utopia/Cp..s.l
77 13 .        - .        PUNCT .   punct 10 -     -         -   -      -   -          -       -              -

# sent_i = 78
# sent = The press say that the chairman has resigned from the board, and so he has.
# hyperedge = (say/Pd.sr:01:01.|f:0123 (the/Md.< press/Cc..s) (and/J (that/T ((has/Mv.< resigned/Pd.sx:01:01.<pf:01) (the/Md.< chairman/Cc..s) (from/T (the/Md.< board/Cc..s)))) (has/P.?s:--:--.|f--3s so/M (+/Jc.rm.rc he/Ci (the/Md.< chairman/Cc..s)))))
# hyperedge builder = (78.2/Pd.sr:01:01.|f:0123 (78.0/Md.< 78.1/Cc..s) (78.12/J (78.3/T ((78.6/Mv.< 78.7/Pd.sx:01:01.<pf:01) (78.4/Md.< 78.5/Cc..s) (78.8/T (78.9/Md.< 78.10/Cc..s)))) (78.15/P.?s:--:--.|f--3s 78.13/M (+/Jc.rm.rc 78.14/Ci (78.4/Md.< 78.5/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
78 0  The      + the      DET   DT  det    1  - -         B-ARG0 -   -      -   -       -              the/Md.<
78 1  press    + press    NOUN  NN  nsubj  2  - -         I-ARG0 -   -      -   -       press.n.02     press/Cc..s
78 2  say      + say      VERB  VBP ROOT   2  - say.01    B-V    -   -      -   -       allege.v.01    say/Pd.sr:01:01.|f:0123
78 3  that     + that     SCONJ IN  mark   7  - -         B-ARG1 -   -      -   -       -              that/T
78 4  the      + the      DET   DT  det    5  - -         I-ARG1 -   B-ARG0 -   B-MAIN0 -              the/Md.<
78 5  chairman + chairman NOUN  NN  nsubj  7  - -         I-ARG1 -   I-ARG0 -   I-MAIN0 president.n.04 chairman/Cc..s
78 6  has      + have     AUX   VBZ aux    7  - have.01   I-ARG1 B-V -      -   -       -              has/Mv.<
78 7  resigned + resign   VERB  VBN ccomp  2  - resign.01 I-ARG1 -   B-V    -   -       vacate.v.01    resigned/Pd.sx:01:01.<pf:01
78 8  from     + from     ADP   IN  prep   7  - -         I-ARG1 -   B-ARG1 -   -       -              from/T
78 9  the      + the      DET   DT  det    10 - -         I-ARG1 -   I-ARG1 -   -       -              the/Md.<
78 10 board    - board    NOUN  NN  pobj   8  - -         I-ARG1 -   I-ARG1 -   -       board.n.01     board/Cc..s
78 11 ,        + ,        PUNCT ,   punct  7  - -         I-ARG1 -   -      -   -       -              -
78 12 and      + and      CCONJ CC  cc     7  - -         I-ARG1 -   -      -   -       -              and/J
78 13 so       + so       ADV   RB  advmod 15 - -         I-ARG1 -   -      -   -       so.r.03        so/M
78 14 he       + he       PRON  PRP nsubj  15 - -         I-ARG1 -   -      -   B-REF0  -              he/Ci
78 15 has      - have     VERB  VBZ conj   7  - have.01   I-ARG1 -   -      B-V -       -              has/P.?s:--:--.|f--3s
78 16 .        - .        PUNCT .   punct  2  - -         -      -   -      -   -       -              -

# sent_i = 79
# sent = If the managing director says the chairman has resigned from the board, he must have done.
# hyperedge = ((must/Mm.< (have/Mv.< done/Pd.xs:r0:r0.<pf:01234)) (if/T (says/P.sr:01:01.|f--3s:0123 (the/Md.< (managing/Ma.< director/Cc..s)) ((has/Mv.< resigned/P.sx:01:01.<pf:01) (the/Md.< chairman/Cc..s) (from/T (the/Md.< board/Cc..s))))) (+/Jc.rm.rc he/Ci (the/Md.< chairman/Cc..s)))
# hyperedge builder = ((79.14/Mm.< (79.15/Mv.< 79.16/Pd.xs:r0:r0.<pf:01234)) (79.0/T (79.4/P.sr:01:01.|f--3s:0123 (79.1/Md.< (79.2/Ma.< 79.3/Cc..s)) ((79.7/Mv.< 79.8/P.sx:01:01.<pf:01) (79.5/Md.< 79.6/Cc..s) (79.9/T (79.10/Md.< 79.11/Cc..s))))) (+/Jc.rm.rc 79.13/Ci (79.5/Md.< 79.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 synset atoms
79 0  If       + if       SCONJ IN  mark  4  - -         -      -   -      -   -   B-ARGM-ADV -       -              if/T
79 1  the      + the      DET   DT  det   3  - -         B-ARG0 -   -      -   -   I-ARGM-ADV -       -              the/Md.<
79 2  managing + manage   VERB  VBG amod  3  - -         I-ARG0 -   -      -   -   I-ARGM-ADV -       director.n.01  managing/Ma.<
79 3  director + director NOUN  NN  nsubj 4  - -         I-ARG0 -   -      -   -   I-ARGM-ADV -       director.n.01  director/Cc..s
79 4  says     + say      VERB  VBZ advcl 16 - say.01    B-V    -   -      -   -   I-ARGM-ADV -       state.v.01     says/P.sr:01:01.|f--3s:0123
79 5  the      + the      DET   DT  det   6  - -         B-ARG1 -   B-ARG0 -   -   I-ARGM-ADV B-MAIN0 -              the/Md.<
79 6  chairman + chairman NOUN  NN  nsubj 8  - -         I-ARG1 -   I-ARG0 -   -   I-ARGM-ADV I-MAIN0 president.n.04 chairman/Cc..s
79 7  has      + have     AUX   VBZ aux   8  - have.01   I-ARG1 B-V -      -   -   I-ARGM-ADV -       -              has/Mv.<
79 8  resigned + resign   VERB  VBN ccomp 4  - resign.01 I-ARG1 -   B-V    -   -   I-ARGM-ADV -       vacate.v.01    resigned/P.sx:01:01.<pf:01
79 9  from     + from     ADP   IN  prep  8  - -         I-ARG1 -   B-ARG1 -   -   I-ARGM-ADV -       -              from/T
79 10 the      + the      DET   DT  det   11 - -         I-ARG1 -   I-ARG1 -   -   I-ARGM-ADV -       -              the/Md.<
79 11 board    - board    NOUN  NN  pobj  9  - -         I-ARG1 -   I-ARG1 -   -   I-ARGM-ADV -       board.n.01     board/Cc..s
79 12 ,        + ,        PUNCT ,   punct 16 - -         -      -   -      -   -   -          -       -              -
79 13 he       + he       PRON  PRP nsubj 16 - -         -      -   -      -   -   B-ARG0     B-REF0  -              he/Ci
79 14 must     + must     AUX   MD  aux   16 - -         -      -   -      B-V -   B-ARGM-MOD -       -              must/Mm.<
79 15 have     + have     AUX   VB  aux   16 - have.01   -      -   -      -   B-V -          -       -              have/Mv.<
79 16 done     - do       VERB  VBN ROOT  16 - do.02     -      -   -      -   -   B-V        -       do.v.03        done/Pd.xs:r0:r0.<pf:01234
79 17 .        - .        PUNCT .   punct 16 - -         -      -   -      -   -   -          -       -              -

# sent_i = 80
# sent = Nobody had expected that the FBA would assassinate the king of Ruritania.
# hyperedge = ((had/Mv.< expected/Pd.sr:01:01.<pf:01) nobody/Ci..s (that/T ((would/Mm.< assassinate/P.so:01:01.-i:01) (the/Md.< fba/Cp..s.o) (of/Br (the/Md.< king/Cc..s) ruritania/Cp..s.g))))
# hyperedge builder = ((80.1/Mv.< 80.2/Pd.sr:01:01.<pf:01) 80.0/Ci..s (80.3/T ((80.6/Mm.< 80.7/P.so:01:01.-i:01) (80.4/Md.< 80.5/Cp..s.o) (80.10/Br (80.8/Md.< 80.9/Cc..s) 80.11/Cp..s.g))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
80 0  Nobody      + nobody      PRON  NN  nsubj 2  -     -              -   B-ARG0 -   -          -                nobody/Ci..s
80 1  had         + have        AUX   VBD aux   2  -     have.01        B-V -      -   -          -                had/Mv.<
80 2  expected    + expect      VERB  VBN ROOT  2  -     expect.01      -   B-V    -   -          expect.v.01      expected/Pd.sr:01:01.<pf:01
80 3  that        + that        SCONJ IN  mark  7  -     -              -   B-ARG1 -   -          -                that/T
80 4  the         + the         DET   DT  det   5  -     -              -   I-ARG1 -   B-ARG0     -                the/Md.<
80 5  FBA         + FBA         PROPN NNP nsubj 7  B-ORG -              -   I-ARG1 -   I-ARG0     -                fba/Cp..s.o
80 6  would       + would       AUX   MD  aux   7  -     -              -   I-ARG1 B-V B-ARGM-MOD -                would/Mm.<
80 7  assassinate + assassinate VERB  VB  ccomp 2  -     assassinate.01 -   I-ARG1 -   B-V        assassinate.v.01 assassinate/P.so:01:01.-i:01
80 8  the         + the         DET   DT  det   9  -     -              -   I-ARG1 -   B-ARG1     -                the/Md.<
80 9  king        + king        NOUN  NN  dobj  7  -     -              -   I-ARG1 -   I-ARG1     king.n.01        king/Cc..s
80 10 of          + of          ADP   IN  prep  9  -     -              -   I-ARG1 -   I-ARG1     -                of/Br
80 11 Ruritania   - Ruritania   PROPN NNP pobj  10 B-GPE -              -   I-ARG1 -   I-ARG1     ruritania.n.01   ruritania/Cp..s.g
80 12 .           - .           PUNCT .   punct 2  -     -              -   -      -   -          -                -

# sent_i = 81
# sent = The king of Ruritania, nobody had expected that the FBA would assassinate.
# hyperedge = ((had/Mv.< expected/Pd.sr:01:01.<pf:01) nobody/Ci..s (that/T ((would/Mm.< assassinate/P.os:10:10.-i:01) (of/Br (the/Md.< king/Cc..s) ruritania/Cp..s.g) (the/Md.< fba/Cp..s.o))))
# hyperedge builder = ((81.6/Mv.< 81.7/Pd.sr:01:01.<pf:01) 81.5/Ci..s (81.8/T ((81.11/Mm.< 81.12/P.os:10:10.-i:01) (81.2/Br (81.0/Md.< 81.1/Cc..s) 81.3/Cp..s.g) (81.9/Md.< 81.10/Cp..s.o))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
81 0  The         + the         DET   DT  det   1  -     -              -   -      -   B-ARG1     -                the/Md.<
81 1  king        + king        NOUN  NN  dobj  12 -     -              -   -      -   I-ARG1     king.n.01        king/Cc..s
81 2  of          + of          ADP   IN  prep  1  -     -              -   -      -   I-ARG1     -                of/Br
81 3  Ruritania   - Ruritania   PROPN NNP pobj  2  B-GPE -              -   -      -   I-ARG1     ruritania.n.01   ruritania/Cp..s.g
81 4  ,           + ,           PUNCT ,   punct 7  -     -              -   -      -   -          -                -
81 5  nobody      + nobody      PRON  NN  nsubj 7  -     -              -   B-ARG0 -   -          -                nobody/Ci..s
81 6  had         + have        AUX   VBD aux   7  -     have.01        B-V -      -   -          -                had/Mv.<
81 7  expected    + expect      VERB  VBN ROOT  7  -     expect.01      -   B-V    -   -          expect.v.01      expected/Pd.sr:01:01.<pf:01
81 8  that        + that        SCONJ IN  mark  12 -     -              -   B-ARG1 -   -          -                that/T
81 9  the         + the         DET   DT  det   10 -     -              -   I-ARG1 -   B-ARG0     -                the/Md.<
81 10 FBA         + FBA         PROPN NNP nsubj 12 B-ORG -              -   I-ARG1 -   I-ARG0     -                fba/Cp..s.o
81 11 would       + would       AUX   MD  aux   12 -     -              -   I-ARG1 B-V B-ARGM-MOD -                would/Mm.<
81 12 assassinate - assassinate VERB  VB  ccomp 7  -     assassinate.01 -   I-ARG1 -   B-V        assassinate.v.01 assassinate/P.os:10:10.-i:01
81 13 .           - .           PUNCT .   punct 7  -     -              -   -      -   -          -                -

# sent_i = 82
# sent = That the FBA would assassinate the king of Ruritania, nobody had expected.
# hyperedge = ((had/Mv.< expected/Pd.xs:10:10.<pf:01) (that/T ((would/Mm.< assassinate/P.so:01:01.-i:01) (the/Md.< fba/Cp..s.o) (of/Br (the/Md.< king/Cc..s) ruritania/Cp..s.g))) nobody/Ci..s)
# hyperedge builder = ((82.11/Mv.< 82.12/Pd.xs:10:10.<pf:01) (82.0/T ((82.3/Mm.< 82.4/P.so:01:01.-i:01) (82.1/Md.< 82.2/Cp..s.o) (82.7/Br (82.5/Md.< 82.6/Cc..s) 82.8/Cp..s.g))) 82.10/Ci..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
82 0  That        + that        SCONJ IN  mark  4  -     -              -      -          -   B-ARG1 -                that/T
82 1  the         + the         DET   DT  det   2  -     -              B-ARG0 B-ARG0     -   I-ARG1 -                the/Md.<
82 2  FBA         + FBA         PROPN NNP nsubj 4  B-ORG -              I-ARG0 I-ARG0     -   I-ARG1 -                fba/Cp..s.o
82 3  would       + would       AUX   MD  aux   4  -     -              B-V    B-ARGM-MOD -   I-ARG1 -                would/Mm.<
82 4  assassinate + assassinate VERB  VB  advcl 12 -     assassinate.01 B-ARG1 B-V        -   I-ARG1 assassinate.v.01 assassinate/P.so:01:01.-i:01
82 5  the         + the         DET   DT  det   6  -     -              I-ARG1 B-ARG1     -   I-ARG1 -                the/Md.<
82 6  king        + king        NOUN  NN  dobj  4  -     -              I-ARG1 I-ARG1     -   I-ARG1 king.n.01        king/Cc..s
82 7  of          + of          ADP   IN  prep  6  -     -              I-ARG1 I-ARG1     -   I-ARG1 -                of/Br
82 8  Ruritania   - Ruritania   PROPN NNP pobj  7  B-GPE -              I-ARG1 I-ARG1     -   I-ARG1 ruritania.n.01   ruritania/Cp..s.g
82 9  ,           + ,           PUNCT ,   punct 12 -     -              -      -          -   -      -                -
82 10 nobody      + nobody      PRON  NN  nsubj 12 -     -              -      -          -   B-ARG0 -                nobody/Ci..s
82 11 had         + have        AUX   VBD aux   12 -     have.01        -      -          B-V -      -                had/Mv.<
82 12 expected    - expect      VERB  VBN ROOT  12 -     expect.01      -      -          -   B-V    expect.v.01      expected/Pd.xs:10:10.<pf:01
82 13 .           - .           PUNCT .   punct 12 -     -              -      -          -   -      -                -

# sent_i = 83
# sent = The man who came to dinner stayed for several months.
# hyperedge = (stayed/Pd.sx:1t:1t.<f:123 (+/Jr.ma (the/Md.< man/Cc..s) (came/P.-sx:114:11g.<f:1234 (the/Md.< man/Cc..s) who/Cw (to/T dinner/Cc..s))) (for/Tt (several/Ma.<..d months/Cc..p.d)))
# hyperedge builder = (83.6/Pd.sx:1t:1t.<f:123 (+/Jr.ma (83.0/Md.< 83.1/Cc..s) (83.3/P.-sx:114:11g.<f:1234 (83.0/Md.< 83.1/Cc..s) 83.2/Cw (83.4/T 83.5/Cc..s))) (83.7/Tt (83.8/Ma.<..d 83.9/Cc..p.d)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
83 0  The     + the     DET   DT  det   1 -      -       B-ARG1   B-ARG1     -            the/Md.<
83 1  man     + man     NOUN  NN  nsubj 6 -      -       I-ARG1   I-ARG1     man.n.01     man/Cc..s
83 2  who     + who     PRON  WP  nsubj 3 -      -       B-R-ARG1 I-ARG1     -            who/Cw
83 3  came    + come    VERB  VBD relcl 1 -      come.01 B-V      I-ARG1     come.v.01    came/P.-sx:114:11g.<f:1234
83 4  to      + to      ADP   IN  prep  3 -      -       B-ARG4   I-ARG1     -            to/T
83 5  dinner  + dinner  NOUN  NN  pobj  4 -      -       I-ARG4   I-ARG1     dinner.n.01  dinner/Cc..s
83 6  stayed  + stay    VERB  VBD ROOT  6 -      stay.01 -        B-V        bide.v.01    stayed/Pd.sx:1t:1t.<f:123
83 7  for     + for     ADP   IN  prep  6 -      -       -        B-ARGM-TMP -            for/Tt
83 8  several + several ADJ   JJ  amod  9 B-DATE -       -        I-ARGM-TMP several.s.01 several/Ma.<..d
83 9  months  - month   NOUN  NNS pobj  7 I-DATE -       -        I-ARGM-TMP month.n.02   months/Cc..p.d
83 10 .       - .       PUNCT .   punct 6 -      -       -        -          -            -

# sent_i = 84
# sent = He gave me his solemn promise, which he promptly broke.
# hyperedge = (gave/Pd.sio:021:0g1.<f:012 he/Ci me/Ci (+/Jr.ma ((+/Jc.rm.rr his/Mp he/Ci) (solemn/Ma.< promise/Cc..s)) (broke/P.-os?:110t:110t.<f:012 ((+/Jc.rm.rr his/Mp he/Ci) (solemn/Ma.< promise/Cc..s)) which/Cd he/Ci promptly/M)))
# hyperedge builder = (84.1/Pd.sio:021:0g1.<f:012 84.0/Ci 84.2/Ci (+/Jr.ma ((+/Jc.rm.rr 84.3/Mp 84.0/Ci) (84.4/Ma.< 84.5/Cc..s)) (84.10/P.-os?:110t:110t.<f:012 ((+/Jc.rm.rr 84.3/Mp 84.0/Ci) (84.4/Ma.< 84.5/Cc..s)) 84.7/Cd 84.8/Ci 84.9/M)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
84 0  He       + he       PRON  PRP  nsubj  1  - -        B-ARG0 -          B-MAIN0 -               he/Ci
84 1  gave     + give     VERB  VBD  ROOT   1  - give.01  B-V    -          -       give.v.05       gave/Pd.sio:021:0g1.<f:012
84 2  me       + I        PRON  PRP  dative 1  - -        B-ARG2 -          -       -               me/Ci
84 3  his      + his      PRON  PRP$ poss   5  - -        B-ARG1 B-ARG1     B-REF0  -               his/Mp
84 4  solemn   + solemn   ADJ   JJ   amod   5  - -        I-ARG1 I-ARG1     -       grave.s.01      solemn/Ma.<
84 5  promise  - promise  NOUN  NN   dobj   1  - -        I-ARG1 I-ARG1     -       promise.n.01    promise/Cc..s
84 6  ,        + ,        PUNCT ,    punct  5  - -        I-ARG1 -          -       -               -
84 7  which    + which    DET   WDT  dobj   10 - -        I-ARG1 B-R-ARG1   -       -               which/Cd
84 8  he       + he       PRON  PRP  nsubj  10 - -        I-ARG1 B-ARG0     B-REF0  -               he/Ci
84 9  promptly + promptly ADV   RB   advmod 10 - -        I-ARG1 B-ARGM-TMP -       promptly.r.03   promptly/M
84 10 broke    - break    VERB  VBD  relcl  5  - break.18 I-ARG1 B-V        -       transgress.v.01 broke/P.-os?:110t:110t.<f:012
84 11 .        - .        PUNCT .    punct  1  - -        -      -          -       -               -

# sent_i = 85
# sent = If you need me for anything, press the white button.
# hyperedge = (press/Pd.xo:r1:r1.-i:012 (if/T (need/P.sox:01i:01i.|f:01 you/Ci me/Ci (for/T anything/Ci..s))) (the/Md.< (white/Ma.< button/Cc..s)))
# hyperedge builder = (85.7/Pd.xo:r1:r1.-i:012 (85.0/T (85.2/P.sox:01i:01i.|f:01 85.1/Ci 85.3/Ci (85.4/T 85.5/Ci..s))) (85.8/Md.< (85.9/Ma.< 85.10/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
85 0  If       + if       SCONJ IN  mark  2  - -        -          B-ARGM-ADV -                if/T
85 1  you      + you      PRON  PRP nsubj 2  - -        B-ARG0     I-ARGM-ADV -                you/Ci
85 2  need     + need     VERB  VBP advcl 7  - need.01  B-V        I-ARGM-ADV want.v.02        need/P.sox:01i:01i.|f:01
85 3  me       + I        PRON  PRP dobj  2  - -        B-ARG1     I-ARGM-ADV -                me/Ci
85 4  for      + for      ADP   IN  prep  2  - -        B-ARGM-PRP I-ARGM-ADV -                for/T
85 5  anything - anything PRON  NN  pobj  4  - -        I-ARGM-PRP I-ARGM-ADV -                anything/Ci..s
85 6  ,        + ,        PUNCT ,   punct 7  - -        -          -          -                -
85 7  press    + press    VERB  VB  ROOT  7  - press.01 -          B-V        press.v.01       press/Pd.xo:r1:r1.-i:012
85 8  the      + the      DET   DT  det   10 - -        -          B-ARG1     -                the/Md.<
85 9  white    + white    ADJ   JJ  amod  10 - -        -          I-ARG1     white.a.01       white/Ma.<
85 10 button   - button   NOUN  NN  dobj  7  - -        -          I-ARG1     push_button.n.01 button/Cc..s
85 11 .        - .        PUNCT .   punct 7  - -        -          -          -                -

# sent_i = 86
# sent = I'll join you after I've changed my clothes.
# hyperedge = (('ll/Mm.< join/Pd.sox:01t:01t.-i:012) i/Ci you/Ci (after/T (('ve/Mv.< changed/P.so:01:01.<pf:0123) i/Ci ((+/Jc.rm.rr my/Mp i/Ci) clothes/Cc..p))))
# hyperedge builder = ((86.1/Mm.< 86.2/Pd.sox:01t:01t.-i:012) 86.0/Ci 86.3/Ci (86.4/T ((86.6/Mv.< 86.7/P.so:01:01.<pf:0123) 86.5/Ci ((+/Jc.rm.rr 86.8/Mp 86.0/Ci) 86.9/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
86 0  I       - I      PRON  PRP  nsubj 2 - -         -   B-ARG0     -   -      B-MAIN0 -                 i/Ci
86 1  'll     + will   AUX   MD   aux   2 - -         B-V B-ARGM-MOD -   -      -       -                 'll/Mm.<
86 2  join    + join   VERB  VB   ROOT  2 - join.04   -   B-V        -   -      -       join.v.03         join/Pd.sox:01t:01t.-i:012
86 3  you     + you    PRON  PRP  dobj  2 - -         -   B-ARG1     -   -      -       -                 you/Ci
86 4  after   + after  ADP   IN   mark  7 - -         -   B-ARGM-TMP -   -      -       subsequently.r.01 after/T
86 5  I       - I      PRON  PRP  nsubj 7 - -         -   I-ARGM-TMP -   B-ARG0 B-REF0  -                 i/Ci
86 6  've     + have   AUX   VB   aux   7 - have.01   -   I-ARGM-TMP B-V -      -       -                 've/Mv.<
86 7  changed + change VERB  VBN  advcl 2 - change.01 -   I-ARGM-TMP -   B-V    -       change.v.05       changed/P.so:01:01.<pf:0123
86 8  my      + my     PRON  PRP$ poss  9 - -         -   I-ARGM-TMP -   B-ARG1 B-REF0  -                 my/Mp
86 9  clothes - clothe NOUN  NNS  dobj  7 - -         -   I-ARGM-TMP -   I-ARG1 -       apparel.n.01      clothes/Cc..p
86 10 .       - .      PUNCT .    punct 2 - -         -   -          -   -      -       -                 -

# sent_i = 87
# sent = He wonders why we don't follow his plan.
# hyperedge = (wonders/Pd.sr:01:10.|f--3s:01 he/Ci ((do/Mv.< (n't/Mn.< follow/P.?so:c01:c01.-i:012)) why/Mw we/Ci ((+/Jc.rm.rr his/Mp he/Ci) plan/Cc..s)))
# hyperedge builder = (87.1/Pd.sr:01:10.|f--3s:01 87.0/Ci ((87.4/Mv.< (87.5/Mn.< 87.6/P.?so:c01:c01.-i:012)) 87.2/Mw 87.3/Ci ((+/Jc.rm.rr 87.7/Mp 87.0/Ci) 87.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
87 0 He      + he     PRON  PRP  nsubj  1 - -         B-ARG0 -   -          B-MAIN0 -           he/Ci
87 1 wonders + wonder VERB  VBZ  ROOT   1 - wonder.01 B-V    -   -          -       wonder.v.01 wonders/Pd.sr:01:10.|f--3s:01
87 2 why     + why    ADV   WRB  advmod 6 - -         B-ARG1 -   B-ARGM-CAU -       -           why/Mw
87 3 we      + we     PRON  PRP  nsubj  6 - -         I-ARG1 -   B-ARG0     -       -           we/Ci
87 4 do      - do     AUX   VBP  aux    6 - do.01     I-ARG1 B-V -          -       -           do/Mv.<
87 5 n't     + not    PART  RB   neg    6 - -         I-ARG1 -   B-ARGM-NEG -       -           n't/Mn.<
87 6 follow  + follow VERB  VB   ccomp  1 - follow.02 I-ARG1 -   B-V        -       adopt.v.01  follow/P.?so:c01:c01.-i:012
87 7 his     + his    PRON  PRP$ poss   8 - -         I-ARG1 -   B-ARG1     B-REF0  -           his/Mp
87 8 plan    - plan   NOUN  NN   dobj   6 - -         I-ARG1 -   I-ARG1     -       plan.n.01   plan/Cc..s
87 9 .       - .      PUNCT .    punct  1 - -         -      -   -          -       -           -

# sent_i = 88
# sent = I knew what you meant when you said it.
# hyperedge = (knew/Pd.sr:01:01.<f:012 i/Ci (meant/P.osx:10t:m0t.<f:0123 what/Cw you/Ci (said/P.?so:t01:t01.<f:0123 when/Mw you/Ci it/Ci)))
# hyperedge builder = (88.1/Pd.sr:01:01.<f:012 88.0/Ci (88.4/P.osx:10t:m0t.<f:0123 88.2/Cw 88.3/Ci (88.7/P.?so:t01:t01.<f:0123 88.5/Mw 88.6/Ci 88.8/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
88 0 I     + I    PRON  PRP nsubj  1 - -       B-ARG0 -          -          -       -          i/Ci
88 1 knew  + know VERB  VBD ROOT   1 - know.01 B-V    -          -          -       know.v.01  knew/Pd.sr:01:01.<f:012
88 2 what  + what PRON  WP  dobj   4 - -       B-ARG1 B-ARG1     -          -       -          what/Cw
88 3 you   + you  PRON  PRP nsubj  4 - -       I-ARG1 B-ARG0     -          B-MAIN0 -          you/Ci
88 4 meant + mean VERB  VBD ccomp  1 - mean.01 I-ARG1 B-V        -          -       mean.v.01  meant/P.osx:10t:m0t.<f:0123
88 5 when  + when ADV   WRB advmod 7 - -       I-ARG1 B-ARGM-TMP B-ARGM-TMP -       -          when/Mw
88 6 you   + you  PRON  PRP nsubj  7 - -       I-ARG1 I-ARGM-TMP B-ARG0     B-REF0  -          you/Ci
88 7 said  + say  VERB  VBD advcl  4 - say.01  I-ARG1 I-ARGM-TMP B-V        -       state.v.01 said/P.?so:t01:t01.<f:0123
88 8 it    - it   PRON  PRP dobj   7 - -       I-ARG1 I-ARGM-TMP B-ARG1     -       -          it/Ci
88 9 .     - .    PUNCT .   punct  1 - -       -      -          -          -       -          -

# sent_i = 89
# sent = I feel tired if I stay up, but I can't sleep if I go to bed.
# hyperedge = (but/J (feel/Pd.scx:01r:11r.|f:012 i/Ci tired/Ca (if/T ((up/Ml.r.> stay/P.s:1:1.|f:123) i/Ci))) ((ca/Mm.< (n't/Mn.< sleep/Pd.sx:0r:0r.-i:012)) i/Ci (if/T (go/P.sx:04:1g.|f:0134 i/Ci (to/T bed/Cc..s)))))
# hyperedge builder = (89.8/J (89.1/Pd.scx:01r:11r.|f:012 89.0/Ci 89.2/Ca (89.3/T ((89.6/Ml.r.> 89.5/P.s:1:1.|f:123) 89.4/Ci))) ((89.10/Mm.< (89.11/Mn.< 89.12/Pd.sx:0r:0r.-i:012)) 89.9/Ci (89.13/T (89.15/P.sx:04:1g.|f:0134 89.14/Ci (89.16/T 89.17/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
89 0  I     + I     PRON  PRP nsubj 1  - -        B-ARG0     -      -   -          -      B-MAIN0 -              i/Ci
89 1  feel  + feel  VERB  VBP ROOT  1  - feel.01  B-V        -      -   -          -      -       feel.v.04      feel/Pd.scx:01r:11r.|f:012
89 2  tired + tired ADJ   JJ  acomp 1  - -        B-ARG1     -      -   -          -      -       tired.a.01     tired/Ca
89 3  if    + if    SCONJ IN  mark  5  - -        B-ARGM-ADV -      -   -          -      -       -              if/T
89 4  I     + I     PRON  PRP nsubj 5  - -        I-ARGM-ADV B-ARG1 -   -          -      B-REF0  -              i/Ci
89 5  stay  + stay  VERB  VBP advcl 1  - stay.01  I-ARGM-ADV B-V    -   -          -      -       stay_up.v.01   stay/P.s:1:1.|f:123
89 6  up    - up    ADP   RP  prt   5  - -        I-ARGM-ADV B-ARG3 -   -          -      -       stay_up.v.01   up/Ml.r.>
89 7  ,     + ,     PUNCT ,   punct 1  - -        -          -      -   -          -      -       -              -
89 8  but   + but   CCONJ CC  cc    1  - -        -          -      -   -          -      -       -              but/J
89 9  I     + I     PRON  PRP nsubj 12 - -        -          -      -   B-ARG0     -      B-REF0  -              i/Ci
89 10 ca    - can   AUX   MD  aux   12 - -        -          -      B-V B-ARGM-MOD -      -       -              ca/Mm.<
89 11 n't   + not   PART  RB  neg   12 - -        -          -      -   B-ARGM-NEG -      -       -              n't/Mn.<
89 12 sleep + sleep VERB  VB  conj  1  - sleep.01 -          -      -   B-V        -      -       sleep.v.01     sleep/Pd.sx:0r:0r.-i:012
89 13 if    + if    SCONJ IN  mark  15 - -        -          -      -   B-ARGM-ADV -      -       -              if/T
89 14 I     + I     PRON  PRP nsubj 15 - -        -          -      -   I-ARGM-ADV B-ARG0 B-REF0  -              i/Ci
89 15 go    + go    VERB  VBP advcl 12 - go.02    -          -      -   I-ARGM-ADV B-V    -       go_to_bed.v.01 go/P.sx:04:1g.|f:0134
89 16 to    + to    ADP   IN  prep  15 - -        -          -      -   I-ARGM-ADV B-ARG4 -       go_to_bed.v.01 to/T
89 17 bed   - bed   NOUN  NN  pobj  16 - -        -          -      -   I-ARGM-ADV I-ARG4 -       go_to_bed.v.01 bed/Cc..s
89 18 .     - .     PUNCT .   punct 12 - -        -          -      -   -          -      -       -              -

# sent_i = 90
# sent = George knew that Amy was very ill and wouldn't live much longer.
# hyperedge = (knew/Pd.sr:01:01.<f:012 george/Cp..s.p (and/J (that/T (was/P.sc:12:1h.<f:12 amy/Cp..s.p (very/M.< ill/Ca))) ((would/Mm.< (n't/Mn.< live/P.-?:0t:0t.-i:01)) amy/Cp..s.p (much/M.< longer/M=))))
# hyperedge builder = (90.1/Pd.sr:01:01.<f:012 90.0/Cp..s.p (90.7/J (90.2/T (90.4/P.sc:12:1h.<f:12 90.3/Cp..s.p (90.5/M.< 90.6/Ca))) ((90.8/Mm.< (90.9/Mn.< 90.10/P.-?:0t:0t.-i:01)) 90.3/Cp..s.p (90.11/M.< 90.12/M=))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
90 0  George + George PROPN NNP nsubj  1  B-PERSON -       B-ARG0 -      -   -          -           george/Cp..s.p
90 1  knew   + know   VERB  VBD ROOT   1  -        know.01 B-V    -      -   -          know.v.01   knew/Pd.sr:01:01.<f:012
90 2  that   + that   SCONJ IN  mark   4  -        -       B-ARG1 -      -   -          -           that/T
90 3  Amy    + Amy    PROPN NNP nsubj  4  B-PERSON -       I-ARG1 B-ARG1 -   B-ARG0     -           amy/Cp..s.p
90 4  was    + be     AUX   VBD ccomp  1  -        be.01   I-ARG1 B-V    -   -          be.v.01     was/P.sc:12:1h.<f:12
90 5  very   + very   ADV   RB  advmod 6  -        -       I-ARG1 B-ARG2 -   -          very.r.01   very/M.<
90 6  ill    + ill    ADJ   JJ  acomp  4  -        -       I-ARG1 I-ARG2 -   -          ill.a.01    ill/Ca
90 7  and    + and    CCONJ CC  cc     4  -        -       I-ARG1 -      -   -          -           and/J
90 8  would  - would  AUX   MD  aux    10 -        -       I-ARG1 -      B-V B-ARGM-MOD -           would/Mm.<
90 9  n't    + not    PART  RB  neg    10 -        -       I-ARG1 -      -   B-ARGM-NEG -           n't/Mn.<
90 10 live   + live   VERB  VB  conj   4  -        live.01 I-ARG1 -      -   B-V        be.v.11     live/P.-?:0t:0t.-i:01
90 11 much   + much   ADV   RB  advmod 12 -        -       I-ARG1 -      -   B-ARGM-TMP much.r.01   much/M.<
90 12 longer - long   ADV   RBR advmod 10 -        -       I-ARG1 -      -   I-ARGM-TMP longer.r.01 longer/M=
90 13 .      - .      PUNCT .   punct  1  -        -       -      -      -   -          -           -

# sent_i = 91
# sent = I know what you mean, but I don't agree.
# hyperedge = (but/J (know/Pd.sr:01:01.|f:012 i/Ci (mean/P.os:10:m0.|f:0123 what/Cw you/Ci)) ((do/Mv.< (n't/Mn.< agree/Pd.s:0:0.-i:012)) i/Ci))
# hyperedge builder = (91.6/J (91.1/Pd.sr:01:01.|f:012 91.0/Ci (91.4/P.os:10:m0.|f:0123 91.2/Cw 91.3/Ci)) ((91.8/Mv.< (91.9/Mn.< 91.10/Pd.s:0:0.-i:012)) 91.7/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
91 0  I     + I     PRON  PRP nsubj 1  - -        B-ARG0 -      -   -          B-MAIN0 -          i/Ci
91 1  know  + know  VERB  VBP ROOT  1  - know.01  B-V    -      -   -          -       know.v.01  know/Pd.sr:01:01.|f:012
91 2  what  + what  PRON  WP  dobj  4  - -        B-ARG1 B-ARG1 -   -          -       -          what/Cw
91 3  you   + you   PRON  PRP nsubj 4  - -        I-ARG1 B-ARG0 -   -          -       -          you/Ci
91 4  mean  - mean  VERB  VBP ccomp 1  - mean.01  I-ARG1 B-V    -   -          -       mean.v.01  mean/P.os:10:m0.|f:0123
91 5  ,     + ,     PUNCT ,   punct 1  - -        -      -      -   -          -       -          -
91 6  but   + but   CCONJ CC  cc    1  - -        -      -      -   -          -       -          but/J
91 7  I     + I     PRON  PRP nsubj 10 - -        -      -      -   B-ARG0     B-REF0  -          i/Ci
91 8  do    - do    AUX   VBP aux   10 - do.01    -      -      B-V -          -       -          do/Mv.<
91 9  n't   + not   PART  RB  neg   10 - -        -      -      -   B-ARGM-NEG -       -          n't/Mn.<
91 10 agree - agree VERB  VB  conj  1  - agree.01 -      -      -   B-V        -       agree.v.01 agree/Pd.s:0:0.-i:012
91 11 .     - .     PUNCT .   punct 10 - -        -      -      -   -          -       -          -

# sent_i = 92
# sent = Although the party ended fairly early, there was a mess to clean up, so we didn't get to bed till two o'clock.
# hyperedge = (was/Pd.xecx:r-1r:r-1r.<f:12 (although/T (ended/P.s?:1t:1t.<f:012m (the/Md.< party/Cc..s) (fairly/M.< early/M))) there/Me (+/Jr.ma (a/Md.< mess/Cc..s) ((to/Mi.< (up/Ml.r.> clean/P.-:1:1.-i:01)) (a/Md.< mess/Cc..s))) (so/T ((did/Mv.< (n't/Mn.< get/P.sxx:12t:1gt.-i:012)) we/Ci (to/T bed/Cc..s) (till/Tt (two/M#.<..t o'clock/Cc..s.t)))))
# hyperedge builder = (92.8/Pd.xecx:r-1r:r-1r.<f:12 (92.0/T (92.3/P.s?:1t:1t.<f:012m (92.1/Md.< 92.2/Cc..s) (92.4/M.< 92.5/M))) 92.7/Me (+/Jr.ma (92.9/Md.< 92.10/Cc..s) ((92.11/Mi.< (92.13/Ml.r.> 92.12/P.-:1:1.-i:01)) (92.9/Md.< 92.10/Cc..s))) (92.15/T ((92.17/Mv.< (92.18/Mn.< 92.19/P.sxx:12t:1gt.-i:012)) 92.16/Ci (92.20/T 92.21/Cc..s) (92.22/Tt (92.23/M#.<..t 92.24/Cc..s.t)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
92 0  Although + although SCONJ IN  mark   3  -      -           -          B-ARGM-ADV -      -   -          -               although/T
92 1  the      + the      DET   DT  det    2  -      -           B-ARG1     I-ARGM-ADV -      -   -          -               the/Md.<
92 2  party    + party    NOUN  NN  nsubj  3  -      -           I-ARG1     I-ARGM-ADV -      -   -          party.n.02      party/Cc..s
92 3  ended    + end      VERB  VBD advcl  8  -      end.01      B-V        I-ARGM-ADV -      -   -          end.v.01        ended/P.s?:1t:1t.<f:012m
92 4  fairly   + fairly   ADV   RB  advmod 5  -      -           B-ARGM-TMP I-ARGM-ADV -      -   -          reasonably.r.01 fairly/M.<
92 5  early    - early    ADV   RB  advmod 3  -      -           I-ARGM-TMP I-ARGM-ADV -      -   -          early.r.02      early/M
92 6  ,        + ,        PUNCT ,   punct  8  -      -           -          -          -      -   -          -               -
92 7  there    + there    PRON  EX  expl   8  -      -           -          -          -      -   -          -               there/Me
92 8  was      + be       AUX   VBD ROOT   8  -      be.01       -          B-V        -      -   -          be.v.01         was/Pd.xecx:r-1r:r-1r.<f:12
92 9  a        + a        DET   DT  det    10 -      -           -          B-ARG1     B-ARG1 -   -          -               a/Md.<
92 10 mess     + mess     NOUN  NN  attr   8  -      -           -          I-ARG1     I-ARG1 -   -          mess.n.01       mess/Cc..s
92 11 to       + to       PART  TO  aux    12 -      -           -          I-ARG1     -      -   -          -               to/Mi.<
92 12 clean    + clean    VERB  VB  relcl  10 -      clean_up.02 -          I-ARG1     B-V    -   -          tidy.v.01       clean/P.-:1:1.-i:01
92 13 up       - up       ADP   RP  prt    12 -      -           -          I-ARG1     -      -   -          tidy.v.01       up/Ml.r.>
92 14 ,        + ,        PUNCT ,   punct  8  -      -           -          -          -      -   -          -               -
92 15 so       + so       ADV   RB  mark   19 -      -           -          B-ARGM-ADV -      -   -          -               so/T
92 16 we       + we       PRON  PRP nsubj  19 -      -           -          I-ARGM-ADV -      -   B-ARG1     -               we/Ci
92 17 did      - do       AUX   VBD aux    19 -      do.01       -          I-ARGM-ADV -      B-V -          -               did/Mv.<
92 18 n't      + not      PART  RB  neg    19 -      -           -          I-ARGM-ADV -      -   B-ARGM-NEG not.r.01        n't/Mn.<
92 19 get      + get      VERB  VB  advcl  8  -      get.05      -          I-ARGM-ADV -      -   B-V        go_to_bed.v.01  get/P.sxx:12t:1gt.-i:012
92 20 to       + to       ADP   IN  prep   19 -      -           -          I-ARGM-ADV -      -   B-ARG2     go_to_bed.v.01  to/T
92 21 bed      + bed      NOUN  NN  pobj   20 -      -           -          I-ARGM-ADV -      -   I-ARG2     go_to_bed.v.01  bed/Cc..s
92 22 till     + till     ADP   IN  prep   19 -      -           -          I-ARGM-ADV -      -   B-ARGM-TMP -               till/Tt
92 23 two      + two      NUM   CD  nummod 24 B-TIME -           -          I-ARGM-ADV -      -   I-ARGM-TMP two.s.01        two/M#.<..t
92 24 o'clock  - o'clock  NOUN  NN  pobj   22 I-TIME -           -          I-ARGM-ADV -      -   I-ARGM-TMP o'clock.r.01    o'clock/Cc..s.t
92 25 .        - .        PUNCT .   punct  8  -      -           -          I-ARGM-ADV -      -   -          -               -

# sent_i = 93
# sent = Mr. Hankin is retired now, and the business that he founded is managed by his son-in-law.
# hyperedge = (and/J (is/Pd.sc?:---:---.|f--3s (+/B.am mr%2e/Cp.<.s hankin/Cp..s.p) retired/Ca now/M) ((is/Mv.< managed/Pd.pa:10:10.<pf:01) (+/Jr.ma (the/Md.< business/Cc..s) (founded/P.-os:110:110.<f:012 (the/Md.< business/Cc..s) that/Cd (+/Jc.rm.rp he/Ci (+/B.am mr%2e/Cp.<.s hankin/Cp..s.p)))) (by/T ((+/Jc.rm.rp his/Mp (+/B.am mr%2e/Cp.<.s hankin/Cp..s.p)) son-in-law/Cc..s))))
# hyperedge builder = (93.6/J (93.2/Pd.sc?:---:---.|f--3s (+/B.am 93.0/Cp.<.s 93.1/Cp..s.p) 93.3/Ca 93.4/M) ((93.12/Mv.< 93.13/Pd.pa:10:10.<pf:01) (+/Jr.ma (93.7/Md.< 93.8/Cc..s) (93.11/P.-os:110:110.<f:012 (93.7/Md.< 93.8/Cc..s) 93.9/Cd (+/Jc.rm.rp 93.10/Ci (+/B.am 93.0/Cp.<.s 93.1/Cp..s.p)))) (93.14/T ((+/Jc.rm.rp 93.15/Mp (+/B.am 93.0/Cp.<.s 93.1/Cp..s.p)) 93.16/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
93 0  Mr.        + Mr.        PROPN NNP  compound  1  -        -         -   B-ARG0     -        -   -      B-MAIN0 mister.n.01     mr%2e/Cp.<.s
93 1  Hankin     + Hankin     PROPN NNP  nsubj     2  B-PERSON -         -   I-ARG0     -        -   -      I-MAIN0 -               hankin/Cp..s.p
93 2  is         + be         AUX   VBZ  ROOT      2  -        be.03     B-V -          -        -   -      -       be.v.01         is/Pd.sc?:---:---.|f--3s
93 3  retired    + retired    ADJ   JJ   acomp     2  -        retire.01 -   B-V        -        -   -      -       retired.s.01    retired/Ca
93 4  now        - now        ADV   RB   advmod    2  -        -         -   B-ARGM-TMP -        -   -      -       now.r.04        now/M
93 5  ,          + ,          PUNCT ,    punct     2  -        -         -   -          -        -   -      -       -               -
93 6  and        + and        CCONJ CC   cc        2  -        -         -   -          -        -   -      -       -               and/J
93 7  the        + the        DET   DT   det       8  -        -         -   -          B-ARG1   -   B-ARG1 -       -               the/Md.<
93 8  business   + business   NOUN  NN   nsubjpass 13 -        -         -   -          I-ARG1   -   I-ARG1 -       business.n.01   business/Cc..s
93 9  that       + that       DET   WDT  dobj      11 -        -         -   -          B-R-ARG1 -   I-ARG1 -       -               that/Cd
93 10 he         + he         PRON  PRP  nsubj     11 -        -         -   -          B-ARG0   -   I-ARG1 B-REF0  -               he/Ci
93 11 founded    + found      VERB  VBD  relcl     8  -        found.01  -   -          B-V      -   I-ARG1 -       establish.v.01  founded/P.-os:110:110.<f:012
93 12 is         + be         AUX   VBZ  auxpass   13 -        be.03     -   -          -        B-V -      -       -               is/Mv.<
93 13 managed    + manage     VERB  VBN  conj      2  -        manage.01 -   -          -        -   B-V    -       manage.v.02     managed/Pd.pa:10:10.<pf:01
93 14 by         + by         ADP   IN   agent     13 -        -         -   -          -        -   B-ARG0 -       -               by/T
93 15 his        + his        PRON  PRP$ poss      16 -        -         -   -          -        -   I-ARG0 B-REF0  -               his/Mp
93 16 son-in-law - son-in-law NOUN  NN   pobj      14 -        -         -   -          -        -   I-ARG0 -       son-in-law.n.01 son-in-law/Cc..s
93 17 .          - .          PUNCT .    punct     13 -        -         -   -          -        -   -      -       -               -

# sent_i = 94
# sent = He admitted that he'd changed his mind as soon as he'd jumped.
# hyperedge = (admitted/Pd.sr:01:01.<f:012 he/Ci (that/T (('d/Mv.< changed/P.so?:01t:01t.<pf:0123) he/Ci ((+/Jc.rm.rr his/Mp he/Ci) mind/Cc..s) ((as/M.< soon/M) (as/T (('d/Mv.< jumped/P.s:0:0.<pf:012) he/Ci))))))
# hyperedge builder = (94.1/Pd.sr:01:01.<f:012 94.0/Ci (94.2/T ((94.4/Mv.< 94.5/P.so?:01t:01t.<pf:0123) 94.3/Ci ((+/Jc.rm.rr 94.6/Mp 94.0/Ci) 94.7/Cc..s) ((94.8/M.< 94.9/M) (94.10/T ((94.12/Mv.< 94.13/P.s:0:0.<pf:012) 94.11/Ci))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
94 0  He       + he     PRON  PRP  nsubj  1  - -         B-ARG0 -   -          -   -      B-MAIN0 -             he/Ci
94 1  admitted + admit  VERB  VBD  ROOT   1  - admit.01  B-V    -   -          -   -      -       admit.v.01    admitted/Pd.sr:01:01.<f:012
94 2  that     + that   SCONJ IN   mark   5  - -         B-ARG1 -   -          -   -      -       -             that/T
94 3  he       - he     PRON  PRP  nsubj  5  - -         I-ARG1 -   B-ARG0     -   -      B-REF0  -             he/Ci
94 4  'd       + have   AUX   VBD  aux    5  - have.01   I-ARG1 B-V -          -   -      -       -             'd/Mv.<
94 5  changed  + change VERB  VBN  ccomp  1  - change.01 I-ARG1 -   B-V        -   -      -       change.v.01   changed/P.so?:01t:01t.<pf:0123
94 6  his      + his    PRON  PRP$ poss   7  - -         I-ARG1 -   B-ARG1     -   -      B-REF0  -             his/Mp
94 7  mind     + mind   NOUN  NN   dobj   5  - -         I-ARG1 -   I-ARG1     -   -      -       judgment.n.01 mind/Cc..s
94 8  as       + as     ADV   RB   advmod 9  - -         I-ARG1 -   B-ARGM-TMP -   -      -       -             as/M.<
94 9  soon     + soon   ADV   RB   advmod 5  - -         I-ARG1 -   I-ARGM-TMP -   -      -       soon.r.01     soon/M
94 10 as       + as     SCONJ IN   mark   13 - -         I-ARG1 -   I-ARGM-TMP -   -      -       -             as/T
94 11 he       - he     PRON  PRP  nsubj  13 - -         I-ARG1 -   I-ARGM-TMP -   B-ARG0 B-REF0  -             he/Ci
94 12 'd       + have   AUX   VBD  aux    13 - have.01   I-ARG1 -   I-ARGM-TMP B-V -      -       -             'd/Mv.<
94 13 jumped   - jump   VERB  VBN  advcl  9  - jump.03   I-ARG1 -   I-ARGM-TMP -   B-V    -       jump.v.08     jumped/P.s:0:0.<pf:012
94 14 .        - .      PUNCT .    punct  1  - -         -      -   -          -   -      -       -             -

# sent_i = 95
# sent = Although it was hard work, I enjoyed the job because it was interesting.
# hyperedge = (enjoyed/Pd.xsox:r01c:r10c.<f:01 (although/T (was/P.sc:12:1h.<f:12 it/Ci (hard/Ma.< work/Cc..s))) i/Ci (the/Md.< job/Cc..s) (because/T (was/P.sc:12:1h.<f:12 (+/Jc.rm.rc it/Ci (the/Md.< job/Cc..s)) interesting/Ca)))
# hyperedge builder = (95.7/Pd.xsox:r01c:r10c.<f:01 (95.0/T (95.2/P.sc:12:1h.<f:12 95.1/Ci (95.3/Ma.< 95.4/Cc..s))) 95.6/Ci (95.8/Md.< 95.9/Cc..s) (95.10/T (95.12/P.sc:12:1h.<f:12 (+/Jc.rm.rc 95.11/Ci (95.8/Md.< 95.9/Cc..s)) 95.13/Ca)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
95 0  Although    + although    SCONJ IN  mark  2  - -        -      B-ARGM-ADV -      -       -                although/T
95 1  it          + it          PRON  PRP nsubj 2  - -        B-ARG1 I-ARGM-ADV -      -       -                it/Ci
95 2  was         + be          VERB  VBD advcl 7  - be.01    B-V    I-ARGM-ADV -      -       be.v.01          was/P.sc:12:1h.<f:12
95 3  hard        + hard        ADJ   JJ  amod  4  - -        B-ARG2 I-ARGM-ADV -      -       difficult.a.01   hard/Ma.<
95 4  work        - work        NOUN  NN  attr  2  - -        I-ARG2 I-ARGM-ADV -      -       employment.n.02  work/Cc..s
95 5  ,           + ,           PUNCT ,   punct 7  - -        -      -          -      -       -                -
95 6  I           + I           PRON  PRP nsubj 7  - -        -      B-ARG0     -      -       -                i/Ci
95 7  enjoyed     + enjoy       VERB  VBD ROOT  7  - enjoy.01 -      B-V        -      -       enjoy.v.01       enjoyed/Pd.xsox:r01c:r10c.<f:01
95 8  the         + the         DET   DT  det   9  - -        -      B-ARG1     -      B-MAIN0 -                the/Md.<
95 9  job         + job         NOUN  NN  dobj  7  - -        -      I-ARG1     -      I-MAIN0 occupation.n.01  job/Cc..s
95 10 because     + because     SCONJ IN  mark  12 - -        -      B-ARGM-CAU -      -       -                because/T
95 11 it          + it          PRON  PRP nsubj 12 - -        -      I-ARGM-CAU B-ARG1 B-REF0  -                it/Ci
95 12 was         + be          VERB  VBD advcl 7  - be.01    -      I-ARGM-CAU B-V    -       be.v.01          was/P.sc:12:1h.<f:12
95 13 interesting - interesting ADJ   JJ  acomp 12 - -        -      I-ARGM-CAU B-ARG2 -       interesting.a.01 interesting/Ca
95 14 .           - .           PUNCT .   punct 7  - -        -      -          -      -       -                -

# sent_i = 96
# sent = Jane met the artist who painted the picture that caused all the controversy.
# hyperedge = (met/Pd.so:01:0o.<f:01 jane/Cp..s.p (+/Jr.ma (the/Md.< artist/Cc..s) (painted/P.-so:001:001.<f:012 (the/Md.< artist/Cc..s) who/Cw (+/Jr.ma (the/Md.< picture/Cc..s) (caused/P.-so:001:c01.<f:01 (the/Md.< picture/Cc..s) that/Cd (all/M.< (the/Md.< controversy/Cc..s)))))))
# hyperedge builder = (96.1/Pd.so:01:0o.<f:01 96.0/Cp..s.p (+/Jr.ma (96.2/Md.< 96.3/Cc..s) (96.5/P.-so:001:001.<f:012 (96.2/Md.< 96.3/Cc..s) 96.4/Cw (+/Jr.ma (96.6/Md.< 96.7/Cc..s) (96.9/P.-so:001:c01.<f:01 (96.6/Md.< 96.7/Cc..s) 96.8/Cd (96.10/M.< (96.11/Md.< 96.12/Cc..s)))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
96 0  Jane        + Jane        PROPN NNP nsubj  1  B-PERSON -        B-ARG0 -        -        -                jane/Cp..s.p
96 1  met         + meet        VERB  VBD ROOT   1  -        meet.02  B-V    -        -        meet.v.08        met/Pd.so:01:0o.<f:01
96 2  the         + the         DET   DT  det    3  -        -        B-ARG1 B-ARG0   -        -                the/Md.<
96 3  artist      + artist      NOUN  NN  dobj   1  -        -        I-ARG1 I-ARG0   -        artist.n.01      artist/Cc..s
96 4  who         + who         PRON  WP  nsubj  5  -        -        I-ARG1 B-R-ARG0 -        -                who/Cw
96 5  painted     + paint       VERB  VBD relcl  3  -        paint.02 I-ARG1 B-V      -        paint.v.01       painted/P.-so:001:001.<f:012
96 6  the         + the         DET   DT  det    7  -        -        I-ARG1 B-ARG1   B-ARG0   -                the/Md.<
96 7  picture     + picture     NOUN  NN  dobj   5  -        -        I-ARG1 I-ARG1   I-ARG0   painting.n.01    picture/Cc..s
96 8  that        + that        DET   WDT nsubj  9  -        -        I-ARG1 I-ARG1   B-R-ARG0 -                that/Cd
96 9  caused      + cause       VERB  VBD relcl  7  -        cause.01 I-ARG1 I-ARG1   B-V      cause.v.01       caused/P.-so:001:c01.<f:01
96 10 all         + all         DET   PDT predet 12 -        -        I-ARG1 I-ARG1   B-ARG1   all.a.01         all/M.<
96 11 the         + the         DET   DT  det    12 -        -        I-ARG1 I-ARG1   I-ARG1   -                the/Md.<
96 12 controversy - controversy NOUN  NN  dobj   9  -        -        I-ARG1 I-ARG1   I-ARG1   controversy.n.01 controversy/Cc..s
96 13 .           - .           PUNCT .   punct  1  -        -        -      -        -        -                -

# sent_i = 97
# sent = He admitted having changed his mind after jumping.
# hyperedge = (admitted/Pd.sr:01:01.<f:012 he/Ci ((having/Mv.< changed/P.-ox:01t:01t.<pf:0123) he/Ci ((+/Jc.rm.rr his/Mp he/Ci) mind/Cc..s) (after/Tt jumping/P.-:0:0.|pg:012)))
# hyperedge builder = (97.1/Pd.sr:01:01.<f:012 97.0/Ci ((97.2/Mv.< 97.3/P.-ox:01t:01t.<pf:0123) 97.0/Ci ((+/Jc.rm.rr 97.4/Mp 97.0/Ci) 97.5/Cc..s) (97.6/Tt 97.7/P.-:0:0.|pg:012)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
97 0 He       + he     PRON  PRP  nsubj 1 - -         B-ARG0 -   B-ARG0     B-ARG0 B-MAIN0 -             he/Ci
97 1 admitted + admit  VERB  VBD  ROOT  1 - admit.01  B-V    -   -          -      -       admit.v.01    admitted/Pd.sr:01:01.<f:012
97 2 having   + have   AUX   VBG  aux   3 - have.01   B-ARG1 B-V -          -      -       -             having/Mv.<
97 3 changed  + change VERB  VBN  xcomp 1 - change.01 I-ARG1 -   B-V        -      -       change.v.01   changed/P.-ox:01t:01t.<pf:0123
97 4 his      + his    PRON  PRP$ poss  5 - -         I-ARG1 -   B-ARG1     -      B-REF0  -             his/Mp
97 5 mind     + mind   NOUN  NN   dobj  3 - -         I-ARG1 -   I-ARG1     -      -       judgment.n.01 mind/Cc..s
97 6 after    + after  ADP   IN   prep  3 - -         I-ARG1 -   B-ARGM-TMP -      -       -             after/Tt
97 7 jumping  - jump   VERB  VBG  pcomp 6 - jump.03   I-ARG1 -   I-ARGM-TMP B-V    -       jump.v.08     jumping/P.-:0:0.|pg:012
97 8 .        - .      PUNCT .    punct 1 - -         -      -   -          -      -       -             -

# sent_i = 98
# sent = The gallery intends to buy more pictures painted by local artists.
# hyperedge = (intends/Pd.sr:01:01.|f--3s:01 (the/Md.< gallery/Cc..s) ((to/Mi.< buy/P.-o:01:01.-i:01234) (the/Md.< gallery/Cc..s) (+/Jr.ma (more/Mc.< pictures/Cc..p) (painted/P.-a:10:10.<pf:012 (more/Mc.< pictures/Cc..p) (by/T (local/Ma.< artists/Cc..p))))))
# hyperedge builder = (98.2/Pd.sr:01:01.|f--3s:01 (98.0/Md.< 98.1/Cc..s) ((98.3/Mi.< 98.4/P.-o:01:01.-i:01234) (98.0/Md.< 98.1/Cc..s) (+/Jr.ma (98.5/Mc.< 98.6/Cc..p) (98.7/P.-a:10:10.<pf:012 (98.5/Mc.< 98.6/Cc..p) (98.8/T (98.9/Ma.< 98.10/Cc..p))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
98 0  The      + the     DET   DT  det   1  - -         B-ARG0 B-ARG0 -      -             the/Md.<
98 1  gallery  + gallery NOUN  NN  nsubj 2  - -         I-ARG0 I-ARG0 -      gallery.n.03  gallery/Cc..s
98 2  intends  + intend  VERB  VBZ ROOT  2  - intend.01 B-V    -      -      intend.v.01   intends/Pd.sr:01:01.|f--3s:01
98 3  to       + to      PART  TO  aux   4  - -         B-ARG1 -      -      -             to/Mi.<
98 4  buy      + buy     VERB  VB  xcomp 2  - buy.01    I-ARG1 B-V    -      buy.v.01      buy/P.-o:01:01.-i:01234
98 5  more     + more    ADJ   JJR amod  6  - -         I-ARG1 B-ARG1 B-ARG1 more.a.02     more/Mc.<
98 6  pictures + picture NOUN  NNS dobj  4  - -         I-ARG1 I-ARG1 I-ARG1 painting.n.01 pictures/Cc..p
98 7  painted  + paint   VERB  VBN acl   6  - paint.02  I-ARG1 I-ARG1 B-V    paint.v.01    painted/P.-a:10:10.<pf:012
98 8  by       + by      ADP   IN  agent 7  - -         I-ARG1 I-ARG1 B-ARG0 -             by/T
98 9  local    + local   ADJ   JJ  amod  10 - -         I-ARG1 I-ARG1 I-ARG0 local.a.01    local/Ma.<
98 10 artists  - artist  NOUN  NNS pobj  8  - -         I-ARG1 I-ARG1 I-ARG0 artist.n.01   artists/Cc..p
98 11 .        - .       PUNCT .   punct 2  - -         -      -      -      -             -

# sent_i = 99
# sent = Eventually we took off, but instead of landing at Zurich, we had to go to Basle, which meant a longer, and an added train journey.
# hyperedge = (but/J ((off/Ml.r.> took/Pd.?s:t1:t1.<f:12) eventually/M we/Ci) (had/Pd.xsr:---:---.<f ((instead/M.< of/T) (landing/P.-x-:1l1:1l1.|pg:01 we/Ci (at/Tl zurich/Cp..s.g) we/Ci)) we/Ci ((to/Mi.< go/Pd.-xx:04r:1gr.-i:0134) we/Ci (to/T basle/Cp..s.g) (meant/P.-so:001:!!!.<f basle/Cp..s.g which/Cd ((and/J (a/Md.< longer/Mc.<) (an/Md.< added/M)) (+/B.am train/Cc.<.s journey/Cc..s))))))
# hyperedge builder = (99.5/J ((99.3/Ml.r.> 99.2/Pd.?s:t1:t1.<f:12) 99.0/M 99.1/Ci) (99.13/Pd.xsr:---:---.<f ((99.6/M.< 99.7/T) (99.8/P.-x-:1l1:1l1.|pg:01 99.1/Ci (99.9/Tl 99.10/Cp..s.g) 99.12/Ci)) 99.12/Ci ((99.14/Mi.< 99.15/Pd.-xx:04r:1gr.-i:0134) 99.12/Ci (99.16/T 99.17/Cp..s.g) (99.20/P.-so:001:!!!.<f 99.17/Cp..s.g 99.19/Cd ((99.24/J (99.21/Md.< 99.22/Mc.<) (99.25/Md.< 99.26/M)) (+/B.am 99.27/Cc.<.s 99.28/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
99 0  Eventually + eventually ADV   RB  advmod   2  -     -           B-ARGM-TMP -          -   -          -        -       finally.r.01  eventually/M
99 1  we         + we         PRON  PRP nsubj    2  -     -           B-ARG1     B-ARG1     -   -          -        B-MAIN0 -             we/Ci
99 2  took       + take       VERB  VBD ROOT     2  -     take_off.19 B-V        -          -   -          -        -       take_off.v.03 took/Pd.?s:t1:t1.<f:12
99 3  off        - off        ADP   RP  prt      2  -     -           -          -          -   -          -        -       take_off.v.03 off/Ml.r.>
99 4  ,          + ,          PUNCT ,   punct    2  -     -           -          -          -   -          -        -       -             -
99 5  but        + but        CCONJ CC  cc       2  -     -           -          -          -   -          -        -       -             but/J
99 6  instead    + instead    ADV   RB  advmod   7  -     -           -          -          -   -          -        -       rather.r.01   instead/M.<
99 7  of         + of         ADP   IN  prep     13 -     -           -          -          -   -          -        -       -             of/T
99 8  landing    + land       VERB  VBG pcomp    7  -     land.01     -          B-V        -   -          -        -       land.v.01     landing/P.-x-:1l1:1l1.|pg:01
99 9  at         + at         ADP   IN  prep     8  -     -           -          B-ARGM-LOC -   -          -        -       -             at/Tl
99 10 Zurich     - Zurich     PROPN NNP pobj     9  B-GPE -           -          I-ARGM-LOC -   -          -        -       zurich.n.01   zurich/Cp..s.g
99 11 ,          + ,          PUNCT ,   punct    13 -     -           -          -          -   -          -        -       -             -
99 12 we         + we         PRON  PRP nsubj    13 -     -           -          B-ARG1     -   B-ARG0     -        B-REF0  -             we/Ci
99 13 had        + have       VERB  VBD conj     2  -     have.02     -          -          B-V B-ARGM-MOD -        -       -             had/Pd.xsr:---:---.<f
99 14 to         + to         PART  TO  aux      15 -     -           -          -          -   -          -        -       -             to/Mi.<
99 15 go         + go         VERB  VB  xcomp    13 -     go.02       -          -          -   B-V        -        -       travel.v.01   go/Pd.-xx:04r:1gr.-i:0134
99 16 to         + to         ADP   IN  prep     15 -     -           -          -          -   B-ARG4     -        -       -             to/T
99 17 Basle      - Basle      PROPN NNP pobj     16 B-GPE -           -          -          -   I-ARG4     B-ARG0   -       basel.n.01    basle/Cp..s.g
99 18 ,          + ,          PUNCT ,   punct    15 -     -           -          -          -   -          -        -       -             -
99 19 which      + which      DET   WDT nsubj    20 -     -           -          -          -   B-ARGM-ADV B-R-ARG0 -       -             which/Cd
99 20 meant      + mean       VERB  VBD advcl    15 -     -           -          -          -   I-ARGM-ADV B-V      -       mean.v.03     meant/P.-so:001:!!!.<f
99 21 a          + a          DET   DT  det      22 -     -           -          -          -   I-ARGM-ADV B-ARG1   -       -             a/Md.<
99 22 longer     - long       ADJ   JJR amod     28 -     -           -          -          -   I-ARGM-ADV I-ARG1   -       long.a.01     longer/Mc.<
99 23 ,          + ,          PUNCT ,   punct    22 -     -           -          -          -   I-ARGM-ADV I-ARG1   -       -             -
99 24 and        + and        CCONJ CC  cc       22 -     -           -          -          -   I-ARGM-ADV I-ARG1   -       -             and/J
99 25 an         + an         DET   DT  det      26 -     -           -          -          -   I-ARGM-ADV I-ARG1   -       -             an/Md.<
99 26 added      + added      ADJ   JJ  conj     22 -     -           -          -          -   I-ARGM-ADV I-ARG1   -       -             added/M
99 27 train      + train      NOUN  NN  compound 28 -     -           -          -          -   I-ARGM-ADV I-ARG1   -       train.n.01    train/Cc.<.s
99 28 journey    - journey    NOUN  NN  dobj     20 -     -           -          -          -   I-ARGM-ADV I-ARG1   -       journey.n.01  journey/Cc..s
99 29 .          - .          PUNCT .   punct    13 -     -           -          -          -   -          -        -       -             -

# sent_i = 100
# sent = Well, we hung about waiting for a representative to come and tell us what to do, and after an hour and a half nobody came, so we took a taxi and went into Basle, and because we'd missed the train we decided to stay the night there.
# hyperedge = (and/J ((about/Ml.r.> hung/Pd.jsr:s01:s00.<f:12) well/C we/Ci (waiting/P.-x:12:1c.|pg:12m we/Ci (and/J (for/T ((to/Mi.< come/P.s:1:1.-i:1234) (a/Md.< representative/Cc..s))) (tell/P.-or:021:0g1.-i:012 (a/Md.< representative/Cc..s) (+/Jc.rm.rr us/Ci we/Ci) ((to/Mi.< do/P.-o:01:01.-i:01234) (+/Jc.rm.rr us/Ci we/Ci) what/Cw))))) (and/J (took/Pd.x?so:--0k:--!!.<f (came/P.xs:t1:t1.<f:1234 (after/Tt (and/J (an/Md.<..t hour/Cc..s.t) (a/M.< half/Cc..s))) nobody/Ci..s) so/M we/Ci (a/Md.< taxi/Cc..s)) (and/J (went/Pd.-x:04:1g.<f:0134 we/Ci (into/T basle/Cp..s.g)) (decided/Pd.xsr:c01:c01.<f:0123 (because/T (('d/Mv.< missed/P.so:01:01.<pf:012) we/Ci (the/Md.< train/Cc..s))) we/Ci ((to/Mi.< stay/P.-x?:1tl:1tl.-i:123) we/Ci (the/Md.<..t night/Cc..s.t) (+/Jc.rm.?p there/M basle/Cp..s.g))))))
# hyperedge builder = (100.18/J ((100.4/Ml.r.> 100.3/Pd.jsr:s01:s00.<f:12) 100.0/C 100.2/Ci (100.5/P.-x:12:1c.|pg:12m 100.2/Ci (100.11/J (100.6/T ((100.9/Mi.< 100.10/P.s:1:1.-i:1234) (100.7/Md.< 100.8/Cc..s))) (100.12/P.-or:021:0g1.-i:012 (100.7/Md.< 100.8/Cc..s) (+/Jc.rm.rr 100.13/Ci 100.2/Ci) ((100.15/Mi.< 100.16/P.-o:01:01.-i:01234) (+/Jc.rm.rr 100.13/Ci 100.2/Ci) 100.14/Cw))))) (100.33/J (100.30/Pd.x?so:--0k:--!!.<f (100.26/P.xs:t1:t1.<f:1234 (100.19/Tt (100.22/J (100.20/Md.<..t 100.21/Cc..s.t) (100.23/M.< 100.24/Cc..s))) 100.25/Ci..s) 100.28/M 100.29/Ci (100.31/Md.< 100.32/Cc..s)) (100.38/J (100.34/Pd.-x:04:1g.<f:0134 100.29/Ci (100.35/T 100.36/Cp..s.g)) (100.46/Pd.xsr:c01:c01.<f:0123 (100.39/T ((100.41/Mv.< 100.42/P.so:01:01.<pf:012) 100.40/Ci (100.43/Md.< 100.44/Cc..s))) 100.45/Ci ((100.47/Mi.< 100.48/P.-x?:1tl:1tl.-i:123) 100.45/Ci (100.49/Md.<..t 100.50/Cc..s.t) (+/Jc.rm.?p 100.51/M 100.36/Cp..s.g))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 srl7 srl8 srl9 srl10 srl11 srl12 srl13 coref1 coref2 synset atoms
100 0  Well           - well           INTJ  UH  intj     3  -      -           B-ARGM-DIS -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   well/C
100 1  ,              + ,              PUNCT ,   punct    3  -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   -
100 2  we             + we             PRON  PRP nsubj    3  -      -           B-ARG0     B-ARG1 -      -      -      -          -          -          -      -   -      -          -          B-MAIN0 -       -                   we/Ci
100 3  hung           + hang           VERB  VBD ROOT     3  -      hang_out.06 B-V        -      -      -      -      -          -          -          -      -   -      -          -          -       -       loiter.v.01         hung/Pd.jsr:s01:s00.<f:12
100 4  about          + about          ADP   IN  prt      3  -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       loiter.v.01         about/Ml.r.>
100 5  waiting        + wait           VERB  VBG xcomp    3  -      wait.01     B-ARG1     B-V    -      -      -      -          -          -          -      -   -      -          -          -       -       wait.v.01           waiting/P.-x:12:1c.|pg:12m
100 6  for            + for            ADP   IN  mark     10 -      -           I-ARG1     B-ARG2 -      -      -      -          -          -          -      -   -      -          -          -       -       -                   for/T
100 7  a              + a              DET   DT  det      8  -      -           I-ARG1     I-ARG2 B-ARG1 B-ARG0 -      -          -          -          -      -   -      -          -          -       -       -                   a/Md.<
100 8  representative + representative NOUN  NN  nsubj    10 -      -           I-ARG1     I-ARG2 I-ARG1 I-ARG0 -      -          -          -          -      -   -      -          -          -       -       representative.n.01 representative/Cc..s
100 9  to             + to             PART  TO  aux      10 -      -           I-ARG1     I-ARG2 -      -      -      -          -          -          -      -   -      -          -          -       -       -                   to/Mi.<
100 10 come           + come           VERB  VB  advcl    5  -      come.01     I-ARG1     I-ARG2 B-V    -      -      -          -          -          -      -   -      -          -          -       -       come.v.01           come/P.s:1:1.-i:1234
100 11 and            + and            CCONJ CC  cc       10 -      -           I-ARG1     I-ARG2 -      -      -      -          -          -          -      -   -      -          -          -       -       -                   and/J
100 12 tell           + tell           VERB  VB  conj     10 -      tell.01     I-ARG1     I-ARG2 -      B-V    -      -          -          -          -      -   -      -          -          -       -       state.v.01          tell/P.-or:021:0g1.-i:012
100 13 us             + we             PRON  PRP dobj     12 -      -           I-ARG1     I-ARG2 -      B-ARG2 B-ARG0 -          -          -          -      -   -      -          -          B-REF0  -       -                   us/Ci
100 14 what           + what           PRON  WP  dobj     16 -      -           I-ARG1     I-ARG2 -      B-ARG1 B-ARG1 -          -          -          -      -   -      -          -          -       -       -                   what/Cw
100 15 to             + to             PART  TO  aux      16 -      -           I-ARG1     I-ARG2 -      I-ARG1 -      -          -          -          -      -   -      -          -          -       -       -                   to/Mi.<
100 16 do             - do             VERB  VB  xcomp    12 -      do.02       I-ARG1     I-ARG2 -      I-ARG1 B-V    -          -          -          -      -   -      -          -          -       -       perform.v.01        do/P.-o:01:01.-i:01234
100 17 ,              + ,              PUNCT ,   punct    12 -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   -
100 18 and            + and            CCONJ CC  cc       3  -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   and/J
100 19 after          + after          ADP   IN  prep     26 -      -           -          -      -      -      -      B-ARGM-TMP -          -          -      -   -      -          -          -       -       subsequently.r.01   after/Tt
100 20 an             + an             DET   DT  det      21 B-TIME -           -          -      -      -      -      I-ARGM-TMP -          -          -      -   -      -          -          -       -       -                   an/Md.<..t
100 21 hour           + hour           NOUN  NN  pobj     19 I-TIME -           -          -      -      -      -      I-ARGM-TMP -          -          -      -   -      -          -          -       -       hour.n.01           hour/Cc..s.t
100 22 and            + and            CCONJ CC  cc       21 -      -           -          -      -      -      -      I-ARGM-TMP -          -          -      -   -      -          -          -       -       -                   and/J
100 23 a              + a              DET   DT  quantmod 24 -      -           -          -      -      -      -      I-ARGM-TMP -          -          -      -   -      -          -          -       -       -                   a/M.<
100 24 half           + half           NOUN  NN  conj     21 -      -           -          -      -      -      -      I-ARGM-TMP -          -          -      -   -      -          -          -       -       one-half.n.01       half/Cc..s
100 25 nobody         + nobody         PRON  NN  nsubj    26 -      -           -          -      -      -      -      B-ARG1     -          -          -      -   -      -          -          -       -       -                   nobody/Ci..s
100 26 came           - come           VERB  VBD advcl    30 -      come.01     -          -      -      -      -      B-V        -          -          -      -   -      -          -          -       -       come.v.01           came/P.xs:t1:t1.<f:1234
100 27 ,              + ,              PUNCT ,   punct    30 -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   -
100 28 so             + so             ADV   RB  advmod   30 -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   so/M
100 29 we             + we             PRON  PRP nsubj    30 -      -           -          -      -      -      -      -          -          B-ARG0     B-ARG0 -   -      -          -          B-REF0  -       -                   we/Ci
100 30 took           + take           VERB  VBD conj     3  -      take.LV     -          -      -      -      -      -          B-V        B-ARGM-LVB -      -   -      -          -          -       -       take.v.09           took/Pd.x?so:--0k:--!!.<f
100 31 a              + a              DET   DT  det      32 -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   a/Md.<
100 32 taxi           + taxi           NOUN  NN  dobj     30 -      taxi.00     -          -      -      -      -      -          B-ARGM-PRR B-V        -      -   -      -          -          -       -       cab.n.03            taxi/Cc..s
100 33 and            + and            CCONJ CC  cc       30 -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   and/J
100 34 went           + go             VERB  VBD conj     30 -      go.02       -          -      -      -      -      -          -          -          B-V    -   -      -          -          -       -       travel.v.01         went/Pd.-x:04:1g.<f:0134
100 35 into           + into           ADP   IN  prep     34 -      -           -          -      -      -      -      -          -          -          B-ARG4 -   -      -          -          -       -       -                   into/T
100 36 Basle          - Basle          PROPN NNP pobj     35 B-GPE  -           -          -      -      -      -      -          -          -          I-ARG4 -   -      -          -          -       B-MAIN1 basel.n.01          basle/Cp..s.g
100 37 ,              + ,              PUNCT ,   punct    30 -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   -
100 38 and            + and            CCONJ CC  cc       34 -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   and/J
100 39 because        + because        SCONJ IN  mark     42 -      -           -          -      -      -      -      -          -          -          -      -   -      B-ARGM-CAU -          -       -       -                   because/T
100 40 we             - we             PRON  PRP nsubj    42 -      -           -          -      -      -      -      -          -          -          -      -   B-ARG0 I-ARGM-CAU -          B-REF0  -       -                   we/Ci
100 41 'd             + have           AUX   VBD aux      42 -      have.01     -          -      -      -      -      -          -          -          -      B-V -      I-ARGM-CAU -          -       -       -                   'd/Mv.<
100 42 missed         + miss           VERB  VBN advcl    46 -      miss.02     -          -      -      -      -      -          -          -          -      -   B-V    I-ARGM-CAU -          -       -       miss.v.05           missed/P.so:01:01.<pf:012
100 43 the            + the            DET   DT  det      44 -      -           -          -      -      -      -      -          -          -          -      -   B-ARG1 I-ARGM-CAU -          -       -       -                   the/Md.<
100 44 train          + train          NOUN  NN  dobj     42 -      -           -          -      -      -      -      -          -          -          -      -   I-ARG1 I-ARGM-CAU -          -       -       train.n.01          train/Cc..s
100 45 we             + we             PRON  PRP nsubj    46 -      -           -          -      -      -      -      -          -          -          -      -   -      B-ARG0     B-ARG1     B-REF0  -       -                   we/Ci
100 46 decided        + decide         VERB  VBD conj     34 -      decide.01   -          -      -      -      -      -          -          -          -      -   -      B-V        -          -       -       decide.v.01         decided/Pd.xsr:c01:c01.<f:0123
100 47 to             + to             PART  TO  aux      48 -      -           -          -      -      -      -      -          -          -          -      -   -      B-ARG1     -          -       -       -                   to/Mi.<
100 48 stay           + stay           VERB  VB  xcomp    46 -      stay.01     -          -      -      -      -      -          -          -          -      -   -      I-ARG1     B-V        -       -       bide.v.01           stay/P.-x?:1tl:1tl.-i:123
100 49 the            + the            DET   DT  det      50 B-TIME -           -          -      -      -      -      -          -          -          -      -   -      I-ARG1     B-ARGM-TMP -       -       -                   the/Md.<..t
100 50 night          + night          NOUN  NN  npadvmod 48 I-TIME -           -          -      -      -      -      -          -          -          -      -   -      I-ARG1     I-ARGM-TMP -       -       night.n.01          night/Cc..s.t
100 51 there          - there          ADV   RB  advmod   48 -      -           -          -      -      -      -      -          -          -          -      -   -      I-ARG1     B-ARGM-LOC -       B-REF1  there.r.01          there/M
100 52 .              - .              PUNCT .   punct    3  -      -           -          -      -      -      -      -          -          -          -      -   -      -          -          -       -       -                   -

# sent_i = 101
# sent = He is a man whom everyone admires.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 he/Ci (+/Jr.ma (a/Md.< man/Cc..s) (admires/P.-os:110:011.|f--3s:01 (a/Md.< man/Cc..s) whom/Cw everyone/Ci..s)))
# hyperedge builder = (101.1/Pd.sc:12:1h.|f--3s:12 101.0/Ci (+/Jr.ma (101.2/Md.< 101.3/Cc..s) (101.6/P.-os:110:011.|f--3s:01 (101.2/Md.< 101.3/Cc..s) 101.4/Cw 101.5/Ci..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
101 0 He       + he       PRON  PRP nsubj 1 - -         B-ARG1 -        -           he/Ci
101 1 is       + be       AUX   VBZ ROOT  1 - be.01     B-V    -        be.v.01     is/Pd.sc:12:1h.|f--3s:12
101 2 a        + a        DET   DT  det   3 - -         B-ARG2 B-ARG1   -           a/Md.<
101 3 man      + man      NOUN  NN  attr  1 - -         I-ARG2 I-ARG1   man.n.01    man/Cc..s
101 4 whom     + whom     PRON  WP  dobj  6 - -         I-ARG2 B-R-ARG1 -           whom/Cw
101 5 everyone + everyone PRON  NN  nsubj 6 - -         I-ARG2 B-ARG0   -           everyone/Ci..s
101 6 admires  - admire   VERB  VBZ relcl 3 - admire.01 I-ARG2 B-V      admire.v.01 admires/P.-os:110:011.|f--3s:01
101 7 .        - .        PUNCT .   punct 1 - -         -      -        -           -

# sent_i = 102
# sent = The rifle of which you speak never belonged to me.
# hyperedge = ((never/Mn.< belonged/Pd.sx:01:01.<f:01) (+/Jr.ma (the/Md.< rifle/Cc..s) (speak/P.-xs:110:110.|f:0123 (the/Md.< rifle/Cc..s) (of/T which/Cd) you/Ci)) (to/T me/Ci))
# hyperedge builder = ((102.6/Mn.< 102.7/Pd.sx:01:01.<f:01) (+/Jr.ma (102.0/Md.< 102.1/Cc..s) (102.5/P.-xs:110:110.|f:0123 (102.0/Md.< 102.1/Cc..s) (102.2/T 102.3/Cd) 102.4/Ci)) (102.8/T 102.9/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
102 0  The      + the    DET   DT  det   1 - -         B-ARG1   B-ARG0     -            the/Md.<
102 1  rifle    + rifle  NOUN  NN  nsubj 7 - -         I-ARG1   I-ARG0     rifle.n.01   rifle/Cc..s
102 2  of       + of     ADP   IN  prep  5 - -         B-R-ARG1 I-ARG0     talk_of.v.01 of/T
102 3  which    + which  DET   WDT pobj  2 - -         I-R-ARG1 I-ARG0     -            which/Cd
102 4  you      + you    PRON  PRP nsubj 5 - -         B-ARG0   I-ARG0     -            you/Ci
102 5  speak    + speak  VERB  VBP relcl 1 - speak.01  B-V      I-ARG0     talk_of.v.01 speak/P.-xs:110:110.|f:0123
102 6  never    + never  ADV   RB  neg   7 - -         -        B-ARGM-NEG never.r.01   never/Mn.<
102 7  belonged + belong VERB  VBD ROOT  7 - belong.01 -        B-V        belong.v.01  belonged/Pd.sx:01:01.<f:01
102 8  to       + to     ADP   IN  prep  7 - -         -        B-ARG1     -            to/T
102 9  me       - I      PRON  PRP pobj  8 - -         -        I-ARG1     -            me/Ci
102 10 .        - .      PUNCT .   punct 7 - -         -        -          -            -

# sent_i = 103
# sent = The first bus, which came after five minutes, was a seven.
# hyperedge = (was/Pd.sc:12:1h.<f:12 (+/Jr.ma (the/Md.< (first/Ma.<..# bus/Cc..s)) (came/P.-sx:11t:11t.<f:1234 (the/Md.< (first/Ma.<..# bus/Cc..s)) which/Cd (after/Tt (five/M#.<..t minutes/Cc..p.t)))) (a/Md.< seven/C#...c))
# hyperedge builder = (103.10/Pd.sc:12:1h.<f:12 (+/Jr.ma (103.0/Md.< (103.1/Ma.<..# 103.2/Cc..s)) (103.5/P.-sx:11t:11t.<f:1234 (103.0/Md.< (103.1/Ma.<..# 103.2/Cc..s)) 103.4/Cd (103.6/Tt (103.7/M#.<..t 103.8/Cc..p.t)))) (103.11/Md.< 103.12/C#...c))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
103 0  The     + the    DET   DT  det    2  -          -       B-ARG1     B-ARG1 -                 the/Md.<
103 1  first   + first  ADJ   JJ  amod   2  B-ORDINAL  -       I-ARG1     I-ARG1 first.a.01        first/Ma.<..#
103 2  bus     - bus    NOUN  NN  nsubj  10 -          -       I-ARG1     I-ARG1 bus.n.01          bus/Cc..s
103 3  ,       + ,      PUNCT ,   punct  2  -          -       -          I-ARG1 -                 -
103 4  which   + which  DET   WDT nsubj  5  -          -       B-R-ARG1   I-ARG1 -                 which/Cd
103 5  came    + come   VERB  VBD relcl  2  -          come.01 B-V        I-ARG1 arrive.v.01       came/P.-sx:11t:11t.<f:1234
103 6  after   + after  ADP   IN  prep   5  -          -       B-ARGM-TMP I-ARG1 subsequently.r.01 after/Tt
103 7  five    + five   NUM   CD  nummod 8  B-TIME     -       I-ARGM-TMP I-ARG1 five.s.01         five/M#.<..t
103 8  minutes - minute NOUN  NNS pobj   6  I-TIME     -       I-ARGM-TMP I-ARG1 minute.n.01       minutes/Cc..p.t
103 9  ,       + ,      PUNCT ,   punct  2  -          -       -          -      -                 -
103 10 was     + be     AUX   VBD ROOT   10 -          be.01   -          B-V    be.v.01           was/Pd.sc:12:1h.<f:12
103 11 a       + a      DET   DT  det    12 -          -       -          B-ARG2 -                 a/Md.<
103 12 seven   - seven  NUM   CD  attr   10 B-CARDINAL -       -          I-ARG2 seven.n.01        seven/C#...c
103 13 .       - .      PUNCT .   punct  10 -          -       -          -      -                 -

# sent_i = 104
# sent = The garden that surrounds the house is overgrown with weeds.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (+/Jr.ma (the/Md.< garden/Cc..s) (surrounds/P.-so:112:11g.|f--3s:012 (the/Md.< garden/Cc..s) that/Cd (the/Md.< house/Cc..s))) (with/Br overgrown/Ca weeds/Cc..p))
# hyperedge builder = (104.6/Pd.sc:12:1h.|f--3s:12 (+/Jr.ma (104.0/Md.< 104.1/Cc..s) (104.3/P.-so:112:11g.|f--3s:012 (104.0/Md.< 104.1/Cc..s) 104.2/Cd (104.4/Md.< 104.5/Cc..s))) (104.8/Br 104.7/Ca 104.9/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
104 0  The       + the      DET   DT  det   1 - -           B-ARG1   B-ARG1 -              the/Md.<
104 1  garden    + garden   NOUN  NN  nsubj 6 - -           I-ARG1   I-ARG1 garden.n.03    garden/Cc..s
104 2  that      + that     DET   WDT nsubj 3 - -           B-R-ARG1 I-ARG1 -              that/Cd
104 3  surrounds + surround VERB  VBZ relcl 1 - surround.01 B-V      I-ARG1 surround.v.01  surrounds/P.-so:112:11g.|f--3s:012
104 4  the       + the      DET   DT  det   5 - -           B-ARG2   I-ARG1 -              the/Md.<
104 5  house     + house    NOUN  NN  dobj  3 - -           I-ARG2   I-ARG1 house.n.01     house/Cc..s
104 6  is        + be       AUX   VBZ ROOT  6 - be.01       -        B-V    be.v.01        is/Pd.sc:12:1h.|f--3s:12
104 7  overgrown + overgrow ADJ   JJ  acomp 6 - -           -        B-ARG2 overgrown.s.01 overgrown/Ca
104 8  with      + with     ADP   IN  prep  7 - -           -        I-ARG2 -              with/Br
104 9  weeds     - weed     NOUN  NNS pobj  8 - -           -        I-ARG2 weed.n.01      weeds/Cc..p
104 10 .         - .        PUNCT .   punct 6 - -           -        -      -              -

# sent_i = 105
# sent = Everybody I speak to seems to agree.
# hyperedge = (seems/Pd.sr:02:0g.|f--3s:12 (+/Jr.ma everybody/Ci..s (speak/P.-sx:20-:g0-.|f:0123 everybody/Ci..s i/Ci to/T)) ((to/Mi.< agree/P.-:0:0.-i:012) (+/Jr.ma everybody/Ci..s (speak/P.-sx:20-:g0-.|f:0123 everybody/Ci..s i/Ci to/T))))
# hyperedge builder = (105.4/Pd.sr:02:0g.|f--3s:12 (+/Jr.ma 105.0/Ci..s (105.2/P.-sx:20-:g0-.|f:0123 105.0/Ci..s 105.1/Ci 105.3/T)) ((105.5/Mi.< 105.6/P.-:0:0.-i:012) (+/Jr.ma 105.0/Ci..s (105.2/P.-sx:20-:g0-.|f:0123 105.0/Ci..s 105.1/Ci 105.3/T))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
105 0 Everybody + everybody PRON  NN  nsubj 4 - -        B-ARG2 B-ARG0 B-ARG0 -          everybody/Ci..s
105 1 I         + I         PRON  PRP nsubj 2 - -        B-ARG0 I-ARG0 I-ARG0 -          i/Ci
105 2 speak     + speak     VERB  VBP relcl 0 - speak.01 B-V    I-ARG0 I-ARG0 talk.v.01  speak/P.-sx:20-:g0-.|f:0123
105 3 to        + to        ADP   IN  prep  2 - -        -      I-ARG0 I-ARG0 -          to/T
105 4 seems     + seem      VERB  VBZ ROOT  4 - seem.01  -      B-V    -      look.v.02  seems/Pd.sr:02:0g.|f--3s:12
105 5 to        + to        PART  TO  aux   6 - -        -      B-ARG2 -      -          to/Mi.<
105 6 agree     - agree     VERB  VB  xcomp 4 - agree.01 -      I-ARG2 B-V    agree.v.01 agree/P.-:0:0.-i:012
105 7 .         - .         PUNCT .   punct 4 - -        -      -      -      -          -

# sent_i = 106
# sent = The route he took is a little shorter.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (+/Jr.ma (the/Md.< route/Cc..s) (took/P.-s:10:10.<f:0123 (the/Md.< route/Cc..s) he/Ci)) ((a/Md.< little/Ma.<) shorter/Ca))
# hyperedge builder = (106.4/Pd.sc:12:1h.|f--3s:12 (+/Jr.ma (106.0/Md.< 106.1/Cc..s) (106.3/P.-s:10:10.<f:0123 (106.0/Md.< 106.1/Cc..s) 106.2/Ci)) ((106.5/Md.< 106.6/Ma.<) 106.7/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
106 0 The     + the    DET   DT  det   1 - -       B-ARG1 B-ARG1 -           the/Md.<
106 1 route   + route  NOUN  NN  nsubj 4 - -       I-ARG1 I-ARG1 path.n.03   route/Cc..s
106 2 he      + he     PRON  PRP nsubj 3 - -       B-ARG0 I-ARG1 -           he/Ci
106 3 took    + take   VERB  VBD relcl 1 - take.01 B-V    I-ARG1 take.v.09   took/P.-s:10:10.<f:0123
106 4 is      + be     AUX   VBZ ROOT  4 - be.01   -      B-V    be.v.01     is/Pd.sc:12:1h.|f--3s:12
106 5 a       + a      DET   DT  det   6 - -       -      B-ARG2 -           a/Md.<
106 6 little  + little ADJ   JJ  amod  7 - -       -      I-ARG2 little.r.01 little/Ma.<
106 7 shorter - short  ADJ   JJR acomp 4 - -       -      I-ARG2 short.a.02  shorter/Ca
106 8 .       - .      PUNCT .   punct 4 - -       -      -      -           -

# sent_i = 107
# sent = A man whose life is at stake may use desperate measures.
# hyperedge = ((may/Mm.< use/Pd.so:01:01.-i:012) (+/Jr.ma (a/Md.< man/Cc..s) (is/P.-sx:112:11h.|f--3s:12 (a/Md.< man/Cc..s) (whose/Mp life/Cc..s) (at/T stake/Cc..s))) (desperate/Ma.< measures/Cc..p))
# hyperedge builder = ((107.7/Mm.< 107.8/Pd.so:01:01.-i:012) (+/Jr.ma (107.0/Md.< 107.1/Cc..s) (107.4/P.-sx:112:11h.|f--3s:12 (107.0/Md.< 107.1/Cc..s) (107.2/Mp 107.3/Cc..s) (107.5/T 107.6/Cc..s))) (107.9/Ma.< 107.10/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
107 0  A         + a         DET   DT  det   1  - -      B-ARG1   -   B-ARG0     -                      a/Md.<
107 1  man       + man       NOUN  NN  nsubj 8  - -      I-ARG1   -   I-ARG0     man.n.01               man/Cc..s
107 2  whose     + whose     DET   WP$ poss  3  - -      B-R-ARG1 -   I-ARG0     -                      whose/Mp
107 3  life      + life      NOUN  NN  nsubj 4  - -      I-R-ARG1 -   I-ARG0     animation.n.01         life/Cc..s
107 4  is        + be        VERB  VBZ relcl 1  - be.01  B-V      -   I-ARG0     be.v.01                is/P.-sx:112:11h.|f--3s:12
107 5  at        + at        ADP   IN  prep  4  - -      B-ARG2   -   I-ARG0     at_stake.r.02          at/T
107 6  stake     + stake     NOUN  NN  pobj  5  - -      I-ARG2   -   I-ARG0     at_stake.r.02          stake/Cc..s
107 7  may       + may       AUX   MD  aux   8  - -      -        B-V B-ARGM-MOD -                      may/Mm.<
107 8  use       + use       VERB  VB  ROOT  8  - use.01 -        -   B-V        use.v.01               use/Pd.so:01:01.-i:012
107 9  desperate + desperate ADJ   JJ  amod  10 - -      -        -   B-ARG1     desperate_measure.n.01 desperate/Ma.<
107 10 measures  - measure   NOUN  NNS dobj  8  - -      -        -   I-ARG1     desperate_measure.n.01 measures/Cc..p
107 11 .         - .         PUNCT .   punct 8  - -      -        -   -          -                      -

# sent_i = 108
# sent = I know a place where the wild thyme grows.
# hyperedge = (know/Pd.so:01:01.|f:012 i/Ci (+/Jr.ma (a/Md.< place/Cc..s) (grows/P.-?s:ll1:llh.|f--3s:012 (a/Md.< place/Cc..s) where/Mw (the/Md.< (wild/Ma.< thyme/Cc..s)))))
# hyperedge builder = (108.1/Pd.so:01:01.|f:012 108.0/Ci (+/Jr.ma (108.2/Md.< 108.3/Cc..s) (108.8/P.-?s:ll1:llh.|f--3s:012 (108.2/Md.< 108.3/Cc..s) 108.4/Mw (108.5/Md.< (108.6/Ma.< 108.7/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
108 0 I     + I     PRON  PRP nsubj  1 - -       B-ARG0 -            -                      i/Ci
108 1 know  + know  VERB  VBP ROOT   1 - know.01 B-V    -            know.v.01              know/Pd.so:01:01.|f:012
108 2 a     + a     DET   DT  det    3 - -       B-ARG1 B-ARGM-LOC   -                      a/Md.<
108 3 place + place NOUN  NN  dobj   1 - -       I-ARG1 I-ARGM-LOC   topographic_point.n.01 place/Cc..s
108 4 where + where ADV   WRB advmod 8 - -       I-ARG1 B-R-ARGM-LOC -                      where/Mw
108 5 the   + the   DET   DT  det    7 - -       I-ARG1 B-ARG1       -                      the/Md.<
108 6 wild  + wild  ADJ   JJ  amod   7 - -       I-ARG1 I-ARG1       wild_thyme.n.01        wild/Ma.<
108 7 thyme + thyme NOUN  NN  nsubj  8 - -       I-ARG1 I-ARG1       wild_thyme.n.01        thyme/Cc..s
108 8 grows - grow  VERB  VBZ relcl  3 - grow.03 I-ARG1 B-V          grow.v.03              grows/P.-?s:ll1:llh.|f--3s:012
108 9 .     - .     PUNCT .   punct  1 - -       -      -            -                      -

# sent_i = 109
# sent = This is a time when everyone must search his conscience.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 this/Cd (+/Jr.ma (a/Md.< time/Cc..s) ((must/Mm.< search/P.-?so:tt01:tt0l.-i:012) (a/Md.< time/Cc..s) when/Mw everyone/Ci..s ((+/Jc.rm.rr his/Mp everyone/Ci..s) conscience/Cc..s))))
# hyperedge builder = (109.1/Pd.sc:12:1h.|f--3s:12 109.0/Cd (+/Jr.ma (109.2/Md.< 109.3/Cc..s) ((109.6/Mm.< 109.7/P.-?so:tt01:tt0l.-i:012) (109.2/Md.< 109.3/Cc..s) 109.4/Mw 109.5/Ci..s ((+/Jc.rm.rr 109.8/Mp 109.5/Ci..s) 109.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
109 0  This       + this       DET   DT   nsubj  1 - -         B-ARG1 -   -            -       -               this/Cd
109 1  is         + be         AUX   VBZ  ROOT   1 - be.01     B-V    -   -            -       be.v.01         is/Pd.sc:12:1h.|f--3s:12
109 2  a          + a          DET   DT   det    3 - -         B-ARG2 -   B-ARGM-TMP   -       -               a/Md.<
109 3  time       + time       NOUN  NN   attr   1 - -         I-ARG2 -   I-ARGM-TMP   -       time.n.03       time/Cc..s
109 4  when       + when       ADV   WRB  advmod 7 - -         I-ARG2 -   B-R-ARGM-TMP -       -               when/Mw
109 5  everyone   + everyone   PRON  NN   nsubj  7 - -         I-ARG2 -   B-ARG0       B-MAIN0 -               everyone/Ci..s
109 6  must       + must       AUX   MD   aux    7 - -         I-ARG2 B-V B-ARGM-MOD   -       -               must/Mm.<
109 7  search     + search     VERB  VB   relcl  3 - search.01 I-ARG2 -   B-V          -       search.v.02     search/P.-?so:tt01:tt0l.-i:012
109 8  his        + his        PRON  PRP$ poss   9 - -         I-ARG2 -   B-ARG1       B-REF0  -               his/Mp
109 9  conscience - conscience NOUN  NN   dobj   7 - -         I-ARG2 -   I-ARG1       -       conscience.n.01 conscience/Cc..s
109 10 .          - .          PUNCT .    punct  1 - -         -      -   -            -       -               -

# sent_i = 110
# sent = The bus coming now is ours.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (+/Jr.ma (the/Md.< bus/Cc..s) (coming/P.-?:1t:1t.|pg:1234 (the/Md.< bus/Cc..s) now/M)) ours/Ci)
# hyperedge builder = (110.4/Pd.sc:12:1h.|f--3s:12 (+/Jr.ma (110.0/Md.< 110.1/Cc..s) (110.2/P.-?:1t:1t.|pg:1234 (110.0/Md.< 110.1/Cc..s) 110.3/M)) 110.5/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
110 0 The    + the  DET   DT   det    1 - -       B-ARG1     B-ARG1 -           the/Md.<
110 1 bus    + bus  NOUN  NN   nsubj  4 - -       I-ARG1     I-ARG1 bus.n.01    bus/Cc..s
110 2 coming + come VERB  VBG  acl    1 - come.01 B-V        I-ARG1 arrive.v.01 coming/P.-?:1t:1t.|pg:1234
110 3 now    + now  ADV   RB   advmod 2 - -       B-ARGM-TMP I-ARG1 now.r.04    now/M
110 4 is     + be   AUX   VBZ  ROOT   4 - be.01   -          B-V    be.v.01     is/Pd.sc:12:1h.|f--3s:12
110 5 ours   - ours PRON  PRP$ attr   4 - -       -          B-ARG2 -           ours/Ci
110 6 .      - .    PUNCT .    punct  4 - -       -          -      -           -

# sent_i = 111
# sent = The player injured in the leg had to leave the field.
# hyperedge = (had/Pd.sr:--:--.<f (+/Jr.ma (the/Md.< player/Cc..s) (injured/P.-x:1l:1l.<pf:012 (the/Md.< player/Cc..s) (in/Tl (the/Md.< leg/Cc..s)))) ((to/Mi.< leave/P.-o:01:0d.-i:012) (+/Jr.ma (the/Md.< player/Cc..s) (injured/P.-x:1l:1l.<pf:012 (the/Md.< player/Cc..s) (in/Tl (the/Md.< leg/Cc..s)))) (the/Md.< field/Cc..s)))
# hyperedge builder = (111.6/Pd.sr:--:--.<f (+/Jr.ma (111.0/Md.< 111.1/Cc..s) (111.2/P.-x:1l:1l.<pf:012 (111.0/Md.< 111.1/Cc..s) (111.3/Tl (111.4/Md.< 111.5/Cc..s)))) ((111.7/Mi.< 111.8/P.-o:01:0d.-i:012) (+/Jr.ma (111.0/Md.< 111.1/Cc..s) (111.2/P.-x:1l:1l.<pf:012 (111.0/Md.< 111.1/Cc..s) (111.3/Tl (111.4/Md.< 111.5/Cc..s)))) (111.9/Md.< 111.10/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
111 0  The     + the    DET   DT  det   1  - -         B-ARG1     -   B-ARG0     -                  the/Md.<
111 1  player  + player NOUN  NN  nsubj 6  - -         I-ARG1     -   I-ARG0     player.n.01        player/Cc..s
111 2  injured + injure VERB  VBN acl   1  - injure.01 B-V        -   I-ARG0     injure.v.01        injured/P.-x:1l:1l.<pf:012
111 3  in      + in     ADP   IN  prep  2  - -         B-ARGM-LOC -   I-ARG0     -                  in/Tl
111 4  the     + the    DET   DT  det   5  - -         I-ARGM-LOC -   I-ARG0     -                  the/Md.<
111 5  leg     + leg    NOUN  NN  pobj  3  - -         I-ARGM-LOC -   I-ARG0     leg.n.01           leg/Cc..s
111 6  had     + have   VERB  VBD ROOT  6  - have.02   -          B-V B-ARGM-MOD -                  had/Pd.sr:--:--.<f
111 7  to      + to     PART  TO  aux   8  - -         -          -   -          -                  to/Mi.<
111 8  leave   + leave  VERB  VB  xcomp 6  - leave.11  -          -   B-V        leave.v.01         leave/P.-o:01:0d.-i:012
111 9  the     + the    DET   DT  det   10 - -         -          -   B-ARG1     -                  the/Md.<
111 10 field   - field  NOUN  NN  dobj  8  - -         -          -   I-ARG1     playing_field.n.02 field/Cc..s
111 11 .       - .      PUNCT .   punct 6  - -         -          -   -          -                  -

# sent_i = 112
# sent = A body recovered from the River Severn at Tewkesbury at the weekend is thought to be a man who disappeared from the Midlands in January, police said yesterday.
# hyperedge = (said/Pd.rs?:10t:10t.<f:0123 ((is/Mv.< thought/P.pr:11:11.<pf:012) (+/Jr.ma (a/Md.< body/Cc..s) (recovered/P.-xxx:12lt:1dlt.<pf:012 (a/Md.< body/Cc..s) (from/T (the/Md.<..l (+/B.am..l river/Cp.<.s.l severn/Cp..s.l))) (at/Tl tewkesbury/Cp..s.g) (at/Tt (the/Md.<..d weekend/Cc..s.d)))) ((to/Mi.< be/P.-c:12:1h.-i:12) (+/Jr.ma (a/Md.< body/Cc..s) (recovered/P.-xxx:12lt:1dlt.<pf:012 (a/Md.< body/Cc..s) (from/T (the/Md.<..l (+/B.am..l river/Cp.<.s.l severn/Cp..s.l))) (at/Tl tewkesbury/Cp..s.g) (at/Tt (the/Md.<..d weekend/Cc..s.d)))) (+/Jr.ma (a/Md.< (+/Jc.rm.cc man/Cc..s (a/Md.< body/Cc..s))) (disappeared/P.-sxx:11lt:11lt.<f:01 (a/Md.< (+/Jc.rm.cc man/Cc..s (a/Md.< body/Cc..s))) who/Cw (from/Tl (the/Md.< midlands/Cp..s.g)) (in/Tt january/Cp..s.d))))) police/Cc..p yesterday/M...d)
# hyperedge builder = (112.27/Pd.rs?:10t:10t.<f:0123 ((112.12/Mv.< 112.13/P.pr:11:11.<pf:012) (+/Jr.ma (112.0/Md.< 112.1/Cc..s) (112.2/P.-xxx:12lt:1dlt.<pf:012 (112.0/Md.< 112.1/Cc..s) (112.3/T (112.4/Md.<..l (+/B.am..l 112.5/Cp.<.s.l 112.6/Cp..s.l))) (112.7/Tl 112.8/Cp..s.g) (112.9/Tt (112.10/Md.<..d 112.11/Cc..s.d)))) ((112.14/Mi.< 112.15/P.-c:12:1h.-i:12) (+/Jr.ma (112.0/Md.< 112.1/Cc..s) (112.2/P.-xxx:12lt:1dlt.<pf:012 (112.0/Md.< 112.1/Cc..s) (112.3/T (112.4/Md.<..l (+/B.am..l 112.5/Cp.<.s.l 112.6/Cp..s.l))) (112.7/Tl 112.8/Cp..s.g) (112.9/Tt (112.10/Md.<..d 112.11/Cc..s.d)))) (+/Jr.ma (112.16/Md.< (+/Jc.rm.cc 112.17/Cc..s (112.0/Md.< 112.1/Cc..s))) (112.19/P.-sxx:11lt:11lt.<f:01 (112.16/Md.< (+/Jc.rm.cc 112.17/Cc..s (112.0/Md.< 112.1/Cc..s))) 112.18/Cw (112.20/Tl (112.21/Md.< 112.22/Cp..s.g)) (112.23/Tt 112.24/Cp..s.d))))) 112.26/Cc..p 112.28/M...d)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 synset atoms
112 0  A           + a          DET   DT  det       1  -      -            B-ARG1     -   B-ARG1   B-ARG1 -          B-ARG1     B-MAIN0 -               a/Md.<
112 1  body        + body       NOUN  NN  nsubjpass 13 -      -            I-ARG1     -   I-ARG1   I-ARG1 -          I-ARG1     I-MAIN0 body.n.03       body/Cc..s
112 2  recovered   + recover    VERB  VBN acl       1  -      recover.02   B-V        -   I-ARG1   I-ARG1 -          I-ARG1     -       recover.v.01    recovered/P.-xxx:12lt:1dlt.<pf:012
112 3  from        + from       ADP   IN  prep      2  -      -            B-ARG2     -   I-ARG1   I-ARG1 -          I-ARG1     -       -               from/T
112 4  the         + the        DET   DT  det       6  B-LOC  -            I-ARG2     -   I-ARG1   I-ARG1 -          I-ARG1     -       -               the/Md.<..l
112 5  River       + River      PROPN NNP compound  6  I-LOC  -            I-ARG2     -   I-ARG1   I-ARG1 -          I-ARG1     -       severn.n.02     river/Cp.<.s.l
112 6  Severn      + Severn     PROPN NNP pobj      3  I-LOC  -            I-ARG2     -   I-ARG1   I-ARG1 -          I-ARG1     -       severn.n.02     severn/Cp..s.l
112 7  at          + at         ADP   IN  prep      2  -      -            B-ARGM-LOC -   I-ARG1   I-ARG1 -          I-ARG1     -       -               at/Tl
112 8  Tewkesbury  + Tewkesbury PROPN NNP pobj      7  B-GPE  -            I-ARGM-LOC -   I-ARG1   I-ARG1 -          I-ARG1     -       tewkesbury.n.01 tewkesbury/Cp..s.g
112 9  at          + at         ADP   IN  prep      2  -      -            B-ARGM-TMP -   I-ARG1   I-ARG1 -          I-ARG1     -       -               at/Tt
112 10 the         + the        DET   DT  det       11 B-DATE -            I-ARGM-TMP -   I-ARG1   I-ARG1 -          I-ARG1     -       -               the/Md.<..d
112 11 weekend     + weekend    NOUN  NN  pobj      9  I-DATE -            I-ARGM-TMP -   I-ARG1   I-ARG1 -          I-ARG1     -       weekend.n.01    weekend/Cc..s.d
112 12 is          + be         AUX   VBZ auxpass   13 -      be.03        -          B-V -        -      -          I-ARG1     -       -               is/Mv.<
112 13 thought     + think      VERB  VBN ccomp     27 -      think.01     -          -   B-V      -      -          I-ARG1     -       think.v.01      thought/P.pr:11:11.<pf:012
112 14 to          + to         PART  TO  aux       15 -      -            -          -   B-C-ARG1 -      -          I-ARG1     -       -               to/Mi.<
112 15 be          + be         VERB  VB  xcomp     13 -      be.01        -          -   I-C-ARG1 B-V    -          I-ARG1     -       be.v.01         be/P.-c:12:1h.-i:12
112 16 a           + a          DET   DT  det       17 -      -            -          -   I-C-ARG1 B-ARG2 B-ARG1     I-ARG1     -       -               a/Md.<
112 17 man         + man        NOUN  NN  attr      15 -      -            -          -   I-C-ARG1 I-ARG2 I-ARG1     I-ARG1     B-REF0  man.n.01        man/Cc..s
112 18 who         + who        PRON  WP  nsubj     19 -      -            -          -   I-C-ARG1 I-ARG2 B-R-ARG1   I-ARG1     -       -               who/Cw
112 19 disappeared + disappear  VERB  VBD relcl     17 -      disappear.01 -          -   I-C-ARG1 I-ARG2 B-V        I-ARG1     -       disappear.v.01  disappeared/P.-sxx:11lt:11lt.<f:01
112 20 from        + from       ADP   IN  prep      19 -      -            -          -   I-C-ARG1 I-ARG2 B-ARGM-LOC I-ARG1     -       -               from/Tl
112 21 the         + the        DET   DT  det       22 -      -            -          -   I-C-ARG1 I-ARG2 I-ARGM-LOC I-ARG1     -       -               the/Md.<
112 22 Midlands    + Midlands   PROPN NNP pobj      20 B-GPE  -            -          -   I-C-ARG1 I-ARG2 I-ARGM-LOC I-ARG1     -       -               midlands/Cp..s.g
112 23 in          + in         ADP   IN  prep      19 -      -            -          -   I-C-ARG1 I-ARG2 B-ARGM-TMP I-ARG1     -       -               in/Tt
112 24 January     - January    PROPN NNP pobj      23 B-DATE -            -          -   I-C-ARG1 I-ARG2 I-ARGM-TMP I-ARG1     -       january.n.01    january/Cp..s.d
112 25 ,           + ,          PUNCT ,   punct     27 -      -            -          -   -        -      -          -          -       -               -
112 26 police      + police     NOUN  NNS nsubj     27 -      -            -          -   -        -      -          B-ARG0     -       police.n.01     police/Cc..p
112 27 said        + say        VERB  VBD ROOT      27 -      say.01       -          -   -        -      -          B-V        -       allege.v.01     said/Pd.rs?:10t:10t.<f:0123
112 28 yesterday   - yesterday  ADV   RB  advmod    27 B-DATE -            -          -   -        -      -          B-ARGM-TMP -       yesterday.r.01  yesterday/M...d
112 29 .           - .          PUNCT .   punct     27 -      -            -          -   -        -      -          -          -       -               -

# sent_i = 113
# sent = United were the first team to score.
# hyperedge = (were/Pd.sc:12:1h.<f:12 united/Cp..s.o (+/Jr.ma (the/Md.< (first/Ma.<..# team/Cc..s)) ((to/Mi.< score/P.-:1:1.-i:01234) (the/Md.< (first/Ma.<..# team/Cc..s)))))
# hyperedge builder = (113.1/Pd.sc:12:1h.<f:12 113.0/Cp..s.o (+/Jr.ma (113.2/Md.< (113.3/Ma.<..# 113.4/Cc..s)) ((113.5/Mi.< 113.6/P.-:1:1.-i:01234) (113.2/Md.< (113.3/Ma.<..# 113.4/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
113 0 United + United PROPN NNP nsubj 1 B-ORG     -        B-ARG1 -      -          united/Cp..s.o
113 1 were   + be     AUX   VBD ROOT  1 -         be.01    B-V    -      be.v.01    were/Pd.sc:12:1h.<f:12
113 2 the    + the    DET   DT  det   4 -         -        B-ARG2 B-ARG1 -          the/Md.<
113 3 first  + first  ADJ   JJ  amod  4 B-ORDINAL -        I-ARG2 I-ARG1 first.a.01 first/Ma.<..#
113 4 team   + team   NOUN  NN  attr  1 -         -        I-ARG2 I-ARG1 team.n.01  team/Cc..s
113 5 to     + to     PART  TO  aux   6 -         -        I-ARG2 -      -          to/Mi.<
113 6 score  - score  VERB  VB  relcl 4 -         score.01 I-ARG2 B-V    score.v.01 score/P.-:1:1.-i:01234
113 7 .      - .      PUNCT .   punct 1 -         -        -      -      -          -

# sent_i = 114
# sent = The last person to leave will have to turn out the lights.
# hyperedge = ((will/Mm.< have/Pd.sr:--:--.-i) (+/Jr.ma (the/Md.< (last/Ma.< person/Cc..s)) ((to/Mi.< leave/P.-:0:0.-i:012) (the/Md.< (last/Ma.< person/Cc..s)))) ((to/Mi.< (out/Ml.r.> turn/P.-o:01:01.-i:01)) (+/Jr.ma (the/Md.< (last/Ma.< person/Cc..s)) ((to/Mi.< leave/P.-:0:0.-i:012) (the/Md.< (last/Ma.< person/Cc..s)))) (the/Md.< lights/Cc..p)))
# hyperedge builder = ((114.5/Mm.< 114.6/Pd.sr:--:--.-i) (+/Jr.ma (114.0/Md.< (114.1/Ma.< 114.2/Cc..s)) ((114.3/Mi.< 114.4/P.-:0:0.-i:012) (114.0/Md.< (114.1/Ma.< 114.2/Cc..s)))) ((114.7/Mi.< (114.9/Ml.r.> 114.8/P.-o:01:01.-i:01)) (+/Jr.ma (114.0/Md.< (114.1/Ma.< 114.2/Cc..s)) ((114.3/Mi.< 114.4/P.-:0:0.-i:012) (114.0/Md.< (114.1/Ma.< 114.2/Cc..s)))) (114.10/Md.< 114.11/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
114 0  The    + the    DET   DT  det   2  - -           B-ARG0 -   -   B-ARG0     -               the/Md.<
114 1  last   + last   ADJ   JJ  amod  2  - -           I-ARG0 -   -   I-ARG0     last.a.02       last/Ma.<
114 2  person + person NOUN  NN  nsubj 6  - -           I-ARG0 -   -   I-ARG0     person.n.01     person/Cc..s
114 3  to     + to     PART  TO  aux   4  - -           -      -   -   I-ARG0     -               to/Mi.<
114 4  leave  + leave  VERB  VB  relcl 2  - leave.11    B-V    -   -   I-ARG0     leave.v.01      leave/P.-:0:0.-i:012
114 5  will   + will   AUX   MD  aux   6  - -           -      B-V -   -          -               will/Mm.<
114 6  have   + have   VERB  VB  ROOT  6  - have.02     -      -   B-V B-ARGM-MOD -               have/Pd.sr:--:--.-i
114 7  to     + to     PART  TO  aux   8  - -           -      -   -   -          -               to/Mi.<
114 8  turn   + turn   VERB  VB  xcomp 6  - turn_out.09 -      -   -   B-V        switch_off.v.01 turn/P.-o:01:01.-i:01
114 9  out    + out    ADP   RP  prt   8  - -           -      -   -   -          switch_off.v.01 out/Ml.r.>
114 10 the    + the    DET   DT  det   11 - -           -      -   -   B-ARG1     -               the/Md.<
114 11 lights - light  NOUN  NNS dobj  8  - -           -      -   -   I-ARG1     light.n.02      lights/Cc..p
114 12 .      - .      PUNCT .   punct 6  - -           -      -   -   -          -               -

# sent_i = 115
# sent = If the weather is too unpleasant, we'll postpone the picnic.
# hyperedge = (('ll/Mm.< postpone/Pd.xso:r01:r01.-i:01234) (if/T (is/P.sc:12:1h.|f--3s:12 (the/Md.< weather/Cc..s) (too/M.< unpleasant/Ca))) we/Ci (the/Md.< picnic/Cc..s))
# hyperedge builder = ((115.8/Mm.< 115.9/Pd.xso:r01:r01.-i:01234) (115.0/T (115.3/P.sc:12:1h.|f--3s:12 (115.1/Md.< 115.2/Cc..s) (115.4/M.< 115.5/Ca))) 115.7/Ci (115.10/Md.< 115.11/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
115 0  If         + if         SCONJ IN  mark   3  - -           -      -   B-ARGM-ADV -                if/T
115 1  the        + the        DET   DT  det    2  - -           B-ARG1 -   I-ARGM-ADV -                the/Md.<
115 2  weather    + weather    NOUN  NN  nsubj  3  - -           I-ARG1 -   I-ARGM-ADV weather.n.01     weather/Cc..s
115 3  is         + be         VERB  VBZ advcl  9  - be.01       B-V    -   I-ARGM-ADV be.v.01          is/P.sc:12:1h.|f--3s:12
115 4  too        + too        ADV   RB  advmod 5  - -           B-ARG2 -   I-ARGM-ADV excessively.r.01 too/M.<
115 5  unpleasant - unpleasant ADJ   JJ  acomp  3  - -           I-ARG2 -   I-ARGM-ADV unpleasant.a.01  unpleasant/Ca
115 6  ,          + ,          PUNCT ,   punct  9  - -           -      -   -          -                -
115 7  we         - we         PRON  PRP nsubj  9  - -           -      -   B-ARG0     -                we/Ci
115 8  'll        + will       AUX   MD  aux    9  - -           -      B-V B-ARGM-MOD -                'll/Mm.<
115 9  postpone   + postpone   VERB  VB  ROOT   9  - postpone.01 -      -   B-V        postpone.v.01    postpone/Pd.xso:r01:r01.-i:01234
115 10 the        + the        DET   DT  det    11 - -           -      -   B-ARG1     -                the/Md.<
115 11 picnic     - picnic     NOUN  NN  dobj   9  - -           -      -   I-ARG1     field_day.n.04   picnic/Cc..s
115 12 .          - .          PUNCT .   punct  9  - -           -      -   -          -                -

# sent_i = 116
# sent = I made mistakes because I was tired.
# hyperedge = (made/Pd.sox:01c:0hc.<f:0123 i/Ci mistakes/Cc..p (because/T (was/P.sc:12:1h.<f:12 i/Ci tired/Ca)))
# hyperedge builder = (116.1/Pd.sox:01c:0hc.<f:0123 116.0/Ci 116.2/Cc..p (116.3/T (116.5/P.sc:12:1h.<f:12 116.4/Ci 116.6/Ca)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
116 0 I        + I       PRON  PRP nsubj 1 - -       B-ARG0     -      B-MAIN0 -            i/Ci
116 1 made     + make    VERB  VBD ROOT  1 - make.01 B-V        -      -       make.v.24    made/Pd.sox:01c:0hc.<f:0123
116 2 mistakes + mistake NOUN  NNS dobj  1 - -       B-ARG1     -      -       mistake.n.01 mistakes/Cc..p
116 3 because  + because SCONJ IN  mark  5 - -       B-ARGM-CAU -      -       -            because/T
116 4 I        + I       PRON  PRP nsubj 5 - -       I-ARGM-CAU B-ARG1 B-REF0  -            i/Ci
116 5 was      + be      VERB  VBD advcl 1 - be.01   I-ARGM-CAU B-V    -       be.v.01      was/P.sc:12:1h.<f:12
116 6 tired    - tired   ADJ   JJ  acomp 5 - -       I-ARGM-CAU B-ARG2 -       tired.a.01   tired/Ca
116 7 .        - .       PUNCT .   punct 1 - -       -          -      -       -            -

# sent_i = 117
# sent = As the weather is often warm, many of the homes have swimming pools.
# hyperedge = (have/Pd.xso:c01:c01.|f:01 (as/T (is/P.s?c:1t2:1th.|f--3s:12 (the/Md.< weather/Cc..s) often/M warm/Ca)) (of/Br many/M (the/Md.< homes/Cc..p)) (+/B.am swimming/Cc.<.s pools/Cc..p))
# hyperedge builder = (117.11/Pd.xso:c01:c01.|f:01 (117.0/T (117.3/P.s?c:1t2:1th.|f--3s:12 (117.1/Md.< 117.2/Cc..s) 117.4/M 117.5/Ca)) (117.8/Br 117.7/M (117.9/Md.< 117.10/Cc..p)) (+/B.am 117.12/Cc.<.s 117.13/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
117 0  As       + as       SCONJ IN  mark     3  - -       -          B-ARGM-CAU -                  as/T
117 1  the      + the      DET   DT  det      2  - -       B-ARG1     I-ARGM-CAU -                  the/Md.<
117 2  weather  + weather  NOUN  NN  nsubj    3  - -       I-ARG1     I-ARGM-CAU weather.n.01       weather/Cc..s
117 3  is       + be       VERB  VBZ advcl    11 - be.01   B-V        I-ARGM-CAU be.v.01            is/P.s?c:1t2:1th.|f--3s:12
117 4  often    + often    ADV   RB  advmod   3  - -       B-ARGM-TMP I-ARGM-CAU frequently.r.01    often/M
117 5  warm     - warm     ADJ   JJ  acomp    3  - -       B-ARG2     I-ARGM-CAU warm.a.01          warm/Ca
117 6  ,        + ,        PUNCT ,   punct    11 - -       -          -          -                  -
117 7  many     + many     ADJ   JJ  nsubj    11 - -       -          B-ARG0     many.a.01          many/M
117 8  of       + of       ADP   IN  prep     7  - -       -          I-ARG0     -                  of/Br
117 9  the      + the      DET   DT  det      10 - -       -          I-ARG0     -                  the/Md.<
117 10 homes    + home     NOUN  NNS pobj     8  - -       -          I-ARG0     dwelling.n.01      homes/Cc..p
117 11 have     + have     VERB  VBP ROOT     11 - have.03 -          B-V        have.v.01          have/Pd.xso:c01:c01.|f:01
117 12 swimming + swimming NOUN  NN  compound 13 - -       -          B-ARG1     swimming_pool.n.01 swimming/Cc.<.s
117 13 pools    - pool     NOUN  NNS dobj     11 - -       -          I-ARG1     swimming_pool.n.01 pools/Cc..p
117 14 .        - .        PUNCT .   punct    11 - -       -          -          -                  -

# sent_i = 118
# sent = Since no one asked me, I didn't tell them.
# hyperedge = ((did/Mv.< (n't/Mn.< tell/Pd.xso:c02:c0g.-i:012)) (since/T (asked/P.so:02:0g.<f:0123 (no/Md.< one/Cc..s) (+/Jc.rm.rr me/Ci i/Ci))) i/Ci (+/Jc.rm.rc them/Ci (no/Md.< one/Cc..s)))
# hyperedge builder = ((118.7/Mv.< (118.8/Mn.< 118.9/Pd.xso:c02:c0g.-i:012)) (118.0/T (118.3/P.so:02:0g.<f:0123 (118.1/Md.< 118.2/Cc..s) (+/Jc.rm.rr 118.4/Ci 118.6/Ci))) 118.6/Ci (+/Jc.rm.rc 118.10/Ci (118.1/Md.< 118.2/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 coref2 synset atoms
118 0  Since + since SCONJ IN  mark  3 - -       -      -   B-ARGM-CAU -       -       -         since/T
118 1  no    + no    DET   DT  det   2 - -       B-ARG0 -   I-ARGM-CAU B-MAIN0 -       no.a.01   no/Md.<
118 2  one   + one   NOUN  NN  nsubj 3 - -       I-ARG0 -   I-ARGM-CAU I-MAIN0 -       one.n.02  one/Cc..s
118 3  asked + ask   VERB  VBD advcl 9 - ask.01  B-V    -   I-ARGM-CAU -       -       ask.v.01  asked/P.so:02:0g.<f:0123
118 4  me    - I     PRON  PRP dobj  3 - -       B-ARG2 -   I-ARGM-CAU -       B-REF1  -         me/Ci
118 5  ,     + ,     PUNCT ,   punct 9 - -       -      -   -          -       -       -         -
118 6  I     + I     PRON  PRP nsubj 9 - -       -      -   B-ARG0     -       B-MAIN1 -         i/Ci
118 7  did   - do    AUX   VBD aux   9 - do.01   -      B-V -          -       -       -         did/Mv.<
118 8  n't   + not   PART  RB  neg   9 - -       -      -   B-ARGM-NEG -       -       -         n't/Mn.<
118 9  tell  + tell  VERB  VB  ROOT  9 - tell.01 -      -   B-V        -       -       tell.v.02 tell/Pd.xso:c02:c0g.-i:012
118 10 them  - they  PRON  PRP dobj  9 - -       -      -   B-ARG2     B-REF0  -       -         them/Ci
118 11 .     - .     PUNCT .   punct 9 - -       -      -   -          -       -       -         -

# sent_i = 119
# sent = Before you go, turn off the radio.
# hyperedge = ((off/Ml.r.> turn/Pd.xo:t1:t1.-i:01) (before/T (go/P.s:0:1.|f:0134 you/Ci)) (the/Md.< radio/Cc..s))
# hyperedge builder = ((119.5/Ml.r.> 119.4/Pd.xo:t1:t1.-i:01) (119.0/T (119.2/P.s:0:1.|f:0134 119.1/Ci)) (119.6/Md.< 119.7/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
119 0 Before + before ADP   IN  mark  2 - -           -      B-ARGM-TMP earlier.r.01    before/T
119 1 you    + you    PRON  PRP nsubj 2 - -           B-ARG0 I-ARGM-TMP -               you/Ci
119 2 go     - go     VERB  VBP advcl 4 - go.02       B-V    I-ARGM-TMP go.v.03         go/P.s:0:1.|f:0134
119 3 ,      + ,      PUNCT ,   punct 4 - -           -      -          -               -
119 4 turn   + turn   VERB  VB  ROOT  4 - turn_off.07 -      B-V        switch_off.v.01 turn/Pd.xo:t1:t1.-i:01
119 5 off    + off    ADP   RP  prt   4 - -           -      -          switch_off.v.01 off/Ml.r.>
119 6 the    + the    DET   DT  det   7 - -           -      B-ARG1     -               the/Md.<
119 7 radio  - radio  NOUN  NN  dobj  4 - -           -      I-ARG1     radio.n.01      radio/Cc..s
119 8 .      - .      PUNCT .   punct 4 - -           -      -          -               -

# sent_i = 120
# sent = It is only six months since the bill was signed.
# hyperedge = (is/Pd.scx:12t:1ht.|f--3s:12 it/Ci ((only/M.<..d six/M#.<..d) months/Cc..p.d) (since/T ((was/Mv.< signed/P.p:1:g.<pf:012) (the/Md.< bill/Cc..s))))
# hyperedge builder = (120.1/Pd.scx:12t:1ht.|f--3s:12 120.0/Ci ((120.2/M.<..d 120.3/M#.<..d) 120.4/Cc..p.d) (120.5/T ((120.8/Mv.< 120.9/P.p:1:g.<pf:012) (120.6/Md.< 120.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
120 0  It     + it    PRON  PRP nsubj     1 -      -       B-ARG1     -   -      -          it/Ci
120 1  is     + be    AUX   VBZ ROOT      1 -      be.01   B-V        -   -      be.v.01    is/Pd.scx:12t:1ht.|f--3s:12
120 2  only   + only  ADV   RB  advmod    3 B-DATE -       B-ARG2     -   -      only.r.07  only/M.<..d
120 3  six    + six   NUM   CD  nummod    4 I-DATE -       I-ARG2     -   -      six.a.01   six/M#.<..d
120 4  months + month NOUN  NNS attr      1 I-DATE -       I-ARG2     -   -      month.n.02 months/Cc..p.d
120 5  since  + since SCONJ IN  mark      9 -      -       B-ARGM-TMP -   -      -          since/T
120 6  the    + the   DET   DT  det       7 -      -       I-ARGM-TMP -   B-ARG1 -          the/Md.<
120 7  bill   + bill  NOUN  NN  nsubjpass 9 -      -       I-ARGM-TMP -   I-ARG1 bill.n.01  bill/Cc..s
120 8  was    + be    AUX   VBD auxpass   9 -      be.03   I-ARGM-TMP B-V -      -          was/Mv.<
120 9  signed - sign  VERB  VBN advcl     1 -      sign.01 I-ARGM-TMP -   B-V    sign.v.02  signed/P.p:1:g.<pf:012
120 10 .      - .     PUNCT .   punct     1 -      -       -          -   -      -          -

# sent_i = 121
# sent = Put the gun where the children can't find it.
# hyperedge = (put/Pd.ox:12:1g.-i:012 (the/Md.< gun/Cc..s) ((ca/Mm.< (n't/Mn.< find/P.?so:l01:l01.-i:012)) where/Mw (the/Md.< children/Cc..p) (+/Jc.rm.rc it/Ci (the/Md.< gun/Cc..s))))
# hyperedge builder = (121.0/Pd.ox:12:1g.-i:012 (121.1/Md.< 121.2/Cc..s) ((121.6/Mm.< (121.7/Mn.< 121.8/P.?so:l01:l01.-i:012)) 121.3/Mw (121.4/Md.< 121.5/Cc..p) (+/Jc.rm.rc 121.9/Ci (121.1/Md.< 121.2/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
121 0  Put      + put   VERB  VB  ROOT   0 - put.01  B-V    -   -          -       put.v.01   put/Pd.ox:12:1g.-i:012
121 1  the      + the   DET   DT  det    2 - -       B-ARG1 -   -          B-MAIN0 -          the/Md.<
121 2  gun      + gun   NOUN  NN  dobj   0 - -       I-ARG1 -   -          I-MAIN0 gun.n.01   gun/Cc..s
121 3  where    + where ADV   WRB advmod 8 - -       B-ARG2 -   B-ARGM-LOC -       -          where/Mw
121 4  the      + the   DET   DT  det    5 - -       I-ARG2 -   B-ARG0     -       -          the/Md.<
121 5  children + child NOUN  NNS nsubj  8 - -       I-ARG2 -   I-ARG0     -       child.n.01 children/Cc..p
121 6  ca       - can   AUX   MD  aux    8 - -       I-ARG2 B-V B-ARGM-MOD -       -          ca/Mm.<
121 7  n't      + not   PART  RB  neg    8 - -       I-ARG2 -   B-ARGM-NEG -       -          n't/Mn.<
121 8  find     + find  VERB  VB  advcl  0 - find.01 I-ARG2 -   B-V        -       find.v.01  find/P.?so:l01:l01.-i:012
121 9  it       - it    PRON  PRP dobj   8 - -       I-ARG2 -   B-ARG1     B-REF0  -          it/Ci
121 10 .        - .     PUNCT .   punct  0 - -       -      -   -          -       -          -

# sent_i = 122
# sent = I'll go wherever he sends me.
# hyperedge = (('ll/Mm.< go/Pd.sx:04:1g.-i:0134) i/Ci (sends/P.?so:401:401.|f--3s:012 wherever/Mw he/Ci (+/Jc.rm.rr me/Ci i/Ci)))
# hyperedge builder = ((122.1/Mm.< 122.2/Pd.sx:04:1g.-i:0134) 122.0/Ci (122.5/P.?so:401:401.|f--3s:012 122.3/Mw 122.4/Ci (+/Jc.rm.rr 122.6/Ci 122.0/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
122 0 I        - I        PRON  PRP nsubj  2 - -       -   B-ARG0     -      B-MAIN0 -             i/Ci
122 1 'll      + will     AUX   MD  aux    2 - -       B-V B-ARGM-MOD -      -       -             'll/Mm.<
122 2 go       + go       VERB  VB  ROOT   2 - go.02   -   B-V        -      -       travel.v.01   go/Pd.sx:04:1g.-i:0134
122 3 wherever + wherever ADV   WRB advmod 5 - -       -   B-ARG4     B-ARG4 -       wherever.r.01 wherever/Mw
122 4 he       + he       PRON  PRP nsubj  5 - -       -   I-ARG4     B-ARG0 -       -             he/Ci
122 5 sends    + send     VERB  VBZ advcl  2 - send.02 -   I-ARG4     B-V    -       send.v.01     sends/P.?so:401:401.|f--3s:012
122 6 me       - I        PRON  PRP dobj   5 - -       -   I-ARG4     B-ARG1 B-REF0  -             me/Ci
122 7 .        - .        PUNCT .   punct  2 - -       -   -          -      -       -             -

# sent_i = 123
# sent = Everything worked out as he expected.
# hyperedge = ((out/Ml.r.> worked/Pd.sx:1m:1m.<f:012) everything/Ci..s (as/T (expected/P.s:0:0.<f:01 he/Ci)))
# hyperedge builder = ((123.2/Ml.r.> 123.1/Pd.sx:1m:1m.<f:012) 123.0/Ci..s (123.3/T (123.5/P.s:0:0.<f:01 123.4/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
123 0 Everything + everything PRON  NN  nsubj 1 - -           B-ARG1     -      -             everything/Ci..s
123 1 worked     + work       VERB  VBD ROOT  1 - work_out.02 B-V        -      work_out.v.02 worked/Pd.sx:1m:1m.<f:012
123 2 out        + out        ADP   RP  prt   1 - -           -          -      work_out.v.02 out/Ml.r.>
123 3 as         + as         SCONJ IN  mark  5 - -           B-ARGM-MNR -      -             as/T
123 4 he         + he         PRON  PRP nsubj 5 - -           I-ARGM-MNR B-ARG0 -             he/Ci
123 5 expected   - expect     VERB  VBD advcl 1 - expect.01   I-ARGM-MNR B-V    expect.v.01   expected/P.s:0:0.<f:01
123 6 .          - .          PUNCT .   punct 1 - -           -          -      -             -

# sent_i = 124
# sent = We must behave as if everything were normal.
# hyperedge = ((must/Mm.< behave/Pd.sx:01:0h.-i:01) we/Ci (as/T (if/T (were/P.sc:12:1h.<f:12 everything/Ci..s normal/Ca))))
# hyperedge builder = ((124.1/Mm.< 124.2/Pd.sx:01:0h.-i:01) 124.0/Ci (124.3/T (124.4/T (124.6/P.sc:12:1h.<f:12 124.5/Ci..s 124.7/Ca))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
124 0 We         + we         PRON  PRP nsubj 2 - -         -   B-ARG0     -      -           we/Ci
124 1 must       + must       AUX   MD  aux   2 - -         B-V B-ARGM-MOD -      -           must/Mm.<
124 2 behave     + behave     VERB  VB  ROOT  2 - behave.01 -   B-V        -      act.v.02    behave/Pd.sx:01:0h.-i:01
124 3 as         + as         SCONJ IN  mark  6 - -         -   B-ARG1     -      -           as/T
124 4 if         + if         SCONJ IN  mark  6 - -         -   I-ARG1     -      -           if/T
124 5 everything + everything PRON  NN  nsubj 6 - -         -   I-ARG1     B-ARG1 -           everything/Ci..s
124 6 were       + be         VERB  VBD advcl 2 - be.01     -   I-ARG1     B-V    be.v.01     were/P.sc:12:1h.<f:12
124 7 normal     - normal     ADJ   JJ  acomp 6 - -         -   I-ARG1     B-ARG2 normal.a.01 normal/Ca
124 8 .          - .          PUNCT .   punct 2 - -         -   -          -      -           -

# sent_i = 125
# sent = Because we couldn't get the motor running, we had to row back to the dock.
# hyperedge = (had/Pd.xsr:c--:!--.<f (because/T ((could/Mm.< (n't/Mn.< get/P.sr:01:01.-i:01)) we/Ci (running/P.s:1:1.|pg:01234 (the/Md.< motor/Cc..s)))) we/Ci ((to/Mi.< row/P.-?:0d:0d.-i:01) we/Ci (to/Br back/M (the/Md.< dock/Cc..s))))
# hyperedge builder = (125.10/Pd.xsr:c--:!--.<f (125.0/T ((125.2/Mm.< (125.3/Mn.< 125.4/P.sr:01:01.-i:01)) 125.1/Ci (125.7/P.s:1:1.|pg:01234 (125.5/Md.< 125.6/Cc..s)))) 125.9/Ci ((125.11/Mi.< 125.12/P.-?:0d:0d.-i:01) 125.9/Ci (125.14/Br 125.13/M (125.15/Md.< 125.16/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
125 0  Because + because SCONJ IN  mark   4  - -       -   -          -      B-ARGM-CAU -          -       -          because/T
125 1  we      + we      PRON  PRP nsubj  4  - -       -   B-ARG0     -      I-ARGM-CAU -          B-MAIN0 -          we/Ci
125 2  could   - could   AUX   MD  aux    4  - -       B-V B-ARGM-MOD -      I-ARGM-CAU -          -       -          could/Mm.<
125 3  n't     + not     PART  RB  neg    4  - -       -   B-ARGM-NEG -      I-ARGM-CAU -          -       -          n't/Mn.<
125 4  get     + get     VERB  VB  advcl  10 - get.04  -   B-V        -      I-ARGM-CAU -          -       get.v.03   get/P.sr:01:01.-i:01
125 5  the     + the     DET   DT  det    6  - -       -   B-ARG1     B-ARG1 I-ARGM-CAU -          -       -          the/Md.<
125 6  motor   + motor   NOUN  NN  nsubj  7  - -       -   I-ARG1     I-ARG1 I-ARGM-CAU -          -       motor.n.01 motor/Cc..s
125 7  running - run     VERB  VBG ccomp  4  - run.01  -   I-ARG1     B-V    I-ARGM-CAU -          -       run.v.13   running/P.s:1:1.|pg:01234
125 8  ,       + ,       PUNCT ,   punct  10 - -       -   -          -      -          -          -       -          -
125 9  we      + we      PRON  PRP nsubj  10 - -       -   -          -      -          B-ARG0     B-REF0  -          we/Ci
125 10 had     + have    VERB  VBD ROOT   10 - have.02 -   -          -      B-V        B-ARGM-MOD -       -          had/Pd.xsr:c--:!--.<f
125 11 to      + to      PART  TO  aux    12 - -       -   -          -      -          -          -       -          to/Mi.<
125 12 row     + row     VERB  VB  xcomp  10 - row.01  -   -          -      -          B-V        -       row.v.01   row/P.-?:0d:0d.-i:01
125 13 back    + back    ADV   RB  advmod 12 - -       -   -          -      -          B-ARGM-DIR -       back.r.01  back/M
125 14 to      + to      ADP   IN  prep   13 - -       -   -          -      -          I-ARGM-DIR -       -          to/Br
125 15 the     + the     DET   DT  det    16 - -       -   -          -      -          I-ARGM-DIR -       -          the/Md.<
125 16 dock    - dock    NOUN  NN  pobj   14 - -       -   -          -      -          I-ARGM-DIR -       pier.n.01  dock/Cc..s
125 17 .       - .       PUNCT .   punct  10 - -       -   -          -      -          -          -       -          -

# sent_i = 126
# sent = Since no one else will volunteer, I'll do the cooking.
# hyperedge = (('ll/Mm.< do/Pd.xso:c01:c01.-i:01234) (since/T ((will/Mm.< volunteer/P.s:0:0.-i:012) (else/M.> (no/Md.< one/Cc..s)))) i/Ci (the/Md.< cooking/Cc..s))
# hyperedge builder = ((126.8/Mm.< 126.9/Pd.xso:c01:c01.-i:01234) (126.0/T ((126.4/Mm.< 126.5/P.s:0:0.-i:012) (126.3/M.> (126.1/Md.< 126.2/Cc..s)))) 126.7/Ci (126.10/Md.< 126.11/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
126 0  Since     + since     SCONJ IN  mark   5  - -            -   -          B-ARGM-CAU B-ARGM-CAU -              since/T
126 1  no        + no        DET   DT  det    2  - -            -   B-ARG0     I-ARGM-CAU I-ARGM-CAU no.a.01        no/Md.<
126 2  one       + one       NOUN  NN  nsubj  5  - -            -   I-ARG0     I-ARGM-CAU I-ARGM-CAU one.n.02       one/Cc..s
126 3  else      + else      ADV   RB  advmod 2  - -            -   I-ARG0     I-ARGM-CAU I-ARGM-CAU -              else/M.>
126 4  will      + will      AUX   MD  aux    5  - -            B-V B-ARGM-MOD I-ARGM-CAU I-ARGM-CAU -              will/Mm.<
126 5  volunteer - volunteer VERB  VB  advcl  9  - volunteer.01 -   B-V        I-ARGM-CAU I-ARGM-CAU volunteer.v.02 volunteer/P.s:0:0.-i:012
126 6  ,         + ,         PUNCT ,   punct  9  - -            -   -          -          -          -              -
126 7  I         - I         PRON  PRP nsubj  9  - -            -   -          -          B-ARG0     -              i/Ci
126 8  'll       + will      AUX   MD  aux    9  - -            -   -          B-V        B-ARGM-MOD -              'll/Mm.<
126 9  do        + do        VERB  VB  ROOT   9  - do.02        -   -          -          B-V        perform.v.01   do/Pd.xso:c01:c01.-i:01234
126 10 the       + the       DET   DT  det    11 - -            -   -          -          B-ARG1     -              the/Md.<
126 11 cooking   - cooking   NOUN  NN  dobj   9  - -            -   -          -          I-ARG1     cooking.n.01   cooking/Cc..s
126 12 .         - .         PUNCT .   punct  9  - -            -   -          -          -          -              -

# sent_i = 127
# sent = While the large universities have many advantages, I still prefer a small college.
# hyperedge = (prefer/Pd.xs?o:r0t1:r0t1.|f:012 (while/T (have/P.so:01:01.|f:01 (the/Md.< (large/Ma.< universities/Cc..p)) (many/Ma.< advantages/Cc..p))) i/Ci still/M (a/Md.< (small/Ma.< college/Cc..s)))
# hyperedge builder = (127.10/Pd.xs?o:r0t1:r0t1.|f:012 (127.0/T (127.4/P.so:01:01.|f:01 (127.1/Md.< (127.2/Ma.< 127.3/Cc..p)) (127.5/Ma.< 127.6/Cc..p))) 127.8/Ci 127.9/M (127.11/Md.< (127.12/Ma.< 127.13/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
127 0  While        + while      SCONJ IN  mark   4  - -         -      B-ARGM-ADV -               while/T
127 1  the          + the        DET   DT  det    3  - -         B-ARG0 I-ARGM-ADV -               the/Md.<
127 2  large        + large      ADJ   JJ  amod   3  - -         I-ARG0 I-ARGM-ADV large.a.01      large/Ma.<
127 3  universities + university NOUN  NNS nsubj  4  - -         I-ARG0 I-ARGM-ADV university.n.03 universities/Cc..p
127 4  have         + have       VERB  VBP advcl  10 - have.03   B-V    I-ARGM-ADV have.v.01       have/P.so:01:01.|f:01
127 5  many         + many       ADJ   JJ  amod   6  - -         B-ARG1 I-ARGM-ADV many.a.01       many/Ma.<
127 6  advantages   - advantage  NOUN  NNS dobj   4  - -         I-ARG1 I-ARGM-ADV advantage.n.01  advantages/Cc..p
127 7  ,            + ,          PUNCT ,   punct  10 - -         -      -          -               -
127 8  I            + I          PRON  PRP nsubj  10 - -         -      B-ARG0     -               i/Ci
127 9  still        + still      ADV   RB  advmod 10 - -         -      B-ARGM-TMP still.r.01      still/M
127 10 prefer       + prefer     VERB  VBP ROOT   10 - prefer.01 -      B-V        prefer.v.01     prefer/Pd.xs?o:r0t1:r0t1.|f:012
127 11 a            + a          DET   DT  det    13 - -         -      B-ARG1     -               a/Md.<
127 12 small        + small      ADJ   JJ  amod   13 - -         -      I-ARG1     small.a.01      small/Ma.<
127 13 college      - college    NOUN  NN  dobj   10 - -         -      I-ARG1     college.n.02    college/Cc..s
127 14 .            - .          PUNCT .   punct  10 - -         -      -          -               -

# sent_i = 128
# sent = Although she uses only two fingers, she is a very fast typist.
# hyperedge = (is/Pd.xsc:r12:r1h.|f--3s:12 (although/T (uses/P.so:01:01.|f--3s:012 she/Ci ((only/M.<..c two/M#.<..c) fingers/Cc..p))) she/Ci (a/Md.< ((very/M.< fast/Ma.<) typist/Cc..s)))
# hyperedge builder = (128.8/Pd.xsc:r12:r1h.|f--3s:12 (128.0/T (128.2/P.so:01:01.|f--3s:012 128.1/Ci ((128.3/M.<..c 128.4/M#.<..c) 128.5/Cc..p))) 128.7/Ci (128.9/Md.< ((128.10/M.< 128.11/Ma.<) 128.12/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
128 0  Although + although SCONJ IN  mark   2  -          -      -      B-ARGM-ADV -       -           although/T
128 1  she      + she      PRON  PRP nsubj  2  -          -      B-ARG0 I-ARGM-ADV B-MAIN0 -           she/Ci
128 2  uses     + use      VERB  VBZ advcl  8  -          use.01 B-V    I-ARGM-ADV -       use.v.01    uses/P.so:01:01.|f--3s:012
128 3  only     + only     ADV   RB  advmod 4  B-CARDINAL -      B-ARG1 I-ARGM-ADV -       -           only/M.<..c
128 4  two      + two      NUM   CD  nummod 5  I-CARDINAL -      I-ARG1 I-ARGM-ADV -       two.s.01    two/M#.<..c
128 5  fingers  - finger   NOUN  NNS dobj   2  -          -      I-ARG1 I-ARGM-ADV -       finger.n.01 fingers/Cc..p
128 6  ,        + ,        PUNCT ,   punct  8  -          -      -      -          -       -           -
128 7  she      + she      PRON  PRP nsubj  8  -          -      -      B-ARG1     B-REF0  -           she/Ci
128 8  is       + be       AUX   VBZ ROOT   8  -          be.01  -      B-V        -       be.v.01     is/Pd.xsc:r12:r1h.|f--3s:12
128 9  a        + a        DET   DT  det    12 -          -      -      B-ARG2     -       -           a/Md.<
128 10 very     + very     ADV   RB  advmod 11 -          -      -      I-ARG2     -       very.r.01   very/M.<
128 11 fast     + fast     ADJ   JJ  amod   12 -          -      -      I-ARG2     -       fast.a.01   fast/Ma.<
128 12 typist   - typist   NOUN  NN  attr   8  -          -      -      I-ARG2     -       typist.n.01 typist/Cc..s
128 13 .        - .        PUNCT .   punct  8  -          -      -      -          -       -           -

# sent_i = 129
# sent = I'll drop in later if anything new comes up.
# hyperedge = (('ll/Mm.< (in/Ml.r.> drop/Pd.s?x:0tr:0tr.-i:01)) i/Ci later/M (if/T ((up/Ml.r.> comes/P.s:1:1.|f--3s:12) (new/Ma.> anything/Ci..s))))
# hyperedge builder = ((129.1/Mm.< (129.3/Ml.r.> 129.2/Pd.s?x:0tr:0tr.-i:01)) 129.0/Ci 129.4/M (129.5/T ((129.9/Ml.r.> 129.8/P.s:1:1.|f--3s:12) (129.7/Ma.> 129.6/Ci..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
129 0  I        - I        PRON  PRP nsubj  2 - -          -   B-ARG0     -      -              i/Ci
129 1  'll      + will     AUX   MD  aux    2 - -          B-V B-ARGM-MOD -      -              'll/Mm.<
129 2  drop     + drop     VERB  VB  ROOT   2 - drop_in.08 -   B-V        -      drop_by.v.01   drop/Pd.s?x:0tr:0tr.-i:01
129 3  in       + in       ADP   RP  prt    2 - -          -   -          -      drop_by.v.01   in/Ml.r.>
129 4  later    + later    ADV   RB  advmod 2 - -          -   B-ARGM-TMP -      by_and_by.r.01 later/M
129 5  if       + if       SCONJ IN  mark   8 - -          -   B-ARGM-ADV -      -              if/T
129 6  anything + anything PRON  NN  nsubj  8 - -          -   I-ARGM-ADV B-ARG1 -              anything/Ci..s
129 7  new      + new      ADJ   JJ  amod   6 - -          -   I-ARGM-ADV I-ARG1 new.s.05       new/Ma.>
129 8  comes    + come     VERB  VBZ advcl  2 - come_up.13 -   I-ARGM-ADV B-V    arise.v.02     comes/P.s:1:1.|f--3s:12
129 9  up       - up       ADP   RP  prt    8 - -          -   I-ARGM-ADV -      arise.v.02     up/Ml.r.>
129 10 .        - .        PUNCT .   punct  2 - -          -   -          -      -              -

# sent_i = 130
# sent = Unless the traffic is very bad, we should arrive by eight.
# hyperedge = ((should/Mm.< arrive/Pd.xsx:r1t:r1t.-i:1234) (unless/T (is/P.sc:12:1h.|f--3s:12 (the/Md.< traffic/Cc..s) (very/M.< bad/Ca))) we/Ci (by/Tt eight/C#...c))
# hyperedge builder = ((130.8/Mm.< 130.9/Pd.xsx:r1t:r1t.-i:1234) (130.0/T (130.3/P.sc:12:1h.|f--3s:12 (130.1/Md.< 130.2/Cc..s) (130.4/M.< 130.5/Ca))) 130.7/Ci (130.10/Tt 130.11/C#...c))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
130 0  Unless  + unless  SCONJ IN  mark   3  -          -         -      -   B-ARGM-ADV -            unless/T
130 1  the     + the     DET   DT  det    2  -          -         B-ARG1 -   I-ARGM-ADV -            the/Md.<
130 2  traffic + traffic NOUN  NN  nsubj  3  -          -         I-ARG1 -   I-ARGM-ADV traffic.n.01 traffic/Cc..s
130 3  is      + be      VERB  VBZ advcl  9  -          be.01     B-V    -   I-ARGM-ADV be.v.01      is/P.sc:12:1h.|f--3s:12
130 4  very    + very    ADV   RB  advmod 5  -          -         B-ARG2 -   I-ARGM-ADV very.r.01    very/M.<
130 5  bad     - bad     ADJ   JJ  acomp  3  -          -         I-ARG2 -   I-ARGM-ADV bad.a.01     bad/Ca
130 6  ,       + ,       PUNCT ,   punct  9  -          -         -      -   -          -            -
130 7  we      + we      PRON  PRP nsubj  9  -          -         -      -   B-ARG1     -            we/Ci
130 8  should  + should  AUX   MD  aux    9  -          -         -      B-V B-ARGM-MOD -            should/Mm.<
130 9  arrive  + arrive  VERB  VB  ROOT   9  -          arrive.01 -      -   B-V        arrive.v.01  arrive/Pd.xsx:r1t:r1t.-i:1234
130 10 by      + by      ADP   IN  prep   9  -          -         -      -   B-ARGM-TMP -            by/Tt
130 11 eight   - eight   NUM   CD  pobj   10 B-CARDINAL -         -      -   I-ARGM-TMP eight.n.01   eight/C#...c
130 12 .       - .       PUNCT .   punct  9  -          -         -      -   -          -            -

# sent_i = 131
# sent = We knew about their plans, so we were ready for them.
# hyperedge = (were/Pd.r?sc:-r12:-r1h.<f:12 (knew/P.sx:01:01.<f:012 we/Ci (about/T (their/Mp plans/Cc..p))) so/M we/Ci (for/Br ready/Ca (+/Jc.rm.rr them/Ci their/Mp)))
# hyperedge builder = (131.8/Pd.r?sc:-r12:-r1h.<f:12 (131.1/P.sx:01:01.<f:012 131.0/Ci (131.2/T (131.3/Mp 131.4/Cc..p))) 131.6/M 131.7/Ci (131.10/Br 131.9/Ca (+/Jc.rm.rr 131.11/Ci 131.3/Mp)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 coref2 synset atoms
131 0  We    + we    PRON  PRP  nsubj  1  - -       B-ARG0 -          B-MAIN0 -       -          we/Ci
131 1  knew  + know  VERB  VBD  ccomp  8  - know.01 B-V    -          -       -       know.v.01  knew/P.sx:01:01.<f:012
131 2  about + about ADP   IN   prep   1  - -       B-ARG1 -          -       -       -          about/T
131 3  their + their PRON  PRP$ poss   4  - -       I-ARG1 -          -       B-MAIN1 -          their/Mp
131 4  plans - plan  NOUN  NNS  pobj   2  - -       I-ARG1 -          -       -       plan.n.01  plans/Cc..p
131 5  ,     + ,     PUNCT ,    punct  8  - -       -      -          -       -       -          -
131 6  so    + so    ADV   RB   advmod 8  - -       -      B-ARGM-ADV -       -       so.r.02    so/M
131 7  we    + we    PRON  PRP  nsubj  8  - -       -      B-ARG1     B-REF0  -       -          we/Ci
131 8  were  + be    AUX   VBD  ROOT   8  - be.01   -      B-V        -       -       be.v.01    were/Pd.r?sc:-r12:-r1h.<f:12
131 9  ready + ready ADJ   JJ   acomp  8  - -       -      B-ARG2     -       -       ready.a.01 ready/Ca
131 10 for   + for   ADP   IN   prep   9  - -       -      I-ARG2     -       -       -          for/Br
131 11 them  - they  PRON  PRP  pobj   10 - -       -      I-ARG2     -       B-REF1  -          them/Ci
131 12 .     - .     PUNCT .    punct  8  - -       -      -          -       -       -          -

# sent_i = 132
# sent = It looked so stormy that we decided to stay home.
# hyperedge = (looked/Pd.sc:01:01.<f:012 it/Ci (+/Br.am (so/M.< stormy/Ca) (that/T (decided/P.sr:01:01.<f:0123 we/Ci ((to/Mi.< stay/P.-?:13:1h.-i:123) we/Ci home/M)))))
# hyperedge builder = (132.1/Pd.sc:01:01.<f:012 132.0/Ci (+/Br.am (132.2/M.< 132.3/Ca) (132.4/T (132.6/P.sr:01:01.<f:0123 132.5/Ci ((132.7/Mi.< 132.8/P.-?:13:1h.-i:123) 132.5/Ci 132.9/M)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
132 0  It      + it     PRON  PRP nsubj  1 - -         B-ARG0 -      -      -           it/Ci
132 1  looked  + look   VERB  VBD ROOT   1 - look.02   B-V    -      -      look.v.02   looked/Pd.sc:01:01.<f:012
132 2  so      + so     ADV   RB  advmod 3 - -         B-ARG1 -      -      so.r.01     so/M.<
132 3  stormy  + stormy ADJ   JJ  acomp  1 - -         I-ARG1 -      -      stormy.a.01 stormy/Ca
132 4  that    + that   SCONJ IN  mark   6 - -         I-ARG1 -      -      -           that/T
132 5  we      + we     PRON  PRP nsubj  6 - -         I-ARG1 B-ARG0 B-ARG1 -           we/Ci
132 6  decided + decide VERB  VBD ccomp  3 - decide.01 I-ARG1 B-V    -      decide.v.01 decided/P.sr:01:01.<f:0123
132 7  to      + to     PART  TO  aux    8 - -         I-ARG1 B-ARG1 -      -           to/Mi.<
132 8  stay    + stay   VERB  VB  xcomp  6 - stay.01   I-ARG1 I-ARG1 B-V    stay.v.02   stay/P.-?:13:1h.-i:123
132 9  home    - home   ADV   RB  advmod 8 - -         I-ARG1 I-ARG1 B-ARG3 home.r.01   home/M
132 10 .       - .      PUNCT .   punct  1 - -         -      -      -      -           -

# sent_i = 133
# sent = Clear the doorway so that the others can enter.
# hyperedge = (clear/Pd.ox:1i:gi.-i:012 (the/Md.< doorway/Cc..s) (so/T (that/T ((can/Mm.< enter/P.s:0:1.-i:01) (the/Md.< others/Cc..p)))))
# hyperedge builder = (133.0/Pd.ox:1i:gi.-i:012 (133.1/Md.< 133.2/Cc..s) (133.3/T (133.4/T ((133.7/Mm.< 133.8/P.s:0:1.-i:01) (133.5/Md.< 133.6/Cc..p)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
133 0 Clear   + clear   VERB  VB  ROOT  0 - clear.01 B-V        -   -          unclutter.v.01 clear/Pd.ox:1i:gi.-i:012
133 1 the     + the     DET   DT  det   2 - -        B-ARG1     -   -          -              the/Md.<
133 2 doorway + doorway NOUN  NN  dobj  0 - -        I-ARG1     -   -          doorway.n.01   doorway/Cc..s
133 3 so      + so      SCONJ IN  mark  8 - -        B-ARGM-PRP -   -          so.r.02        so/T
133 4 that    + that    SCONJ IN  mark  8 - -        I-ARGM-PRP -   -          -              that/T
133 5 the     + the     DET   DT  det   6 - -        I-ARGM-PRP -   B-ARG0     -              the/Md.<
133 6 others  + other   NOUN  NNS nsubj 8 - -        I-ARGM-PRP -   I-ARG0     -              others/Cc..p
133 7 can     + can     AUX   MD  aux   8 - -        I-ARGM-PRP B-V B-ARGM-MOD -              can/Mm.<
133 8 enter   - enter   VERB  VB  advcl 0 - enter.01 I-ARGM-PRP -   B-V        enter.v.01     enter/P.s:0:1.-i:01
133 9 .       - .       PUNCT .   punct 0 - -        -          -   -          -              -

# sent_i = 134
# sent = The company borrowed money in order to finance their advertising.
# hyperedge = (borrowed/Pd.sox:01i:01i.<f:0123 (the/Md.< company/Cc..s) money/Cc..s ((order/M.>.s in/T) ((to/Mi.< finance/P.-o:01:01.-i:0123) (the/Md.< company/Cc..s) ((+/Jc.rm.rc their/Mp (the/Md.< company/Cc..s)) advertising/Cc..s))))
# hyperedge builder = (134.2/Pd.sox:01i:01i.<f:0123 (134.0/Md.< 134.1/Cc..s) 134.3/Cc..s ((134.5/M.>.s 134.4/T) ((134.6/Mi.< 134.7/P.-o:01:01.-i:0123) (134.0/Md.< 134.1/Cc..s) ((+/Jc.rm.rc 134.8/Mp (134.0/Md.< 134.1/Cc..s)) 134.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
134 0  The         + the         DET   DT   det      1 - -          B-ARG0     B-ARG0 B-MAIN0 -            the/Md.<
134 1  company     + company     NOUN  NN   nsubj    2 - -          I-ARG0     I-ARG0 I-MAIN0 company.n.01 company/Cc..s
134 2  borrowed    + borrow      VERB  VBD  ROOT     2 - borrow.01  B-V        -      -       borrow.v.01  borrowed/Pd.sox:01i:01i.<f:0123
134 3  money       + money       NOUN  NN   dobj     2 - -          B-ARG1     -      -       money.n.01   money/Cc..s
134 4  in          + in          ADP   IN   mark     7 - -          B-ARGM-PRP -      -       -            in/T
134 5  order       + order       NOUN  NN   npadvmod 4 - -          I-ARGM-PRP -      -       -            order/M.>.s
134 6  to          + to          PART  TO   aux      7 - -          I-ARGM-PRP -      -       -            to/Mi.<
134 7  finance     + finance     VERB  VB   advcl    2 - finance.01 I-ARGM-PRP B-V    -       finance.v.01 finance/P.-o:01:01.-i:0123
134 8  their       + their       PRON  PRP$ poss     9 - -          I-ARGM-PRP B-ARG1 B-REF0  -            their/Mp
134 9  advertising - advertising NOUN  NN   dobj     7 - -          I-ARGM-PRP I-ARG1 -       ad.n.01      advertising/Cc..s
134 10 .           - .           PUNCT .    punct    2 - -          -          -      -       -            -

# sent_i = 135
# sent = The company borrowed money to finance their advertising.
# hyperedge = (borrowed/Pd.sox:01i:01i.<f:0123 (the/Md.< company/Cc..s) money/Cc..s ((to/Mi.< finance/P.-o:01:01.-i:0123) (the/Md.< company/Cc..s) ((+/Jc.rm.rc their/Mp (the/Md.< company/Cc..s)) advertising/Cc..s)))
# hyperedge builder = (135.2/Pd.sox:01i:01i.<f:0123 (135.0/Md.< 135.1/Cc..s) 135.3/Cc..s ((135.4/Mi.< 135.5/P.-o:01:01.-i:0123) (135.0/Md.< 135.1/Cc..s) ((+/Jc.rm.rc 135.6/Mp (135.0/Md.< 135.1/Cc..s)) 135.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
135 0 The         + the         DET   DT   det   1 - -          B-ARG0     B-ARG0 B-MAIN0 -            the/Md.<
135 1 company     + company     NOUN  NN   nsubj 2 - -          I-ARG0     I-ARG0 I-MAIN0 company.n.01 company/Cc..s
135 2 borrowed    + borrow      VERB  VBD  ROOT  2 - borrow.01  B-V        -      -       borrow.v.01  borrowed/Pd.sox:01i:01i.<f:0123
135 3 money       + money       NOUN  NN   dobj  2 - -          B-ARG1     -      -       money.n.01   money/Cc..s
135 4 to          + to          PART  TO   aux   5 - -          B-ARGM-PRP -      -       -            to/Mi.<
135 5 finance     + finance     VERB  VB   advcl 2 - finance.01 I-ARGM-PRP B-V    -       finance.v.01 finance/P.-o:01:01.-i:0123
135 6 their       + their       PRON  PRP$ poss  7 - -          I-ARGM-PRP B-ARG1 B-REF0  -            their/Mp
135 7 advertising - advertising NOUN  NN   dobj  5 - -          I-ARGM-PRP I-ARG1 -       ad.n.01      advertising/Cc..s
135 8 .           - .           PUNCT .    punct 2 - -          -          -      -       -            -

# sent_i = 136
# sent = Paul wore a suit to his job interview so as to make a good impression.
# hyperedge = (wore/Pd.soxx:01li:01li.<f:01 paul/Cp..s.p (a/Md.< suit/Cc..s) (to/Tl ((+/Jc.rm.rp his/Mp paul/Cp..s.p) (+/B.am job/Cc.<.s interview/Cc..s))) (so/T (as/T ((to/Mi.< make/P.-o:01:0h.-i:01) paul/Cp..s.p (a/Md.< (good/Ma.< impression/Cc..s))))))
# hyperedge builder = (136.1/Pd.soxx:01li:01li.<f:01 136.0/Cp..s.p (136.2/Md.< 136.3/Cc..s) (136.4/Tl ((+/Jc.rm.rp 136.5/Mp 136.0/Cp..s.p) (+/B.am 136.6/Cc.<.s 136.7/Cc..s))) (136.8/T (136.9/T ((136.10/Mi.< 136.11/P.-o:01:0h.-i:01) 136.0/Cp..s.p (136.12/Md.< (136.13/Ma.< 136.14/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
136 0  Paul       + Paul       PROPN NNP  nsubj    1  B-PERSON -       B-ARG0     B-ARG0 B-MAIN0 -                  paul/Cp..s.p
136 1  wore       + wear       VERB  VBD  ROOT     1  -        wear.01 B-V        -      -       wear.v.01          wore/Pd.soxx:01li:01li.<f:01
136 2  a          + a          DET   DT   det      3  -        -       B-ARG1     -      -       -                  a/Md.<
136 3  suit       + suit       NOUN  NN   dobj     1  -        -       I-ARG1     -      -       suit.n.01          suit/Cc..s
136 4  to         + to         ADP   IN   prep     1  -        -       B-ARGM-LOC -      -       -                  to/Tl
136 5  his        + his        PRON  PRP$ poss     7  -        -       I-ARGM-LOC -      B-REF0  -                  his/Mp
136 6  job        + job        NOUN  NN   compound 7  -        -       I-ARGM-LOC -      -       job_interview.n.01 job/Cc.<.s
136 7  interview  + interview  NOUN  NN   pobj     4  -        -       I-ARGM-LOC -      -       job_interview.n.01 interview/Cc..s
136 8  so         + so         SCONJ IN   mark     11 -        -       B-ARGM-PRP -      -       so.r.02            so/T
136 9  as         + as         SCONJ IN   mark     11 -        -       I-ARGM-PRP -      -       -                  as/T
136 10 to         + to         PART  TO   aux      11 -        -       I-ARGM-PRP -      -       -                  to/Mi.<
136 11 make       + make       VERB  VB   advcl    1  -        make.02 I-ARGM-PRP B-V    -       -                  make/P.-o:01:0h.-i:01
136 12 a          + a          DET   DT   det      14 -        -       I-ARGM-PRP B-ARG1 -       -                  a/Md.<
136 13 good       + good       ADJ   JJ   amod     14 -        -       I-ARGM-PRP I-ARG1 -       good.a.01          good/Ma.<
136 14 impression - impression NOUN  NN   dobj     11 -        -       I-ARGM-PRP I-ARG1 -       impression.n.02    impression/Cc..s
136 15 .          - .          PUNCT .    punct    1  -        -       -          -      -       -                  -

# sent_i = 137
# sent = Paul wore a suit to his job interview to make a good impression.
# hyperedge = (wore/Pd.soxx:01li:01li.<f:01 paul/Cp..s.p (a/Md.< suit/Cc..s) (to/Tl ((+/Jc.rm.rp his/Mp paul/Cp..s.p) (+/B.am job/Cc.<.s interview/Cc..s))) ((to/Mi.< make/P.-o:01:0h.-i:01) paul/Cp..s.p (a/Md.< (good/Ma.< impression/Cc..s))))
# hyperedge builder = (137.1/Pd.soxx:01li:01li.<f:01 137.0/Cp..s.p (137.2/Md.< 137.3/Cc..s) (137.4/Tl ((+/Jc.rm.rp 137.5/Mp 137.0/Cp..s.p) (+/B.am 137.6/Cc.<.s 137.7/Cc..s))) ((137.8/Mi.< 137.9/P.-o:01:0h.-i:01) 137.0/Cp..s.p (137.10/Md.< (137.11/Ma.< 137.12/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
137 0  Paul       + Paul       PROPN NNP  nsubj    1  B-PERSON -       B-ARG0     B-ARG0 B-MAIN0 -                  paul/Cp..s.p
137 1  wore       + wear       VERB  VBD  ROOT     1  -        wear.01 B-V        -      -       wear.v.01          wore/Pd.soxx:01li:01li.<f:01
137 2  a          + a          DET   DT   det      3  -        -       B-ARG1     -      -       -                  a/Md.<
137 3  suit       + suit       NOUN  NN   dobj     1  -        -       I-ARG1     -      -       suit.n.01          suit/Cc..s
137 4  to         + to         ADP   IN   prep     1  -        -       B-ARGM-LOC -      -       -                  to/Tl
137 5  his        + his        PRON  PRP$ poss     7  -        -       I-ARGM-LOC -      B-REF0  -                  his/Mp
137 6  job        + job        NOUN  NN   compound 7  -        -       I-ARGM-LOC -      -       job_interview.n.01 job/Cc.<.s
137 7  interview  + interview  NOUN  NN   pobj     4  -        -       I-ARGM-LOC -      -       job_interview.n.01 interview/Cc..s
137 8  to         + to         PART  TO   aux      9  -        -       B-ARGM-PRP -      -       -                  to/Mi.<
137 9  make       + make       VERB  VB   advcl    1  -        make.02 I-ARGM-PRP B-V    -       -                  make/P.-o:01:0h.-i:01
137 10 a          + a          DET   DT   det      12 -        -       I-ARGM-PRP B-ARG1 -       -                  a/Md.<
137 11 good       + good       ADJ   JJ   amod     12 -        -       I-ARGM-PRP I-ARG1 -       good.a.01          good/Ma.<
137 12 impression - impression NOUN  NN   dobj     9  -        -       I-ARGM-PRP I-ARG1 -       impression.n.02    impression/Cc..s
137 13 .          - .          PUNCT .    punct    1  -        -       -          -      -       -                  -

# sent_i = 138
# sent = Your book isn't as long as mine is.
# hyperedge = ((n't/Mn.> is/Pd.sc:12:1h.|f--3s:12) (your/Mp book/Cc..s) (+/Br.am (as/M.< long/Ca) (as/T (is/P.s:1:1.|f--3s:12 mine/Ci))))
# hyperedge builder = ((138.3/Mn.> 138.2/Pd.sc:12:1h.|f--3s:12) (138.0/Mp 138.1/Cc..s) (+/Br.am (138.4/M.< 138.5/Ca) (138.6/T (138.8/P.s:1:1.|f--3s:12 138.7/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
138 0 Your + your PRON  PRP$ poss   1 - -     B-ARG1     -      -            your/Mp
138 1 book + book NOUN  NN   nsubj  2 - -     I-ARG1     -      book.n.01    book/Cc..s
138 2 is   - be   AUX   VBZ  ROOT   2 - be.01 B-V        -      be.v.01      is/Pd.sc:12:1h.|f--3s:12
138 3 n't  + not  PART  RB   neg    2 - -     B-ARGM-NEG -      not.r.01     n't/Mn.>
138 4 as   + as   ADV   RB   advmod 5 - -     B-ARG2     -      equally.r.01 as/M.<
138 5 long + long ADJ   JJ   acomp  2 - -     I-ARG2     -      long.a.02    long/Ca
138 6 as   + as   SCONJ IN   mark   8 - -     I-ARG2     -      equally.r.01 as/T
138 7 mine + mine PRON  PRP  nsubj  8 - -     I-ARG2     B-ARG1 -            mine/Ci
138 8 is   - be   VERB  VBZ  advcl  5 - be.01 I-ARG2     B-V    be.v.01      is/P.s:1:1.|f--3s:12
138 9 .    - .    PUNCT .    punct  2 - -     -          -      -            -

# sent_i = 139
# sent = Your book isn't as long as mine.
# hyperedge = ((n't/Mn.> is/Pd.sc:12:1h.|f--3s:12) (your/Mp book/Cc..s) (as/Br (as/M.< long/Ca) mine/Ci))
# hyperedge builder = ((139.3/Mn.> 139.2/Pd.sc:12:1h.|f--3s:12) (139.0/Mp 139.1/Cc..s) (139.6/Br (139.4/M.< 139.5/Ca) 139.7/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
139 0 Your + your PRON  PRP$ poss   1 - -     B-ARG1     -            your/Mp
139 1 book + book NOUN  NN   nsubj  2 - -     I-ARG1     book.n.01    book/Cc..s
139 2 is   - be   AUX   VBZ  ROOT   2 - be.01 B-V        be.v.01      is/Pd.sc:12:1h.|f--3s:12
139 3 n't  + not  PART  RB   neg    2 - -     B-ARGM-NEG not.r.01     n't/Mn.>
139 4 as   + as   ADV   RB   advmod 5 - -     B-ARG2     equally.r.01 as/M.<
139 5 long + long ADJ   JJ   acomp  2 - -     I-ARG2     long.a.02    long/Ca
139 6 as   + as   SCONJ IN   prep   5 - -     I-ARG2     equally.r.01 as/Br
139 7 mine - mine PRON  PRP  pobj   6 - -     I-ARG2     -            mine/Ci
139 8 .    - .    PUNCT .    punct  2 - -     -          -            -

# sent_i = 140
# sent = A turkey costs more than a chicken does.
# hyperedge = (costs/Pd.so:12:1q.|f--3s:123 (a/Md.< turkey/Cc..s) (more/M (than/T (does/P.s:-:-.|f--3s (a/Md.< chicken/Cc..s)))))
# hyperedge builder = (140.2/Pd.so:12:1q.|f--3s:123 (140.0/Md.< 140.1/Cc..s) (140.3/M (140.4/T (140.7/P.s:-:-.|f--3s (140.5/Md.< 140.6/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
140 0 A       + a       DET   DT  det   1 - -       B-ARG1 -   -            a/Md.<
140 1 turkey  + turkey  NOUN  NN  nsubj 2 - -       I-ARG1 -   turkey.n.04  turkey/Cc..s
140 2 costs   + cost    VERB  VBZ ROOT  2 - cost.01 B-V    -   cost.v.01    costs/Pd.so:12:1q.|f--3s:123
140 3 more    + more    ADJ   JJR dobj  2 - -       B-ARG2 -   more.a.02    more/M
140 4 than    + than    SCONJ IN  mark  7 - -       I-ARG2 -   -            than/T
140 5 a       + a       DET   DT  det   6 - -       I-ARG2 -   -            a/Md.<
140 6 chicken + chicken NOUN  NN  nsubj 7 - -       I-ARG2 -   chicken.n.01 chicken/Cc..s
140 7 does    - do      AUX   VBZ advcl 3 - do.01   I-ARG2 B-V -            does/P.s:-:-.|f--3s
140 8 .       - .       PUNCT .   punct 2 - -       -      -   -            -

# sent_i = 141
# sent = A turkey costs more than a chicken.
# hyperedge = (costs/Pd.so:12:1q.|f--3s:123 (a/Md.< turkey/Cc..s) (than/Br more/M (a/Md.< chicken/Cc..s)))
# hyperedge builder = (141.2/Pd.so:12:1q.|f--3s:123 (141.0/Md.< 141.1/Cc..s) (141.4/Br 141.3/M (141.5/Md.< 141.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
141 0 A       + a       DET   DT  det   1 - -       B-ARG1 -            a/Md.<
141 1 turkey  + turkey  NOUN  NN  nsubj 2 - -       I-ARG1 turkey.n.04  turkey/Cc..s
141 2 costs   + cost    VERB  VBZ ROOT  2 - cost.01 B-V    cost.v.01    costs/Pd.so:12:1q.|f--3s:123
141 3 more    + more    ADJ   JJR dobj  2 - -       B-ARG2 more.a.02    more/M
141 4 than    + than    SCONJ IN  prep  3 - -       I-ARG2 -            than/Br
141 5 a       + a       DET   DT  det   6 - -       I-ARG2 -            a/Md.<
141 6 chicken - chicken NOUN  NN  pobj  4 - -       I-ARG2 chicken.n.01 chicken/Cc..s
141 7 .       - .       PUNCT .   punct 2 - -       -      -            -

# sent_i = 142
# sent = Do you need George any more than you do me?
# hyperedge = ((do/Mv.< need/P?.so?:01e:01e.-i:01) you/Ci george/Cp..s.p ((any/M.< more/M=) (than/T (do/P.so:--:--.|f you/Ci me/Ci))))
# hyperedge builder = ((142.0/Mv.< 142.2/P?.so?:01e:01e.-i:01) 142.1/Ci 142.3/Cp..s.p ((142.4/M.< 142.5/M=) (142.6/T (142.8/P.so:--:--.|f 142.7/Ci 142.9/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
142 0  Do     + do     AUX   VBP aux    2 -        do.01   B-V -          -   -       -         do/Mv.<
142 1  you    + you    PRON  PRP nsubj  2 -        -       -   B-ARG0     -   B-MAIN0 -         you/Ci
142 2  need   + need   VERB  VB  ROOT   2 -        need.01 -   B-V        -   -       want.v.02 need/P?.so?:01e:01e.-i:01
142 3  George + George PROPN NNP dobj   2 B-PERSON -       -   B-ARG1     -   -       -         george/Cp..s.p
142 4  any    + any    DET   DT  advmod 5 -        -       -   B-ARGM-EXT -   -       any.r.01  any/M.<
142 5  more   + more   ADV   RBR advmod 2 -        -       -   I-ARGM-EXT -   -       more.a.01 more/M=
142 6  than   + than   SCONJ IN  mark   8 -        -       -   I-ARGM-EXT -   -       -         than/T
142 7  you    + you    PRON  PRP nsubj  8 -        -       -   I-ARGM-EXT -   B-REF0  -         you/Ci
142 8  do     + do     AUX   VBP advcl  5 -        do.01   -   I-ARGM-EXT B-V -       -         do/P.so:--:--.|f
142 9  me     - I      PRON  PRP dobj   8 -        -       -   I-ARGM-EXT -   -       -         me/Ci
142 10 ?      - ?      PUNCT .   punct  2 -        -       -   -          -   -       -         -

# sent_i = 143
# sent = Do you need George any more than me?
# hyperedge = ((do/Mv.< need/P?.so?:01e:01e.-i:01) you/Ci george/Cp..s.p (than/Br (any/M.< more/M=) me/Ci))
# hyperedge builder = ((143.0/Mv.< 143.2/P?.so?:01e:01e.-i:01) 143.1/Ci 143.3/Cp..s.p (143.6/Br (143.4/M.< 143.5/M=) 143.7/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
143 0 Do     + do     AUX   VBP aux    2 -        do.01   B-V -          -         do/Mv.<
143 1 you    + you    PRON  PRP nsubj  2 -        -       -   B-ARG0     -         you/Ci
143 2 need   + need   VERB  VB  ROOT   2 -        need.01 -   B-V        want.v.02 need/P?.so?:01e:01e.-i:01
143 3 George + George PROPN NNP dobj   2 B-PERSON -       -   B-ARG1     -         george/Cp..s.p
143 4 any    + any    DET   DT  advmod 5 -        -       -   B-ARGM-EXT any.r.01  any/M.<
143 5 more   + more   ADV   RBR advmod 2 -        -       -   I-ARGM-EXT more.a.01 more/M=
143 6 than   + than   SCONJ IN  prep   5 -        -       -   I-ARGM-EXT -         than/Br
143 7 me     - I      PRON  PRP pobj   6 -        -       -   I-ARGM-EXT -         me/Ci
143 8 ?      - ?      PUNCT .   punct  2 -        -       -   -          -         -

# sent_i = 144
# sent = It's more difficult than it seems.
# hyperedge = ('s/Pd.sc:12:1h.|f--3s:12 it/Ci (+/Br.am (more/M=.< difficult/Ca) (than/T (seems/P.s:-:-.|f--3s:12 it/Ci))))
# hyperedge builder = (144.1/Pd.sc:12:1h.|f--3s:12 144.0/Ci (+/Br.am (144.2/M=.< 144.3/Ca) (144.4/T (144.6/P.s:-:-.|f--3s:12 144.5/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
144 0 It        - it        PRON  PRP nsubj  1 - -       B-ARG1 -   B-MAIN0 -              it/Ci
144 1 's        + be        AUX   VBZ ROOT   1 - be.01   B-V    -   -       be.v.01        's/Pd.sc:12:1h.|f--3s:12
144 2 more      + more      ADV   RBR advmod 3 - -       B-ARG2 -   -       more.r.01      more/M=.<
144 3 difficult + difficult ADJ   JJ  acomp  1 - -       I-ARG2 -   -       difficult.a.01 difficult/Ca
144 4 than      + than      SCONJ IN  mark   6 - -       I-ARG2 -   -       -              than/T
144 5 it        + it        PRON  PRP nsubj  6 - -       I-ARG2 -   B-REF0  -              it/Ci
144 6 seems     - seem      VERB  VBZ advcl  3 - seem.01 I-ARG2 B-V -       look.v.02      seems/P.s:-:-.|f--3s:12
144 7 .         - .         PUNCT .   punct  1 - -       -      -   -       -              -

# sent_i = 145
# sent = Come as quickly as you can.
# hyperedge = (come/Pd.?:m:m.-i:1234 ((as/M.< quickly/M) (as/T (can/P.s:-:- you/Ci))))
# hyperedge builder = (145.0/Pd.?:m:m.-i:1234 ((145.1/M.< 145.2/M) (145.3/T (145.5/P.s:-:- 145.4/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
145 0 Come    + come    VERB  VB  ROOT   0 - come.01 B-V        -   come.v.01    come/Pd.?:m:m.-i:1234
145 1 as      + as      ADV   RB  advmod 2 - -       B-ARGM-MNR -   equally.r.01 as/M.<
145 2 quickly + quickly ADV   RB  advmod 0 - -       I-ARGM-MNR -   quickly.r.01 quickly/M
145 3 as      + as      SCONJ IN  mark   5 - -       I-ARGM-MNR -   equally.r.01 as/T
145 4 you     + you     PRON  PRP nsubj  5 - -       I-ARGM-MNR -   -            you/Ci
145 5 can     - can     AUX   MD  advcl  2 - -       I-ARGM-MNR B-V -            can/P.s:-:-
145 6 .       - .       PUNCT .   punct  0 - -       -          -   -            -

# sent_i = 146
# sent = As you know, things are difficult just now.
# hyperedge = (are/Pd.xsc?:s12t:s1ht.|f:12 (as/T (know/P.s:0:0.|f:012 you/Ci)) things/Cc..p difficult/Ca (just/M.< now/M))
# hyperedge builder = (146.5/Pd.xsc?:s12t:s1ht.|f:12 (146.0/T (146.2/P.s:0:0.|f:012 146.1/Ci)) 146.4/Cc..p 146.6/Ca (146.7/M.< 146.8/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
146 0 As        + as        SCONJ IN  mark   2 - -       -      B-ARGM-DIS -              as/T
146 1 you       + you       PRON  PRP nsubj  2 - -       B-ARG0 I-ARGM-DIS -              you/Ci
146 2 know      - know      VERB  VBP advcl  5 - know.01 B-V    I-ARGM-DIS know.v.01      know/P.s:0:0.|f:012
146 3 ,         + ,         PUNCT ,   punct  5 - -       -      -          -              -
146 4 things    + thing     NOUN  NNS nsubj  5 - -       -      B-ARG1     matter.n.01    things/Cc..p
146 5 are       + be        VERB  VBP ROOT   5 - be.01   -      B-V        be.v.01        are/Pd.xsc?:s12t:s1ht.|f:12
146 6 difficult + difficult ADJ   JJ  acomp  5 - -       -      B-ARG2     difficult.a.01 difficult/Ca
146 7 just      + just      ADV   RB  advmod 8 - -       -      B-ARGM-TMP just.r.03      just/M.<
146 8 now       - now       ADV   RB  advmod 5 - -       -      I-ARGM-TMP just.r.03      now/M
146 9 .         - .         PUNCT .   punct  5 - -       -      -          -              -

# sent_i = 147
# sent = Putting it another way, why should I bother?
# hyperedge = ((should/Mm.< bother/P?.x?s:rc1:rc1.-i:012) (putting/P.ox:1m:1m.|pg:01 it/Ci (another/Md.< way/Cc..s)) why/Mw i/Ci)
# hyperedge builder = ((147.6/Mm.< 147.8/P?.x?s:rc1:rc1.-i:012) (147.0/P.ox:1m:1m.|pg:01 147.1/Ci (147.2/Md.< 147.3/Cc..s)) 147.5/Mw 147.7/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
147 0 Putting + put     VERB  VBG advcl    8 - put.02    B-V        -   B-ARGM-ADV frame.v.04           putting/P.ox:1m:1m.|pg:01
147 1 it      + it      PRON  PRP dobj     0 - -         B-ARG1     -   I-ARGM-ADV -                    it/Ci
147 2 another + another DET   DT  det      3 - -         B-ARGM-MNR -   I-ARGM-ADV another.s.01         another/Md.<
147 3 way     - way     NOUN  NN  npadvmod 0 - -         I-ARGM-MNR -   I-ARGM-ADV manner.n.01          way/Cc..s
147 4 ,       + ,       PUNCT ,   punct    8 - -         -          -   -          -                    -
147 5 why     + why     ADV   WRB advmod   8 - -         -          -   B-ARGM-CAU -                    why/Mw
147 6 should  + should  AUX   MD  aux      8 - -         -          B-V B-ARGM-MOD -                    should/Mm.<
147 7 I       + I       PRON  PRP nsubj    8 - -         -          -   B-ARG1     -                    i/Ci
147 8 bother  - bother  VERB  VB  ROOT     8 - bother.01 -          -   B-V        trouble_oneself.v.01 bother/P?.x?s:rc1:rc1.-i:012
147 9 ?       - ?       PUNCT .   punct    8 - -         -          -   -          -                    -

# sent_i = 148
# sent = To tell you the truth, I don't think you've much chance of success.
# hyperedge = ((do/Mv.< (n't/Mn.< think/Pd.xsr:i01:i01.-i:012)) ((to/Mi.< tell/P.io:21:g1.-i:012) you/Ci (the/Md.< truth/Cc..s)) i/Ci ('ve/P.sox:0k1:!!!.-i you/Ci (of/Br (much/Ma.< chance/Cc..s) success/Cc..s)))
# hyperedge builder = ((148.7/Mv.< (148.8/Mn.< 148.9/Pd.xsr:i01:i01.-i:012)) ((148.0/Mi.< 148.1/P.io:21:g1.-i:012) 148.2/Ci (148.3/Md.< 148.4/Cc..s)) 148.6/Ci (148.11/P.sox:0k1:!!!.-i 148.10/Ci (148.14/Br (148.12/Ma.< 148.13/Cc..s) 148.15/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
148 0  To      + to      PART  TO  aux    1  - -         -      -   B-ARGM-PRP -          -          -       -             to/Mi.<
148 1  tell    + tell    VERB  VB  advcl  9  - tell.01   B-V    -   I-ARGM-PRP -          -          -       tell.v.02     tell/P.io:21:g1.-i:012
148 2  you     + you     PRON  PRP dative 1  - -         B-ARG2 -   I-ARGM-PRP -          -          B-MAIN0 -             you/Ci
148 3  the     + the     DET   DT  det    4  - -         B-ARG1 -   I-ARGM-PRP -          -          -       -             the/Md.<
148 4  truth   - truth   NOUN  NN  dobj   1  - -         I-ARG1 -   I-ARGM-PRP -          -          -       truth.n.01    truth/Cc..s
148 5  ,       + ,       PUNCT ,   punct  9  - -         -      -   -          -          -          -       -             -
148 6  I       + I       PRON  PRP nsubj  9  - -         -      -   B-ARG0     -          -          -       -             i/Ci
148 7  do      - do      AUX   VBP aux    9  - do.01     -      B-V -          -          -          -       -             do/Mv.<
148 8  n't     + not     PART  RB  neg    9  - -         -      -   B-ARGM-NEG -          -          -       not.r.01      n't/Mn.<
148 9  think   + think   VERB  VB  ROOT   9  - think.01  -      -   B-V        -          -          -       think.v.01    think/Pd.xsr:i01:i01.-i:012
148 10 you     - you     PRON  PRP nsubj  11 - -         -      -   B-ARG1     -          B-ARG0     B-REF0  -             you/Ci
148 11 've     + have    VERB  VB  ccomp  9  - have.LV   -      -   I-ARG1     B-V        B-ARGM-LVB -       have.v.01     've/P.sox:0k1:!!!.-i
148 12 much    + much    ADJ   JJ  amod   13 - -         -      -   I-ARG1     -          B-ARG2     -       much.a.01     much/Ma.<
148 13 chance  + chance  NOUN  NN  dobj   11 - chance.02 -      -   I-ARG1     B-ARGM-PRR B-V        -       prospect.n.01 chance/Cc..s
148 14 of      + of      ADP   IN  prep   13 - -         -      -   I-ARG1     -          B-ARG1     -       -             of/Br
148 15 success - success NOUN  NN  pobj   14 - -         -      -   I-ARG1     -          I-ARG1     -       success.n.02  success/Cc..s
148 16 .       - .       PUNCT .   punct  9  - -         -      -   -          -          -          -       -             -

# sent_i = 149
# sent = What he needs is a complete rest.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (needs/P.os:10:10.|f--3s:01 what/Cw he/Ci) (a/Md.< (complete/Ma.< rest/Cc..s)))
# hyperedge builder = (149.3/Pd.sc:12:1h.|f--3s:12 (149.2/P.os:10:10.|f--3s:01 149.0/Cw 149.1/Ci) (149.4/Md.< (149.5/Ma.< 149.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
149 0 What     + what     PRON  WP  dobj  2 - -       B-ARG1 B-ARG1 -             what/Cw
149 1 he       + he       PRON  PRP nsubj 2 - -       B-ARG0 I-ARG1 -             he/Ci
149 2 needs    + need     VERB  VBZ csubj 3 - need.01 B-V    I-ARG1 want.v.02     needs/P.os:10:10.|f--3s:01
149 3 is       + be       AUX   VBZ ROOT  3 - be.01   -      B-V    be.v.01       is/Pd.sc:12:1h.|f--3s:12
149 4 a        + a        DET   DT  det   6 - -       -      B-ARG2 -             a/Md.<
149 5 complete + complete ADJ   JJ  amod  6 - -       -      I-ARG2 complete.a.01 complete/Ma.<
149 6 rest     - rest     NOUN  NN  attr  3 - -       -      I-ARG2 rest.n.02     rest/Cc..s
149 7 .        - .        PUNCT .   punct 3 - -       -      -      -             -

# sent_i = 150
# sent = Whatever you decide is satisfactory to me.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (decide/P.os:10:10.|f:0123 whatever/Cd you/Ci) (to/Br satisfactory/Ca me/Ci))
# hyperedge builder = (150.3/Pd.sc:12:1h.|f--3s:12 (150.2/P.os:10:10.|f:0123 150.0/Cd 150.1/Ci) (150.5/Br 150.4/Ca 150.6/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
150 0 Whatever     + whatever     DET   WDT dobj  2 - -         B-ARG1 B-ARG1 any.s.01          whatever/Cd
150 1 you          + you          PRON  PRP nsubj 2 - -         B-ARG0 I-ARG1 -                 you/Ci
150 2 decide       + decide       VERB  VBP csubj 3 - decide.01 B-V    I-ARG1 decide.v.01       decide/P.os:10:10.|f:0123
150 3 is           + be           AUX   VBZ ROOT  3 - be.01     -      B-V    be.v.01           is/Pd.sc:12:1h.|f--3s:12
150 4 satisfactory + satisfactory ADJ   JJ  acomp 3 - -         -      B-ARG2 satisfactory.a.01 satisfactory/Ca
150 5 to           + to           ADP   IN  prep  4 - -         -      I-ARG2 -                 to/Br
150 6 me           - I            PRON  PRP pobj  5 - -         -      I-ARG2 -                 me/Ci
150 7 .            - .            PUNCT .   punct 3 - -         -      -      -                 -

# sent_i = 151
# sent = Where he gets his supply is not generally known.
# hyperedge = ((is/Mv.< (not/Mn.< known/Pd.p?:1r:1r.<pf:012)) (gets/P.?so:l01:l01.|f--3s:01234 where/Mw he/Ci ((+/Jc.rm.rr his/Mp he/Ci) supply/Cc..s)) generally/M)
# hyperedge builder = ((151.5/Mv.< (151.6/Mn.< 151.8/Pd.p?:1r:1r.<pf:012)) (151.2/P.?so:l01:l01.|f--3s:01234 151.0/Mw 151.1/Ci ((+/Jc.rm.rr 151.3/Mp 151.1/Ci) 151.4/Cc..s)) 151.7/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
151 0 Where     + where     ADV   WRB  advmod    2 - -       B-ARGM-LOC -   B-ARG1     -       -                 where/Mw
151 1 he        + he        PRON  PRP  nsubj     2 - -       B-ARG0     -   I-ARG1     B-MAIN0 -                 he/Ci
151 2 gets      + get       VERB  VBZ  csubjpass 8 - get.01  B-V        -   I-ARG1     -       get.v.01          gets/P.?so:l01:l01.|f--3s:01234
151 3 his       + his       PRON  PRP$ poss      4 - -       B-ARG1     -   I-ARG1     B-REF0  -                 his/Mp
151 4 supply    + supply    NOUN  NN   dobj      2 - -       I-ARG1     -   I-ARG1     -       supply.n.01       supply/Cc..s
151 5 is        + be        AUX   VBZ  auxpass   8 - be.03   -          B-V -          -       be.v.01           is/Mv.<
151 6 not       + not       PART  RB   neg       8 - -       -          -   B-ARGM-NEG -       not.r.01          not/Mn.<
151 7 generally + generally ADV   RB   advmod    8 - -       -          -   B-ARGM-ADV -       by_and_large.r.01 generally/M
151 8 known     - know      VERB  VBN  ROOT      8 - know.01 -          -   B-V        -       know.v.01         known/Pd.p?:1r:1r.<pf:012
151 9 .         - .         PUNCT .    punct     8 - -       -          -   -          -       -                 -

# sent_i = 152
# sent = It is not generally known where he gets his supply.
# hyperedge = ((is/Mv.< (not/Mn.< known/Pd.p?r:-r1:-r1.<pf:012)) it/Ci generally/M (gets/P.?so:l01:l01.|f--3s:01234 where/Mw he/Ci ((+/Jc.rm.rr his/Mp he/Ci) supply/Cc..s)))
# hyperedge builder = ((152.1/Mv.< (152.2/Mn.< 152.4/Pd.p?r:-r1:-r1.<pf:012)) 152.0/Ci 152.3/M (152.7/P.?so:l01:l01.|f--3s:01234 152.5/Mw 152.6/Ci ((+/Jc.rm.rr 152.8/Mp 152.6/Ci) 152.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
152 0  It        + it        PRON  PRP  nsubjpass 4 - -       -   -          -          -       -                 it/Ci
152 1  is        + be        AUX   VBZ  auxpass   4 - be.03   B-V -          -          -       be.v.01           is/Mv.<
152 2  not       + not       PART  RB   neg       4 - -       -   B-ARGM-NEG -          -       not.r.01          not/Mn.<
152 3  generally + generally ADV   RB   advmod    4 - -       -   B-ARGM-ADV -          -       by_and_large.r.01 generally/M
152 4  known     + know      VERB  VBN  ROOT      4 - know.01 -   B-V        -          -       know.v.01         known/Pd.p?r:-r1:-r1.<pf:012
152 5  where     + where     ADV   WRB  advmod    7 - -       -   B-ARG1     B-ARGM-LOC -       -                 where/Mw
152 6  he        + he        PRON  PRP  nsubj     7 - -       -   I-ARG1     B-ARG0     B-MAIN0 -                 he/Ci
152 7  gets      + get       VERB  VBZ  ccomp     4 - get.01  -   I-ARG1     B-V        -       get.v.01          gets/P.?so:l01:l01.|f--3s:01234
152 8  his       + his       PRON  PRP$ poss      9 - -       -   I-ARG1     B-ARG1     B-REF0  -                 his/Mp
152 9  supply    - supply    NOUN  NN   dobj      7 - -       -   I-ARG1     I-ARG1     -       supply.n.01       supply/Cc..s
152 10 .         - .         PUNCT .    punct     4 - -       -   -          -          -       -                 -

# sent_i = 153
# sent = My feeling is that the boy is innocent.
# hyperedge = (is/Pd.sr:12:1h.|f--3s:12 (my/Mp feeling/Cc..s) (that/T (is/P.sc:12:1h.|f--3s:12 (the/Md.< boy/Cc..s) innocent/Ca)))
# hyperedge builder = (153.2/Pd.sr:12:1h.|f--3s:12 (153.0/Mp 153.1/Cc..s) (153.3/T (153.6/P.sc:12:1h.|f--3s:12 (153.4/Md.< 153.5/Cc..s) 153.7/Ca)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
153 0 My       + my       PRON  PRP$ poss  1 - -     B-ARG1 -      -               my/Mp
153 1 feeling  + feeling  NOUN  NN   nsubj 2 - -     I-ARG1 -      impression.n.01 feeling/Cc..s
153 2 is       + be       AUX   VBZ  ROOT  2 - be.01 B-V    -      be.v.01         is/Pd.sr:12:1h.|f--3s:12
153 3 that     + that     SCONJ IN   mark  6 - -     B-ARG2 -      -               that/T
153 4 the      + the      DET   DT   det   5 - -     I-ARG2 B-ARG1 -               the/Md.<
153 5 boy      + boy      NOUN  NN   nsubj 6 - -     I-ARG2 I-ARG1 male_child.n.01 boy/Cc..s
153 6 is       + be       AUX   VBZ  ccomp 2 - be.01 I-ARG2 B-V    be.v.01         is/P.sc:12:1h.|f--3s:12
153 7 innocent - innocent ADJ   JJ   acomp 6 - -     I-ARG2 B-ARG2 innocent.a.01   innocent/Ca
153 8 .        - .        PUNCT .    punct 2 - -     -      -      -               -

# sent_i = 154
# sent = That was why I waited.
# hyperedge = (was/Pd.sx:12:1h.<f:12 that/Cd (waited/P.?s:c1:c1.<f:12m why/Mw i/Ci))
# hyperedge builder = (154.1/Pd.sx:12:1h.<f:12 154.0/Cd (154.4/P.?s:c1:c1.<f:12m 154.2/Mw 154.3/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
154 0 That   + that DET   DT  nsubj  1 - -       B-ARG1 -          -         that/Cd
154 1 was    + be   AUX   VBD ROOT   1 - be.01   B-V    -          be.v.01   was/Pd.sx:12:1h.<f:12
154 2 why    + why  ADV   WRB advmod 4 - -       B-ARG2 B-ARGM-CAU -         why/Mw
154 3 I      + I    PRON  PRP nsubj  4 - -       I-ARG2 B-ARG1     -         i/Ci
154 4 waited - wait VERB  VBD advcl  1 - wait.01 I-ARG2 B-V        wait.v.02 waited/P.?s:c1:c1.<f:12m
154 5 .      - .    PUNCT .   punct  1 - -       -      -          -         -

# sent_i = 155
# sent = I know what you're thinking.
# hyperedge = (know/Pd.sr:01:01.|f:012 i/Ci (('re/Mv.< thinking/P.os:10:10.|pg:012) what/Cw you/Ci))
# hyperedge builder = (155.1/Pd.sr:01:01.|f:012 155.0/Ci ((155.4/Mv.< 155.5/P.os:10:10.|pg:012) 155.2/Cw 155.3/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
155 0 I        + I     PRON  PRP nsubj 1 - -        B-ARG0 -   -      -          i/Ci
155 1 know     + know  VERB  VBP ROOT  1 - know.01  B-V    -   -      know.v.01  know/Pd.sr:01:01.|f:012
155 2 what     + what  PRON  WP  dobj  5 - -        B-ARG1 -   B-ARG1 -          what/Cw
155 3 you      - you   PRON  PRP nsubj 5 - -        I-ARG1 -   B-ARG0 -          you/Ci
155 4 're      + be    AUX   VBP aux   5 - be.03    I-ARG1 B-V -      -          're/Mv.<
155 5 thinking - think VERB  VBG ccomp 1 - think.01 I-ARG1 -   B-V    think.v.03 thinking/P.os:10:10.|pg:012
155 6 .        - .     PUNCT .   punct 1 - -        -      -   -      -          -

# sent_i = 156
# sent = Can you explain how the accident happened?
# hyperedge = ((can/Mm.< explain/P?.sr:01:01.-i:012) you/Ci (happened/P.?s:m1:m1.<f:12 how/Mw (the/Md.< accident/Cc..s)))
# hyperedge builder = ((156.0/Mm.< 156.2/P?.sr:01:01.-i:012) 156.1/Ci (156.6/P.?s:m1:m1.<f:12 156.3/Mw (156.4/Md.< 156.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
156 0 Can      + Can      AUX   MD  aux    2 - -          B-V B-ARGM-MOD -          -             can/Mm.<
156 1 you      + you      PRON  PRP nsubj  2 - -          -   B-ARG0     -          -             you/Ci
156 2 explain  + explain  VERB  VB  ROOT   2 - explain.01 -   B-V        -          explain.v.01  explain/P?.sr:01:01.-i:012
156 3 how      + how      ADV   WRB advmod 6 - -          -   B-ARG1     B-ARGM-MNR -             how/Mw
156 4 the      + the      DET   DT  det    5 - -          -   I-ARG1     B-ARG1     -             the/Md.<
156 5 accident + accident NOUN  NN  nsubj  6 - -          -   I-ARG1     I-ARG1     accident.n.01 accident/Cc..s
156 6 happened - happen   VERB  VBD ccomp  2 - happen.01  -   I-ARG1     B-V        happen.v.01   happened/P.?s:m1:m1.<f:12
156 7 ?        - ?        PUNCT .   punct  2 - -          -   -          -          -             -

# sent_i = 157
# sent = Give it to whoever needs it.
# hyperedge = (give/Pd.ox:12:1g.-i:012 it/Ci (to/T (needs/P.so:01:01.|f--3s:01 whoever/Cw it/Ci)))
# hyperedge builder = (157.0/Pd.ox:12:1g.-i:012 157.1/Ci (157.2/T (157.4/P.so:01:01.|f--3s:01 157.3/Cw 157.5/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
157 0 Give    + give    VERB  VB  ROOT  0 - give.01 B-V    -      -       give.v.03 give/Pd.ox:12:1g.-i:012
157 1 it      + it      PRON  PRP dobj  0 - -       B-ARG1 -      B-MAIN0 -         it/Ci
157 2 to      + to      ADP   IN  prep  0 - -       B-ARG2 -      -       -         to/T
157 3 whoever + whoever PRON  WP  nsubj 4 - -       I-ARG2 B-ARG0 -       -         whoever/Cw
157 4 needs   + need    VERB  VBZ pcomp 2 - need.01 I-ARG2 B-V    -       want.v.02 needs/P.so:01:01.|f--3s:01
157 5 it      - it      PRON  PRP dobj  4 - -       I-ARG2 B-ARG1 B-REF0  -         it/Ci
157 6 .       - .       PUNCT .   punct 0 - -       -      -      -       -         -

# sent_i = 158
# sent = He worries about how his business will be affected.
# hyperedge = (worries/Pd.sx:01:10.|f--3s:01 he/Ci (about/T ((will/Mm.< (be/Mv.< affected/P.?p:m1:m1.<pf:012)) how/Mw ((+/Jc.rm.rr his/Mp he/Ci) business/Cc..s))))
# hyperedge builder = (158.1/Pd.sx:01:10.|f--3s:01 158.0/Ci (158.2/T ((158.6/Mm.< (158.7/Mv.< 158.8/P.?p:m1:m1.<pf:012)) 158.3/Mw ((+/Jc.rm.rr 158.4/Mp 158.0/Ci) 158.5/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
158 0 He       + he       PRON  PRP  nsubj     1 - -         B-ARG0 -   -   -          B-MAIN0 -             he/Ci
158 1 worries  + worry    VERB  VBZ  ROOT      1 - worry.02  B-V    -   -   -          -       worry.v.01    worries/Pd.sx:01:10.|f--3s:01
158 2 about    + about    ADP   IN   prep      1 - -         B-ARG1 -   -   -          -       -             about/T
158 3 how      + how      ADV   WRB  advmod    8 - -         I-ARG1 -   -   B-ARGM-MNR -       -             how/Mw
158 4 his      + his      PRON  PRP$ poss      5 - -         I-ARG1 -   -   B-ARG1     B-REF0  -             his/Mp
158 5 business + business NOUN  NN   nsubjpass 8 - -         I-ARG1 -   -   I-ARG1     -       business.n.01 business/Cc..s
158 6 will     + will     AUX   MD   aux       8 - -         I-ARG1 B-V -   B-ARGM-MOD -       -             will/Mm.<
158 7 be       + be       AUX   VB   auxpass   8 - be.03     I-ARG1 -   B-V -          -       -             be/Mv.<
158 8 affected - affect   VERB  VBN  pcomp     2 - affect.01 I-ARG1 -   -   B-V        -       affect.v.01   affected/P.?p:m1:m1.<pf:012
158 9 .        - .        PUNCT .    punct     1 - -         -      -   -   -          -       -             -

# sent_i = 159
# sent = You know that we haven't any money.
# hyperedge = (know/Pd.sr:01:01.|f:012 you/Ci (that/T ((n't/Mn.> have/P.so:01:01.|f:01) we/Ci (any/Md.< money/Cc..s))))
# hyperedge builder = (159.1/Pd.sr:01:01.|f:012 159.0/Ci (159.2/T ((159.5/Mn.> 159.4/P.so:01:01.|f:01) 159.3/Ci (159.6/Md.< 159.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
159 0 You   + you   PRON  PRP nsubj 1 - -       B-ARG0 -          -          you/Ci
159 1 know  + know  VERB  VBP ROOT  1 - know.01 B-V    -          know.v.01  know/Pd.sr:01:01.|f:012
159 2 that  + that  SCONJ IN  mark  4 - -       B-ARG1 -          -          that/T
159 3 we    + we    PRON  PRP nsubj 4 - -       I-ARG1 B-ARG0     -          we/Ci
159 4 have  - have  VERB  VBP ccomp 1 - have.03 I-ARG1 B-V        have.v.01  have/P.so:01:01.|f:01
159 5 n't   + not   PART  RB  neg   4 - -       I-ARG1 B-ARGM-NEG not.r.01   n't/Mn.>
159 6 any   + any   DET   DT  det   7 - -       I-ARG1 B-ARG1     any.s.01   any/Md.<
159 7 money - money NOUN  NN  dobj  4 - -       I-ARG1 I-ARG1     money.n.01 money/Cc..s
159 8 .     - .     PUNCT .   punct 1 - -       -      -          -          -

# sent_i = 160
# sent = The problem is that we haven't any money.
# hyperedge = (is/Pd.sr:12:1h.|f--3s:12 (the/Md.< problem/Cc..s) (that/T ((n't/Mn.> have/P.so:01:01.|f:01) we/Ci (any/Md.< money/Cc..s))))
# hyperedge builder = (160.2/Pd.sr:12:1h.|f--3s:12 (160.0/Md.< 160.1/Cc..s) (160.3/T ((160.6/Mn.> 160.5/P.so:01:01.|f:01) 160.4/Ci (160.7/Md.< 160.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
160 0 The     + the     DET   DT  det   1 - -       B-ARG1 -          -            the/Md.<
160 1 problem + problem NOUN  NN  nsubj 2 - -       I-ARG1 -          problem.n.01 problem/Cc..s
160 2 is      + be      AUX   VBZ ROOT  2 - be.01   B-V    -          be.v.01      is/Pd.sr:12:1h.|f--3s:12
160 3 that    + that    SCONJ IN  mark  5 - -       B-ARG2 -          -            that/T
160 4 we      + we      PRON  PRP nsubj 5 - -       I-ARG2 B-ARG0     -            we/Ci
160 5 have    - have    VERB  VBP ccomp 2 - have.03 I-ARG2 B-V        have.v.01    have/P.so:01:01.|f:01
160 6 n't     + not     PART  RB  neg   5 - -       I-ARG2 B-ARGM-NEG not.r.01     n't/Mn.>
160 7 any     + any     DET   DT  det   8 - -       I-ARG2 B-ARG1     any.s.01     any/Md.<
160 8 money   - money   NOUN  NN  dobj  5 - -       I-ARG2 I-ARG1     money.n.01   money/Cc..s
160 9 .       - .       PUNCT .   punct 2 - -       -      -          -            -

# sent_i = 161
# sent = That we haven't any money is a pity.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (that/T ((n't/Mn.> have/P.so:01:01.|f:01) we/Ci (any/Md.< money/Cc..s))) (a/Md.< pity/Cc..s))
# hyperedge builder = (161.6/Pd.sc:12:1h.|f--3s:12 (161.0/T ((161.3/Mn.> 161.2/P.so:01:01.|f:01) 161.1/Ci (161.4/Md.< 161.5/Cc..s))) (161.7/Md.< 161.8/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
161 0 That  + that  SCONJ IN  mark  2 - -       -          B-ARG1 -          that/T
161 1 we    + we    PRON  PRP nsubj 2 - -       B-ARG0     I-ARG1 -          we/Ci
161 2 have  - have  VERB  VBP csubj 6 - have.03 B-V        I-ARG1 have.v.01  have/P.so:01:01.|f:01
161 3 n't   + not   PART  RB  neg   2 - -       B-ARGM-NEG I-ARG1 not.r.01   n't/Mn.>
161 4 any   + any   DET   DT  det   5 - -       B-ARG1     I-ARG1 any.s.01   any/Md.<
161 5 money + money NOUN  NN  dobj  2 - -       I-ARG1     I-ARG1 money.n.01 money/Cc..s
161 6 is    + be    AUX   VBZ ROOT  6 - be.01   -          B-V    be.v.01    is/Pd.sc:12:1h.|f--3s:12
161 7 a     + a     DET   DT  det   8 - -       -          B-ARG2 -          a/Md.<
161 8 pity  - pity  NOUN  NN  attr  6 - -       -          I-ARG2 pity.n.02  pity/Cc..s
161 9 .     - .     PUNCT .   punct 6 - -       -          -      -          -

# sent_i = 162
# sent = It's a pity that we haven't any money.
# hyperedge = ('s/Pd.scx:-21:-h1.|f--3s:12 it/Ci (a/Md.< pity/Cc..s) (that/T ((n't/Mn.> have/P.so:01:!!.|f) we/Ci (any/Md.< money/Cc..s))))
# hyperedge builder = (162.1/Pd.scx:-21:-h1.|f--3s:12 162.0/Ci (162.2/Md.< 162.3/Cc..s) (162.4/T ((162.7/Mn.> 162.6/P.so:01:!!.|f) 162.5/Ci (162.8/Md.< 162.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
162 0  It    - it    PRON  PRP nsubj 1 - -       -      -          -          it/Ci
162 1  's    + be    AUX   VBZ ROOT  1 - be.01   B-V    -          be.v.01    's/Pd.scx:-21:-h1.|f--3s:12
162 2  a     + a     DET   DT  det   3 - -       B-ARG2 -          -          a/Md.<
162 3  pity  + pity  NOUN  NN  attr  1 - -       I-ARG2 -          pity.n.02  pity/Cc..s
162 4  that  + that  SCONJ IN  mark  6 - -       B-ARG1 -          -          that/T
162 5  we    + we    PRON  PRP nsubj 6 - -       I-ARG1 B-ARG0     -          we/Ci
162 6  have  - have  VERB  VBP advcl 1 - have.02 I-ARG1 B-V        have.v.01  have/P.so:01:!!.|f
162 7  n't   + not   PART  RB  neg   6 - -       I-ARG1 B-ARGM-NEG not.r.01   n't/Mn.>
162 8  any   + any   DET   DT  det   9 - -       I-ARG1 B-ARG1     any.s.01   any/Md.<
162 9  money - money NOUN  NN  dobj  6 - -       I-ARG1 I-ARG1     money.n.01 money/Cc..s
162 10 .     - .     PUNCT .   punct 1 - -       -      -          -          -

# sent_i = 163
# sent = I'm interested in how we can earn some money.
# hyperedge = ('m/Pd.sc:12:1h.|f:12 i/Ci (in/Br interested/Ca ((can/Mm.< earn/P.?so:m01:m01.-i:0123) how/Mw we/Ci (some/Md.< money/Cc..s))))
# hyperedge builder = (163.1/Pd.sc:12:1h.|f:12 163.0/Ci (163.3/Br 163.2/Ca ((163.6/Mm.< 163.7/P.?so:m01:m01.-i:0123) 163.4/Mw 163.5/Ci (163.8/Md.< 163.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
163 0  I          - I          PRON  PRP nsubj  1 - -       B-ARG1 -   -          -               i/Ci
163 1  'm         + be         VERB  VBP ROOT   1 - be.01   B-V    -   -          be.v.01         'm/Pd.sc:12:1h.|f:12
163 2  interested + interested ADJ   JJ  acomp  1 - -       B-ARG2 -   -          interested.a.01 interested/Ca
163 3  in         + in         ADP   IN  prep   2 - -       I-ARG2 -   -          -               in/Br
163 4  how        + how        ADV   WRB advmod 7 - -       I-ARG2 -   B-ARGM-MNR -               how/Mw
163 5  we         + we         PRON  PRP nsubj  7 - -       I-ARG2 -   B-ARG0     -               we/Ci
163 6  can        + can        AUX   MD  aux    7 - -       I-ARG2 B-V B-ARGM-MOD -               can/Mm.<
163 7  earn       + earn       VERB  VB  pcomp  3 - earn.01 I-ARG2 -   B-V        gain.v.08       earn/P.?so:m01:m01.-i:0123
163 8  some       + some       DET   DT  det    9 - -       I-ARG2 -   B-ARG1     some.a.01       some/Md.<
163 9  money      - money      NOUN  NN  dobj   7 - -       I-ARG2 -   I-ARG1     money.n.01      money/Cc..s
163 10 .          - .          PUNCT .   punct  1 - -       -      -   -          -               -

# sent_i = 164
# sent = He made no comment on whether a decision had been reached.
# hyperedge = (made/Pd.so:01:0h.<f:0123 he/Ci (on/Br (no/Md.< comment/Cc..s) (whether/T ((had/Mv.< (been/Mv.< reached/P.p:1:g.<pf:01)) (a/Md.< decision/Cc..s)))))
# hyperedge builder = (164.1/Pd.so:01:0h.<f:0123 164.0/Ci (164.4/Br (164.2/Md.< 164.3/Cc..s) (164.5/T ((164.8/Mv.< (164.9/Mv.< 164.10/P.p:1:g.<pf:01)) (164.6/Md.< 164.7/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
164 0  He       + he       PRON  PRP nsubj     1  - -        B-ARG0 -   -   -      -             he/Ci
164 1  made     + make     VERB  VBD ROOT      1  - make.01  B-V    -   -   -      make.v.01     made/Pd.so:01:0h.<f:0123
164 2  no       + no       DET   DT  det       3  - -        B-ARG1 -   -   -      no.a.01       no/Md.<
164 3  comment  + comment  NOUN  NN  dobj      1  - -        I-ARG1 -   -   -      remark.n.01   comment/Cc..s
164 4  on       + on       ADP   IN  prep      3  - -        I-ARG1 -   -   -      -             on/Br
164 5  whether  + whether  SCONJ IN  mark      10 - -        I-ARG1 -   -   -      -             whether/T
164 6  a        + a        DET   DT  det       7  - -        I-ARG1 -   -   B-ARG1 -             a/Md.<
164 7  decision + decision NOUN  NN  nsubjpass 10 - -        I-ARG1 -   -   I-ARG1 decision.n.02 decision/Cc..s
164 8  had      + have     AUX   VBD aux       10 - have.01  I-ARG1 B-V -   -      -             had/Mv.<
164 9  been     + be       AUX   VBN auxpass   10 - be.03    I-ARG1 -   B-V -      -             been/Mv.<
164 10 reached  - reach    VERB  VBN pcomp     4  - reach.01 I-ARG1 -   -   B-V    achieve.v.01  reached/P.p:1:g.<pf:01
164 11 .        - .        PUNCT .   punct     1  - -        -      -   -   -      -             -

# sent_i = 165
# sent = I'm afraid that we haven't any money.
# hyperedge = ('m/Pd.sc:12:1h.|f:12 i/Ci (+/Br.am afraid/Ca (that/T ((n't/Mn.> have/P.so:01:01.|f:01) we/Ci (any/Md.< money/Cc..s)))))
# hyperedge builder = (165.1/Pd.sc:12:1h.|f:12 165.0/Ci (+/Br.am 165.2/Ca (165.3/T ((165.6/Mn.> 165.5/P.so:01:01.|f:01) 165.4/Ci (165.7/Md.< 165.8/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
165 0 I      - I      PRON  PRP nsubj 1 - -       B-ARG1 -          -           i/Ci
165 1 'm     + be     VERB  VBP ROOT  1 - be.01   B-V    -          be.v.01     'm/Pd.sc:12:1h.|f:12
165 2 afraid + afraid ADJ   JJ  acomp 1 - -       B-ARG2 -          afraid.s.02 afraid/Ca
165 3 that   + that   SCONJ IN  mark  5 - -       I-ARG2 -          -           that/T
165 4 we     + we     PRON  PRP nsubj 5 - -       I-ARG2 B-ARG0     -           we/Ci
165 5 have   - have   VERB  VBP ccomp 2 - have.03 I-ARG2 B-V        have.v.01   have/P.so:01:01.|f:01
165 6 n't    + not    PART  RB  neg   5 - -       I-ARG2 B-ARGM-NEG not.r.01    n't/Mn.>
165 7 any    + any    DET   DT  det   8 - -       I-ARG2 B-ARG1     any.s.01    any/Md.<
165 8 money  - money  NOUN  NN  dobj  5 - -       I-ARG2 I-ARG1     money.n.01  money/Cc..s
165 9 .      - .      PUNCT .   punct 1 - -       -      -          -           -

# sent_i = 166
# sent = The fact that we haven't any money is a problem.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (+/Jr.ma (the/Md.< fact/Cc..s) (that/T ((n't/Mn.> have/P.so:01:01.|f:01) we/Ci (any/Md.< money/Cc..s)))) (a/Md.< problem/Cc..s))
# hyperedge builder = (166.8/Pd.sc:12:1h.|f--3s:12 (+/Jr.ma (166.0/Md.< 166.1/Cc..s) (166.2/T ((166.5/Mn.> 166.4/P.so:01:01.|f:01) 166.3/Ci (166.6/Md.< 166.7/Cc..s)))) (166.9/Md.< 166.10/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
166 0  The     + the     DET   DT  det   1  - -       -          B-ARG1 -            the/Md.<
166 1  fact    + fact    NOUN  NN  nsubj 8  - -       -          I-ARG1 fact.n.01    fact/Cc..s
166 2  that    + that    SCONJ IN  mark  4  - -       -          I-ARG1 -            that/T
166 3  we      + we      PRON  PRP nsubj 4  - -       B-ARG0     I-ARG1 -            we/Ci
166 4  have    - have    VERB  VBP acl   1  - have.03 B-V        I-ARG1 have.v.01    have/P.so:01:01.|f:01
166 5  n't     + not     PART  RB  neg   4  - -       B-ARGM-NEG I-ARG1 not.r.01     n't/Mn.>
166 6  any     + any     DET   DT  det   7  - -       B-ARG1     I-ARG1 any.s.01     any/Md.<
166 7  money   + money   NOUN  NN  dobj  4  - -       I-ARG1     I-ARG1 money.n.01   money/Cc..s
166 8  is      + be      AUX   VBZ ROOT  8  - be.01   -          B-V    be.v.01      is/Pd.sc:12:1h.|f--3s:12
166 9  a       + a       DET   DT  det   10 - -       -          B-ARG2 -            a/Md.<
166 10 problem - problem NOUN  NN  attr  8  - -       -          I-ARG2 problem.n.01 problem/Cc..s
166 11 .       - .       PUNCT .   punct 8  - -       -          -      -            -

# sent_i = 167
# sent = In a box on the counter were a cat and two kittens.
# hyperedge = (were/Pd.xs:21:h1.<f:12 (in/T (on/Br (a/Md.< box/Cc..s) (the/Md.< counter/Cc..s))) (and/J (a/Md.< cat/Cc..s) (two/M#.<..c kittens/Cc..p)))
# hyperedge builder = (167.6/Pd.xs:21:h1.<f:12 (167.0/T (167.3/Br (167.1/Md.< 167.2/Cc..s) (167.4/Md.< 167.5/Cc..s))) (167.9/J (167.7/Md.< 167.8/Cc..s) (167.10/M#.<..c 167.11/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
167 0  In      + in      ADP   IN  prep   6  -          -     B-ARG2 -            in/T
167 1  a       + a       DET   DT  det    2  -          -     I-ARG2 -            a/Md.<
167 2  box     + box     NOUN  NN  pobj   0  -          -     I-ARG2 box.n.01     box/Cc..s
167 3  on      + on      ADP   IN  prep   2  -          -     I-ARG2 -            on/Br
167 4  the     + the     DET   DT  det    5  -          -     I-ARG2 -            the/Md.<
167 5  counter + counter NOUN  NN  pobj   3  -          -     I-ARG2 counter.n.01 counter/Cc..s
167 6  were    + be      AUX   VBD ROOT   6  -          be.01 B-V    be.v.01      were/Pd.xs:21:h1.<f:12
167 7  a       + a       DET   DT  det    8  -          -     B-ARG1 -            a/Md.<
167 8  cat     + cat     NOUN  NN  nsubj  6  -          -     I-ARG1 cat.n.01     cat/Cc..s
167 9  and     + and     CCONJ CC  cc     8  -          -     I-ARG1 -            and/J
167 10 two     + two     NUM   CD  nummod 11 B-CARDINAL -     I-ARG1 two.s.01     two/M#.<..c
167 11 kittens - kitten  NOUN  NNS conj   8  -          -     I-ARG1 kitten.n.01  kittens/Cc..p
167 12 .       - .       PUNCT .   punct  6  -          -     -      -            -

# sent_i = 168
# sent = His main concern is the problems of his constituents.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (his/Mp (main/Ma.< concern/Cc..s)) (of/Br (the/Md.< problems/Cc..p) (his/Mp constituents/Cc..p)))
# hyperedge builder = (168.3/Pd.sc:12:1h.|f--3s:12 (168.0/Mp (168.1/Ma.< 168.2/Cc..s)) (168.6/Br (168.4/Md.< 168.5/Cc..p) (168.7/Mp 168.8/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 coref1 synset atoms
168 0 His          + his         PRON  PRP$ poss  2 - -     B-ARG1 B-MAIN0 -                his/Mp
168 1 main         + main        ADJ   JJ   amod  2 - -     I-ARG1 -       chief.s.01       main/Ma.<
168 2 concern      + concern     NOUN  NN   nsubj 3 - -     I-ARG1 -       concern.n.01     concern/Cc..s
168 3 is           + be          AUX   VBZ  ROOT  3 - be.01 B-V    -       be.v.01          is/Pd.sc:12:1h.|f--3s:12
168 4 the          + the         DET   DT   det   5 - -     B-ARG2 -       -                the/Md.<
168 5 problems     + problem     NOUN  NNS  attr  3 - -     I-ARG2 -       problem.n.01     problems/Cc..p
168 6 of           + of          ADP   IN   prep  5 - -     I-ARG2 -       -                of/Br
168 7 his          + his         PRON  PRP$ poss  8 - -     I-ARG2 B-REF0  -                his/Mp
168 8 constituents - constituent NOUN  NNS  pobj  6 - -     I-ARG2 -       constituent.n.02 constituents/Cc..p
168 9 .            - .           PUNCT .    punct 3 - -     -      -       -                -

# sent_i = 169
# sent = A white dress and a brightly colored handbag make a striking combination.
# hyperedge = (make/Pd.so:01:0h.|f:0123 (and/J (a/Md.< (white/Ma.< dress/Cc..s)) (a/Md.< ((brightly/M.< colored/Ma.<) handbag/Cc..s))) (a/Md.< (striking/Ma.< combination/Cc..s)))
# hyperedge builder = (169.8/Pd.so:01:0h.|f:0123 (169.3/J (169.0/Md.< (169.1/Ma.< 169.2/Cc..s)) (169.4/Md.< ((169.5/M.< 169.6/Ma.<) 169.7/Cc..s))) (169.9/Md.< (169.10/Ma.< 169.11/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
169 0  A           + a           DET   DT  det    2  - -       B-ARG0 -                a/Md.<
169 1  white       + white       ADJ   JJ  amod   2  - -       I-ARG0 white.a.01       white/Ma.<
169 2  dress       + dress       NOUN  NN  nsubj  8  - -       I-ARG0 dress.n.01       dress/Cc..s
169 3  and         + and         CCONJ CC  cc     2  - -       I-ARG0 -                and/J
169 4  a           + a           DET   DT  det    7  - -       I-ARG0 -                a/Md.<
169 5  brightly    + brightly    ADV   RB  advmod 6  - -       I-ARG0 brilliantly.r.01 brightly/M.<
169 6  colored     + colored     ADJ   JJ  amod   7  - -       I-ARG0 colored.a.01     colored/Ma.<
169 7  handbag     + handbag     NOUN  NN  conj   2  - -       I-ARG0 bag.n.04         handbag/Cc..s
169 8  make        + make        VERB  VBP ROOT   8  - make.01 B-V    make.v.03        make/Pd.so:01:0h.|f:0123
169 9  a           + a           DET   DT  det    11 - -       B-ARG1 -                a/Md.<
169 10 striking    + striking    ADJ   JJ  amod   11 - -       I-ARG1 dramatic.s.02    striking/Ma.<
169 11 combination - combination NOUN  NN  dobj   8  - -       I-ARG1 combination.n.01 combination/Cc..s
169 12 .           - .           PUNCT .   punct  8  - -       -      -                -

# sent_i = 170
# sent = Bread and butter is all he wants.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (and/J bread/Cc..s butter/Cc..s) (+/Jr.ma (+/Jc.rm.?c all/Cd (and/J bread/Cc..s butter/Cc..s)) (wants/P.-s:10:10.|f--3s:01234 (+/Jc.rm.?c all/Cd (and/J bread/Cc..s butter/Cc..s)) he/Ci)))
# hyperedge builder = (170.3/Pd.sc:12:1h.|f--3s:12 (170.1/J 170.0/Cc..s 170.2/Cc..s) (+/Jr.ma (+/Jc.rm.?c 170.4/Cd (170.1/J 170.0/Cc..s 170.2/Cc..s)) (170.6/P.-s:10:10.|f--3s:01234 (+/Jc.rm.?c 170.4/Cd (170.1/J 170.0/Cc..s 170.2/Cc..s)) 170.5/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
170 0 Bread  + bread  NOUN  NN  nsubj 3 - -       B-ARG1 -      B-MAIN0 bread.n.01  bread/Cc..s
170 1 and    + and    CCONJ CC  cc    0 - -       I-ARG1 -      I-MAIN0 -           and/J
170 2 butter + butter NOUN  NN  conj  0 - -       I-ARG1 -      I-MAIN0 butter.n.01 butter/Cc..s
170 3 is     + be     AUX   VBZ ROOT  3 - be.01   B-V    -      -       be.v.01     is/Pd.sc:12:1h.|f--3s:12
170 4 all    + all    DET   DT  attr  3 - -       B-ARG2 B-ARG1 B-REF0  all.a.01    all/Cd
170 5 he     + he     PRON  PRP nsubj 6 - -       I-ARG2 B-ARG0 -       -           he/Ci
170 6 wants  - want   VERB  VBZ relcl 4 - want.01 I-ARG2 B-V    -       desire.v.01 wants/P.-s:10:10.|f--3s:01234
170 7 .      - .      PUNCT .   punct 3 - -       -      -      -       -           -

# sent_i = 171
# sent = Either Harriet or Doris is welcome to come, but not both at once.
# hyperedge = (but/J (is/Pd.sc:12:1h.|f--3s:12 (either/J (or/J harriet/Cp..s.p doris/Cp..s.p)) (+/Br.am welcome/Ca ((to/Mi.< come/P.-:1:1.-i:1234) (either/J (or/J harriet/Cp..s.p doris/Cp..s.p))))) (at/Br (not/Mn.< (+/Jc.rm.?p both/C (or/J harriet/Cp..s.p doris/Cp..s.p))) once/C))
# hyperedge builder = (171.9/J (171.4/Pd.sc:12:1h.|f--3s:12 (171.0/J (171.2/J 171.1/Cp..s.p 171.3/Cp..s.p)) (+/Br.am 171.5/Ca ((171.6/Mi.< 171.7/P.-:1:1.-i:1234) (171.0/J (171.2/J 171.1/Cp..s.p 171.3/Cp..s.p))))) (171.12/Br (171.10/Mn.< (+/Jc.rm.?p 171.11/C (171.2/J 171.1/Cp..s.p 171.3/Cp..s.p))) 171.13/C))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
171 0  Either  + either  CCONJ CC  preconj 1  -        -       B-ARG1 B-ARG1 -       -              either/J
171 1  Harriet + Harriet PROPN NNP nsubj   4  B-PERSON -       I-ARG1 I-ARG1 B-MAIN0 -              harriet/Cp..s.p
171 2  or      + or      CCONJ CC  cc      1  -        -       I-ARG1 I-ARG1 I-MAIN0 -              or/J
171 3  Doris   + Doris   PROPN NNP conj    1  B-PERSON -       I-ARG1 I-ARG1 I-MAIN0 -              doris/Cp..s.p
171 4  is      + be      AUX   VBZ ROOT    4  -        be.01   B-V    -      -       be.v.01        is/Pd.sc:12:1h.|f--3s:12
171 5  welcome + welcome ADJ   JJ  acomp   4  -        -       B-ARG2 -      -       welcome.a.01   welcome/Ca
171 6  to      + to      PART  TO  aux     7  -        -       I-ARG2 -      -       -              to/Mi.<
171 7  come    - come    VERB  VB  xcomp   5  -        come.01 I-ARG2 B-V    -       arrive.v.01    come/P.-:1:1.-i:1234
171 8  ,       + ,       PUNCT ,   punct   4  -        -       I-ARG2 -      -       -              -
171 9  but     + but     CCONJ CC  cc      4  -        -       I-ARG2 -      -       -              but/J
171 10 not     + not     PART  RB  neg     11 -        -       I-ARG2 -      -       not.r.01       not/Mn.<
171 11 both    + both    ADV   RB  conj    4  -        -       I-ARG2 -      B-REF0  both.s.01      both/C
171 12 at      + at      ADP   IN  prep    11 -        -       I-ARG2 -      -       at_a_time.r.01 at/Br
171 13 once    - once    ADV   RB  pcomp   12 -        -       I-ARG2 -      -       at_a_time.r.01 once/C
171 14 .       - .       PUNCT .   punct   4  -        -       -      -      -       -              -

# sent_i = 172
# sent = Neither the coach nor the players feel very confident.
# hyperedge = (feel/Pd.sc:01:11.|f:012 (neither/J (nor/J (the/Md.< coach/Cc..s) (the/Md.< players/Cc..p))) (very/M.< confident/Ca))
# hyperedge builder = (172.6/Pd.sc:01:11.|f:012 (172.0/J (172.3/J (172.1/Md.< 172.2/Cc..s) (172.4/Md.< 172.5/Cc..p))) (172.7/M.< 172.8/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
172 0 Neither   + neither   CCONJ CC  preconj 2 - -       B-ARG0 neither.s.01   neither/J
172 1 the       + the       DET   DT  det     2 - -       I-ARG0 -              the/Md.<
172 2 coach     + coach     NOUN  NN  nsubj   6 - -       I-ARG0 coach.n.01     coach/Cc..s
172 3 nor       + nor       CCONJ CC  cc      2 - -       I-ARG0 -              nor/J
172 4 the       + the       DET   DT  det     5 - -       I-ARG0 -              the/Md.<
172 5 players   + player    NOUN  NNS conj    2 - -       I-ARG0 player.n.01    players/Cc..p
172 6 feel      + feel      VERB  VBP ROOT    6 - feel.01 B-V    feel.v.01      feel/Pd.sc:01:11.|f:012
172 7 very      + very      ADV   RB  advmod  8 - -       B-ARG1 very.r.01      very/M.<
172 8 confident - confident ADJ   JJ  acomp   6 - -       I-ARG1 confident.a.01 confident/Ca
172 9 .         - .         PUNCT .   punct   6 - -       -      -              -

# sent_i = 173
# sent = The news from abroad is rather grim.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (from/Br (the/Md.< news/Cc..s) abroad/C) (rather/M.< grim/Ca))
# hyperedge builder = (173.4/Pd.sc:12:1h.|f--3s:12 (173.2/Br (173.0/Md.< 173.1/Cc..s) 173.3/C) (173.5/M.< 173.6/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
173 0 The    + the    DET   DT  det    1 - -     B-ARG1 -           the/Md.<
173 1 news   + news   NOUN  NN  nsubj  4 - -     I-ARG1 news.n.01   news/Cc..s
173 2 from   + from   ADP   IN  prep   1 - -     I-ARG1 -           from/Br
173 3 abroad + abroad ADV   RB  pcomp  2 - -     I-ARG1 abroad.r.01 abroad/C
173 4 is     + be     AUX   VBZ ROOT   4 - be.01 B-V    be.v.01     is/Pd.sc:12:1h.|f--3s:12
173 5 rather + rather ADV   RB  advmod 6 - -     B-ARG2 rather.r.02 rather/M.<
173 6 grim   - grim   ADJ   JJ  acomp  4 - -     I-ARG2 gloomy.s.02 grim/Ca
173 7 .      - .      PUNCT .   punct  4 - -     -      -           -

# sent_i = 174
# sent = Three years is a long time to be separated from one's friends.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (three/M#.<..d years/Cc..p.d) (+/Jr.ma (a/Md.< (long/Ma.< time/Cc..s)) ((to/Mi.< (be/Mv.< separated/P.-x:t2:td.<pf:012)) (a/Md.< (long/Ma.< time/Cc..s)) (from/T ('s/Bp one/Ci friends/Cc..p)))))
# hyperedge builder = (174.2/Pd.sc:12:1h.|f--3s:12 (174.0/M#.<..d 174.1/Cc..p.d) (+/Jr.ma (174.3/Md.< (174.4/Ma.< 174.5/Cc..s)) ((174.6/Mi.< (174.7/Mv.< 174.8/P.-x:t2:td.<pf:012)) (174.3/Md.< (174.4/Ma.< 174.5/Cc..s)) (174.9/T (174.11/Bp 174.10/Ci 174.12/Cc..p)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
174 0  Three     + three    NUM   CD  nummod  1  B-DATE -           B-ARG1 -   -          three.s.01     three/M#.<..d
174 1  years     + year     NOUN  NNS nsubj   2  I-DATE -           I-ARG1 -   -          year.n.01      years/Cc..p.d
174 2  is        + be       AUX   VBZ ROOT    2  -      be.01       B-V    -   -          be.v.01        is/Pd.sc:12:1h.|f--3s:12
174 3  a         + a        DET   DT  det     5  -      -           B-ARG2 -   B-ARGM-TMP -              a/Md.<
174 4  long      + long     ADJ   JJ  amod    5  -      -           I-ARG2 -   I-ARGM-TMP long_time.n.01 long/Ma.<
174 5  time      + time     NOUN  NN  attr    2  -      -           I-ARG2 -   I-ARGM-TMP long_time.n.01 time/Cc..s
174 6  to        + to       PART  TO  aux     8  -      -           I-ARG2 -   -          -              to/Mi.<
174 7  be        + be       AUX   VB  auxpass 8  -      be.03       I-ARG2 B-V -          -              be/Mv.<
174 8  separated + separate VERB  VBN relcl   5  -      separate.01 I-ARG2 -   B-V        separate.v.09  separated/P.-x:t2:td.<pf:012
174 9  from      + from     ADP   IN  prep    8  -      -           I-ARG2 -   B-ARG2     -              from/T
174 10 one       - one      PRON  PRP poss    12 -      -           I-ARG2 -   I-ARG2     one.n.02       one/Ci
174 11 's        + 's       PART  POS case    10 -      -           I-ARG2 -   I-ARG2     -              's/Bp
174 12 friends   - friend   NOUN  NNS pobj    9  -      -           I-ARG2 -   I-ARG2     friend.n.01    friends/Cc..p
174 13 .         - .        PUNCT .   punct   2  -      -           -      -   -          -              -

# sent_i = 175
# sent = Five dollars seems very reasonable for that shirt.
# hyperedge = (seems/Pd.sr:11:11.|f--3s:12 (five/M#.<..$ dollars/Cc..p.$) (for/Br (very/M.< reasonable/M) (that/Md.< shirt/Cc..s)))
# hyperedge builder = (175.2/Pd.sr:11:11.|f--3s:12 (175.0/M#.<..$ 175.1/Cc..p.$) (175.5/Br (175.3/M.< 175.4/M) (175.6/Md.< 175.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
175 0 Five       + five       NUM   CD  nummod 1 B-MONEY -       B-ARG1   five.s.01   five/M#.<..$
175 1 dollars    + dollar     NOUN  NNS nsubj  2 I-MONEY -       B-ARG1   dollar.n.01 dollars/Cc..p.$
175 2 seems      + seem       VERB  VBZ ROOT   2 -       seem.01 B-V      look.v.02   seems/Pd.sr:11:11.|f--3s:12
175 3 very       + very       ADV   RB  advmod 4 -       -       B-C-ARG1 very.r.01   very/M.<
175 4 reasonable + reasonable ADJ   JJ  xcomp  2 -       -       I-C-ARG1 fair.s.02   reasonable/M
175 5 for        + for        ADP   IN  prep   4 -       -       I-C-ARG1 -           for/Br
175 6 that       + that       DET   DT  det    7 -       -       I-C-ARG1 -           that/Md.<
175 7 shirt      - shirt      NOUN  NN  pobj   5 -       -       I-C-ARG1 shirt.n.01  shirt/Cc..s
175 8 .          - .          PUNCT .   punct  2 -       -       -        -           -

# sent_i = 176
# sent = He often cited the ancient proverb that honesty is the best policy.
# hyperedge = (cited/Pd.s?o:0t1:0t1.<f:012 he/Ci often/M (+/Jr.ma (the/Md.< (ancient/Ma.< proverb/Cc..s)) (that/T (is/P.sc:12:1h.|f--3s:12 honesty/Cc..s (the/Md.< (best/Ms.< policy/Cc..s))))))
# hyperedge builder = (176.2/Pd.s?o:0t1:0t1.<f:012 176.0/Ci 176.1/M (+/Jr.ma (176.3/Md.< (176.4/Ma.< 176.5/Cc..s)) (176.6/T (176.8/P.sc:12:1h.|f--3s:12 176.7/Cc..s (176.9/Md.< (176.10/Ms.< 176.11/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
176 0  He      + he      PRON  PRP nsubj  2  - -       B-ARG0     -      -               he/Ci
176 1  often   + often   ADV   RB  advmod 2  - -       B-ARGM-TMP -      frequently.r.01 often/M
176 2  cited   + cite    VERB  VBD ROOT   2  - cite.01 B-V        -      mention.v.01    cited/Pd.s?o:0t1:0t1.<f:012
176 3  the     + the     DET   DT  det    5  - -       B-ARG1     -      -               the/Md.<
176 4  ancient + ancient ADJ   JJ  amod   5  - -       I-ARG1     -      ancient.s.02    ancient/Ma.<
176 5  proverb + proverb NOUN  NN  dobj   2  - -       I-ARG1     -      proverb.n.01    proverb/Cc..s
176 6  that    + that    DET   WDT mark   8  - -       I-ARG1     -      -               that/T
176 7  honesty + honesty NOUN  NN  nsubj  8  - -       I-ARG1     B-ARG1 honesty.n.01    honesty/Cc..s
176 8  is      + be      VERB  VBZ acl    5  - be.01   I-ARG1     B-V    be.v.01         is/P.sc:12:1h.|f--3s:12
176 9  the     + the     DET   DT  det    11 - -       I-ARG1     B-ARG2 -               the/Md.<
176 10 best    + good    ADJ   JJS amod   11 - -       I-ARG1     I-ARG2 best.a.01       best/Ms.<
176 11 policy  - policy  NOUN  NN  attr   8  - -       I-ARG1     I-ARG2 policy.n.01     policy/Cc..s
176 12 .       - .       PUNCT .   punct  2  - -       -          -      -               -

# sent_i = 177
# sent = Medieval man was not aware that the earth is round.
# hyperedge = ((not/Mn.> was/Pd.sc:12:1h.<f:12) (medieval/Ma.< man/Cc..s) (+/Br.am aware/Ca (that/T (is/P.sc:12:1h.|f--3s:12 (the/Md.< earth/Cc..s.l) round/Ca))))
# hyperedge builder = ((177.3/Mn.> 177.2/Pd.sc:12:1h.<f:12) (177.0/Ma.< 177.1/Cc..s) (+/Br.am 177.4/Ca (177.5/T (177.8/P.sc:12:1h.|f--3s:12 (177.6/Md.< 177.7/Cc..s.l) 177.9/Ca))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
177 0  Medieval + medieval ADJ   JJ  amod  1 -     -     B-ARG1     -      medieval.a.01 medieval/Ma.<
177 1  man      + man      NOUN  NN  nsubj 2 -     -     I-ARG1     -      man.n.01      man/Cc..s
177 2  was      + be       AUX   VBD ROOT  2 -     be.01 B-V        -      be.v.01       was/Pd.sc:12:1h.<f:12
177 3  not      + not      PART  RB  neg   2 -     -     B-ARGM-NEG -      not.r.01      not/Mn.>
177 4  aware    + aware    ADJ   JJ  acomp 2 -     -     B-ARG2     -      aware.a.01    aware/Ca
177 5  that     + that     SCONJ IN  mark  8 -     -     I-ARG2     -      -             that/T
177 6  the      + the      DET   DT  det   7 -     -     I-ARG2     B-ARG1 -             the/Md.<
177 7  earth    + earth    NOUN  NN  nsubj 8 B-LOC -     I-ARG2     I-ARG1 earth.n.01    earth/Cc..s.l
177 8  is       + be       AUX   VBZ ccomp 4 -     be.01 I-ARG2     B-V    be.v.01       is/P.sc:12:1h.|f--3s:12
177 9  round    - round    ADJ   JJ  acomp 8 -     -     I-ARG2     B-ARG2 round.a.01    round/Ca
177 10 .        - .        PUNCT .   punct 2 -     -     -          -      -             -

# sent_i = 178
# sent = Mr. Coleman says that he doesn't like olives.
# hyperedge = (says/Pd.sr:01:01.|f--3s:0123 (+/B.am mr%2e/Cp.<.s coleman/Cp..s.p) (that/T ((does/Mv.< (n't/Mn.< like/P.so:01:!!.-i)) (+/Jc.rm.rp he/Ci (+/B.am mr%2e/Cp.<.s coleman/Cp..s.p)) olives/Cc..p)))
# hyperedge builder = (178.2/Pd.sr:01:01.|f--3s:0123 (+/B.am 178.0/Cp.<.s 178.1/Cp..s.p) (178.3/T ((178.5/Mv.< (178.6/Mn.< 178.7/P.so:01:!!.-i)) (+/Jc.rm.rp 178.4/Ci (+/B.am 178.0/Cp.<.s 178.1/Cp..s.p)) 178.8/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
178 0 Mr.     + Mr.     PROPN NNP compound 1 -        -      B-ARG0 -   -          B-MAIN0 mister.n.01 mr%2e/Cp.<.s
178 1 Coleman + Coleman PROPN NNP nsubj    2 B-PERSON -      I-ARG0 -   -          I-MAIN0 -           coleman/Cp..s.p
178 2 says    + say     VERB  VBZ ROOT     2 -        say.01 B-V    -   -          -       state.v.01  says/Pd.sr:01:01.|f--3s:0123
178 3 that    + that    SCONJ IN  mark     7 -        -      B-ARG1 -   -          -       -           that/T
178 4 he      + he      PRON  PRP nsubj    7 -        -      I-ARG1 -   B-ARG0     B-REF0  -           he/Ci
178 5 does    - do      AUX   VBZ aux      7 -        do.01  I-ARG1 B-V -          -       -           does/Mv.<
178 6 n't     + not     PART  RB  neg      7 -        -      I-ARG1 -   B-ARGM-NEG -       not.r.01    n't/Mn.<
178 7 like    + like    VERB  VB  ccomp    2 -        -      I-ARG1 -   B-V        -       like.v.02   like/P.so:01:!!.-i
178 8 olives  - olive   NOUN  NNS dobj     7 -        -      I-ARG1 -   B-ARG1     -       olive.n.04  olives/Cc..p
178 9 .       - .       PUNCT .   punct    2 -        -      -      -   -          -       -           -

# sent_i = 179
# sent = Mr. Coleman said that he didn't like olives.
# hyperedge = (said/Pd.sr:01:01.<f:0123 (+/B.am mr%2e/Cp.<.s coleman/Cp..s.p) (that/T ((did/Mv.< (n't/Mn.< like/P.so:01:01.-i:01)) (+/Jc.rm.rp he/Ci (+/B.am mr%2e/Cp.<.s coleman/Cp..s.p)) olives/Cc..p)))
# hyperedge builder = (179.2/Pd.sr:01:01.<f:0123 (+/B.am 179.0/Cp.<.s 179.1/Cp..s.p) (179.3/T ((179.5/Mv.< (179.6/Mn.< 179.7/P.so:01:01.-i:01)) (+/Jc.rm.rp 179.4/Ci (+/B.am 179.0/Cp.<.s 179.1/Cp..s.p)) 179.8/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
179 0 Mr.     + Mr.     PROPN NNP compound 1 -        -       B-ARG0 -   -          B-MAIN0 mister.n.01 mr%2e/Cp.<.s
179 1 Coleman + Coleman PROPN NNP nsubj    2 B-PERSON -       I-ARG0 -   -          I-MAIN0 -           coleman/Cp..s.p
179 2 said    + say     VERB  VBD ROOT     2 -        say.01  B-V    -   -          -       state.v.01  said/Pd.sr:01:01.<f:0123
179 3 that    + that    SCONJ IN  mark     7 -        -       B-ARG1 -   -          -       -           that/T
179 4 he      + he      PRON  PRP nsubj    7 -        -       I-ARG1 -   B-ARG0     B-REF0  -           he/Ci
179 5 did     - do      AUX   VBD aux      7 -        do.01   I-ARG1 B-V -          -       -           did/Mv.<
179 6 n't     + not     PART  RB  neg      7 -        -       I-ARG1 -   B-ARGM-NEG -       not.r.01    n't/Mn.<
179 7 like    + like    VERB  VB  ccomp    2 -        like.01 I-ARG1 -   B-V        -       like.v.02   like/P.so:01:01.-i:01
179 8 olives  - olive   NOUN  NNS dobj     7 -        -       I-ARG1 -   B-ARG1     -       olive.n.04  olives/Cc..p
179 9 .       - .       PUNCT .   punct    2 -        -       -      -   -          -       -           -

# sent_i = 180
# sent = Suddenly I realized that I had forgotten the tickets.
# hyperedge = (realized/Pd.?sr:t01:t01.<f:01 suddenly/M i/Ci (that/T ((had/Mv.< forgotten/P.so:01:01.<pf:01) i/Ci (the/Md.< tickets/Cc..p))))
# hyperedge builder = (180.2/Pd.?sr:t01:t01.<f:01 180.0/M 180.1/Ci (180.3/T ((180.5/Mv.< 180.6/P.so:01:01.<pf:01) 180.4/Ci (180.7/Md.< 180.8/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
180 0 Suddenly  + suddenly ADV   RB  advmod 2 - -          B-ARGM-TMP -   -      -       suddenly.r.01   suddenly/M
180 1 I         + I        PRON  PRP nsubj  2 - -          B-ARG0     -   -      B-MAIN0 -               i/Ci
180 2 realized  + realize  VERB  VBD ROOT   2 - realize.01 B-V        -   -      -       understand.v.02 realized/Pd.?sr:t01:t01.<f:01
180 3 that      + that     SCONJ IN  mark   6 - -          B-ARG1     -   -      -       -               that/T
180 4 I         + I        PRON  PRP nsubj  6 - -          I-ARG1     -   B-ARG0 B-REF0  -               i/Ci
180 5 had       + have     AUX   VBD aux    6 - have.01    I-ARG1     B-V -      -       -               had/Mv.<
180 6 forgotten + forget   VERB  VBN ccomp  2 - forget.01  I-ARG1     -   B-V    -       forget.v.04     forgotten/P.so:01:01.<pf:01
180 7 the       + the      DET   DT  det    8 - -          I-ARG1     -   B-ARG1 -       -               the/Md.<
180 8 tickets   - ticket   NOUN  NNS dobj   6 - -          I-ARG1     -   I-ARG1 -       ticket.n.01     tickets/Cc..p
180 9 .         - .        PUNCT .   punct  2 - -          -          -   -      -       -               -

# sent_i = 181
# sent = If you had been in the audience, I would have seen you.
# hyperedge = ((would/Mm.< (have/Mv.< seen/Pd.xso:r01:r01.<pf:012)) (if/T ((had/Mv.< been/P.sx:12:1h.<pf:12) you/Ci (in/T (the/Md.< audience/Cc..s)))) i/Ci you/Ci)
# hyperedge builder = ((181.9/Mm.< (181.10/Mv.< 181.11/Pd.xso:r01:r01.<pf:012)) (181.0/T ((181.2/Mv.< 181.3/P.sx:12:1h.<pf:12) 181.1/Ci (181.4/T (181.5/Md.< 181.6/Cc..s)))) 181.8/Ci 181.12/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
181 0  If       + if       SCONJ IN  mark  3  - -       -   -      -   -   B-ARGM-ADV -       -             if/T
181 1  you      + you      PRON  PRP nsubj 3  - -       -   B-ARG1 -   -   I-ARGM-ADV B-MAIN0 -             you/Ci
181 2  had      + have     AUX   VBD aux   3  - have.01 B-V -      -   -   I-ARGM-ADV -       -             had/Mv.<
181 3  been     + be       VERB  VBN advcl 11 - be.01   -   B-V    -   -   I-ARGM-ADV -       be.v.01       been/P.sx:12:1h.<pf:12
181 4  in       + in       ADP   IN  prep  3  - -       -   B-ARG2 -   -   I-ARGM-ADV -       -             in/T
181 5  the      + the      DET   DT  det   6  - -       -   I-ARG2 -   -   I-ARGM-ADV -       -             the/Md.<
181 6  audience - audience NOUN  NN  pobj  4  - -       -   I-ARG2 -   -   I-ARGM-ADV -       audience.n.01 audience/Cc..s
181 7  ,        + ,        PUNCT ,   punct 11 - -       -   -      -   -   -          -       -             -
181 8  I        + I        PRON  PRP nsubj 11 - -       -   -      -   -   B-ARG0     -       -             i/Ci
181 9  would    + would    AUX   MD  aux   11 - -       -   -      B-V -   B-ARGM-MOD -       -             would/Mm.<
181 10 have     + have     AUX   VB  aux   11 - have.01 -   -      -   B-V -          -       -             have/Mv.<
181 11 seen     + see      VERB  VBN ROOT  11 - see.01  -   -      -   -   B-V        -       see.v.01      seen/Pd.xso:r01:r01.<pf:012
181 12 you      - you      PRON  PRP dobj  11 - -       -   -      -   -   B-ARG1     B-REF0  -             you/Ci
181 13 .        - .        PUNCT .   punct 11 - -       -   -      -   -   -          -       -             -

# sent_i = 182
# sent = If they had played fair, we might have won.
# hyperedge = ((might/Mm.< (have/Mv.< won/Pd.xs:r0:r0.<pf:012345)) (if/T ((had/Mv.< played/P.s?:0m:0m.<pf:0123) they/Ci fair/M)) we/Ci)
# hyperedge builder = ((182.7/Mm.< (182.8/Mv.< 182.9/Pd.xs:r0:r0.<pf:012345)) (182.0/T ((182.2/Mv.< 182.3/P.s?:0m:0m.<pf:0123) 182.1/Ci 182.4/M)) 182.6/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
182 0  If     + if   SCONJ IN  mark   3 - -       -   -          -   -   B-ARGM-ADV -           if/T
182 1  they   + they PRON  PRP nsubj  3 - -       -   B-ARG0     -   -   I-ARGM-ADV -           they/Ci
182 2  had    + have AUX   VBD aux    3 - have.01 B-V -          -   -   I-ARGM-ADV -           had/Mv.<
182 3  played + play VERB  VBN advcl  9 - play.01 -   B-V        -   -   I-ARGM-ADV play.v.01   played/P.s?:0m:0m.<pf:0123
182 4  fair   - fair ADV   RB  advmod 3 - -       -   B-ARGM-MNR -   -   I-ARGM-ADV fairly.r.03 fair/M
182 5  ,      + ,    PUNCT ,   punct  9 - -       -   -          -   -   -          -           -
182 6  we     + we   PRON  PRP nsubj  9 - -       -   -          -   -   B-ARG0     -           we/Ci
182 7  might  + may  AUX   MD  aux    9 - -       -   -          B-V -   B-ARGM-MOD -           might/Mm.<
182 8  have   + have AUX   VB  aux    9 - have.01 -   -          -   B-V -          -           have/Mv.<
182 9  won    - win  VERB  VBN ROOT   9 - win.01  -   -          -   -   B-V        win.v.01    won/Pd.xs:r0:r0.<pf:012345
182 10 .      - .    PUNCT .   punct  9 - -       -   -          -   -   -          -           -

# sent_i = 183
# sent = We planned to go sailing with you.
# hyperedge = (planned/Pd.sr:01:01.<f:0123 we/Ci ((to/Mi.< go/P.-r:01:11.-i:0134) we/Ci (sailing/P.-x:0o:0o.|pg:01 we/Ci (with/T you/Ci))))
# hyperedge builder = (183.1/Pd.sr:01:01.<f:0123 183.0/Ci ((183.2/Mi.< 183.3/P.-r:01:11.-i:0134) 183.0/Ci (183.4/P.-x:0o:0o.|pg:01 183.0/Ci (183.5/T 183.6/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
183 0 We      + we   PRON  PRP nsubj 1 - -       B-ARG0 B-ARG0 B-ARG0     -            we/Ci
183 1 planned + plan VERB  VBD ROOT  1 - plan.01 B-V    -      -          plan.v.02    planned/Pd.sr:01:01.<f:0123
183 2 to      + to   PART  TO  aux   3 - -       B-ARG1 -      -          -            to/Mi.<
183 3 go      + go   VERB  VB  xcomp 1 - go.02   I-ARG1 B-V    -          go.v.02      go/P.-r:01:11.-i:0134
183 4 sailing + sail VERB  VBG xcomp 3 - sail.01 I-ARG1 B-ARG1 B-V        sailing.n.02 sailing/P.-x:0o:0o.|pg:01
183 5 with    + with ADP   IN  prep  4 - -       I-ARG1 I-ARG1 B-ARGM-COM -            with/T
183 6 you     - you  PRON  PRP pobj  5 - -       I-ARG1 I-ARG1 I-ARGM-COM -            you/Ci
183 7 .       - .    PUNCT .   punct 1 - -       -      -      -          -            -

# sent_i = 184
# sent = I should have liked to see you in that costume.
# hyperedge = ((should/Mm.< (have/Mv.< liked/Pd.sr:01:01.<pf:01)) i/Ci ((to/Mi.< see/P.-ox:01-:01-.-i:012) i/Ci you/Ci (in/T (that/Md.< costume/Cc..s))))
# hyperedge builder = ((184.1/Mm.< (184.2/Mv.< 184.3/Pd.sr:01:01.<pf:01)) 184.0/Ci ((184.4/Mi.< 184.5/P.-ox:01-:01-.-i:012) 184.0/Ci 184.6/Ci (184.7/T (184.8/Md.< 184.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
184 0  I       + I       PRON  PRP nsubj 3 - -       -   -   B-ARG0     B-ARG0 -            i/Ci
184 1  should  + should  AUX   MD  aux   3 - -       B-V -   B-ARGM-MOD -      -            should/Mm.<
184 2  have    + have    AUX   VB  aux   3 - have.01 -   B-V -          -      -            have/Mv.<
184 3  liked   + like    VERB  VBN ROOT  3 - like.02 -   -   B-V        -      wish.v.02    liked/Pd.sr:01:01.<pf:01
184 4  to      + to      PART  TO  aux   5 - -       -   -   B-ARG1     -      -            to/Mi.<
184 5  see     + see     VERB  VB  xcomp 3 - see.01  -   -   I-ARG1     B-V    see.v.01     see/P.-ox:01-:01-.-i:012
184 6  you     + you     PRON  PRP dobj  5 - -       -   -   I-ARG1     B-ARG1 -            you/Ci
184 7  in      + in      ADP   IN  prep  5 - -       -   -   I-ARG1     I-ARG1 -            in/T
184 8  that    + that    DET   DT  det   9 - -       -   -   I-ARG1     I-ARG1 -            that/Md.<
184 9  costume - costume NOUN  NN  pobj  7 - -       -   -   I-ARG1     I-ARG1 costume.n.01 costume/Cc..s
184 10 .       - .       PUNCT .   punct 3 - -       -   -   -          -      -            -

# sent_i = 185
# sent = I should like to have seen you in that costume.
# hyperedge = ((should/Mm.< like/Pd.sr:01:01.-i:01) i/Ci ((to/Mi.< (have/Mv.< seen/P.-ox:01-:01-.<pf:012)) i/Ci you/Ci (in/T (that/Md.< costume/Cc..s))))
# hyperedge builder = ((185.1/Mm.< 185.2/Pd.sr:01:01.-i:01) 185.0/Ci ((185.3/Mi.< (185.4/Mv.< 185.5/P.-ox:01-:01-.<pf:012)) 185.0/Ci 185.6/Ci (185.7/T (185.8/Md.< 185.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
185 0  I       + I       PRON  PRP nsubj 2 - -       -   B-ARG0     -   B-ARG0 -            i/Ci
185 1  should  + should  AUX   MD  aux   2 - -       B-V B-ARGM-MOD -   -      -            should/Mm.<
185 2  like    + like    VERB  VB  ROOT  2 - like.02 -   B-V        -   -      wish.v.02    like/Pd.sr:01:01.-i:01
185 3  to      + to      PART  TO  aux   5 - -       -   B-ARG1     -   -      -            to/Mi.<
185 4  have    + have    AUX   VB  aux   5 - have.01 -   I-ARG1     B-V -      -            have/Mv.<
185 5  seen    + see     VERB  VBN xcomp 2 - see.01  -   I-ARG1     -   B-V    see.v.01     seen/P.-ox:01-:01-.<pf:012
185 6  you     + you     PRON  PRP dobj  5 - -       -   I-ARG1     -   B-ARG1 -            you/Ci
185 7  in      + in      ADP   IN  prep  5 - -       -   I-ARG1     -   I-ARG1 -            in/T
185 8  that    + that    DET   DT  det   9 - -       -   I-ARG1     -   I-ARG1 -            that/Md.<
185 9  costume - costume NOUN  NN  pobj  7 - -       -   I-ARG1     -   I-ARG1 costume.n.01 costume/Cc..s
185 10 .       - .       PUNCT .   punct 2 - -       -   -          -   -      -            -

# sent_i = 186
# sent = If I were Mary, I'd take the job.
# hyperedge = (('d/Mm.< take/Pd.xso:r01:r01.-i:0123) (if/T (were/P.sc:12:1h.<f:12 i/Ci mary/Cp..s.p)) i/Ci (the/Md.< job/Cc..s))
# hyperedge builder = ((186.6/Mm.< 186.7/Pd.xso:r01:r01.-i:0123) (186.0/T (186.2/P.sc:12:1h.<f:12 186.1/Ci 186.3/Cp..s.p)) 186.5/Ci (186.8/Md.< 186.9/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
186 0  If   + if   SCONJ IN  mark  2 -        -       -      -   B-ARGM-ADV -       -               if/T
186 1  I    + I    PRON  PRP nsubj 2 -        -       B-ARG1 -   I-ARGM-ADV B-MAIN0 -               i/Ci
186 2  were + be   VERB  VBD advcl 7 -        be.01   B-V    -   I-ARGM-ADV -       be.v.01         were/P.sc:12:1h.<f:12
186 3  Mary - Mary PROPN NNP attr  2 B-PERSON -       B-ARG2 -   I-ARGM-ADV -       -               mary/Cp..s.p
186 4  ,    + ,    PUNCT ,   punct 7 -        -       -      -   -          -       -               -
186 5  I    - I    PRON  PRP nsubj 7 -        -       -      -   B-ARG0     B-REF0  -               i/Ci
186 6  'd   + 'd   AUX   MD  aux   7 -        -       -      B-V B-ARGM-MOD -       -               'd/Mm.<
186 7  take + take VERB  VB  ROOT  7 -        take.01 -      -   B-V        -       fill.v.04       take/Pd.xso:r01:r01.-i:0123
186 8  the  + the  DET   DT  det   9 -        -       -      -   B-ARG1     -       -               the/Md.<
186 9  job  - job  NOUN  NN  dobj  7 -        -       -      -   I-ARG1     -       occupation.n.01 job/Cc..s
186 10 .    - .    PUNCT .   punct 7 -        -       -      -   -          -       -               -

# sent_i = 187
# sent = You speak as if you were my father.
# hyperedge = (speak/Pd.sx:0m:0m.|f:0123 you/Ci (as/T (if/T (were/P.sc:12:1h.<f:12 you/Ci (my/Mp father/Cc..s)))))
# hyperedge builder = (187.1/Pd.sx:0m:0m.|f:0123 187.0/Ci (187.2/T (187.3/T (187.5/P.sc:12:1h.<f:12 187.4/Ci (187.6/Mp 187.7/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
187 0 You    + you    PRON  PRP  nsubj 1 - -        B-ARG0     -      B-MAIN0 -           you/Ci
187 1 speak  + speak  VERB  VBP  ROOT  1 - speak.01 B-V        -      -       speak.v.03  speak/Pd.sx:0m:0m.|f:0123
187 2 as     + as     SCONJ IN   mark  5 - -        B-ARGM-MNR -      -       -           as/T
187 3 if     + if     SCONJ IN   mark  5 - -        I-ARGM-MNR -      -       -           if/T
187 4 you    + you    PRON  PRP  nsubj 5 - -        I-ARGM-MNR B-ARG1 B-REF0  -           you/Ci
187 5 were   + be     VERB  VBD  advcl 1 - be.01    I-ARGM-MNR B-V    -       be.v.01     were/P.sc:12:1h.<f:12
187 6 my     + my     PRON  PRP$ poss  7 - -        I-ARGM-MNR B-ARG2 -       -           my/Mp
187 7 father - father NOUN  NN   attr  5 - -        I-ARGM-MNR I-ARG2 -       father.n.01 father/Cc..s
187 8 .      - .      PUNCT .    punct 1 - -        -          -      -       -           -

# sent_i = 188
# sent = Sometimes I wish he were making less money.
# hyperedge = (wish/Pd.?sr:t01:t01.|f:012 sometimes/M i/Ci ((were/Mv.< making/P.so:01:01.|pg:012) he/Ci (less/Mc.< money/Cc..s)))
# hyperedge builder = (188.2/Pd.?sr:t01:t01.|f:012 188.0/M 188.1/Ci ((188.4/Mv.< 188.5/P.so:01:01.|pg:012) 188.3/Ci (188.6/Mc.< 188.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
188 0 Sometimes + sometimes ADV   RB  advmod 2 - -       B-ARGM-TMP -   -      sometimes.r.01 sometimes/M
188 1 I         + I         PRON  PRP nsubj  2 - -       B-ARG0     -   -      -              i/Ci
188 2 wish      + wish      VERB  VBP ROOT   2 - wish.01 B-V        -   -      wish.v.01      wish/Pd.?sr:t01:t01.|f:012
188 3 he        + he        PRON  PRP nsubj  5 - -       B-ARG1     -   B-ARG0 -              he/Ci
188 4 were      + be        AUX   VBD aux    5 - be.03   I-ARG1     B-V -      -              were/Mv.<
188 5 making    + make      VERB  VBG ccomp  2 - make.05 I-ARG1     -   B-V    gain.v.08      making/P.so:01:01.|pg:012
188 6 less      + less      ADJ   JJR amod   7 - -       I-ARG1     -   B-ARG1 less.a.01      less/Mc.<
188 7 money     - money     NOUN  NN  dobj   5 - -       I-ARG1     -   I-ARG1 money.n.01     money/Cc..s
188 8 .         - .         PUNCT .   punct  2 - -       -          -   -      -              -

# sent_i = 189
# sent = The committee recommended that the scheme go ahead.
# hyperedge = (recommended/Pd.sr:01:01.<f:01234 (the/Md.< committee/Cc..s) (that/T (go/P.s?:12:1d.|f:012 (the/Md.< scheme/Cc..s) ahead/M)))
# hyperedge builder = (189.2/Pd.sr:01:01.<f:01234 (189.0/Md.< 189.1/Cc..s) (189.3/T (189.6/P.s?:12:1d.|f:012 (189.4/Md.< 189.5/Cc..s) 189.7/M)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
189 0 The         + the       DET   DT  det    1 - -            B-ARG0 -      -              the/Md.<
189 1 committee   + committee NOUN  NN  nsubj  2 - -            I-ARG0 -      committee.n.01 committee/Cc..s
189 2 recommended + recommend VERB  VBD ROOT   2 - recommend.01 B-V    -      recommend.v.01 recommended/Pd.sr:01:01.<f:01234
189 3 that        + that      SCONJ IN  mark   6 - -            B-ARG1 -      -              that/T
189 4 the         + the       DET   DT  det    5 - -            I-ARG1 B-ARG1 -              the/Md.<
189 5 scheme      + scheme    NOUN  NN  nsubj  6 - -            I-ARG1 I-ARG1 scheme.n.01    scheme/Cc..s
189 6 go          + go        VERB  VBP ccomp  2 - go.06        I-ARG1 B-V    go_ahead.v.01  go/P.s?:12:1d.|f:012
189 7 ahead       - ahead     ADV   RB  advmod 6 - -            I-ARG1 B-ARG2 go_ahead.v.01  ahead/M
189 8 .           - .         PUNCT .   punct  2 - -            -      -      -              -

# sent_i = 190
# sent = The Opposition are insisting that the Minister resign.
# hyperedge = ((are/Mv.< insisting/Pd.sr:01:01.|pg:01) (the/Md.< opposition/Cp..s) (that/T (resign/P.s:0:0.-i:01 (the/Md.< minister/Cp..s))))
# hyperedge builder = ((190.2/Mv.< 190.3/Pd.sr:01:01.|pg:01) (190.0/Md.< 190.1/Cp..s) (190.4/T (190.7/P.s:0:0.-i:01 (190.5/Md.< 190.6/Cp..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
190 0 The        + the        DET   DT  det   1 - -         -   B-ARG0 -      -               the/Md.<
190 1 Opposition + Opposition PROPN NNP nsubj 3 - -         -   I-ARG0 -      opposition.n.05 opposition/Cp..s
190 2 are        + be         AUX   VBP aux   3 - be.03     B-V -      -      -               are/Mv.<
190 3 insisting  + insist     VERB  VBG ROOT  3 - insist.01 -   B-V    -      insist.v.01     insisting/Pd.sr:01:01.|pg:01
190 4 that       + that       SCONJ IN  mark  7 - -         -   B-ARG1 -      -               that/T
190 5 the        + the        DET   DT  det   6 - -         -   I-ARG1 B-ARG0 -               the/Md.<
190 6 Minister   + Minister   PROPN NNP nsubj 7 - -         -   I-ARG1 I-ARG0 minister.n.02   minister/Cp..s
190 7 resign     - resign     VERB  VB  ccomp 3 - resign.01 -   I-ARG1 B-V    vacate.v.01     resign/P.s:0:0.-i:01
190 8 .          - .          PUNCT .   punct 3 - -         -   -      -      -               -

# sent_i = 191
# sent = It is important that an exact record be kept.
# hyperedge = (is/Pd.scr:-21:-h1.|f--3s:12 it/Ci important/Ca (that/T ((be/Mv.< kept/P.p:1:1.<pf:01) (an/Md.< (exact/Ma.< record/Cc..s)))))
# hyperedge builder = (191.1/Pd.scr:-21:-h1.|f--3s:12 191.0/Ci 191.2/Ca (191.3/T ((191.7/Mv.< 191.8/P.p:1:1.<pf:01) (191.4/Md.< (191.5/Ma.< 191.6/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
191 0 It        + it        PRON  PRP nsubj     1 - -       -      -   -      -              it/Ci
191 1 is        + be        AUX   VBZ ROOT      1 - be.01   B-V    -   -      be.v.01        is/Pd.scr:-21:-h1.|f--3s:12
191 2 important + important ADJ   JJ  acomp     1 - -       B-ARG2 -   -      important.a.01 important/Ca
191 3 that      + that      SCONJ IN  mark      8 - -       B-ARG1 -   -      -              that/T
191 4 an        + an        DET   DT  det       6 - -       I-ARG1 -   B-ARG1 -              an/Md.<
191 5 exact     + exact     ADJ   JJ  amod      6 - -       I-ARG1 -   I-ARG1 exact.a.01     exact/Ma.<
191 6 record    + record    NOUN  NN  nsubjpass 8 - -       I-ARG1 -   I-ARG1 record.n.01    record/Cc..s
191 7 be        + be        AUX   VB  auxpass   8 - be.03   I-ARG1 B-V -      -              be/Mv.<
191 8 kept      - keep      VERB  VBN ccomp     1 - keep.01 I-ARG1 -   B-V    keep.v.08      kept/P.p:1:1.<pf:01
191 9 .         - .         PUNCT .   punct     1 - -       -      -   -      -              -

# sent_i = 192
# sent = The man looked as if he was drunk.
# hyperedge = (looked/Pd.sx:01:01.<f:012 (the/Md.< man/Cc..s) (as/T (if/T (was/P.sc:12:1h.<f:12 (+/Jc.rm.rc he/Ci (the/Md.< man/Cc..s)) drunk/Ca))))
# hyperedge builder = (192.2/Pd.sx:01:01.<f:012 (192.0/Md.< 192.1/Cc..s) (192.3/T (192.4/T (192.6/P.sc:12:1h.<f:12 (+/Jc.rm.rc 192.5/Ci (192.0/Md.< 192.1/Cc..s)) 192.7/Ca))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
192 0 The    + the   DET   DT  det   1 - -       B-ARG0 -      B-MAIN0 -                the/Md.<
192 1 man    + man   NOUN  NN  nsubj 2 - -       I-ARG0 -      I-MAIN0 man.n.01         man/Cc..s
192 2 looked + look  VERB  VBD ROOT  2 - look.02 B-V    -      -       look.v.02        looked/Pd.sx:01:01.<f:012
192 3 as     + as    SCONJ IN  mark  6 - -       B-ARG1 -      -       -                as/T
192 4 if     + if    SCONJ IN  mark  6 - -       I-ARG1 -      -       -                if/T
192 5 he     + he    PRON  PRP nsubj 6 - -       I-ARG1 B-ARG1 B-REF0  -                he/Ci
192 6 was    + be    VERB  VBD advcl 2 - be.01   I-ARG1 B-V    -       be.v.01          was/P.sc:12:1h.<f:12
192 7 drunk  - drunk ADJ   JJ  acomp 6 - -       I-ARG1 B-ARG2 -       intoxicated.a.01 drunk/Ca
192 8 .      - .     PUNCT .   punct 2 - -       -      -      -       -                -

# sent_i = 193
# sent = The man looked as if he were drunk.
# hyperedge = (looked/Pd.sx:01:01.<f:012 (the/Md.< man/Cc..s) (as/T (if/T (were/P.sc:12:1h.<f:12 (+/Jc.rm.rc he/Ci (the/Md.< man/Cc..s)) drunk/Ca))))
# hyperedge builder = (193.2/Pd.sx:01:01.<f:012 (193.0/Md.< 193.1/Cc..s) (193.3/T (193.4/T (193.6/P.sc:12:1h.<f:12 (+/Jc.rm.rc 193.5/Ci (193.0/Md.< 193.1/Cc..s)) 193.7/Ca))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
193 0 The    + the   DET   DT  det   1 - -       B-ARG0 -      B-MAIN0 -                the/Md.<
193 1 man    + man   NOUN  NN  nsubj 2 - -       I-ARG0 -      I-MAIN0 man.n.01         man/Cc..s
193 2 looked + look  VERB  VBD ROOT  2 - look.02 B-V    -      -       look.v.02        looked/Pd.sx:01:01.<f:012
193 3 as     + as    SCONJ IN  mark  6 - -       B-ARG1 -      -       -                as/T
193 4 if     + if    SCONJ IN  mark  6 - -       I-ARG1 -      -       -                if/T
193 5 he     + he    PRON  PRP nsubj 6 - -       I-ARG1 B-ARG1 B-REF0  -                he/Ci
193 6 were   + be    VERB  VBD advcl 2 - be.01   I-ARG1 B-V    -       be.v.01          were/P.sc:12:1h.<f:12
193 7 drunk  - drunk ADJ   JJ  acomp 6 - -       I-ARG1 B-ARG2 -       intoxicated.a.01 drunk/Ca
193 8 .      - .     PUNCT .   punct 2 - -       -      -      -       -                -

# sent_i = 194
# sent = Suppose the story was true.
# hyperedge = (suppose/Pd.r:1:1.-i:012 (was/P.sc:12:1h.<f:12 (the/Md.< story/Cc..s) true/Ca))
# hyperedge builder = (194.0/Pd.r:1:1.-i:012 (194.3/P.sc:12:1h.<f:12 (194.1/Md.< 194.2/Cc..s) 194.4/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
194 0 Suppose + suppose VERB  VB  ROOT  0 - suppose.01 B-V    -      suppose.v.01   suppose/Pd.r:1:1.-i:012
194 1 the     + the     DET   DT  det   2 - -          B-ARG1 B-ARG1 -              the/Md.<
194 2 story   + story   NOUN  NN  nsubj 3 - -          I-ARG1 I-ARG1 narrative.n.01 story/Cc..s
194 3 was     + be      AUX   VBD ccomp 0 - be.01      I-ARG1 B-V    be.v.01        was/P.sc:12:1h.<f:12
194 4 true    - true    ADJ   JJ  acomp 3 - -          I-ARG1 B-ARG2 true.a.01      true/Ca
194 5 .       - .       PUNCT .   punct 0 - -          -      -      -              -

# sent_i = 195
# sent = Suppose the story were true.
# hyperedge = (suppose/Pd.r:1:1.-i:012 (were/P.sc:12:1h.<f:12 (the/Md.< story/Cc..s) true/Ca))
# hyperedge builder = (195.0/Pd.r:1:1.-i:012 (195.3/P.sc:12:1h.<f:12 (195.1/Md.< 195.2/Cc..s) 195.4/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
195 0 Suppose + suppose VERB  VB  ROOT  0 - suppose.01 B-V    -      suppose.v.01   suppose/Pd.r:1:1.-i:012
195 1 the     + the     DET   DT  det   2 - -          B-ARG1 B-ARG1 -              the/Md.<
195 2 story   + story   NOUN  NN  nsubj 3 - -          I-ARG1 I-ARG1 narrative.n.01 story/Cc..s
195 3 were    + be      AUX   VBD ccomp 0 - be.01      I-ARG1 B-V    be.v.01        were/P.sc:12:1h.<f:12
195 4 true    - true    ADJ   JJ  acomp 3 - -          I-ARG1 B-ARG2 true.a.01      true/Ca
195 5 .       - .       PUNCT .   punct 0 - -          -      -      -              -

# sent_i = 196
# sent = I'm just ironing this shirt.
# hyperedge = (('m/Mv.< ironing/Pd.s?o:0r1:0r1.|pg:012) i/Ci just/M (this/Md.< shirt/Cc..s))
# hyperedge builder = ((196.1/Mv.< 196.3/Pd.s?o:0r1:0r1.|pg:012) 196.0/Ci 196.2/M (196.4/Md.< 196.5/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
196 0 I       - I     PRON  PRP nsubj  3 - -       -   B-ARG0     -           i/Ci
196 1 'm      + be    AUX   VBP aux    3 - be.03   B-V -          -           'm/Mv.<
196 2 just    + just  ADV   RB  advmod 3 - -       -   B-ARGM-ADV merely.r.01 just/M
196 3 ironing + iron  VERB  VBG ROOT   3 - iron.02 -   B-V        iron.v.01   ironing/Pd.s?o:0r1:0r1.|pg:012
196 4 this    + this  DET   DT  det    5 - -       -   B-ARG1     -           this/Md.<
196 5 shirt   - shirt NOUN  NN  dobj   3 - -       -   I-ARG1     shirt.n.01  shirt/Cc..s
196 6 .       - .     PUNCT .   punct  3 - -       -   -          -           -

# sent_i = 197
# sent = He is always losing things.
# hyperedge = ((is/Mv.< losing/Pd.s?o:0t1:0t1.|pg:0123) he/Ci always/M things/Cc..p)
# hyperedge builder = ((197.1/Mv.< 197.3/Pd.s?o:0t1:0t1.|pg:0123) 197.0/Ci 197.2/M 197.4/Cc..p)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
197 0 He     + he     PRON  PRP nsubj  3 - -       -   B-ARG0     -           he/Ci
197 1 is     + be     AUX   VBZ aux    3 - be.03   B-V -          -           is/Mv.<
197 2 always + always ADV   RB  advmod 3 - -       -   B-ARGM-TMP always.r.01 always/M
197 3 losing + lose   VERB  VBG ROOT   3 - lose.02 -   B-V        lose.v.01   losing/Pd.s?o:0t1:0t1.|pg:0123
197 4 things - thing  NOUN  NNS dobj   3 - -       -   B-ARG1     thing.n.08  things/Cc..p
197 5 .      - .      PUNCT .   punct  3 - -       -   -          -           -

# sent_i = 198
# sent = He usually drives to work.
# hyperedge = (drives/Pd.s?x:0t1:0t1.|f--3s:01 he/Ci usually/M (to/T work/Cc..s))
# hyperedge builder = (198.2/Pd.s?x:0t1:0t1.|f--3s:01 198.0/Ci 198.1/M (198.3/T 198.4/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
198 0 He      + he      PRON  PRP nsubj  2 - -        B-ARG0     -              he/Ci
198 1 usually + usually ADV   RB  advmod 2 - -        B-ARGM-TMP normally.r.01  usually/M
198 2 drives  + drive   VERB  VBZ ROOT   2 - drive.01 B-V        drive.v.02     drives/Pd.s?x:0t1:0t1.|f--3s:01
198 3 to      + to      ADP   IN  prep   2 - -        B-ARG1     -              to/T
198 4 work    - work    NOUN  NN  pobj   3 - -        I-ARG1     workplace.n.01 work/Cc..s
198 5 .       - .       PUNCT .   punct  2 - -        -          -              -

# sent_i = 199
# sent = I quite often walk to work.
# hyperedge = (walk/Pd.s?x:0tg:0tg.|f:012 i/Ci (quite/M.< often/M) (to/T work/Cc..s))
# hyperedge builder = (199.3/Pd.s?x:0tg:0tg.|f:012 199.0/Ci (199.1/M.< 199.2/M) (199.4/T 199.5/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
199 0 I     + I     PRON  PRP nsubj  3 - -       B-ARG0     -               i/Ci
199 1 quite + quite ADV   RB  advmod 2 - -       B-ARGM-TMP quite.r.01      quite/M.<
199 2 often + often ADV   RB  advmod 3 - -       I-ARGM-TMP frequently.r.01 often/M
199 3 walk  + walk  VERB  VBP ROOT   3 - walk.01 B-V        walk.v.01       walk/Pd.s?x:0tg:0tg.|f:012
199 4 to    + to    ADP   IN  prep   3 - -       B-ARGM-GOL -               to/T
199 5 work  - work  NOUN  NN  pobj   4 - -       I-ARGM-GOL workplace.n.01  work/Cc..s
199 6 .     - .     PUNCT .   punct  3 - -       -          -               -

# sent_i = 200
# sent = The shop has just opened.
# hyperedge = ((has/Mv.< opened/Pd.s?:1t:1t.<pf:0123) (the/Md.< shop/Cc..s) just/M)
# hyperedge builder = ((200.2/Mv.< 200.4/Pd.s?:1t:1t.<pf:0123) (200.0/Md.< 200.1/Cc..s) 200.3/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
200 0 The    + the  DET   DT  det    1 - -       -   B-ARG1     -         the/Md.<
200 1 shop   + shop NOUN  NN  nsubj  4 - -       -   I-ARG1     shop.n.01 shop/Cc..s
200 2 has    + have AUX   VBZ aux    4 - have.01 B-V -          -         has/Mv.<
200 3 just   + just ADV   RB  advmod 4 - -       -   B-ARGM-TMP just.r.03 just/M
200 4 opened - open VERB  VBN ROOT   4 - open.01 -   B-V        open.v.02 opened/Pd.s?:1t:1t.<pf:0123
200 5 .      - .    PUNCT .   punct  4 - -       -   -          -         -

# sent_i = 201
# sent = The post hasn't come yet.
# hyperedge = ((has/Mv.< (n't/Mn.< come/Pd.s?:1t:1t.<pf:1234)) (the/Md.< post/Cc..s) yet/M)
# hyperedge builder = ((201.2/Mv.< (201.3/Mn.< 201.4/Pd.s?:1t:1t.<pf:1234)) (201.0/Md.< 201.1/Cc..s) 201.5/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
201 0 The  + the  DET   DT  det    1 - -       -   B-ARG1     -           the/Md.<
201 1 post + post NOUN  NN  nsubj  4 - -       -   I-ARG1     mail.n.04   post/Cc..s
201 2 has  - have AUX   VBZ aux    4 - have.01 B-V -          -           has/Mv.<
201 3 n't  + not  PART  RB  neg    4 - -       -   B-ARGM-NEG not.r.01    n't/Mn.<
201 4 come + come VERB  VBN ROOT   4 - come.01 -   B-V        come.v.03   come/Pd.s?:1t:1t.<pf:1234
201 5 yet  - yet  ADV   RB  advmod 4 - -       -   B-ARGM-TMP so_far.r.01 yet/M
201 6 .    - .    PUNCT .   punct  4 - -       -   -          -           -

# sent_i = 202
# sent = Have you ever ridden a horse?
# hyperedge = ((have/Mv.< ridden/P?.s?o:0t1:0t1.<pf:01) you/Ci ever/M (a/Md.< horse/Cc..s))
# hyperedge builder = ((202.0/Mv.< 202.3/P?.s?o:0t1:0t1.<pf:01) 202.1/Ci 202.2/M (202.4/Md.< 202.5/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
202 0 Have   + have  AUX   VBP aux    3 - have.01 B-V -          -          have/Mv.<
202 1 you    + you   PRON  PRP nsubj  3 - -       -   B-ARG0     -          you/Ci
202 2 ever   + ever  ADV   RB  advmod 3 - -       -   B-ARGM-TMP ever.r.01  ever/M
202 3 ridden + ride  VERB  VBN ROOT   3 - ride.01 -   B-V        ride.v.01  ridden/P?.s?o:0t1:0t1.<pf:01
202 4 a      + a     DET   DT  det    5 - -       -   B-ARG1     -          a/Md.<
202 5 horse  - horse NOUN  NN  dobj   3 - -       -   I-ARG1     horse.n.01 horse/Cc..s
202 6 ?      - ?     PUNCT .   punct  3 - -       -   -          -          -

# sent_i = 203
# sent = We've often talked about emigrating.
# hyperedge = (('ve/Mv.< talked/Pd.s?x:0t1:0t1.<pf:012) we/Ci often/M (about/T emigrating/P.::.|pg:012))
# hyperedge builder = ((203.1/Mv.< 203.3/Pd.s?x:0t1:0t1.<pf:012) 203.0/Ci 203.2/M (203.4/T 203.5/P.::.|pg:012))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
203 0 We         - we       PRON  PRP nsubj  3 - -           -   B-ARG0     -   -               we/Ci
203 1 've        + have     AUX   VB  aux    3 - have.01     B-V -          -   -               've/Mv.<
203 2 often      + often    ADV   RB  advmod 3 - -           -   B-ARGM-TMP -   frequently.r.01 often/M
203 3 talked     + talk     VERB  VBN ROOT   3 - talk.01     -   B-V        -   talk.v.01       talked/Pd.s?x:0t1:0t1.<pf:012
203 4 about      + about    ADP   IN  prep   3 - -           -   B-ARG1     -   -               about/T
203 5 emigrating - emigrate VERB  VBG pcomp  4 - emigrate.01 -   I-ARG1     B-V emigrate.v.01   emigrating/P.::.|pg:012
203 6 .          - .        PUNCT .   punct  3 - -           -   -          -   -               -

# sent_i = 204
# sent = I've been here since three o'clock.
# hyperedge = (('ve/Mv.< been/Pd.s?x:12t:1ht.<pf:12) i/Ci here/M (since/Tt (three/M#.<..t o'clock/Cc..s.t)))
# hyperedge builder = ((204.1/Mv.< 204.2/Pd.s?x:12t:1ht.<pf:12) 204.0/Ci 204.3/M (204.4/Tt (204.5/M#.<..t 204.6/Cc..s.t)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
204 0 I       - I       PRON  PRP nsubj  2 -      -       -   B-ARG1     -            i/Ci
204 1 've     + have    AUX   VB  aux    2 -      have.01 B-V -          -            've/Mv.<
204 2 been    + be      VERB  VBN ROOT   2 -      be.01   -   B-V        be.v.01      been/Pd.s?x:12t:1ht.<pf:12
204 3 here    + here    ADV   RB  advmod 2 -      -       -   B-ARG2     here.r.01    here/M
204 4 since   + since   SCONJ IN  prep   2 -      -       -   B-ARGM-TMP -            since/Tt
204 5 three   + three   NUM   CD  nummod 6 B-TIME -       -   I-ARGM-TMP three.s.01   three/M#.<..t
204 6 o'clock - o'clock NOUN  NN  pobj   4 I-TIME -       -   I-ARGM-TMP o'clock.r.01 o'clock/Cc..s.t
204 7 .       - .       PUNCT .   punct  2 -      -       -   -          -            -

# sent_i = 205
# sent = We recently moved house.
# hyperedge = (moved/Pd.s?o:0t1:0t1.<f:0123 we/Ci recently/M house/Cc..s)
# hyperedge builder = (205.2/Pd.s?o:0t1:0t1.<f:0123 205.0/Ci 205.1/M 205.3/Cc..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
205 0 We       + we       PRON  PRP nsubj  2 - -       B-ARG0     -             we/Ci
205 1 recently + recently ADV   RB  advmod 2 - -       B-ARGM-TMP recently.r.01 recently/M
205 2 moved    + move     VERB  VBD ROOT   2 - move.01 B-V        move.v.04     moved/Pd.s?o:0t1:0t1.<f:0123
205 3 house    - house    NOUN  NN  dobj   2 - -       B-ARG1     house.n.01    house/Cc..s
205 4 .        - .        PUNCT .   punct  2 - -       -          -             -

# sent_i = 206
# sent = I already knew before you told me.
# hyperedge = (knew/Pd.s?x:0tt:0tt.<f:012 i/Ci already/M (before/T (told/P.so:02:0g.<f:012 you/Ci (+/Jc.rm.rr me/Ci i/Ci))))
# hyperedge builder = (206.2/Pd.s?x:0tt:0tt.<f:012 206.0/Ci 206.1/M (206.3/T (206.5/P.so:02:0g.<f:012 206.4/Ci (+/Jc.rm.rr 206.6/Ci 206.0/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
206 0 I       + I       PRON  PRP nsubj  2 - -       B-ARG0     -      B-MAIN0 -            i/Ci
206 1 already + already ADV   RB  advmod 2 - -       B-ARGM-TMP -      -       already.r.01 already/M
206 2 knew    + know    VERB  VBD ROOT   2 - know.01 B-V        -      -       know.v.01    knew/Pd.s?x:0tt:0tt.<f:012
206 3 before  + before  ADP   IN  mark   5 - -       B-ARGM-TMP -      -       earlier.r.01 before/T
206 4 you     + you     PRON  PRP nsubj  5 - -       I-ARGM-TMP B-ARG0 -       -            you/Ci
206 5 told    + tell    VERB  VBD advcl  2 - tell.01 I-ARGM-TMP B-V    -       tell.v.02    told/P.so:02:0g.<f:012
206 6 me      - I       PRON  PRP dobj   5 - -       I-ARGM-TMP B-ARG2 B-REF0  -            me/Ci
206 7 .       - .       PUNCT .   punct  2 - -       -          -      -       -            -

# sent_i = 207
# sent = It was windy this morning.
# hyperedge = (was/Pd.scx:12t:1ht.<f:12 it/Ci windy/Ca (this/Md.<..t morning/Cc..s.t))
# hyperedge builder = (207.1/Pd.scx:12t:1ht.<f:12 207.0/Ci 207.2/Ca (207.3/Md.<..t 207.4/Cc..s.t))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
207 0 It      + it      PRON  PRP nsubj    1 -      -     B-ARG1     -            it/Ci
207 1 was     + be      AUX   VBD ROOT     1 -      be.01 B-V        be.v.01      was/Pd.scx:12t:1ht.<f:12
207 2 windy   + windy   ADJ   JJ  acomp    1 -      -     B-ARG2     blowy.s.01   windy/Ca
207 3 this    + this    DET   DT  det      4 B-TIME -     B-ARGM-TMP -            this/Md.<..t
207 4 morning - morning NOUN  NN  npadvmod 1 I-TIME -     I-ARGM-TMP morning.n.01 morning/Cc..s.t
207 5 .       - .       PUNCT .   punct    1 -      -     -          -            -

# sent_i = 208
# sent = Tim was washing his hair while I was cleaning up the kitchen.
# hyperedge = ((was/Mv.< washing/Pd.sox:01t:01t.|pg:01234) tim/Cp..s.p ((+/Jc.rm.rp his/Mp tim/Cp..s.p) hair/Cc..s) (while/T ((was/Mv.< (up/Ml.r.> cleaning/P.so:01:01.|pg:01)) i/Ci (the/Md.< kitchen/Cc..s))))
# hyperedge builder = ((208.1/Mv.< 208.2/Pd.sox:01t:01t.|pg:01234) 208.0/Cp..s.p ((+/Jc.rm.rp 208.3/Mp 208.0/Cp..s.p) 208.4/Cc..s) (208.5/T ((208.7/Mv.< (208.9/Ml.r.> 208.8/P.so:01:01.|pg:01)) 208.6/Ci (208.10/Md.< 208.11/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
208 0  Tim      + Tim     PROPN NNP  nsubj 2  B-PERSON -           -   B-ARG0     -   -      B-MAIN0 -            tim/Cp..s.p
208 1  was      + be      AUX   VBD  aux   2  -        be.03       B-V -          -   -      -       -            was/Mv.<
208 2  washing  + wash    VERB  VBG  ROOT  2  -        wash.01     -   B-V        -   -      -       wash.v.02    washing/Pd.sox:01t:01t.|pg:01234
208 3  his      + his     PRON  PRP$ poss  4  -        -           -   B-ARG1     -   -      B-REF0  -            his/Mp
208 4  hair     + hair    NOUN  NN   dobj  2  -        -           -   I-ARG1     -   -      -       hair.n.01    hair/Cc..s
208 5  while    + while   SCONJ IN   mark  8  -        -           -   B-ARGM-TMP -   -      -       -            while/T
208 6  I        + I       PRON  PRP  nsubj 8  -        -           -   I-ARGM-TMP -   B-ARG0 -       -            i/Ci
208 7  was      + be      AUX   VBD  aux   8  -        be.03       -   I-ARGM-TMP B-V -      -       -            was/Mv.<
208 8  cleaning + clean   VERB  VBG  advcl 2  -        clean_up.02 -   I-ARGM-TMP -   B-V    -       tidy.v.01    cleaning/P.so:01:01.|pg:01
208 9  up       + up      ADP   RP   prt   8  -        -           -   I-ARGM-TMP -   -      -       tidy.v.01    up/Ml.r.>
208 10 the      + the     DET   DT   det   11 -        -           -   I-ARGM-TMP -   B-ARG1 -       -            the/Md.<
208 11 kitchen  - kitchen NOUN  NN   dobj  8  -        -           -   I-ARGM-TMP -   I-ARG1 -       kitchen.n.01 kitchen/Cc..s
208 12 .        - .       PUNCT .    punct 2  -        -           -   -          -   -      -       -            -

# sent_i = 209
# sent = I've been waiting here for ages.
# hyperedge = (('ve/Mv.< (been/Mv.< waiting/Pd.s?x:1lt:1lt.|pg:12m)) i/Ci here/M (for/Tt ages/Cc..p))
# hyperedge builder = ((209.1/Mv.< (209.2/Mv.< 209.3/Pd.s?x:1lt:1lt.|pg:12m)) 209.0/Ci 209.4/M (209.5/Tt 209.6/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
209 0 I       - I    PRON  PRP nsubj  3 - -       -   -   B-ARG1     -              i/Ci
209 1 've     + have AUX   VB  aux    3 - have.01 B-V -   -          -              've/Mv.<
209 2 been    + be   AUX   VBN aux    3 - be.03   -   B-V -          -              been/Mv.<
209 3 waiting + wait VERB  VBG ROOT   3 - wait.01 -   -   B-V        wait.v.01      waiting/Pd.s?x:1lt:1lt.|pg:12m
209 4 here    + here ADV   RB  advmod 3 - -       -   -   B-ARGM-LOC here.r.01      here/M
209 5 for     + for  ADP   IN  prep   3 - -       -   -   B-ARGM-TMP -              for/Tt
209 6 ages    - age  NOUN  NNS pobj   5 - -       -   -   I-ARGM-TMP long_time.n.01 ages/Cc..p
209 7 .       - .    PUNCT .   punct  3 - -       -   -   -          -              -

# sent_i = 210
# sent = The gunman had previously been in prison for three years.
# hyperedge = ((had/Mv.< been/Pd.s?xx:1t2t:1tht.<pf:12) (the/Md.< gunman/Cc..s) previously/M (in/T prison/Cc..s) (for/Tt (three/M#.<..d years/Cc..p.d)))
# hyperedge builder = ((210.2/Mv.< 210.4/Pd.s?xx:1t2t:1tht.<pf:12) (210.0/Md.< 210.1/Cc..s) 210.3/M (210.5/T 210.6/Cc..s) (210.7/Tt (210.8/M#.<..d 210.9/Cc..p.d)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
210 0  The        + the        DET   DT  det    1 -      -       -   B-ARG1     -               the/Md.<
210 1  gunman     + gunman     NOUN  NN  nsubj  4 -      -       -   I-ARG1     gunman.n.01     gunman/Cc..s
210 2  had        + have       AUX   VBD aux    4 -      have.01 B-V -          -               had/Mv.<
210 3  previously + previously ADV   RB  advmod 4 -      -       -   B-ARGM-TMP previously.r.01 previously/M
210 4  been       + be         VERB  VBN ROOT   4 -      be.01   -   B-V        be.v.01         been/Pd.s?xx:1t2t:1tht.<pf:12
210 5  in         + in         ADP   IN  prep   4 -      -       -   B-ARG2     -               in/T
210 6  prison     + prison     NOUN  NN  pobj   5 -      -       -   I-ARG2     prison.n.01     prison/Cc..s
210 7  for        + for        ADP   IN  prep   4 -      -       -   B-ARGM-TMP -               for/Tt
210 8  three      + three      NUM   CD  nummod 9 B-DATE -       -   I-ARGM-TMP three.s.01      three/M#.<..d
210 9  years      - year       NOUN  NNS pobj   7 I-DATE -       -   I-ARGM-TMP year.n.01       years/Cc..p.d
210 10 .          - .          PUNCT .   punct  4 -      -       -   -          -               -

# sent_i = 211
# sent = Everything had been going so well up to then.
# hyperedge = ((had/Mv.< (been/Mv.< going/Pd.s?x:1mt:1mt.|pg:1234)) everything/Ci..s (so/M.< well/M) ((:/J up/Tt to/T) then/C))
# hyperedge builder = ((211.1/Mv.< (211.2/Mv.< 211.3/Pd.s?x:1mt:1mt.|pg:1234)) 211.0/Ci..s (211.4/M.< 211.5/M) ((:/J 211.6/Tt 211.7/T) 211.8/C))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
211 0 Everything + everything PRON  NN  nsubj  3 - -       -   -   B-ARG1     -            everything/Ci..s
211 1 had        + have       AUX   VBD aux    3 - have.01 B-V -   -          -            had/Mv.<
211 2 been       + be         AUX   VBN aux    3 - be.03   -   B-V -          -            been/Mv.<
211 3 going      + go         VERB  VBG ROOT   3 - go.01   -   -   B-V        proceed.v.04 going/Pd.s?x:1mt:1mt.|pg:1234
211 4 so         + so         ADV   RB  advmod 5 - -       -   -   B-ARGM-MNR so.r.01      so/M.<
211 5 well       + well       ADV   RB  advmod 3 - -       -   -   I-ARGM-MNR well.r.01    well/M
211 6 up         + up         ADP   IN  prep   3 - -       -   -   B-ARGM-TMP -            up/Tt
211 7 to         + to         ADP   IN  prep   6 - -       -   -   I-ARGM-TMP -            to/T
211 8 then       - then       ADV   RB  pcomp  7 - -       -   -   I-ARGM-TMP then.r.03    then/C
211 9 .          - .          PUNCT .   punct  3 - -       -   -   -          -            -

# sent_i = 212
# sent = The cinema will close in November.
# hyperedge = ((will/Mm.< close/Pd.sx:1t:1t.-i:012) (the/Md.< cinema/Cc..s) (in/Tt november/Cp..s.d))
# hyperedge builder = ((212.2/Mm.< 212.3/Pd.sx:1t:1t.-i:012) (212.0/Md.< 212.1/Cc..s) (212.4/Tt 212.5/Cp..s.d))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
212 0 The      + the      DET   DT  det   1 -      -        -   B-ARG1     -             the/Md.<
212 1 cinema   + cinema   NOUN  NN  nsubj 3 -      -        -   I-ARG1     cinema.n.02   cinema/Cc..s
212 2 will     + will     AUX   MD  aux   3 -      -        B-V B-ARGM-MOD -             will/Mm.<
212 3 close    + close    VERB  VB  ROOT  3 -      close.01 -   B-V        close_up.v.01 close/Pd.sx:1t:1t.-i:012
212 4 in       + in       ADP   IN  prep  3 -      -        -   B-ARGM-TMP -             in/Tt
212 5 November - November PROPN NNP pobj  4 B-DATE -        -   I-ARGM-TMP november.n.01 november/Cp..s.d
212 6 .        - .        PUNCT .   punct 3 -      -        -   -          -             -

# sent_i = 213
# sent = The cinema is going to close soon.
# hyperedge = ((is/Mv.< going/Pd.sr:--:--.|pg) (the/Md.< cinema/Cc..s) ((to/Mi.< close/P.-?:1t:1t.-i:012) (the/Md.< cinema/Cc..s) soon/M))
# hyperedge builder = ((213.2/Mv.< 213.3/Pd.sr:--:--.|pg) (213.0/Md.< 213.1/Cc..s) ((213.4/Mi.< 213.5/P.-?:1t:1t.-i:012) (213.0/Md.< 213.1/Cc..s) 213.6/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
213 0 The    + the    DET   DT  det    1 - -        -   -   B-ARG1     -             the/Md.<
213 1 cinema + cinema NOUN  NN  nsubj  3 - -        -   -   I-ARG1     cinema.n.02   cinema/Cc..s
213 2 is     + be     AUX   VBZ aux    3 - be.03    B-V -   -          -             is/Mv.<
213 3 going  + go     VERB  VBG ROOT   3 - go.04    -   B-V -          -             going/Pd.sr:--:--.|pg
213 4 to     + to     PART  TO  aux    5 - -        -   -   -          -             to/Mi.<
213 5 close  + close  VERB  VB  xcomp  3 - close.01 -   -   B-V        close_up.v.01 close/P.-?:1t:1t.-i:012
213 6 soon   - soon   ADV   RB  advmod 5 - -        -   -   B-ARGM-TMP soon.r.01     soon/M
213 7 .      - .      PUNCT .   punct  3 - -        -   -   -          -             -

# sent_i = 214
# sent = The cinema is sold and will be closing in November.
# hyperedge = (and/J ((is/Mv.< sold/Pd.p:1:1.<pf:01234) (the/Md.< cinema/Cc..s)) ((will/Mm.< (be/Mv.< closing/P.-x:1t:1t.|pg:012)) (the/Md.< cinema/Cc..s) (in/Tt november/Cp..s.d)))
# hyperedge builder = (214.4/J ((214.2/Mv.< 214.3/Pd.p:1:1.<pf:01234) (214.0/Md.< 214.1/Cc..s)) ((214.5/Mm.< (214.6/Mv.< 214.7/P.-x:1t:1t.|pg:012)) (214.0/Md.< 214.1/Cc..s) (214.8/Tt 214.9/Cp..s.d)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
214 0  The      + the      DET   DT  det       1 -      -        -   B-ARG1 -   -   B-ARG1     -             the/Md.<
214 1  cinema   + cinema   NOUN  NN  nsubjpass 3 -      -        -   I-ARG1 -   -   I-ARG1     cinema.n.02   cinema/Cc..s
214 2  is       + be       AUX   VBZ auxpass   3 -      be.03    B-V -      -   -   -          -             is/Mv.<
214 3  sold     + sell     VERB  VBN ROOT      3 -      sell.01  -   B-V    -   -   -          sell.v.01     sold/Pd.p:1:1.<pf:01234
214 4  and      + and      CCONJ CC  cc        3 -      -        -   -      -   -   -          -             and/J
214 5  will     + will     AUX   MD  aux       7 -      -        -   -      B-V -   B-ARGM-MOD -             will/Mm.<
214 6  be       + be       AUX   VB  aux       7 -      be.03    -   -      -   B-V -          -             be/Mv.<
214 7  closing  + close    VERB  VBG conj      3 -      close.01 -   -      -   -   B-V        close_up.v.01 closing/P.-x:1t:1t.|pg:012
214 8  in       + in       ADP   IN  prep      7 -      -        -   -      -   -   B-ARGM-TMP -             in/Tt
214 9  November - November PROPN NNP pobj      8 B-DATE -        -   -      -   -   I-ARGM-TMP november.n.01 november/Cp..s.d
214 10 .        - .        PUNCT .   punct     3 -      -        -   -      -   -   -          -             -

# sent_i = 215
# sent = The cinema is to close in November, it was announced.
# hyperedge = ((was/Mv.< announced/Pd.rp:-1:-1.<pf:0123) (is/P.sr:--:--.|f--3s (the/Md.< cinema/Cc..s) ((to/Mi.< close/P.-x:1t:1t.-i:012) (the/Md.< cinema/Cc..s) (in/Tt november/Cp..s.d))) it/Ci)
# hyperedge builder = ((215.9/Mv.< 215.10/Pd.rp:-1:-1.<pf:0123) (215.2/P.sr:--:--.|f--3s (215.0/Md.< 215.1/Cc..s) ((215.3/Mi.< 215.4/P.-x:1t:1t.-i:012) (215.0/Md.< 215.1/Cc..s) (215.5/Tt 215.6/Cp..s.d))) 215.8/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
215 0  The       + the      DET   DT  det       1  -      -           -   B-ARG1     -   -      -             the/Md.<
215 1  cinema    + cinema   NOUN  NN  nsubj     2  -      -           -   I-ARG1     -   -      cinema.n.02   cinema/Cc..s
215 2  is        + be       AUX   VBZ ccomp     10 -      be.03       B-V -          -   -      -             is/P.sr:--:--.|f--3s
215 3  to        + to       PART  TO  aux       4  -      -           -   -          -   -      -             to/Mi.<
215 4  close     + close    VERB  VB  xcomp     2  -      close.01    -   B-V        -   -      close_up.v.01 close/P.-x:1t:1t.-i:012
215 5  in        + in       ADP   IN  prep      4  -      -           -   B-ARGM-TMP -   -      -             in/Tt
215 6  November  - November PROPN NNP pobj      5  B-DATE -           -   I-ARGM-TMP -   -      november.n.01 november/Cp..s.d
215 7  ,         + ,        PUNCT ,   punct     10 -      -           -   -          -   -      -             -
215 8  it        + it       PRON  PRP nsubjpass 10 -      -           -   -          -   B-ARG1 -             it/Ci
215 9  was       + be       AUX   VBD auxpass   10 -      be.03       -   -          B-V -      -             was/Mv.<
215 10 announced - announce VERB  VBN ROOT      10 -      announce.01 -   -          -   B-V    announce.v.02 announced/Pd.rp:-1:-1.<pf:0123
215 11 .         - .        PUNCT .   punct     10 -      -           -   -          -   -      -             -

# sent_i = 216
# sent = The cinema will have been in business for sixty years.
# hyperedge = ((will/Mm.< (have/Mv.< been/Pd.sxx:12t:1ht.<pf:12)) (the/Md.< cinema/Cc..s) (in/T business/Cc..s) (for/Tt (sixty/M#.<..d years/Cc..p.d)))
# hyperedge builder = ((216.2/Mm.< (216.3/Mv.< 216.4/Pd.sxx:12t:1ht.<pf:12)) (216.0/Md.< 216.1/Cc..s) (216.5/T 216.6/Cc..s) (216.7/Tt (216.8/M#.<..d 216.9/Cc..p.d)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
216 0  The      + the      DET   DT  det    1 -      -       -   -   B-ARG1     -             the/Md.<
216 1  cinema   + cinema   NOUN  NN  nsubj  4 -      -       -   -   I-ARG1     cinema.n.02   cinema/Cc..s
216 2  will     + will     AUX   MD  aux    4 -      -       B-V -   B-ARGM-MOD -             will/Mm.<
216 3  have     + have     AUX   VB  aux    4 -      have.01 -   B-V -          -             have/Mv.<
216 4  been     + be       VERB  VBN ROOT   4 -      be.01   -   -   B-V        be.v.01       been/Pd.sxx:12t:1ht.<pf:12
216 5  in       + in       ADP   IN  prep   4 -      -       -   -   B-ARG2     -             in/T
216 6  business + business NOUN  NN  pobj   5 -      -       -   -   I-ARG2     business.n.01 business/Cc..s
216 7  for      + for      ADP   IN  prep   4 -      -       -   -   B-ARGM-TMP -             for/Tt
216 8  sixty    + sixty    NUM   CD  nummod 9 B-DATE -       -   -   I-ARGM-TMP sixty.s.01    sixty/M#.<..d
216 9  years    - year     NOUN  NNS pobj   7 I-DATE -       -   -   I-ARGM-TMP year.n.01     years/Cc..p.d
216 10 .        - .        PUNCT .   punct  4 -      -       -   -   -          -             -

# sent_i = 217
# sent = The performance is about to start.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (the/Md.< performance/Cc..s) (+/Br.am about/Ca ((to/Mi.< start/P.-:1:1.-i:012) (the/Md.< performance/Cc..s))))
# hyperedge builder = (217.2/Pd.sc:12:1h.|f--3s:12 (217.0/Md.< 217.1/Cc..s) (+/Br.am 217.3/Ca ((217.4/Mi.< 217.5/P.-:1:1.-i:012) (217.0/Md.< 217.1/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
217 0 The         + the         DET   DT  det   1 - -        B-ARG1 B-ARG1 -                the/Md.<
217 1 performance + performance NOUN  NN  nsubj 2 - -        I-ARG1 I-ARG1 performance.n.02 performance/Cc..s
217 2 is          + be          AUX   VBZ ROOT  2 - be.01    B-V    -      be.v.01          is/Pd.sc:12:1h.|f--3s:12
217 3 about       + about       ADV   RB  acomp 2 - -        B-ARG2 -      about.r.07       about/Ca
217 4 to          + to          PART  TO  aux   5 - -        I-ARG2 -      -                to/Mi.<
217 5 start       - start       VERB  VB  xcomp 3 - start.01 I-ARG2 B-V    begin.v.02       start/P.-:1:1.-i:012
217 6 .           - .           PUNCT .   punct 2 - -        -      -      -                -

# sent_i = 218
# sent = Helen went to the pool and had a swim.
# hyperedge = (and/J (went/Pd.sx:04:1g.<f:0134 helen/Cp..s.p (to/T (the/Md.< pool/Cc..s))) (had/Pd.-o:01:01.<f:01 helen/Cp..s.p (a/Md.< swim/Cc..s)))
# hyperedge builder = (218.5/J (218.1/Pd.sx:04:1g.<f:0134 218.0/Cp..s.p (218.2/T (218.3/Md.< 218.4/Cc..s))) (218.6/Pd.-o:01:01.<f:01 218.0/Cp..s.p (218.7/Md.< 218.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
218 0 Helen + Helen PROPN NNP nsubj 1 B-PERSON -       B-ARG0 B-ARG0 -             helen/Cp..s.p
218 1 went  + go    VERB  VBD ROOT  1 -        go.02   B-V    -      travel.v.01   went/Pd.sx:04:1g.<f:0134
218 2 to    + to    ADP   IN  prep  1 -        -       B-ARG4 -      -             to/T
218 3 the   + the   DET   DT  det   4 -        -       I-ARG4 -      -             the/Md.<
218 4 pool  + pool  NOUN  NN  pobj  2 -        -       I-ARG4 -      pool.n.01     pool/Cc..s
218 5 and   + and   CCONJ CC  cc    1 -        -       -      -      -             and/J
218 6 had   + have  VERB  VBD conj  1 -        have.06 -      B-V    -             had/Pd.-o:01:01.<f:01
218 7 a     + a     DET   DT  det   8 -        -       -      B-ARG1 -             a/Md.<
218 8 swim  - swim  NOUN  NN  dobj  6 -        -       -      I-ARG1 swimming.n.01 swim/Cc..s
218 9 .     - .     PUNCT .   punct 1 -        -       -      -      -             -

# sent_i = 219
# sent = It was a lovely day so we went for a walk.
# hyperedge = (was/P.scx:12r:1hr.<f:12 it/Ci (a/Md.<..d (lovely/Ma.<..d day/Cc..s.d)) (so/T ((for/Ml.r.> went/Pd.so:0-:1-.<f:0134) we/Ci (a/Md.< walk/Cc..s))))
# hyperedge builder = (219.1/P.scx:12r:1hr.<f:12 219.0/Ci (219.2/Md.<..d (219.3/Ma.<..d 219.4/Cc..s.d)) (219.5/T ((219.8/Ml.r.> 219.7/Pd.so:0-:1-.<f:0134) 219.6/Ci (219.9/Md.< 219.10/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
219 0  It     + it     PRON  PRP nsubj 1  -      -     B-ARG1     -          -           it/Ci
219 1  was    + be     AUX   VBD ROOT  1  -      be.01 B-V        -          be.v.01     was/P.scx:12r:1hr.<f:12
219 2  a      + a      DET   DT  det   4  B-DATE -     B-ARG2     -          -           a/Md.<..d
219 3  lovely + lovely ADJ   JJ  amod  4  I-DATE -     I-ARG2     -          lovely.s.01 lovely/Ma.<..d
219 4  day    + day    NOUN  NN  attr  1  I-DATE -     I-ARG2     -          day.n.04    day/Cc..s.d
219 5  so     + so     SCONJ IN  mark  7  -      -     -          -          -           so/T
219 6  we     + we     PRON  PRP nsubj 7  -      -     B-ARGM-ADV B-ARG0     -           we/Ci
219 7  went   + go     VERB  VBD advcl 1  -      go.02 I-ARGM-ADV B-V        walk.v.10   went/Pd.so:0-:1-.<f:0134
219 8  for    + for    ADP   IN  prt   7  -      -     I-ARGM-ADV B-ARGM-PRP walk.v.10   for/Ml.r.>
219 9  a      + a      DET   DT  det   10 -      -     I-ARGM-ADV I-ARGM-PRP walk.v.10   a/Md.<
219 10 walk   - walk   NOUN  NN  dobj  7  -      -     I-ARGM-ADV I-ARGM-PRP walk.v.10   walk/Cc..s
219 11 .      - .      PUNCT .   punct 7  -      -     -          -          -           -

# sent_i = 220
# sent = We took a seat.
# hyperedge = (took/Pd.so:0k:!!.<f we/Ci (a/Md.< seat/Cc..s))
# hyperedge builder = (220.1/Pd.so:0k:!!.<f 220.0/Ci (220.2/Md.< 220.3/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
220 0 We   + we   PRON  PRP nsubj 1 - -       -          B-ARG0     -           we/Ci
220 1 took + take VERB  VBD ROOT  1 - take.LV B-V        B-ARGM-LVB assume.v.05 took/Pd.so:0k:!!.<f
220 2 a    + a    DET   DT  det   3 - -       -          -          -           a/Md.<
220 3 seat - seat NOUN  NN  dobj  1 - seat.00 B-ARGM-PRR B-V        seat.n.01   seat/Cc..s
220 4 .    - .    PUNCT .   punct 1 - -       -          -          -           -

# sent_i = 221
# sent = He gave an explanation.
# hyperedge = (gave/Pd.so:01:01.<f:012 he/Ci (an/Md.< explanation/Cc..s))
# hyperedge builder = (221.1/Pd.so:01:01.<f:012 221.0/Ci (221.2/Md.< 221.3/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
221 0 He          + he          PRON  PRP nsubj 1 - -       B-ARG0 -                he/Ci
221 1 gave        + give        VERB  VBD ROOT  1 - give.01 B-V    give.v.38        gave/Pd.so:01:01.<f:012
221 2 an          + an          DET   DT  det   3 - -       B-ARG1 -                an/Md.<
221 3 explanation - explanation NOUN  NN  dobj  1 - -       I-ARG1 explanation.n.01 explanation/Cc..s
221 4 .           - .           PUNCT .   punct 1 - -       -      -                -

# sent_i = 222
# sent = I made a suggestion.
# hyperedge = (made/Pd.so:0k:!!.<f i/Ci (a/Md.< suggestion/Cc..s))
# hyperedge builder = (222.1/Pd.so:0k:!!.<f 222.0/Ci (222.2/Md.< 222.3/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
222 0 I          + I          PRON  PRP nsubj 1 - -          -          B-ARG0     -               i/Ci
222 1 made       + make       VERB  VBD ROOT  1 - make.LV    B-V        B-ARGM-LVB make.v.16       made/Pd.so:0k:!!.<f
222 2 a          + a          DET   DT  det   3 - -          -          -          -               a/Md.<
222 3 suggestion - suggestion NOUN  NN  dobj  1 - suggest.01 B-ARGM-PRR B-V        suggestion.n.02 suggestion/Cc..s
222 4 .          - .          PUNCT .   punct 1 - -          -          -          -               -

# sent_i = 223
# sent = I must go to the bank.
# hyperedge = ((must/Mm.< go/Pd.sx:04:1g.-i:0134) i/Ci (to/T (the/Md.< bank/Cc..s)))
# hyperedge builder = ((223.1/Mm.< 223.2/Pd.sx:04:1g.-i:0134) 223.0/Ci (223.3/T (223.4/Md.< 223.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
223 0 I    + I    PRON  PRP nsubj 2 - -     -   B-ARG0     -                                     i/Ci
223 1 must + must AUX   MD  aux   2 - -     B-V B-ARGM-MOD -                                     must/Mm.<
223 2 go   + go   VERB  VB  ROOT  2 - go.02 -   B-V        travel.v.01                           go/Pd.sx:04:1g.-i:0134
223 3 to   + to   ADP   IN  prep  2 - -     -   B-ARG4     -                                     to/T
223 4 the  + the  DET   DT  det   5 - -     -   I-ARG4     -                                     the/Md.<
223 5 bank - bank NOUN  NN  pobj  3 - -     -   I-ARG4     depository_financial_institution.n.01 bank/Cc..s
223 6 .    - .    PUNCT .   punct 2 - -     -   -          -                                     -

# sent_i = 224
# sent = I don't want to have to punish you.
# hyperedge = ((do/Mv.< (n't/Mn.< want/Pd.sr:01:01.-i:01234)) i/Ci ((to/Mi.< have/P.r:-:-.-i) ((to/Mi.< punish/P.-o:01:01.-i:0123) i/Ci you/Ci)))
# hyperedge builder = ((224.1/Mv.< (224.2/Mn.< 224.3/Pd.sr:01:01.-i:01234)) 224.0/Ci ((224.4/Mi.< 224.5/P.r:-:-.-i) ((224.6/Mi.< 224.7/P.-o:01:01.-i:0123) 224.0/Ci 224.8/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
224 0 I      + I      PRON  PRP nsubj 3 - -         -   B-ARG0     -   B-ARG0     -           i/Ci
224 1 do     - do     AUX   VBP aux   3 - do.01     B-V -          -   -          -           do/Mv.<
224 2 n't    + not    PART  RB  neg   3 - -         -   B-ARGM-NEG -   -          not.r.01    n't/Mn.<
224 3 want   + want   VERB  VB  ROOT  3 - want.01   -   B-V        -   -          desire.v.01 want/Pd.sr:01:01.-i:01234
224 4 to     + to     PART  TO  aux   5 - -         -   B-ARG1     -   -          -           to/Mi.<
224 5 have   + have   VERB  VB  xcomp 3 - have.02   -   I-ARG1     B-V B-ARGM-MOD -           have/P.r:-:-.-i
224 6 to     + to     PART  TO  aux   7 - -         -   I-ARG1     -   -          -           to/Mi.<
224 7 punish + punish VERB  VB  xcomp 5 - punish.01 -   I-ARG1     -   B-V        punish.v.01 punish/P.-o:01:01.-i:0123
224 8 you    - you    PRON  PRP dobj  7 - -         -   I-ARG1     -   B-ARG1     -           you/Ci
224 9 .      - .      PUNCT .   punct 3 - -         -   -          -   -          -           -

# sent_i = 225
# sent = I have got to take an exam in June.
# hyperedge = ((have/Mv.< got/Pd.sr:01:0h.<pf:01) i/Ci ((to/Mi.< take/P.-ox:1kt:!!!.-i) i/Ci (an/Md.< exam/Cc..s) (in/T june/Cp..s.d)))
# hyperedge builder = ((225.1/Mv.< 225.2/Pd.sr:01:0h.<pf:01) 225.0/Ci ((225.3/Mi.< 225.4/P.-ox:1kt:!!!.-i) 225.0/Ci (225.5/Md.< 225.6/Cc..s) (225.7/T 225.8/Cp..s.d)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
225 0 I    + I    PRON  PRP nsubj 2 -      -              -   B-ARG0 -          B-ARG1     -                i/Ci
225 1 have + have AUX   VBP aux   2 -      have.01        B-V -      -          -          -                have/Mv.<
225 2 got  + get  VERB  VBN ROOT  2 -      get.06         -   B-V    -          -          get.v.01         got/Pd.sr:01:0h.<pf:01
225 3 to   + to   PART  TO  aux   4 -      -              -   B-ARG1 -          -          -                to/Mi.<
225 4 take + take VERB  VB  xcomp 2 -      take.LV        -   I-ARG1 B-V        B-ARGM-LVB take.v.15        take/P.-ox:1kt:!!!.-i
225 5 an   + an   DET   DT  det   6 -      -              -   I-ARG1 -          -          -                an/Md.<
225 6 exam + exam NOUN  NN  dobj  4 -      examination.02 -   I-ARG1 B-ARGM-PRR B-V        examination.n.02 exam/Cc..s
225 7 in   + in   ADP   IN  prep  4 -      -              -   I-ARG1 -          B-ARGM-TMP -                in/T
225 8 June - June PROPN NNP pobj  7 B-DATE -              -   I-ARG1 -          I-ARGM-TMP june.n.01        june/Cp..s.d
225 9 .    - .    PUNCT .   punct 2 -      -              -   -      -          -          -                -

# sent_i = 226
# sent = You needn't take me to the station.
# hyperedge = ((need/Mv.< (n't/Mn.< take/Pd.sox:01g:01g.-i:0123)) you/Ci me/Ci (to/T (the/Md.< station/Cc..s)))
# hyperedge builder = ((226.1/Mv.< (226.2/Mn.< 226.3/Pd.sox:01g:01g.-i:0123)) 226.0/Ci 226.4/Ci (226.5/T (226.6/Md.< 226.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
226 0 You     + you     PRON  PRP nsubj 3 - -       B-ARG0     B-ARG0     -                you/Ci
226 1 need    - need    AUX   VBP aux   3 - need.01 B-V        -          necessitate.v.01 need/Mv.<
226 2 n't     + not     PART  RB  neg   3 - -       B-ARGM-NEG B-ARGM-NEG not.r.01         n't/Mn.<
226 3 take    + take    VERB  VB  ROOT  3 - take.01 B-ARG1     B-V        lead.v.01        take/Pd.sox:01g:01g.-i:0123
226 4 me      + I       PRON  PRP dobj  3 - -       I-ARG1     B-ARG1     -                me/Ci
226 5 to      + to      ADP   IN  prep  3 - -       I-ARG1     B-ARGM-GOL -                to/T
226 6 the     + the     DET   DT  det   7 - -       I-ARG1     I-ARGM-GOL -                the/Md.<
226 7 station - station NOUN  NN  pobj  5 - -       I-ARG1     I-ARGM-GOL station.n.01     station/Cc..s
226 8 .       - .       PUNCT .   punct 3 - -       -          -          -                -

# sent_i = 227
# sent = You should answer the letter.
# hyperedge = ((should/Mm.< answer/Pd.so:01:0g.-i:012) you/Ci (the/Md.< letter/Cc..s))
# hyperedge builder = ((227.1/Mm.< 227.2/Pd.so:01:0g.-i:012) 227.0/Ci (227.3/Md.< 227.4/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
227 0 You    + you    PRON  PRP nsubj 2 - -         -   B-ARG0     -           you/Ci
227 1 should + should AUX   MD  aux   2 - -         B-V B-ARGM-MOD -           should/Mm.<
227 2 answer + answer VERB  VB  ROOT  2 - answer.01 -   B-V        answer.v.01 answer/Pd.so:01:0g.-i:012
227 3 the    + the    DET   DT  det   4 - -         -   B-ARG1     -           the/Md.<
227 4 letter - letter NOUN  NN  dobj  2 - -         -   I-ARG1     letter.n.01 letter/Cc..s
227 5 .      - .      PUNCT .   punct 2 - -         -   -          -           -

# sent_i = 228
# sent = You had better see a doctor.
# hyperedge = ((had/Mv.< see/Pd.s?o:0r1:0r1.-i:012) you/Ci better/M= (a/Md.< doctor/Cc..s))
# hyperedge builder = ((228.1/Mv.< 228.3/Pd.s?o:0r1:0r1.-i:012) 228.0/Ci 228.2/M= (228.4/Md.< 228.5/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
228 0 You    + you    PRON  PRP nsubj  3 - -       -   B-ARG0     -           you/Ci
228 1 had    + have   AUX   VBD aux    3 - have.07 B-V B-ARGM-MOD -           had/Mv.<
228 2 better + well   ADV   RBR advmod 3 - -       -   B-ARGM-ADV better.s.03 better/M=
228 3 see    + see    VERB  VB  ROOT   3 - see.01  -   B-V        see.v.11    see/Pd.s?o:0r1:0r1.-i:012
228 4 a      + a      DET   DT  det    5 - -       -   B-ARG1     -           a/Md.<
228 5 doctor - doctor NOUN  NN  dobj   3 - -       -   I-ARG1     doctor.n.01 doctor/Cc..s
228 6 .      - .      PUNCT .   punct  3 - -       -   -          -           -

# sent_i = 229
# sent = This jacket is supposed to have been cleaned.
# hyperedge = ((is/Mv.< supposed/Pd.pr:12:1h.<pf:12) (this/Md.< jacket/Cc..s) ((to/Mi.< (have/Mv.< (been/Mv.< cleaned/P.-:1:1.<pf:012))) (this/Md.< jacket/Cc..s)))
# hyperedge builder = ((229.2/Mv.< 229.3/Pd.pr:12:1h.<pf:12) (229.0/Md.< 229.1/Cc..s) ((229.4/Mi.< (229.5/Mv.< (229.6/Mv.< 229.7/P.-:1:1.<pf:012))) (229.0/Md.< 229.1/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
229 0 This     + this    DET   DT  det       1 - -          -   B-ARG1 -   -   B-ARG1 -              this/Md.<
229 1 jacket   + jacket  NOUN  NN  nsubjpass 3 - -          -   I-ARG1 -   -   I-ARG1 jacket.n.01    jacket/Cc..s
229 2 is       + be      AUX   VBZ auxpass   3 - be.03      B-V -      -   -   -      -              is/Mv.<
229 3 supposed + suppose VERB  VBN ROOT      3 - suppose.02 -   B-V    -   -   -      speculate.v.01 supposed/Pd.pr:12:1h.<pf:12
229 4 to       + to      PART  TO  aux       7 - -          -   B-ARG2 -   -   -      -              to/Mi.<
229 5 have     + have    AUX   VB  aux       7 - have.01    -   I-ARG2 B-V -   -      -              have/Mv.<
229 6 been     + be      AUX   VBN auxpass   7 - be.03      -   I-ARG2 -   B-V -      -              been/Mv.<
229 7 cleaned  - clean   VERB  VBN xcomp     3 - clean.01   -   I-ARG2 -   -   B-V    clean.v.01     cleaned/P.-:1:1.<pf:012
229 8 .        - .       PUNCT .   punct     3 - -          -   -      -   -   -      -              -

# sent_i = 230
# sent = Too much sugar is supposed to be bad for you.
# hyperedge = ((is/Mv.< supposed/Pd.pr:12:1h.<pf:12) ((too/M.< much/Ma.<) sugar/Cc..s) ((to/Mi.< be/P.-cx:12-:1h-.-i:12) ((too/M.< much/Ma.<) sugar/Cc..s) bad/Ca (for/T you/Ci)))
# hyperedge builder = ((230.3/Mv.< 230.4/Pd.pr:12:1h.<pf:12) ((230.0/M.< 230.1/Ma.<) 230.2/Cc..s) ((230.5/Mi.< 230.6/P.-cx:12-:1h-.-i:12) ((230.0/M.< 230.1/Ma.<) 230.2/Cc..s) 230.7/Ca (230.8/T 230.9/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
230 0  Too      + too     ADV   RB  advmod    1 - -          -   B-ARG1 B-ARG1 excessively.r.01 too/M.<
230 1  much     + much    ADJ   JJ  amod      2 - -          -   I-ARG1 I-ARG1 much.a.01        much/Ma.<
230 2  sugar    + sugar   NOUN  NN  nsubjpass 4 - -          -   I-ARG1 I-ARG1 sugar.n.01       sugar/Cc..s
230 3  is       + be      AUX   VBZ auxpass   4 - be.03      B-V -      -      -                is/Mv.<
230 4  supposed + suppose VERB  VBN ROOT      4 - suppose.02 -   B-V    -      speculate.v.01   supposed/Pd.pr:12:1h.<pf:12
230 5  to       + to      PART  TO  aux       6 - -          -   B-ARG2 -      -                to/Mi.<
230 6  be       + be      VERB  VB  xcomp     4 - be.01      -   I-ARG2 B-V    be.v.01          be/P.-cx:12-:1h-.-i:12
230 7  bad      + bad     ADJ   JJ  acomp     6 - -          -   I-ARG2 B-ARG2 bad.a.01         bad/Ca
230 8  for      + for     ADP   IN  prep      6 - -          -   I-ARG2 I-ARG2 -                for/T
230 9  you      - you     PRON  PRP pobj      8 - -          -   I-ARG2 I-ARG2 -                you/Ci
230 10 .        - .       PUNCT .   punct     4 - -          -   -      -      -                -

# sent_i = 231
# sent = We can leave our luggage at the hotel.
# hyperedge = ((can/Mm.< leave/Pd.sox:012:01h.-i:012) we/Ci ((+/Jc.rm.rr our/Mp we/Ci) luggage/Cc..s) (at/T (the/Md.< hotel/Cc..s)))
# hyperedge builder = ((231.1/Mm.< 231.2/Pd.sox:012:01h.-i:012) 231.0/Ci ((+/Jc.rm.rr 231.3/Mp 231.0/Ci) 231.4/Cc..s) (231.5/T (231.6/Md.< 231.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
231 0 We      + we      PRON  PRP  nsubj 2 - -        -   B-ARG0     B-MAIN0 -            we/Ci
231 1 can     + can     AUX   MD   aux   2 - -        B-V B-ARGM-MOD -       -            can/Mm.<
231 2 leave   + leave   VERB  VB   ROOT  2 - leave.12 -   B-V        -       leave.v.02   leave/Pd.sox:012:01h.-i:012
231 3 our     + our     PRON  PRP$ poss  4 - -        -   B-ARG1     B-REF0  -            our/Mp
231 4 luggage + luggage NOUN  NN   dobj  2 - -        -   I-ARG1     -       baggage.n.01 luggage/Cc..s
231 5 at      + at      ADP   IN   prep  2 - -        -   B-ARG2     -       -            at/T
231 6 the     + the     DET   DT   det   7 - -        -   I-ARG2     -       -            the/Md.<
231 7 hotel   - hotel   NOUN  NN   pobj  5 - -        -   I-ARG2     -       hotel.n.01   hotel/Cc..s
231 8 .       - .       PUNCT .    punct 2 - -        -   -          -       -            -

# sent_i = 232
# sent = I want to be allowed to take part.
# hyperedge = (want/Pd.sr:01:01.|f:01234 i/Ci ((to/Mi.< (be/Mv.< allowed/P.r:1:1.<pf:01)) ((to/Mi.< take/P.-o:0k:!!.-i) i/Ci part/Cc..s)))
# hyperedge builder = (232.1/Pd.sr:01:01.|f:01234 232.0/Ci ((232.2/Mi.< (232.3/Mv.< 232.4/P.r:1:1.<pf:01)) ((232.5/Mi.< 232.6/P.-o:0k:!!.-i) 232.0/Ci 232.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
232 0 I       + I     PRON  PRP nsubj   1 - -          B-ARG0 -   -      -          B-ARG0     -                i/Ci
232 1 want    + want  VERB  VBP ROOT    1 - want.01    B-V    -   -      -          -          desire.v.01      want/Pd.sr:01:01.|f:01234
232 2 to      + to    PART  TO  aux     4 - -          B-ARG1 -   -      -          -          -                to/Mi.<
232 3 be      + be    AUX   VB  auxpass 4 - be.03      I-ARG1 B-V -      -          -          -                be/Mv.<
232 4 allowed + allow VERB  VBN xcomp   1 - allow.01   I-ARG1 -   B-V    -          -          permit.v.01      allowed/P.r:1:1.<pf:01
232 5 to      + to    PART  TO  aux     6 - -          I-ARG1 -   B-ARG1 -          -          -                to/Mi.<
232 6 take    + take  VERB  VB  xcomp   4 - take.LV    I-ARG1 -   I-ARG1 B-V        B-ARGM-LVB participate.v.01 take/P.-o:0k:!!.-i
232 7 part    - part  NOUN  NN  dobj    6 - partake.02 I-ARG1 -   I-ARG1 B-ARGM-PRR B-V        participate.v.01 part/Cc..s
232 8 .       - .     PUNCT .   punct   1 - -          -      -   -      -          -          -                -

# sent_i = 233
# sent = They are allowed to park here.
# hyperedge = ((are/Mv.< allowed/Pd.pr:-1:-1.<pf:01) they/Ci ((to/Mi.< park/P.-?:0l:0l.-i:012) they/Ci here/M))
# hyperedge builder = ((233.1/Mv.< 233.2/Pd.pr:-1:-1.<pf:01) 233.0/Ci ((233.3/Mi.< 233.4/P.-?:0l:0l.-i:012) 233.0/Ci 233.5/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
233 0 They    + they  PRON  PRP nsubjpass 2 - -        -   -      B-ARG0     -           they/Ci
233 1 are     + be    AUX   VBP auxpass   2 - be.03    B-V -      -          -           are/Mv.<
233 2 allowed + allow VERB  VBN ROOT      2 - allow.01 -   B-V    -          permit.v.01 allowed/Pd.pr:-1:-1.<pf:01
233 3 to      + to    PART  TO  aux       4 - -        -   B-ARG1 -          -           to/Mi.<
233 4 park    + park  VERB  VB  xcomp     2 - park.01  -   I-ARG1 B-V        park.v.01   park/P.-?:0l:0l.-i:012
233 5 here    - here  ADV   RB  advmod    4 - -        -   I-ARG1 B-ARGM-LOC here.r.01   here/M
233 6 .       - .     PUNCT .   punct     2 - -        -   -      -          -           -

# sent_i = 234
# sent = We asked to be allowed to go.
# hyperedge = (asked/Pd.sr:01:01.<f:012 we/Ci ((to/Mi.< (be/Mv.< allowed/P.r:1:1.<pf:01)) ((to/Mi.< go/P.-:0:1.-i:0134) we/Ci)))
# hyperedge builder = (234.1/Pd.sr:01:01.<f:012 234.0/Ci ((234.2/Mi.< (234.3/Mv.< 234.4/P.r:1:1.<pf:01)) ((234.5/Mi.< 234.6/P.-:0:1.-i:0134) 234.0/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
234 0 We      + we    PRON  PRP nsubj   1 - -        B-ARG0 -   -      B-ARG0 -           we/Ci
234 1 asked   + ask   VERB  VBD ROOT    1 - ask.02   B-V    -   -      -      ask.v.02    asked/Pd.sr:01:01.<f:012
234 2 to      + to    PART  TO  aux     4 - -        B-ARG1 -   -      -      -           to/Mi.<
234 3 be      + be    AUX   VB  auxpass 4 - be.03    I-ARG1 B-V -      -      -           be/Mv.<
234 4 allowed + allow VERB  VBN xcomp   1 - allow.01 I-ARG1 -   B-V    -      permit.v.01 allowed/P.r:1:1.<pf:01
234 5 to      + to    PART  TO  aux     6 - -        I-ARG1 -   B-ARG1 -      -           to/Mi.<
234 6 go      - go    VERB  VB  xcomp   4 - go.02    I-ARG1 -   I-ARG1 B-V    travel.v.01 go/P.-:0:1.-i:0134
234 7 .       - .     PUNCT .   punct   1 - -        -      -   -      -      -           -

# sent_i = 235
# sent = Mandy will be in London now.
# hyperedge = ((will/Mm.< be/Pd.sx?:12t:1ht.-i:12) mandy/Cp..s.p (in/T london/Cp..s.g) now/M)
# hyperedge builder = ((235.1/Mm.< 235.2/Pd.sx?:12t:1ht.-i:12) 235.0/Cp..s.p (235.3/T 235.4/Cp..s.g) 235.5/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
235 0 Mandy  + Mandy  PROPN NNP nsubj  2 B-PERSON -     -   B-ARG1     -           mandy/Cp..s.p
235 1 will   + will   AUX   MD  aux    2 -        -     B-V B-ARGM-MOD -           will/Mm.<
235 2 be     + be     VERB  VB  ROOT   2 -        be.01 -   B-V        be.v.01     be/Pd.sx?:12t:1ht.-i:12
235 3 in     + in     ADP   IN  prep   2 -        -     -   B-ARG2     -           in/T
235 4 London + London PROPN NNP pobj   3 B-GPE    -     -   I-ARG2     london.n.01 london/Cp..s.g
235 5 now    - now    ADV   RB  advmod 2 -        -     -   B-ARGM-TMP now.r.04    now/M
235 6 .      - .      PUNCT .   punct  2 -        -     -   -          -           -

# sent_i = 236
# sent = The rain should stop soon.
# hyperedge = ((should/Mm.< stop/Pd.s?:1t:1t.-i:012) (the/Md.< rain/Cc..s) soon/M)
# hyperedge builder = ((236.2/Mm.< 236.3/Pd.s?:1t:1t.-i:012) (236.0/Md.< 236.1/Cc..s) 236.4/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
236 0 The    + the    DET   DT det    1 - -       -   B-ARG1     -                the/Md.<
236 1 rain   + rain   NOUN  NN nsubj  3 - -       -   I-ARG1     rain.n.01        rain/Cc..s
236 2 should + should AUX   MD aux    3 - -       B-V B-ARGM-MOD -                should/Mm.<
236 3 stop   + stop   VERB  VB ROOT   3 - stop.01 -   B-V        discontinue.v.01 stop/Pd.s?:1t:1t.-i:012
236 4 soon   - soon   ADV   RB advmod 3 - -       -   B-ARGM-TMP soon.r.01        soon/M
236 5 .      - .      PUNCT .  punct  3 - -       -   -          -                -

# sent_i = 237
# sent = We ought to be allowed to decide for ourselves.
# hyperedge = (ought/Pd.sr:--:-- we/Ci ((to/Mi.< (be/Mv.< allowed/P.r:1:1.<pf:01)) ((to/Mi.< decide/P.-x:02:0g.-i:0123) we/Ci (for/T (+/Jc.rm.rr ourselves/Ci we/Ci)))))
# hyperedge builder = (237.1/Pd.sr:--:-- 237.0/Ci ((237.2/Mi.< (237.3/Mv.< 237.4/P.r:1:1.<pf:01)) ((237.5/Mi.< 237.6/P.-x:02:0g.-i:0123) 237.0/Ci (237.7/T (+/Jc.rm.rr 237.8/Ci 237.0/Ci)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
237 0 We        + we        PRON  PRP nsubj   1 - -         -   -   -          B-ARG0 B-MAIN0 -           we/Ci
237 1 ought     + ought     AUX   MD  ROOT    1 - -         B-V -   B-ARGM-MOD -      -       -           ought/Pd.sr:--:--
237 2 to        + to        PART  TO  aux     4 - -         -   -   -          -      -       -           to/Mi.<
237 3 be        + be        AUX   VB  auxpass 4 - be.03     -   B-V -          -      -       -           be/Mv.<
237 4 allowed   + allow     VERB  VBN xcomp   1 - allow.01  -   -   B-V        -      -       let.v.01    allowed/P.r:1:1.<pf:01
237 5 to        + to        PART  TO  aux     6 - -         -   -   B-ARG1     -      -       -           to/Mi.<
237 6 decide    + decide    VERB  VB  xcomp   4 - decide.01 -   -   I-ARG1     B-V    -       decide.v.01 decide/P.-x:02:0g.-i:0123
237 7 for       + for       ADP   IN  prep    6 - -         -   -   I-ARG1     B-ARG2 -       -           for/T
237 8 ourselves - ourselves PRON  PRP pobj    7 - -         -   -   I-ARG1     I-ARG2 B-REF0  -           ourselves/Ci
237 9 .         - .         PUNCT .   punct   1 - -         -   -   -          -      -       -           -

# sent_i = 238
# sent = After all the help Guy has had, he ought to have thanked you.
# hyperedge = (ought/Pd.xsr:---:--- (after/T (+/Jr.ma (all/M.< (the/Md.< help/Cc..s)) ((has/Mv.< had/P.-s:10:10.<pf:01) (all/M.< (the/Md.< help/Cc..s)) guy/Cp..s.p))) (+/Jc.rm.rp he/Ci guy/Cp..s.p) ((to/Mi.< (have/Mv.< thanked/P.--o:r01:r01.<pf:012)) (after/T (+/Jr.ma (all/M.< (the/Md.< help/Cc..s)) ((has/Mv.< had/P.-s:10:10.<pf:01) (all/M.< (the/Md.< help/Cc..s)) guy/Cp..s.p))) (+/Jc.rm.rp he/Ci guy/Cp..s.p) you/Ci))
# hyperedge builder = (238.9/Pd.xsr:---:--- (238.0/T (+/Jr.ma (238.1/M.< (238.2/Md.< 238.3/Cc..s)) ((238.5/Mv.< 238.6/P.-s:10:10.<pf:01) (238.1/M.< (238.2/Md.< 238.3/Cc..s)) 238.4/Cp..s.p))) (+/Jc.rm.rp 238.8/Ci 238.4/Cp..s.p) ((238.10/Mi.< (238.11/Mv.< 238.12/P.--o:r01:r01.<pf:012)) (238.0/T (+/Jr.ma (238.1/M.< (238.2/Md.< 238.3/Cc..s)) ((238.5/Mv.< 238.6/P.-s:10:10.<pf:01) (238.1/M.< (238.2/Md.< 238.3/Cc..s)) 238.4/Cp..s.p))) (+/Jc.rm.rp 238.8/Ci 238.4/Cp..s.p) 238.13/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
238 0  After   + after ADP   IN  prep   9  -        -        -   -      -   -   B-ARGM-ADV -       subsequently.r.01 after/T
238 1  all     + all   DET   PDT predet 3  -        -        -   B-ARG1 -   -   I-ARGM-ADV -       all.a.01          all/M.<
238 2  the     + the   DET   DT  det    3  -        -        -   I-ARG1 -   -   I-ARGM-ADV -       -                 the/Md.<
238 3  help    + help  NOUN  NN  pobj   0  -        -        -   I-ARG1 -   -   I-ARGM-ADV -       aid.n.02          help/Cc..s
238 4  Guy     + Guy   PROPN NNP nsubj  6  B-PERSON -        -   B-ARG0 -   -   I-ARGM-ADV B-MAIN0 -                 guy/Cp..s.p
238 5  has     + have  AUX   VBZ aux    6  -        have.01  B-V -      -   -   I-ARGM-ADV -       -                 has/Mv.<
238 6  had     - have  VERB  VBN relcl  3  -        have.03  -   B-V    -   -   I-ARGM-ADV -       accept.v.02       had/P.-s:10:10.<pf:01
238 7  ,       + ,     PUNCT ,   punct  9  -        -        -   -      -   -   -          -       -                 -
238 8  he      + he    PRON  PRP nsubj  9  -        -        -   -      -   -   B-ARG0     B-REF0  -                 he/Ci
238 9  ought   + ought AUX   MD  ROOT   9  -        -        -   -      B-V -   B-ARGM-MOD -       -                 ought/Pd.xsr:---:---
238 10 to      + to    PART  TO  aux    12 -        -        -   -      -   -   -          -       -                 to/Mi.<
238 11 have    + have  AUX   VB  aux    12 -        have.01  -   -      -   B-V -          -       -                 have/Mv.<
238 12 thanked + thank VERB  VBN xcomp  9  -        thank.01 -   -      -   -   B-V        -       thank.v.01        thanked/P.--o:r01:r01.<pf:012
238 13 you     - you   PRON  PRP dobj   12 -        -        -   -      -   -   B-ARG1     -       -                 you/Ci
238 14 .       - .     PUNCT .   punct  9  -        -        -   -      -   -   -          -       -                 -

# sent_i = 239
# sent = Their keys may be in my coat pocket.
# hyperedge = ((may/Mm.< be/Pd.sx:12:1h.-i:12) (their/Mp keys/Cc..p) (in/T (my/Mp (+/B.am coat/Cc.<.s pocket/Cc..s))))
# hyperedge builder = ((239.2/Mm.< 239.3/Pd.sx:12:1h.-i:12) (239.0/Mp 239.1/Cc..p) (239.4/T (239.5/Mp (+/B.am 239.6/Cc.<.s 239.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
239 0 Their  + their  PRON  PRP$ poss     1 - -     -   B-ARG1     -           their/Mp
239 1 keys   + key    NOUN  NNS  nsubj    3 - -     -   I-ARG1     key.n.01    keys/Cc..p
239 2 may    + may    AUX   MD   aux      3 - -     B-V B-ARGM-MOD -           may/Mm.<
239 3 be     + be     VERB  VB   ROOT     3 - be.01 -   B-V        be.v.01     be/Pd.sx:12:1h.-i:12
239 4 in     + in     ADP   IN   prep     3 - -     -   B-ARG2     -           in/T
239 5 my     + my     PRON  PRP$ poss     7 - -     -   I-ARG2     -           my/Mp
239 6 coat   + coat   NOUN  NN   compound 7 - -     -   I-ARG2     coat.n.01   coat/Cc.<.s
239 7 pocket - pocket NOUN  NN   pobj     4 - -     -   I-ARG2     pocket.n.01 pocket/Cc..s
239 8 .      - .      PUNCT .    punct    3 - -     -   -          -           -

# sent_i = 240
# sent = I might be able to do a little revision.
# hyperedge = ((might/Mm.< be/Pd.sc:12:1h.-i:12) i/Ci (+/Br.am able/Ca ((to/Mi.< do/P.-o:01:01.-i:01234) i/Ci (a/Md.< (little/Ma.< revision/Cc..s)))))
# hyperedge builder = ((240.1/Mm.< 240.2/Pd.sc:12:1h.-i:12) 240.0/Ci (+/Br.am 240.3/Ca ((240.4/Mi.< 240.5/P.-o:01:01.-i:01234) 240.0/Ci (240.6/Md.< (240.7/Ma.< 240.8/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
240 0 I        + I        PRON  PRP nsubj 2 - -     -   B-ARG1     B-ARG0 -             i/Ci
240 1 might    + may      AUX   MD  aux   2 - -     B-V B-ARGM-MOD -      -             might/Mm.<
240 2 be       + be       VERB  VB  ROOT  2 - be.01 -   B-V        -      be.v.01       be/Pd.sc:12:1h.-i:12
240 3 able     + able     ADJ   JJ  acomp 2 - -     -   B-ARG2     -      able.a.01     able/Ca
240 4 to       + to       PART  TO  aux   5 - -     -   I-ARG2     -      -             to/Mi.<
240 5 do       + do       VERB  VB  xcomp 3 - do.02 -   I-ARG2     B-V    do.v.03       do/P.-o:01:01.-i:01234
240 6 a        + a        DET   DT  det   8 - -     -   I-ARG2     B-ARG1 -             a/Md.<
240 7 little   + little   ADJ   JJ  amod  8 - -     -   I-ARG2     I-ARG1 little.a.02   little/Ma.<
240 8 revision - revision NOUN  NN  dobj  5 - -     -   I-ARG2     I-ARG1 revision.n.01 revision/Cc..s
240 9 .        - .        PUNCT .   punct 2 - -     -   -          -      -             -

# sent_i = 241
# sent = I might be playing badminton tomorrow.
# hyperedge = ((might/Mm.< (be/Mv.< playing/Pd.sox:01t:01t.|pg:0123)) i/Ci badminton/Cc..s tomorrow/Cc..s.d)
# hyperedge builder = ((241.1/Mm.< (241.2/Mv.< 241.3/Pd.sox:01t:01t.|pg:0123)) 241.0/Ci 241.4/Cc..s 241.5/Cc..s.d)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
241 0 I         + I         PRON  PRP nsubj    3 -      -       -   -   B-ARG0     -              i/Ci
241 1 might     + may       AUX   MD  aux      3 -      -       B-V -   B-ARGM-MOD -              might/Mm.<
241 2 be        + be        VERB  VB  aux      3 -      be.03   -   B-V -          -              be/Mv.<
241 3 playing   + play      VERB  VBG ROOT     3 -      play.01 -   -   B-V        play.v.01      playing/Pd.sox:01t:01t.|pg:0123
241 4 badminton + badminton NOUN  NN  dobj     3 -      -       -   -   B-ARG1     badminton.n.01 badminton/Cc..s
241 5 tomorrow  - tomorrow  NOUN  NN  npadvmod 3 B-DATE -       -   -   B-ARGM-TMP tomorrow.n.01  tomorrow/Cc..s.d
241 6 .         - .         PUNCT .   punct    3 -      -       -   -   -          -              -

# sent_i = 242
# sent = The letter could have got lost in the past.
# hyperedge = ((could/Mm.< (have/Mv.< (got/Mv.< lost/Pd.px:1t:1t.<pf:0123))) (the/Md.< letter/Cc..s) (in/Tt (the/Md.< past/Cc..s)))
# hyperedge builder = ((242.2/Mm.< (242.3/Mv.< (242.4/Mv.< 242.5/Pd.px:1t:1t.<pf:0123))) (242.0/Md.< 242.1/Cc..s) (242.6/Tt (242.7/Md.< 242.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
242 0 The    + the    DET   DT  det       1 - -       -   -   -   B-ARG1     -             the/Md.<
242 1 letter + letter NOUN  NN  nsubjpass 5 - -       -   -   -   I-ARG1     letter.n.01   letter/Cc..s
242 2 could  + could  AUX   MD  aux       5 - -       B-V -   -   B-ARGM-MOD -             could/Mm.<
242 3 have   + have   AUX   VB  aux       5 - have.01 -   B-V -   -          -             have/Mv.<
242 4 got    + get    AUX   VBN auxpass   5 - get.24  -   -   B-V -          -             got/Mv.<
242 5 lost   + lose   VERB  VBN ROOT      5 - lose.02 -   -   -   B-V        misplace.v.01 lost/Pd.px:1t:1t.<pf:0123
242 6 in     + in     ADP   IN  prep      5 - -       -   -   -   B-ARGM-TMP -             in/Tt
242 7 the    + the    DET   DT  det       8 - -       -   -   -   I-ARGM-TMP -             the/Md.<
242 8 past   - past   NOUN  NN  pobj      6 - -       -   -   -   I-ARGM-TMP past.n.01     past/Cc..s
242 9 .      - .      PUNCT .   punct     5 - -       -   -   -   -          -             -

# sent_i = 243
# sent = We may have thrown it away.
# hyperedge = ((may/Mm.< (have/Mv.< (away/Ml.r.> thrown/Pd.so:01:01.<pf:01))) we/Ci it/Ci)
# hyperedge builder = ((243.1/Mm.< (243.2/Mv.< (243.5/Ml.r.> 243.3/Pd.so:01:01.<pf:01))) 243.0/Ci 243.4/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
243 0 We     + we    PRON  PRP nsubj 3 - -             -   -   B-ARG0     -            we/Ci
243 1 may    + may   AUX   MD  aux   3 - -             B-V -   B-ARGM-MOD -            may/Mm.<
243 2 have   + have  AUX   VB  aux   3 - have.01       -   B-V -          -            have/Mv.<
243 3 thrown + throw VERB  VBN ROOT  3 - throw_away.07 -   -   B-V        discard.v.01 thrown/Pd.so:01:01.<pf:01
243 4 it     + it    PRON  PRP dobj  3 - -             -   -   B-ARG1     -            it/Ci
243 5 away   - away  ADV   RB  prt   3 - -             -   -   -          discard.v.01 away/Ml.r.>
243 6 .      - .     PUNCT .   punct 3 - -             -   -   -          -            -

# sent_i = 244
# sent = Most people can swim.
# hyperedge = ((can/Mm.< swim/Pd.s:0:1.-i:0123) (most/Ms.< people/Cc..p))
# hyperedge builder = ((244.2/Mm.< 244.3/Pd.s:0:1.-i:0123) (244.0/Ms.< 244.1/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
244 0 Most   + Most   ADJ   JJS amod  1 - -       -   B-ARG0     most.a.01   most/Ms.<
244 1 people + people NOUN  NNS nsubj 3 - -       -   I-ARG0     people.n.01 people/Cc..p
244 2 can    + can    AUX   MD  aux   3 - -       B-V B-ARGM-MOD -           can/Mm.<
244 3 swim   - swim   VERB  VB  ROOT  3 - swim.01 -   B-V        swim.v.01   swim/Pd.s:0:1.-i:0123
244 4 .      - .      PUNCT .   punct 3 - -       -   -          -           -

# sent_i = 245
# sent = You aren't going to be able to finish it in time.
# hyperedge = ((are/Mv.< (n't/Mn.< going/Pd.sr:--:--.|pg)) you/Ci ((to/Mi.< be/P.-c:12:1h.-i:12) you/Ci (+/Br.am able/Ca ((to/Mi.< finish/P.-ox:01t:01t.-i:012) you/Ci it/Ci (in/Tt time/Cc..s)))))
# hyperedge builder = ((245.1/Mv.< (245.2/Mn.< 245.3/Pd.sr:--:--.|pg)) 245.0/Ci ((245.4/Mi.< 245.5/P.-c:12:1h.-i:12) 245.0/Ci (+/Br.am 245.6/Ca ((245.7/Mi.< 245.8/P.-ox:01t:01t.-i:012) 245.0/Ci 245.9/Ci (245.10/Tt 245.11/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
245 0  You    + you    PRON  PRP nsubj 3  - -         -   -          B-ARG1 B-ARG0     -             you/Ci
245 1  are    - be     AUX   VBP aux   3  - be.03     B-V -          -      -          -             are/Mv.<
245 2  n't    + not    PART  RB  neg   3  - -         -   B-ARGM-NEG -      -          not.r.01      n't/Mn.<
245 3  going  + go     VERB  VBG ROOT  3  - go.04     -   B-V        -      -          -             going/Pd.sr:--:--.|pg
245 4  to     + to     PART  TO  aux   5  - -         -   -          -      -          -             to/Mi.<
245 5  be     + be     VERB  VB  xcomp 3  - be.01     -   -          B-V    -          be.v.01       be/P.-c:12:1h.-i:12
245 6  able   + able   ADJ   JJ  acomp 5  - -         -   -          B-ARG2 -          able.a.01     able/Ca
245 7  to     + to     PART  TO  aux   8  - -         -   -          I-ARG2 -          -             to/Mi.<
245 8  finish + finish VERB  VB  xcomp 6  - finish.01 -   -          I-ARG2 B-V        complete.v.01 finish/P.-ox:01t:01t.-i:012
245 9  it     + it     PRON  PRP dobj  8  - -         -   -          I-ARG2 B-ARG1     -             it/Ci
245 10 in     + in     ADP   IN  prep  8  - -         -   -          I-ARG2 B-ARGM-TMP in_time.r.02  in/Tt
245 11 time   - time   NOUN  NN  pobj  10 - -         -   -          I-ARG2 I-ARGM-TMP in_time.r.02  time/Cc..s
245 12 .      - .      PUNCT .   punct 3  - -         -   -          -      -          -             -

# sent_i = 246
# sent = Being able to see properly is important.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (being/P.c:2:!.|pg (+/Br.am able/Ca ((to/Mi.< see/P.?:m:m.-i:012) properly/M))) important/Ca)
# hyperedge builder = (246.5/Pd.sc:12:1h.|f--3s:12 (246.0/P.c:2:!.|pg (+/Br.am 246.1/Ca ((246.2/Mi.< 246.3/P.?:m:m.-i:012) 246.4/M))) 246.6/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
246 0 Being     + be        VERB  VBG csubj  5 - be.03  B-V    -          B-ARG1 be.v.01        being/P.c:2:!.|pg
246 1 able      + able      ADJ   JJ  acomp  0 - -      B-ARG2 -          I-ARG1 able.a.01      able/Ca
246 2 to        + to        PART  TO  aux    3 - -      I-ARG2 -          I-ARG1 -              to/Mi.<
246 3 see       + see       VERB  VB  xcomp  1 - see.01 I-ARG2 B-V        I-ARG1 see.v.01       see/P.?:m:m.-i:012
246 4 properly  + properly  ADV   RB  advmod 3 - -      I-ARG2 B-ARGM-MNR I-ARG1 properly.r.01  properly/M
246 5 is        + be        AUX   VBZ ROOT   5 - be.01  -      -          B-V    be.v.01        is/Pd.sc:12:1h.|f--3s:12
246 6 important - important ADJ   JJ  acomp  5 - -      -      -          B-ARG2 important.a.01 important/Ca
246 7 .         - .         PUNCT .   punct  5 - -      -      -          -      -              -

# sent_i = 247
# sent = Six weeks' holiday would be nice.
# hyperedge = ((would/Mm.< be/Pd.sc:12:1h.-i:12) ('/Bp...d (six/M#.<..d weeks/Cc..p.d) holiday/Cc..s) nice/Ca)
# hyperedge builder = ((247.4/Mm.< 247.5/Pd.sc:12:1h.-i:12) (247.2/Bp...d (247.0/M#.<..d 247.1/Cc..p.d) 247.3/Cc..s) 247.6/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
247 0 Six     + six     NUM   CD  nummod 1 B-DATE -     -   B-ARG1     six.s.01      six/M#.<..d
247 1 weeks   - week    NOUN  NNS poss   3 I-DATE -     -   I-ARG1     week.n.01     weeks/Cc..p.d
247 2 '       + '       PART  POS case   1 I-DATE -     -   I-ARG1     -             '/Bp...d
247 3 holiday + holiday NOUN  NN  nsubj  5 -      -     -   I-ARG1     vacation.n.01 holiday/Cc..s
247 4 would   + would   AUX   MD  aux    5 -      -     B-V B-ARGM-MOD -             would/Mm.<
247 5 be      + be      VERB  VB  ROOT   5 -      be.01 -   B-V        be.v.01       be/Pd.sc:12:1h.-i:12
247 6 nice    - nice    ADJ   JJ  acomp  5 -      -     -   B-ARG2     nice.a.01     nice/Ca
247 7 .       - .       PUNCT .   punct  5 -      -     -   -          -             -

# sent_i = 248
# sent = People will leave litter everywhere.
# hyperedge = ((will/Mm.< leave/Pd.so?:01l:01l.-i:012) people/Cc..p litter/Cc..s everywhere/M)
# hyperedge builder = ((248.1/Mm.< 248.2/Pd.so?:01l:01l.-i:012) 248.0/Cc..p 248.3/Cc..s 248.4/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
248 0 People     + People     NOUN  NNS nsubj  2 - -        -   B-ARG0     people.n.01     people/Cc..p
248 1 will       + will       AUX   MD  aux    2 - -        B-V B-ARGM-MOD -               will/Mm.<
248 2 leave      + leave      VERB  VB  ROOT   2 - leave.12 -   B-V        leave.v.02      leave/Pd.so?:01l:01l.-i:012
248 3 litter     + litter     NOUN  NN  dobj   2 - -        -   B-ARG1     litter.n.02     litter/Cc..s
248 4 everywhere - everywhere ADV   RB  advmod 2 - -        -   B-ARGM-LOC everywhere.r.01 everywhere/M
248 5 .          - .          PUNCT .   punct  2 - -        -   -          -               -

# sent_i = 249
# sent = People used to have to wash clothes by hand.
# hyperedge = (used/Pd.sr:01:01.<f:01 people/Cc..p ((to/Mi.< have/P.r:-:-.-i) ((to/Mi.< wash/P.-ox:01m:01m.-i:01234) people/Cc..p clothes/Cc..p (by/T hand/Cc..s))))
# hyperedge builder = (249.1/Pd.sr:01:01.<f:01 249.0/Cc..p ((249.2/Mi.< 249.3/P.r:-:-.-i) ((249.4/Mi.< 249.5/P.-ox:01m:01m.-i:01234) 249.0/Cc..p 249.6/Cc..p (249.7/T 249.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
249 0 People  + People NOUN  NNS nsubj 1 - -       B-ARG0 -   B-ARG0     people.n.01  people/Cc..p
249 1 used    + use    VERB  VBD ROOT  1 - use.02  B-V    -   -          use.v.06     used/Pd.sr:01:01.<f:01
249 2 to      + to     PART  TO  aux   3 - -       B-ARG1 -   -          -            to/Mi.<
249 3 have    + have   VERB  VB  xcomp 1 - have.02 I-ARG1 B-V B-ARGM-MOD -            have/P.r:-:-.-i
249 4 to      + to     PART  TO  aux   5 - -       I-ARG1 -   -          -            to/Mi.<
249 5 wash    + wash   VERB  VB  xcomp 3 - wash.01 I-ARG1 -   B-V        wash.v.03    wash/P.-ox:01m:01m.-i:01234
249 6 clothes + clothe NOUN  NNS dobj  5 - -       I-ARG1 -   B-ARG1     apparel.n.01 clothes/Cc..p
249 7 by      + by     ADP   IN  prep  5 - -       I-ARG1 -   B-ARGM-MNR by_hand.r.01 by/T
249 8 hand    - hand   NOUN  NN  pobj  7 - -       I-ARG1 -   I-ARGM-MNR by_hand.r.01 hand/Cc..s
249 9 .       - .      PUNCT .   punct 1 - -       -      -   -          -            -

# sent_i = 250
# sent = I daren't go up on the roof.
# hyperedge = ((dare/Mm.< (n't/Mn.< (up/Ml.r.> go/Pd.sx:01:01.-i:012))) i/Ci (on/T (the/Md.< roof/Cc..s)))
# hyperedge builder = ((250.1/Mm.< (250.2/Mn.< (250.4/Ml.r.> 250.3/Pd.sx:01:01.-i:012))) 250.0/Ci (250.5/T (250.6/Md.< 250.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
250 0 I    + I    PRON  PRP nsubj 3 - -       B-ARG0     B-ARG0     -         i/Ci
250 1 dare - dare AUX   MD  aux   3 - dare.01 B-V        -          dare.v.02 dare/Mm.<
250 2 n't  + not  PART  RB  neg   3 - -       B-ARGM-NEG B-ARGM-NEG not.r.01  n't/Mn.<
250 3 go   + go   VERB  VB  ROOT  3 - go.06   B-ARG2     B-V        rise.v.01 go/Pd.sx:01:01.-i:012
250 4 up   + up   ADV   RP  prt   3 - -       I-ARG2     B-ARG2     rise.v.01 up/Ml.r.>
250 5 on   + on   ADP   IN  prep  3 - -       I-ARG2     B-ARG1     -         on/T
250 6 the  + the  DET   DT  det   7 - -       I-ARG2     I-ARG1     -         the/Md.<
250 7 roof - roof NOUN  NN  pobj  5 - -       I-ARG2     I-ARG1     roof.n.01 roof/Cc..s
250 8 .    - .    PUNCT .   punct 3 - -       -          -          -         -

# sent_i = 251
# sent = The police didn't dare to approach the building.
# hyperedge = ((did/Mv.< (n't/Mn.< dare/Pd.sr:02:0h.-i:012)) (the/Md.< police/Cc..s) ((to/Mi.< approach/P.-o:12:1l.-i:12) (the/Md.< police/Cc..s) (the/Md.< building/Cc..s)))
# hyperedge builder = ((251.2/Mv.< (251.3/Mn.< 251.4/Pd.sr:02:0h.-i:012)) (251.0/Md.< 251.1/Cc..s) ((251.5/Mi.< 251.6/P.-o:12:1l.-i:12) (251.0/Md.< 251.1/Cc..s) (251.7/Md.< 251.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
251 0 The      + the      DET   DT  det   1 - -           -   B-ARG0     B-ARG1 -              the/Md.<
251 1 police   + police   NOUN  NN  nsubj 4 - -           -   I-ARG0     I-ARG1 police.n.01    police/Cc..s
251 2 did      - do       AUX   VBD aux   4 - do.01       B-V -          -      -              did/Mv.<
251 3 n't      + not      PART  RB  neg   4 - -           -   B-ARGM-NEG -      not.r.01       n't/Mn.<
251 4 dare     + dare     VERB  VB  ROOT  4 - dare.01     -   B-V        -      make_bold.v.01 dare/Pd.sr:02:0h.-i:012
251 5 to       + to       PART  TO  aux   6 - -           -   B-ARG2     -      -              to/Mi.<
251 6 approach + approach VERB  VB  xcomp 4 - approach.01 -   I-ARG2     B-V    approach.v.01  approach/P.-o:12:1l.-i:12
251 7 the      + the      DET   DT  det   8 - -           -   I-ARG2     B-ARG2 -              the/Md.<
251 8 building - building NOUN  NN  dobj  6 - -           -   I-ARG2     I-ARG2 building.n.01  building/Cc..s
251 9 .        - .        PUNCT .   punct 4 - -           -   -          -      -              -

# sent_i = 252
# sent = The police didn't dare approach the building.
# hyperedge = ((did/Mv.< (n't/Mn.< dare/Pd.sr:02:0h.-i:012)) (the/Md.< police/Cc..s) (approach/P.-o:12:1l.-i:12 (the/Md.< police/Cc..s) (the/Md.< building/Cc..s)))
# hyperedge builder = ((252.2/Mv.< (252.3/Mn.< 252.4/Pd.sr:02:0h.-i:012)) (252.0/Md.< 252.1/Cc..s) (252.5/P.-o:12:1l.-i:12 (252.0/Md.< 252.1/Cc..s) (252.6/Md.< 252.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
252 0 The      + the      DET   DT  det   1 - -           -   B-ARG0     B-ARG1 -              the/Md.<
252 1 police   + police   NOUN  NN  nsubj 4 - -           -   I-ARG0     I-ARG1 police.n.01    police/Cc..s
252 2 did      - do       AUX   VBD aux   4 - do.01       B-V -          -      -              did/Mv.<
252 3 n't      + not      PART  RB  neg   4 - -           -   B-ARGM-NEG -      not.r.01       n't/Mn.<
252 4 dare     + dare     VERB  VB  ROOT  4 - dare.01     -   B-V        -      make_bold.v.01 dare/Pd.sr:02:0h.-i:012
252 5 approach + approach VERB  VB  xcomp 4 - approach.01 -   B-ARG2     B-V    approach.v.01  approach/P.-o:12:1l.-i:12
252 6 the      + the      DET   DT  det   7 - -           -   I-ARG2     B-ARG2 -              the/Md.<
252 7 building - building NOUN  NN  dobj  5 - -           -   I-ARG2     I-ARG2 building.n.01  building/Cc..s
252 8 .        - .        PUNCT .   punct 4 - -           -   -          -      -              -

# sent_i = 253
# sent = Nothing can be done about it.
# hyperedge = ((can/Mm.< (be/Mv.< done/Pd.px:12:1g.<pf:01234)) nothing/Ci..s (about/T it/Ci))
# hyperedge builder = ((253.1/Mm.< (253.2/Mv.< 253.3/Pd.px:12:1g.<pf:01234)) 253.0/Ci..s (253.4/T 253.5/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
253 0 Nothing + nothing PRON  NN  nsubjpass 3 - -     -   -   B-ARG1     nothing.n.01 nothing/Ci..s
253 1 can     + can     AUX   MD  aux       3 - -     B-V -   B-ARGM-MOD -            can/Mm.<
253 2 be      + be      AUX   VB  auxpass   3 - be.03 -   B-V -          -            be/Mv.<
253 3 done    + do      VERB  VBN ROOT      3 - do.02 -   -   B-V        make.v.01    done/Pd.px:12:1g.<pf:01234
253 4 about   + about   ADP   IN  prep      3 - -     -   -   B-ARG2     -            about/T
253 5 it      - it      PRON  PRP pobj      4 - -     -   -   I-ARG2     -            it/Ci
253 6 .       - .       PUNCT .   punct     3 - -     -   -   -          -            -

# sent_i = 254
# sent = You can't do anything about it.
# hyperedge = ((ca/Mm.< (n't/Mn.< do/Pd.sox:012:01g.-i:01234)) you/Ci anything/Ci..s (about/T it/Ci))
# hyperedge builder = ((254.1/Mm.< (254.2/Mn.< 254.3/Pd.sox:012:01g.-i:01234)) 254.0/Ci 254.4/Ci..s (254.5/T 254.6/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
254 0 You      + you      PRON  PRP nsubj 3 - -     -   B-ARG0     -         you/Ci
254 1 ca       - can      AUX   MD  aux   3 - -     B-V B-ARGM-MOD -         ca/Mm.<
254 2 n't      + not      PART  RB  neg   3 - -     -   B-ARGM-NEG not.r.01  n't/Mn.<
254 3 do       + do       VERB  VB  ROOT  3 - do.02 -   B-V        make.v.01 do/Pd.sox:012:01g.-i:01234
254 4 anything + anything PRON  NN  dobj  3 - -     -   B-ARG1     -         anything/Ci..s
254 5 about    + about    ADP   IN  prep  3 - -     -   B-ARG2     -         about/T
254 6 it       - it       PRON  PRP pobj  5 - -     -   I-ARG2     -         it/Ci
254 7 .        - .        PUNCT .   punct 3 - -     -   -          -         -

# sent_i = 255
# sent = One can't do anything about it.
# hyperedge = ((ca/Mm.< (n't/Mn.< do/Pd.sox:012:01g.-i:01234)) one/Ci anything/Ci..s (about/T it/Ci))
# hyperedge builder = ((255.1/Mm.< (255.2/Mn.< 255.3/Pd.sox:012:01g.-i:01234)) 255.0/Ci 255.4/Ci..s (255.5/T 255.6/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
255 0 One      + one      PRON  PRP nsubj 3 - -     -   B-ARG0     one.n.02  one/Ci
255 1 ca       - can      AUX   MD  aux   3 - -     B-V B-ARGM-MOD -         ca/Mm.<
255 2 n't      + not      PART  RB  neg   3 - -     -   B-ARGM-NEG not.r.01  n't/Mn.<
255 3 do       + do       VERB  VB  ROOT  3 - do.02 -   B-V        make.v.01 do/Pd.sox:012:01g.-i:01234
255 4 anything + anything PRON  NN  dobj  3 - -     -   B-ARG1     -         anything/Ci..s
255 5 about    + about    ADP   IN  prep  3 - -     -   B-ARG2     -         about/T
255 6 it       - it       PRON  PRP pobj  5 - -     -   I-ARG2     -         it/Ci
255 7 .        - .        PUNCT .   punct 3 - -     -   -          -         -

# sent_i = 256
# sent = Many people are killed on the roads.
# hyperedge = ((are/Mv.< killed/Pd.px:1l:1l.<pf:012) (many/Ma.< people/Cc..p) (on/Tl (the/Md.< roads/Cc..p)))
# hyperedge builder = ((256.2/Mv.< 256.3/Pd.px:1l:1l.<pf:012) (256.0/Ma.< 256.1/Cc..p) (256.4/Tl (256.5/Md.< 256.6/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
256 0 Many   + many   ADJ   JJ  amod      1 - -       -   B-ARG1     many.a.01   many/Ma.<
256 1 people + people NOUN  NNS nsubjpass 3 - -       -   I-ARG1     people.n.01 people/Cc..p
256 2 are    + be     AUX   VBP auxpass   3 - be.03   B-V -          -           are/Mv.<
256 3 killed + kill   VERB  VBN ROOT      3 - kill.01 -   B-V        kill.v.01   killed/Pd.px:1l:1l.<pf:012
256 4 on     + on     ADP   IN  prep      3 - -       -   B-ARGM-LOC -           on/Tl
256 5 the    + the    DET   DT  det       6 - -       -   I-ARGM-LOC -           the/Md.<
256 6 roads  - road   NOUN  NNS pobj      4 - -       -   I-ARGM-LOC road.n.01   roads/Cc..p
256 7 .      - .      PUNCT .   punct     3 - -       -   -          -           -

# sent_i = 257
# sent = The drugs were found by the police.
# hyperedge = ((were/Mv.< found/Pd.pa:10:10.<pf:012) (the/Md.< drugs/Cc..p) (by/T (the/Md.< police/Cc..s)))
# hyperedge builder = ((257.2/Mv.< 257.3/Pd.pa:10:10.<pf:012) (257.0/Md.< 257.1/Cc..p) (257.4/T (257.5/Md.< 257.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
257 0 The    + the    DET   DT  det       1 - -       -   B-ARG1 -           the/Md.<
257 1 drugs  + drug   NOUN  NNS nsubjpass 3 - -       -   I-ARG1 drug.n.01   drugs/Cc..p
257 2 were   + be     AUX   VBD auxpass   3 - be.03   B-V -      -           were/Mv.<
257 3 found  + find   VERB  VBN ROOT      3 - find.01 -   B-V    find.v.01   found/Pd.pa:10:10.<pf:012
257 4 by     + by     ADP   IN  agent     3 - -       -   B-ARG0 -           by/T
257 5 the    + the    DET   DT  det       6 - -       -   I-ARG0 -           the/Md.<
257 6 police - police NOUN  NN  pobj      4 - -       -   I-ARG0 police.n.01 police/Cc..s
257 7 .      - .      PUNCT .   punct     3 - -       -   -      -           -

# sent_i = 258
# sent = The drugs were not found by custom officers.
# hyperedge = ((were/Mv.< (not/Mn.< found/Pd.pa:10:10.<pf:012)) (the/Md.< drugs/Cc..p) (by/T (+/B.am custom/Cc.<.s officers/Cc..p)))
# hyperedge builder = ((258.2/Mv.< (258.3/Mn.< 258.4/Pd.pa:10:10.<pf:012)) (258.0/Md.< 258.1/Cc..p) (258.5/T (+/B.am 258.6/Cc.<.s 258.7/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
258 0 The      + the     DET   DT  det       1 - -       -   B-ARG1     -                     the/Md.<
258 1 drugs    + drug    NOUN  NNS nsubjpass 4 - -       -   I-ARG1     drug.n.01             drugs/Cc..p
258 2 were     + be      AUX   VBD auxpass   4 - be.03   B-V -          -                     were/Mv.<
258 3 not      + not     PART  RB  neg       4 - -       -   B-ARGM-NEG not.r.01              not/Mn.<
258 4 found    + find    VERB  VBN ROOT      4 - find.01 -   B-V        find.v.01             found/Pd.pa:10:10.<pf:012
258 5 by       + by      ADP   IN  agent     4 - -       -   B-ARG0     -                     by/T
258 6 custom   + custom  NOUN  NN  compound  7 - -       -   I-ARG0     customs.n.01          custom/Cc.<.s
258 7 officers - officer NOUN  NNS pobj      5 - -       -   I-ARG0     military_officer.n.01 officers/Cc..p
258 8 .        - .       PUNCT .   punct     4 - -       -   -          -                     -

# sent_i = 259
# sent = Cocaine has been seized by the FBI.
# hyperedge = ((has/Mv.< (been/Mv.< seized/Pd.pa:10:10.<pf:012)) cocaine/Cc..s (by/T (the/Md.< fbi/Cp..s.o)))
# hyperedge builder = ((259.1/Mv.< (259.2/Mv.< 259.3/Pd.pa:10:10.<pf:012)) 259.0/Cc..s (259.4/T (259.5/Md.< 259.6/Cp..s.o)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
259 0 Cocaine + cocaine NOUN  NN  nsubjpass 3 -     -        -   -   B-ARG1 cocaine.n.01                         cocaine/Cc..s
259 1 has     + have    AUX   VBZ aux       3 -     have.01  B-V -   -      -                                    has/Mv.<
259 2 been    + be      AUX   VBN auxpass   3 -     be.03    -   B-V -      -                                    been/Mv.<
259 3 seized  + seize   VERB  VBN ROOT      3 -     seize.01 -   -   B-V    impound.v.01                         seized/Pd.pa:10:10.<pf:012
259 4 by      + by      ADP   IN  agent     3 -     -        -   -   B-ARG0 -                                    by/T
259 5 the     + the     DET   DT  det       6 -     -        -   -   I-ARG0 -                                    the/Md.<
259 6 FBI     - FBI     PROPN NNP pobj      4 B-ORG -        -   -   I-ARG0 federal_bureau_of_investigation.n.01 fbi/Cp..s.o
259 7 .       - .       PUNCT .   punct     3 -     -        -   -   -      -                                    -

# sent_i = 260
# sent = The drugs had been loaded onto the ship.
# hyperedge = ((had/Mv.< (been/Mv.< loaded/Pd.px:1l:gl.<pf:0123)) (the/Md.< drugs/Cc..p) (onto/Tl (the/Md.< ship/Cc..s)))
# hyperedge builder = ((260.2/Mv.< (260.3/Mv.< 260.4/Pd.px:1l:gl.<pf:0123)) (260.0/Md.< 260.1/Cc..p) (260.5/Tl (260.6/Md.< 260.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
260 0 The    + the  DET   DT  det       1 - -       -   -   B-ARG1     -         the/Md.<
260 1 drugs  + drug NOUN  NNS nsubjpass 4 - -       -   -   I-ARG1     drug.n.01 drugs/Cc..p
260 2 had    + have AUX   VBD aux       4 - have.01 B-V -   -          -         had/Mv.<
260 3 been   + be   AUX   VBN auxpass   4 - be.03   -   B-V -          -         been/Mv.<
260 4 loaded + load VERB  VBN ROOT      4 - load.01 -   -   B-V        load.v.01 loaded/Pd.px:1l:gl.<pf:0123
260 5 onto   + onto ADP   IN  prep      4 - -       -   -   B-ARGM-LOC -         onto/Tl
260 6 the    + the  DET   DT  det       7 - -       -   -   I-ARGM-LOC -         the/Md.<
260 7 ship   - ship NOUN  NN  pobj      5 - -       -   -   I-ARGM-LOC ship.n.01 ship/Cc..s
260 8 .      - .    PUNCT .   punct     4 - -       -   -   -          -         -

# sent_i = 261
# sent = The case is being called the chocolate connection.
# hyperedge = ((is/Mv.< (being/Mv.< called/Pd.po:12:1h.<pf:012)) (the/Md.< case/Cc..s) (the/Md.< (+/B.am chocolate/Cc.<.s connection/Cc..s)))
# hyperedge builder = ((261.2/Mv.< (261.3/Mv.< 261.4/Pd.po:12:1h.<pf:012)) (261.0/Md.< 261.1/Cc..s) (261.5/Md.< (+/B.am 261.6/Cc.<.s 261.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
261 0 The        + the        DET   DT  det       1 - -       -   -   B-ARG1 -               the/Md.<
261 1 case       + case       NOUN  NN  nsubjpass 4 - -       -   -   I-ARG1 case.n.01       case/Cc..s
261 2 is         + be         AUX   VBZ aux       4 - be.03   B-V -   -      -               is/Mv.<
261 3 being      + be         AUX   VBG auxpass   4 - be.03   -   B-V -      -               being/Mv.<
261 4 called     + call       VERB  VBN ROOT      4 - call.01 -   -   B-V    call.v.02       called/Pd.po:12:1h.<pf:012
261 5 the        + the        DET   DT  det       7 - -       -   -   B-ARG2 -               the/Md.<
261 6 chocolate  + chocolate  NOUN  NN  compound  7 - -       -   -   I-ARG2 chocolate.n.02  chocolate/Cc.<.s
261 7 connection - connection NOUN  NN  oprd      4 - -       -   -   I-ARG2 connection.n.01 connection/Cc..s
261 8 .          - .          PUNCT .   punct     4 - -       -   -   -      -               -

# sent_i = 262
# sent = Three men were being questioned by detectives last night.
# hyperedge = ((were/Mv.< (being/Mv.< questioned/Pd.pax:20t:g0t.<pf:012)) (three/M#.<..c men/Cc..p) (by/T detectives/Cc..p) (last/Ma.<..t night/Cc..s.t))
# hyperedge builder = ((262.2/Mv.< (262.3/Mv.< 262.4/Pd.pax:20t:g0t.<pf:012)) (262.0/M#.<..c 262.1/Cc..p) (262.5/T 262.6/Cc..p) (262.7/Ma.<..t 262.8/Cc..s.t))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
262 0 Three      + three     NUM   CD  nummod    1 B-CARDINAL -           -   -   B-ARG2     three.s.01       three/M#.<..c
262 1 men        + man       NOUN  NNS nsubjpass 4 -          -           -   -   I-ARG2     man.n.01         men/Cc..p
262 2 were       + be        AUX   VBD aux       4 -          be.03       B-V -   -          -                were/Mv.<
262 3 being      + be        AUX   VBG auxpass   4 -          be.03       -   B-V -          -                being/Mv.<
262 4 questioned + question  VERB  VBN ROOT      4 -          question.01 -   -   B-V        interrogate.v.02 questioned/Pd.pax:20t:g0t.<pf:012
262 5 by         + by        ADP   IN  agent     4 -          -           -   -   B-ARG0     -                by/T
262 6 detectives + detective NOUN  NNS pobj      5 -          -           -   -   I-ARG0     detective.n.01   detectives/Cc..p
262 7 last       + last      ADJ   JJ  amod      8 B-TIME     -           -   -   B-ARGM-TMP last.s.01        last/Ma.<..t
262 8 night      - night     NOUN  NN  npadvmod  4 I-TIME     -           -   -   I-ARGM-TMP night.n.01       night/Cc..s.t
262 9 .          - .         PUNCT .   punct     4 -          -           -   -   -          -                -

# sent_i = 263
# sent = The drugs will be destroyed.
# hyperedge = ((will/Mm.< (be/Mv.< destroyed/Pd.p:1:1.<pf:012)) (the/Md.< drugs/Cc..p))
# hyperedge builder = ((263.2/Mm.< (263.3/Mv.< 263.4/Pd.p:1:1.<pf:012)) (263.0/Md.< 263.1/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
263 0 The       + the     DET   DT  det       1 - -          -   -   B-ARG1     -            the/Md.<
263 1 drugs     + drug    NOUN  NNS nsubjpass 4 - -          -   -   I-ARG1     drug.n.01    drugs/Cc..p
263 2 will      + will    AUX   MD  aux       4 - -          B-V -   B-ARGM-MOD -            will/Mm.<
263 3 be        + be      AUX   VB  auxpass   4 - be.03      -   B-V -          -            be/Mv.<
263 4 destroyed - destroy VERB  VBN ROOT      4 - destroy.01 -   -   B-V        destroy.v.02 destroyed/Pd.p:1:1.<pf:012
263 5 .         - .       PUNCT .   punct     4 - -          -   -   -          -            -

# sent_i = 264
# sent = The men are going to be charged with importing cocaine.
# hyperedge = ((are/Mv.< going/Pd.sr:--:--.|pg) (the/Md.< men/Cc..p) ((to/Mi.< (be/Mv.< charged/P.-x:12:1h.<pf:012)) (the/Md.< men/Cc..p) (with/T (importing/P.-o:01:01.|pg:012 (the/Md.< men/Cc..p) cocaine/Cc..s))))
# hyperedge builder = ((264.2/Mv.< 264.3/Pd.sr:--:--.|pg) (264.0/Md.< 264.1/Cc..p) ((264.4/Mi.< (264.5/Mv.< 264.6/P.-x:12:1h.<pf:012)) (264.0/Md.< 264.1/Cc..p) (264.7/T (264.8/P.-o:01:01.|pg:012 (264.0/Md.< 264.1/Cc..p) 264.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
264 0  The       + the     DET   DT  det     1 - -         -   -   -   B-ARG1 B-ARG0 -            the/Md.<
264 1  men       + man     NOUN  NNS nsubj   3 - -         -   -   -   I-ARG1 I-ARG0 man.n.01     men/Cc..p
264 2  are       + be      AUX   VBP aux     3 - be.03     B-V -   -   -      -      -            are/Mv.<
264 3  going     + go      VERB  VBG ROOT    3 - go.04     -   B-V -   -      -      go.v.02      going/Pd.sr:--:--.|pg
264 4  to        + to      PART  TO  aux     6 - -         -   -   -   -      -      -            to/Mi.<
264 5  be        + be      AUX   VB  auxpass 6 - be.03     -   -   B-V -      -      -            be/Mv.<
264 6  charged   + charge  VERB  VBN xcomp   3 - charge.05 -   -   -   B-V    -      charge.v.06  charged/P.-x:12:1h.<pf:012
264 7  with      + with    ADP   IN  prep    6 - -         -   -   -   B-ARG2 -      -            with/T
264 8  importing + import  VERB  VBG pcomp   7 - import.01 -   -   -   I-ARG2 B-V    import.v.01  importing/P.-o:01:01.|pg:012
264 9  cocaine   - cocaine NOUN  NN  dobj    8 - -         -   -   -   I-ARG2 B-ARG1 cocaine.n.01 cocaine/Cc..s
264 10 .         - .       PUNCT .   punct   3 - -         -   -   -   -      -      -            -

# sent_i = 265
# sent = Such out-of-date practices should be done away with.
# hyperedge = ((should/Mm.< (be/Mv.< (with/Ml.r.> (away/Ml.r.> done/Pd.p:-:-.<pf:01)))) (such/Ma.< (out-of-date/Ma.<.s practices/Cc..p)))
# hyperedge builder = ((265.3/Mm.< (265.4/Mv.< (265.7/Ml.r.> (265.6/Ml.r.> 265.5/Pd.p:-:-.<pf:01)))) (265.0/Ma.< (265.1/Ma.<.s 265.2/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
265 0 Such        + such        ADJ   JJ  amod      2 - -          -   -   -          such.s.01       such/Ma.<
265 1 out-of-date + out-of-date NOUN  NN  amod      2 - -          -   -   -          outdated.s.01   out-of-date/Ma.<.s
265 2 practices   + practice    NOUN  NNS nsubjpass 5 - -          -   -   -          practice.n.01   practices/Cc..p
265 3 should      + should      AUX   MD  aux       5 - -          B-V -   B-ARGM-MOD -               should/Mm.<
265 4 be          + be          AUX   VB  auxpass   5 - be.03      -   B-V -          -               be/Mv.<
265 5 done        + do          VERB  VBN ROOT      5 - do_away.05 -   -   B-V        extinguish.v.04 done/Pd.p:-:-.<pf:01
265 6 away        + away        ADP   RP  prt       5 - -          -   -   -          extinguish.v.04 away/Ml.r.>
265 7 with        - with        ADP   IN  prt       5 - -          -   -   B-ARG1     extinguish.v.04 with/Ml.r.>
265 8 .           - .           PUNCT .   punct     5 - -          -   -   -          -               -

# sent_i = 266
# sent = The poor child is always being made fun of.
# hyperedge = ((is/Mv.< (being/Mv.< (of/Ml.r.> made/Pd.p?o:1tk:!!!.<pf))) (the/Md.< (poor/Ma.< child/Cc..s)) always/M fun/Cc..s)
# hyperedge builder = ((266.3/Mv.< (266.5/Mv.< (266.8/Ml.r.> 266.6/Pd.p?o:1tk:!!!.<pf))) (266.0/Md.< (266.1/Ma.< 266.2/Cc..s)) 266.4/M 266.7/Cc..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
266 0 The    + the    DET   DT  det       2 - -       -   -   -          B-ARG1     -             the/Md.<
266 1 poor   + poor   ADJ   JJ  amod      2 - -       -   -   -          I-ARG1     hapless.s.01  poor/Ma.<
266 2 child  + child  NOUN  NN  nsubjpass 6 - -       -   -   -          I-ARG1     child.n.01    child/Cc..s
266 3 is     + be     AUX   VBZ aux       6 - be.03   B-V -   -          -          -             is/Mv.<
266 4 always + always ADV   RB  advmod    6 - -       -   -   -          B-ARGM-TMP always.r.01   always/M
266 5 being  + be     AUX   VBG auxpass   6 - be.01   -   B-V -          -          -             being/Mv.<
266 6 made   + make   VERB  VBN ROOT      6 - make.LV -   -   B-V        B-ARGM-LVB ridicule.v.01 made/Pd.p?o:1tk:!!!.<pf
266 7 fun    + fun    NOUN  NN  oprd      6 - fun.01  -   -   B-ARGM-PRR B-V        ridicule.v.01 fun/Cc..s
266 8 of     - of     ADP   IN  prt       6 - -       -   -   -          B-C-ARG1   ridicule.v.01 of/Ml.r.>
266 9 .      - .      PUNCT .   punct     6 - -       -   -   -          -          -             -

# sent_i = 267
# sent = Has the doctor been sent for?
# hyperedge = ((has/Mv.< (been/Mv.< (for/Ml.r.> sent/P?.p:1:1.<pf:012))) (the/Md.< doctor/Cc..s))
# hyperedge builder = ((267.0/Mv.< (267.3/Mv.< (267.5/Ml.r.> 267.4/P?.p:1:1.<pf:012))) (267.1/Md.< 267.2/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
267 0 Has    + have   AUX   VBZ aux       4 - have.01 B-V -   -      -           has/Mv.<
267 1 the    + the    DET   DT  det       2 - -       -   -   B-ARG1 -           the/Md.<
267 2 doctor + doctor NOUN  NN  nsubjpass 4 - -       -   -   I-ARG1 doctor.n.01 doctor/Cc..s
267 3 been   + be     AUX   VBN auxpass   4 - be.03   -   B-V -      -           been/Mv.<
267 4 sent   + send   VERB  VBN ROOT      4 - send.02 -   -   B-V    call.v.05   sent/P?.p:1:1.<pf:012
267 5 for    - for    ADP   IN  prt       4 - -       -   -   -      call.v.05   for/Ml.r.>
267 6 ?      - ?      PUNCT .   punct     4 - -       -   -   -      -           -

# sent_i = 268
# sent = How often do these offices get cleaned?
# hyperedge = ((do/Mv.< (get/Mv.< cleaned/P?.?p:t1:t1.<pf:012)) (how/Mw.< often/M) (these/Md.< offices/Cc..p))
# hyperedge builder = ((268.2/Mv.< (268.5/Mv.< 268.6/P?.?p:t1:t1.<pf:012)) (268.0/Mw.< 268.1/M) (268.3/Md.< 268.4/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
268 0 How     + how    ADV   WRB advmod    1 - -        -   -   B-ARGM-TMP -               how/Mw.<
268 1 often   + often  ADV   RB  advmod    6 - -        -   -   I-ARGM-TMP frequently.r.01 often/M
268 2 do      + do     AUX   VBP aux       6 - do.01    B-V -   -          -               do/Mv.<
268 3 these   + these  DET   DT  det       4 - -        -   -   B-ARG1     -               these/Md.<
268 4 offices + office NOUN  NNS nsubjpass 6 - -        -   -   I-ARG1     office.n.01     offices/Cc..p
268 5 get     + get    AUX   VB  auxpass   6 - get.24   -   B-V -          -               get/Mv.<
268 6 cleaned - clean  VERB  VBN ROOT      6 - clean.01 -   -   B-V        clean.v.01      cleaned/P?.?p:t1:t1.<pf:012
268 7 ?       - ?      PUNCT .   punct     6 - -        -   -   -          -               -

# sent_i = 269
# sent = There wasn't enough time to get washed.
# hyperedge = ((n't/Mn.> was/Pd.ec:-1:-1.<f:1) there/Me (+/Jr.ma (enough/Ma.< time/Cc..s) ((to/Mi.< (get/Mv.< washed/P.-:t:t.<pf:01234)) (enough/Ma.< time/Cc..s))))
# hyperedge builder = ((269.2/Mn.> 269.1/Pd.ec:-1:-1.<f:1) 269.0/Me (+/Jr.ma (269.3/Ma.< 269.4/Cc..s) ((269.5/Mi.< (269.6/Mv.< 269.7/P.-:t:t.<pf:01234)) (269.3/Ma.< 269.4/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
269 0 There  + there  PRON  EX  expl    1 - -       -          -   -          -             there/Me
269 1 was    - be     AUX   VBD ROOT    1 - be.02   B-V        -   -          be.v.01       was/Pd.ec:-1:-1.<f:1
269 2 n't    + not    PART  RB  neg     1 - -       B-ARGM-NEG -   -          not.r.01      n't/Mn.>
269 3 enough + enough ADJ   JJ  amod    4 - -       B-ARG1     -   B-ARGM-TMP adequate.s.02 enough/Ma.<
269 4 time   + time   NOUN  NN  attr    1 - -       I-ARG1     -   I-ARGM-TMP time.n.02     time/Cc..s
269 5 to     + to     PART  TO  aux     7 - -       I-ARG1     -   -          -             to/Mi.<
269 6 get    + get    AUX   VB  auxpass 7 - get.24  I-ARG1     B-V -          -             get/Mv.<
269 7 washed - wash   VERB  VBN relcl   4 - wash.01 I-ARG1     -   B-V        wash.v.02     washed/P.-:t:t.<pf:01234
269 8 .      - .      PUNCT .   punct   1 - -       -          -   -          -             -

# sent_i = 270
# sent = I'd just got interested in film when the phone rang.
# hyperedge = (('d/Mm.< got/Pd.s?cx:1r2t:1rgt.<pf:12) i/Ci just/M (in/Br interested/Ca film/Cc..s) (rang/P.?s:t1:t1.<f:012 when/Mw (the/Md.< phone/Cc..s)))
# hyperedge builder = ((270.1/Mm.< 270.3/Pd.s?cx:1r2t:1rgt.<pf:12) 270.0/Ci 270.2/M (270.5/Br 270.4/Ca 270.6/Cc..s) (270.10/P.?s:t1:t1.<f:012 270.7/Mw (270.8/Md.< 270.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
270 0  I          - I          PRON  PRP nsubj  3  - -       -   B-ARG1     -          -               i/Ci
270 1  'd         + 'd         AUX   MD  aux    3  - have.01 B-V B-ARGM-MOD -          -               'd/Mm.<
270 2  just       + just       ADV   RB  advmod 3  - -       -   B-ARGM-ADV -          just.r.03       just/M
270 3  got        + get        VERB  VBN ROOT   3  - get.03  -   B-V        -          become.v.01     got/Pd.s?cx:1r2t:1rgt.<pf:12
270 4  interested + interested ADJ   JJ  acomp  3  - -       -   B-ARG2     -          interested.a.01 interested/Ca
270 5  in         + in         ADP   IN  prep   4  - -       -   I-ARG2     -          -               in/Br
270 6  film       + film       NOUN  NN  pobj   5  - -       -   I-ARG2     -          movie.n.01      film/Cc..s
270 7  when       + when       ADV   WRB advmod 10 - -       -   B-ARGM-TMP B-ARGM-TMP -               when/Mw
270 8  the        + the        DET   DT  det    9  - -       -   I-ARGM-TMP B-ARG1     -               the/Md.<
270 9  phone      + phone      NOUN  NN  nsubj  10 - -       -   I-ARGM-TMP I-ARG1     telephone.n.01  phone/Cc..s
270 10 rang       - ring       VERB  VBD advcl  3  - ring.01 -   I-ARGM-TMP B-V        ring.v.01       rang/P.?s:t1:t1.<f:012
270 11 .          - .          PUNCT .   punct  3  - -       -   -          -          -               -

# sent_i = 271
# sent = Elephants are said to have good memories.
# hyperedge = ((are/Mv.< said/Pd.pr:13:1r.<pf:0123) elephants/Cc..p ((to/Mi.< have/P.-o:01:01.-i:01) elephants/Cc..p (good/Ma.< memories/Cc..p)))
# hyperedge builder = ((271.1/Mv.< 271.2/Pd.pr:13:1r.<pf:0123) 271.0/Cc..p ((271.3/Mi.< 271.4/P.-o:01:01.-i:01) 271.0/Cc..p (271.5/Ma.< 271.6/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
271 0 Elephants + elephant NOUN  NNS nsubjpass 2 - -       -   B-ARG1 B-ARG0 elephant.n.01 elephants/Cc..p
271 1 are       + be       AUX   VBP auxpass   2 - be.03   B-V -      -      -             are/Mv.<
271 2 said      + say      VERB  VBN ROOT      2 - say.01  -   B-V    -      allege.v.01   said/Pd.pr:13:1r.<pf:0123
271 3 to        + to       PART  TO  aux       4 - -       -   B-ARG3 -      -             to/Mi.<
271 4 have      + have     VERB  VB  xcomp     2 - have.03 -   I-ARG3 B-V    have.v.01     have/P.-o:01:01.-i:01
271 5 good      + good     ADJ   JJ  amod      6 - -       -   I-ARG3 B-ARG1 good.a.01     good/Ma.<
271 6 memories  - memory   NOUN  NNS dobj      4 - -       -   I-ARG3 I-ARG1 memory.n.03   memories/Cc..p
271 7 .         - .        PUNCT .   punct     2 - -       -   -      -      -             -

# sent_i = 272
# sent = It is said that elephants have good memories.
# hyperedge = ((is/Mv.< said/Pd.pr:11:11.<pf:0123) it/Ci (that/T (have/P.so:01:01.|f:01 elephants/Cc..p (good/Ma.< memories/Cc..p))))
# hyperedge builder = ((272.1/Mv.< 272.2/Pd.pr:11:11.<pf:0123) 272.0/Ci (272.3/T (272.5/P.so:01:01.|f:01 272.4/Cc..p (272.6/Ma.< 272.7/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
272 0 It        + it       PRON  PRP nsubjpass 2 - -       -   B-R-ARG1 -      -             it/Ci
272 1 is        + be       AUX   VBZ auxpass   2 - be.03   B-V -        -      -             is/Mv.<
272 2 said      + say      VERB  VBN ROOT      2 - say.01  -   B-V      -      allege.v.01   said/Pd.pr:11:11.<pf:0123
272 3 that      + that     SCONJ IN  mark      5 - -       -   B-ARG1   -      -             that/T
272 4 elephants + elephant NOUN  NNS nsubj     5 - -       -   I-ARG1   B-ARG0 elephant.n.01 elephants/Cc..p
272 5 have      + have     VERB  VBP ccomp     2 - have.03 -   I-ARG1   B-V    have.v.01     have/P.so:01:01.|f:01
272 6 good      + good     ADJ   JJ  amod      7 - -       -   I-ARG1   B-ARG1 good.a.01     good/Ma.<
272 7 memories  - memory   NOUN  NNS dobj      5 - -       -   I-ARG1   I-ARG1 memory.n.03   memories/Cc..p
272 8 .         - .        PUNCT .   punct     2 - -       -   -        -      -             -

# sent_i = 273
# sent = It was reported that the army was crossing the frontier.
# hyperedge = ((was/Mv.< reported/Pd.pr:11:11.<pf:012) it/Ci (that/T ((was/Mv.< crossing/P.so:01:11.|pg:01) (the/Md.< army/Cc..s) (the/Md.< frontier/Cc..s))))
# hyperedge builder = ((273.1/Mv.< 273.2/Pd.pr:11:11.<pf:012) 273.0/Ci (273.3/T ((273.6/Mv.< 273.7/P.so:01:11.|pg:01) (273.4/Md.< 273.5/Cc..s) (273.8/Md.< 273.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
273 0  It       + it       PRON  PRP nsubjpass 2 - -         -   B-R-ARG1 -   -      -             it/Ci
273 1  was      + be       AUX   VBD auxpass   2 - be.03     B-V -        -   -      -             was/Mv.<
273 2  reported + report   VERB  VBN ROOT      2 - report.01 -   B-V      -   -      report.v.01   reported/Pd.pr:11:11.<pf:012
273 3  that     + that     SCONJ IN  mark      7 - -         -   B-ARG1   -   -      -             that/T
273 4  the      + the      DET   DT  det       5 - -         -   I-ARG1   -   B-ARG0 -             the/Md.<
273 5  army     + army     NOUN  NN  nsubj     7 - -         -   I-ARG1   -   I-ARG0 army.n.01     army/Cc..s
273 6  was      + be       AUX   VBD aux       7 - be.03     -   I-ARG1   B-V -      -             was/Mv.<
273 7  crossing + cross    VERB  VBG ccomp     2 - cross.02  -   I-ARG1   -   B-V    traverse.v.01 crossing/P.so:01:11.|pg:01
273 8  the      + the      DET   DT  det       9 - -         -   I-ARG1   -   B-ARG1 -             the/Md.<
273 9  frontier - frontier NOUN  NN  dobj      7 - -         -   I-ARG1   -   I-ARG1 frontier.n.02 frontier/Cc..s
273 10 .        - .        PUNCT .   punct     2 - -         -   -        -   -      -             -

# sent_i = 274
# sent = Stonehenge is thought to date from about 1900 BC.
# hyperedge = ((is/Mv.< thought/Pd.pr:11:11.<pf:012) stonehenge/Cp..s.l ((to/Mi.< date/P.-x:12:g1.-i:012) stonehenge/Cp..s.l (from/T ((about/M.<..d 1900/M#.<..d) bc/Cc..s.d))))
# hyperedge builder = ((274.1/Mv.< 274.2/Pd.pr:11:11.<pf:012) 274.0/Cp..s.l ((274.3/Mi.< 274.4/P.-x:12:g1.-i:012) 274.0/Cp..s.l (274.5/T ((274.6/M.<..d 274.7/M#.<..d) 274.8/Cc..s.d))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
274 0 Stonehenge + Stonehenge PROPN NNP nsubjpass 2 B-LOC  -        -   B-ARG1   B-ARG1 stonehenge.n.01    stonehenge/Cp..s.l
274 1 is         + be         AUX   VBZ auxpass   2 -      be.03    B-V -        -      -                  is/Mv.<
274 2 thought    + think      VERB  VBN ROOT      2 -      think.01 -   B-V      -      think.v.01         thought/Pd.pr:11:11.<pf:012
274 3 to         + to         PART  TO  aux       4 -      -        -   B-C-ARG1 -      -                  to/Mi.<
274 4 date       + date       VERB  VB  xcomp     2 -      date.01  -   I-C-ARG1 B-V    date.v.03          date/P.-x:12:g1.-i:012
274 5 from       + from       ADP   IN  prep      4 -      -        -   I-C-ARG1 B-ARG2 -                  from/T
274 6 about      + about      ADP   IN  quantmod  7 B-DATE -        -   I-C-ARG1 I-ARG2 approximately.r.01 about/M.<..d
274 7 1900       + 1900       NUM   CD  nummod    8 I-DATE -        -   I-C-ARG1 I-ARG2 -                  1900/M#.<..d
274 8 BC         - BC         NOUN  NN  pobj      5 I-DATE -        -   I-C-ARG1 I-ARG2 bc.r.01            bc/Cc..s.d
274 9 .          - .          PUNCT .   punct     2 -      -        -   -        -      -                  -

# sent_i = 275
# sent = The prisoner is known to have behaved violently in the past.
# hyperedge = ((is/Mv.< known/Pd.pr:12:1h.<pf:0123) (the/Md.< prisoner/Cc..s) ((to/Mi.< (have/Mv.< behaved/P.-?x:01t:0ht.<pf:01)) (the/Md.< prisoner/Cc..s) violently/M (in/Tt (the/Md.< past/Cc..s))))
# hyperedge builder = ((275.2/Mv.< 275.3/Pd.pr:12:1h.<pf:0123) (275.0/Md.< 275.1/Cc..s) ((275.4/Mi.< (275.5/Mv.< 275.6/P.-?x:01t:0ht.<pf:01)) (275.0/Md.< 275.1/Cc..s) 275.7/M (275.8/Tt (275.9/Md.< 275.10/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
275 0  The       + the       DET   DT  det       1  - -         -   B-ARG1 -   B-ARG0     -              the/Md.<
275 1  prisoner  + prisoner  NOUN  NN  nsubjpass 3  - -         -   I-ARG1 -   I-ARG0     prisoner.n.01  prisoner/Cc..s
275 2  is        + be        AUX   VBZ auxpass   3  - be.03     B-V -      -   -          -              is/Mv.<
275 3  known     + know      VERB  VBN ROOT      3  - know.02   -   B-V    -   -          know.v.04      known/Pd.pr:12:1h.<pf:0123
275 4  to        + to        PART  TO  aux       6  - -         -   B-ARG2 -   -          -              to/Mi.<
275 5  have      + have      AUX   VB  aux       6  - have.01   -   I-ARG2 B-V -          -              have/Mv.<
275 6  behaved   + behave    VERB  VBN xcomp     3  - behave.01 -   I-ARG2 -   B-V        act.v.02       behaved/P.-?x:01t:0ht.<pf:01
275 7  violently + violently ADV   RB  advmod    6  - -         -   I-ARG2 -   B-ARG1     violently.r.01 violently/M
275 8  in        + in        ADP   IN  prep      6  - -         -   I-ARG2 -   B-ARGM-TMP -              in/Tt
275 9  the       + the       DET   DT  det       10 - -         -   I-ARG2 -   I-ARGM-TMP -              the/Md.<
275 10 past      - past      NOUN  NN  pobj      8  - -         -   I-ARG2 -   I-ARGM-TMP past.n.02      past/Cc..s
275 11 .         - .         PUNCT .   punct     3  - -         -   -      -   -          -              -

# sent_i = 276
# sent = The army was reported to be crossing the frontier.
# hyperedge = ((was/Mv.< reported/Pd.pr:11:11.<pf:012) (the/Md.< army/Cc..s) ((to/Mi.< (be/Mv.< crossing/P.-o:01:11.|pg:01)) (the/Md.< army/Cc..s) (the/Md.< frontier/Cc..s)))
# hyperedge builder = ((276.2/Mv.< 276.3/Pd.pr:11:11.<pf:012) (276.0/Md.< 276.1/Cc..s) ((276.4/Mi.< (276.5/Mv.< 276.6/P.-o:01:11.|pg:01)) (276.0/Md.< 276.1/Cc..s) (276.7/Md.< 276.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
276 0 The      + the      DET   DT  det       1 - -         -   B-ARG1   -   B-ARG0 -             the/Md.<
276 1 army     + army     NOUN  NN  nsubjpass 3 - -         -   I-ARG1   -   I-ARG0 army.n.01     army/Cc..s
276 2 was      + be       AUX   VBD auxpass   3 - be.03     B-V -        -   -      -             was/Mv.<
276 3 reported + report   VERB  VBN ROOT      3 - report.01 -   B-V      -   -      report.v.01   reported/Pd.pr:11:11.<pf:012
276 4 to       + to       PART  TO  aux       6 - -         -   B-C-ARG1 -   -      -             to/Mi.<
276 5 be       + be       AUX   VB  aux       6 - be.03     -   I-C-ARG1 B-V -      -             be/Mv.<
276 6 crossing + cross    VERB  VBG xcomp     3 - cross.02  -   I-C-ARG1 -   B-V    traverse.v.01 crossing/P.-o:01:11.|pg:01
276 7 the      + the      DET   DT  det       8 - -         -   I-C-ARG1 -   B-ARG1 -             the/Md.<
276 8 frontier - frontier NOUN  NN  dobj      6 - -         -   I-C-ARG1 -   I-ARG1 frontier.n.02 frontier/Cc..s
276 9 .        - .        PUNCT .   punct     3 - -         -   -        -   -      -             -

# sent_i = 277
# sent = It was agreed to support the idea.
# hyperedge = ((was/Mv.< agreed/Pd.pr:11:11.<pf:012) it/Ci ((to/Mi.< support/P.o:1:1.-i:01) (the/Md.< idea/Cc..s)))
# hyperedge builder = ((277.1/Mv.< 277.2/Pd.pr:11:11.<pf:012) 277.0/Ci ((277.3/Mi.< 277.4/P.o:1:1.-i:01) (277.5/Md.< 277.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
277 0 It      + it      PRON  PRP nsubjpass 2 - -          -   B-R-ARG1 -      -          it/Ci
277 1 was     + be      AUX   VBD auxpass   2 - be.03      B-V -        -      -          was/Mv.<
277 2 agreed  + agree   VERB  VBN ROOT      2 - agree.01   -   B-V      -      agree.v.02 agreed/Pd.pr:11:11.<pf:012
277 3 to      + to      PART  TO  aux       4 - -          -   B-ARG1   -      -          to/Mi.<
277 4 support + support VERB  VB  xcomp     2 - support.01 -   I-ARG1   B-V    back.v.01  support/P.o:1:1.-i:01
277 5 the     + the     DET   DT  det       6 - -          -   I-ARG1   B-ARG1 -          the/Md.<
277 6 idea    - idea    NOUN  NN  dobj      4 - -          -   I-ARG1   I-ARG1 idea.n.01  idea/Cc..s
277 7 .       - .       PUNCT .   punct     2 - -          -   -        -      -          -

# sent_i = 278
# sent = It was agreed by the committee to support the idea.
# hyperedge = ((was/Mv.< agreed/Pd.par:101:101.<pf:012) it/Ci (by/T (the/Md.< committee/Cc..s)) ((to/Mi.< support/P.o:1:1.-i:01) (the/Md.< idea/Cc..s)))
# hyperedge builder = ((278.1/Mv.< 278.2/Pd.par:101:101.<pf:012) 278.0/Ci (278.3/T (278.4/Md.< 278.5/Cc..s)) ((278.6/Mi.< 278.7/P.o:1:1.-i:01) (278.8/Md.< 278.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
278 0  It        + it        PRON  PRP nsubjpass 2 - -          -   B-R-ARG1 -      -              it/Ci
278 1  was       + be        AUX   VBD auxpass   2 - be.03      B-V -        -      -              was/Mv.<
278 2  agreed    + agree     VERB  VBN ROOT      2 - agree.01   -   B-V      -      agree.v.02     agreed/Pd.par:101:101.<pf:012
278 3  by        + by        ADP   IN  agent     2 - -          -   B-ARG0   -      -              by/T
278 4  the       + the       DET   DT  det       5 - -          -   I-ARG0   -      -              the/Md.<
278 5  committee + committee NOUN  NN  pobj      3 - -          -   I-ARG0   -      committee.n.01 committee/Cc..s
278 6  to        + to        PART  TO  aux       7 - -          -   B-ARG1   -      -              to/Mi.<
278 7  support   + support   VERB  VB  xcomp     2 - support.01 -   I-ARG1   B-V    back.v.01      support/P.o:1:1.-i:01
278 8  the       + the       DET   DT  det       9 - -          -   I-ARG1   B-ARG1 -              the/Md.<
278 9  idea      - idea      NOUN  NN  dobj      7 - -          -   I-ARG1   I-ARG1 idea.n.01      idea/Cc..s
278 10 .         - .         PUNCT .   punct     2 - -          -   -        -      -              -

# sent_i = 279
# sent = He was seen to run away.
# hyperedge = ((was/Mv.< seen/Pd.pr:12:1h.<pf:012) he/Ci ((to/Mi.< (away/Ml.r.> run/P.-:0:!.-i)) he/Ci))
# hyperedge builder = ((279.1/Mv.< 279.2/Pd.pr:12:1h.<pf:012) 279.0/Ci ((279.3/Mi.< (279.5/Ml.r.> 279.4/P.-:0:!.-i)) 279.0/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
279 0 He   + he   PRON  PRP nsubjpass 2 - -      -   B-ARG1 B-ARG0 -         he/Ci
279 1 was  + be   AUX   VBD auxpass   2 - be.03  B-V -      -      -         was/Mv.<
279 2 seen + see  VERB  VBN ROOT      2 - see.01 -   B-V    -      see.v.01  seen/Pd.pr:12:1h.<pf:012
279 3 to   + to   PART  TO  aux       4 - -      -   B-ARG2 -      -         to/Mi.<
279 4 run  + run  VERB  VB  xcomp     2 - run.24 -   I-ARG2 B-V    run.v.01  run/P.-:0:!.-i
279 5 away - away ADP   RP  prt       4 - -      -   I-ARG2 -      away.r.01 away/Ml.r.>
279 6 .    - .    PUNCT .   punct     2 - -      -   -      -      -         -

# sent_i = 280
# sent = He was seen running away.
# hyperedge = ((was/Mv.< seen/Pd.pr:12:1h.<pf:012) he/Ci ((away/Ml.r.> running/P.-:0:!.|pg) he/Ci))
# hyperedge builder = ((280.1/Mv.< 280.2/Pd.pr:12:1h.<pf:012) 280.0/Ci ((280.4/Ml.r.> 280.3/P.-:0:!.|pg) 280.0/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
280 0 He      + he   PRON  PRP nsubjpass 2 - -      -   B-ARG1 B-ARG0 -         he/Ci
280 1 was     + be   AUX   VBD auxpass   2 - be.03  B-V -      -      -         was/Mv.<
280 2 seen    + see  VERB  VBN ROOT      2 - see.01 -   B-V    -      see.v.01  seen/Pd.pr:12:1h.<pf:012
280 3 running + run  VERB  VBG xcomp     2 - run.24 -   B-ARG2 B-V    scat.v.01 running/P.-:0:!.|pg
280 4 away    - away ADV   RP  prt       3 - -      -   I-ARG2 -      scat.v.01 away/Ml.r.>
280 5 .       - .    PUNCT .   punct     2 - -      -   -      -      -         -

# sent_i = 281
# sent = I had my car serviced.
# hyperedge = (had/Pd.sr:01:01.<f:01 i/Ci (serviced/P.s:1:1.<pf:012 ((+/Jc.rm.rr my/Mp i/Ci) car/Cc..s)))
# hyperedge builder = (281.1/Pd.sr:01:01.<f:01 281.0/Ci (281.4/P.s:1:1.<pf:012 ((+/Jc.rm.rr 281.2/Mp 281.0/Ci) 281.3/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
281 0 I        + I       PRON  PRP  nsubj 1 - -          B-ARG0 -      B-MAIN0 -            i/Ci
281 1 had      + have    AUX   VBD  ROOT  1 - have.04    B-V    -      -       get.v.03     had/Pd.sr:01:01.<f:01
281 2 my       + my      PRON  PRP$ poss  3 - -          B-ARG1 B-ARG1 B-REF0  -            my/Mp
281 3 car      + car     NOUN  NN   nsubj 4 - -          I-ARG1 I-ARG1 -       car.n.01     car/Cc..s
281 4 serviced - service VERB  VBN  ccomp 1 - service.05 I-ARG1 B-V    -       service.v.02 serviced/P.s:1:1.<pf:012
281 5 .        - .       PUNCT .    punct 1 - -          -      -      -       -            -

# sent_i = 282
# sent = I got my car serviced.
# hyperedge = (got/Pd.sr:01:01.<f:01 i/Ci (serviced/P.s:1:1.<pf:012 ((+/Jc.rm.rr my/Mp i/Ci) car/Cc..s)))
# hyperedge builder = (282.1/Pd.sr:01:01.<f:01 282.0/Ci (282.4/P.s:1:1.<pf:012 ((+/Jc.rm.rr 282.2/Mp 282.0/Ci) 282.3/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
282 0 I        + I       PRON  PRP  nsubj 1 - -          B-ARG0 -      B-MAIN0 -            i/Ci
282 1 got      + get     VERB  VBD  ROOT  1 - get.04     B-V    -      -       get.v.03     got/Pd.sr:01:01.<f:01
282 2 my       + my      PRON  PRP$ poss  3 - -          B-ARG1 B-ARG1 B-REF0  -            my/Mp
282 3 car      + car     NOUN  NN   nsubj 4 - -          I-ARG1 I-ARG1 -       car.n.01     car/Cc..s
282 4 serviced - service VERB  VBN  ccomp 1 - service.05 I-ARG1 B-V    -       service.v.02 serviced/P.s:1:1.<pf:012
282 5 .        - .       PUNCT .    punct 1 - -          -      -      -       -            -

# sent_i = 283
# sent = We're having a new kitchen fitted.
# hyperedge = (('re/Mv.< having/Pd.sr:01:01.|pg:01) we/Ci (fitted/P.s:1:1.<pf:12 (a/Md.< (new/Ma.< kitchen/Cc..s))))
# hyperedge builder = ((283.1/Mv.< 283.2/Pd.sr:01:01.|pg:01) 283.0/Ci (283.6/P.s:1:1.<pf:12 (283.3/Md.< (283.4/Ma.< 283.5/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
283 0 We      - we      PRON  PRP nsubj 2 - -       -   B-ARG0 -      -            we/Ci
283 1 're     + be      AUX   VBP aux   2 - be.03   B-V -      -      -            're/Mv.<
283 2 having  + have    VERB  VBG ROOT  2 - have.04 -   B-V    -      get.v.03     having/Pd.sr:01:01.|pg:01
283 3 a       + a       DET   DT  det   5 - -       -   B-ARG1 B-ARG1 -            a/Md.<
283 4 new     + new     ADJ   JJ  amod  5 - -       -   I-ARG1 I-ARG1 new.a.01     new/Ma.<
283 5 kitchen + kitchen NOUN  NN  nsubj 6 - -       -   I-ARG1 I-ARG1 kitchen.n.01 kitchen/Cc..s
283 6 fitted  - fit     VERB  VBN ccomp 2 - fit.03  -   I-ARG1 B-V    fit.v.04     fitted/P.s:1:1.<pf:12
283 7 .       - .       PUNCT .   punct 2 - -       -   -      -      -            -

# sent_i = 284
# sent = We're getting a new kitchen fitted.
# hyperedge = (('re/Mv.< getting/Pd.sr:01:01.|pg:01) we/Ci (fitted/P.s:1:1.<pf:12 (a/Md.< (new/Ma.< kitchen/Cc..s))))
# hyperedge builder = ((284.1/Mv.< 284.2/Pd.sr:01:01.|pg:01) 284.0/Ci (284.6/P.s:1:1.<pf:12 (284.3/Md.< (284.4/Ma.< 284.5/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
284 0 We      - we      PRON  PRP nsubj 2 - -      -   B-ARG0 -      -            we/Ci
284 1 're     + be      AUX   VBP aux   2 - be.03  B-V -      -      -            're/Mv.<
284 2 getting + get     VERB  VBG ROOT  2 - get.04 -   B-V    -      get.v.03     getting/Pd.sr:01:01.|pg:01
284 3 a       + a       DET   DT  det   5 - -      -   B-ARG1 B-ARG1 -            a/Md.<
284 4 new     + new     ADJ   JJ  amod  5 - -      -   I-ARG1 I-ARG1 new.a.01     new/Ma.<
284 5 kitchen + kitchen NOUN  NN  nsubj 6 - -      -   I-ARG1 I-ARG1 kitchen.n.01 kitchen/Cc..s
284 6 fitted  - fit     VERB  VBN ccomp 2 - fit.03 -   I-ARG1 B-V    fit.v.04     fitted/P.s:1:1.<pf:12
284 7 .       - .       PUNCT .   punct 2 - -      -   -      -      -            -

# sent_i = 285
# sent = I expect to be invited to the wedding.
# hyperedge = (expect/Pd.sr:01:01.|f:01 i/Ci ((to/Mi.< (be/Mv.< invited/P.-x:12:11.<pf:012)) i/Ci (to/T (the/Md.< wedding/Cc..s))))
# hyperedge builder = (285.1/Pd.sr:01:01.|f:01 285.0/Ci ((285.2/Mi.< (285.3/Mv.< 285.4/P.-x:12:11.<pf:012)) 285.0/Ci (285.5/T (285.6/Md.< 285.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
285 0 I       + I       PRON  PRP nsubj   1 - -         B-ARG0 -   B-ARG1 -            i/Ci
285 1 expect  + expect  VERB  VBP ROOT    1 - expect.01 B-V    -   -      expect.v.01  expect/Pd.sr:01:01.|f:01
285 2 to      + to      PART  TO  aux     4 - -         B-ARG1 -   -      -            to/Mi.<
285 3 be      + be      AUX   VB  auxpass 4 - be.03     I-ARG1 B-V -      -            be/Mv.<
285 4 invited + invite  VERB  VBN xcomp   1 - invite.01 I-ARG1 -   B-V    invite.v.05  invited/P.-x:12:11.<pf:012
285 5 to      + to      ADP   IN  prep    4 - -         I-ARG1 -   B-ARG2 -            to/T
285 6 the     + the     DET   DT  det     7 - -         I-ARG1 -   I-ARG2 -            the/Md.<
285 7 wedding - wedding NOUN  NN  pobj    5 - -         I-ARG1 -   I-ARG2 wedding.n.01 wedding/Cc..s
285 8 .       - .       PUNCT .   punct   1 - -         -      -   -      -            -

# sent_i = 286
# sent = I'd like this rubbish to have been cleared away when I get back.
# hyperedge = (('d/Mm.< like/Pd.sr:01:01.-i:01) i/Ci ((to/Mi.< (have/Mv.< (been/Mv.< (away/Ml.r.> cleared/P.px:1t:gt.<pf:012)))) (this/Md.< rubbish/Cc..s) ((back/Ml.r.> get/P.?s:t1:t0.|f:12) when/Mw i/Ci)))
# hyperedge builder = ((286.1/Mm.< 286.2/Pd.sr:01:01.-i:01) 286.0/Ci ((286.5/Mi.< (286.6/Mv.< (286.7/Mv.< (286.9/Ml.r.> 286.8/P.px:1t:gt.<pf:012)))) (286.3/Md.< 286.4/Cc..s) ((286.13/Ml.r.> 286.12/P.?s:t1:t0.|f:12) 286.10/Mw 286.11/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 synset atoms
286 0  I       - I       PRON  PRP nsubj     2  - -           -   B-ARG0     -   -   -          -          B-MAIN0 -            i/Ci
286 1  'd      + 'd      AUX   MD  aux       2  - -           B-V B-ARGM-MOD -   -   -          -          -       -            'd/Mm.<
286 2  like    + like    VERB  VB  ROOT      2  - like.02     -   B-V        -   -   -          -          -       wish.v.02    like/Pd.sr:01:01.-i:01
286 3  this    + this    DET   DT  det       4  - -           -   B-ARG1     -   -   B-ARG1     -          -       -            this/Md.<
286 4  rubbish + rubbish NOUN  NN  nsubjpass 8  - -           -   I-ARG1     -   -   I-ARG1     -          -       rubbish.n.01 rubbish/Cc..s
286 5  to      + to      PART  TO  aux       8  - -           -   I-ARG1     -   -   -          -          -       -            to/Mi.<
286 6  have    + have    AUX   VB  aux       8  - have.01     -   I-ARG1     B-V -   -          -          -       -            have/Mv.<
286 7  been    + be      AUX   VBN auxpass   8  - be.03       -   I-ARG1     -   B-V -          -          -       -            been/Mv.<
286 8  cleared + clear   VERB  VBN ccomp     2  - clear.01    -   I-ARG1     -   -   B-V        -          -       clear.v.05   cleared/P.px:1t:gt.<pf:012
286 9  away    + away    ADP   RP  prt       8  - -           -   I-ARG1     -   -   B-ARGM-DIR -          -       away.r.01    away/Ml.r.>
286 10 when    + when    ADV   WRB advmod    12 - -           -   I-ARG1     -   -   B-ARGM-TMP B-ARGM-TMP -       -            when/Mw
286 11 I       + I       PRON  PRP nsubj     12 - -           -   I-ARG1     -   -   I-ARGM-TMP B-ARG1     B-REF0  -            i/Ci
286 12 get     + get     VERB  VBP advcl     8  - get_back.10 -   I-ARG1     -   -   I-ARGM-TMP B-V        -       arrive.v.01  get/P.?s:t1:t0.|f:12
286 13 back    - back    ADP   RP  prt       12 - -           -   I-ARG1     -   -   I-ARGM-TMP -          -       back.r.01    back/Ml.r.>
286 14 .       - .       PUNCT .   punct     2  - -           -   -          -   -   -          -          -       -            -

# sent_i = 287
# sent = Being searched by custom officers is unpleasant.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 ((being/Mv.< searched/P.a:0:0.<pf:012) (by/T (+/B.am custom/Cc.<.s officers/Cc..p))) unpleasant/Ca)
# hyperedge builder = (287.5/Pd.sc:12:1h.|f--3s:12 ((287.0/Mv.< 287.1/P.a:0:0.<pf:012) (287.2/T (+/B.am 287.3/Cc.<.s 287.4/Cc..p))) 287.6/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
287 0 Being      + be         AUX   VBG auxpass  1 - be.03     B-V -      B-ARG1 -                     being/Mv.<
287 1 searched   + search     VERB  VBN csubj    5 - search.01 -   B-V    I-ARG1 search.v.04           searched/P.a:0:0.<pf:012
287 2 by         + by         ADP   IN  agent    1 - -         -   B-ARG0 I-ARG1 -                     by/T
287 3 custom     + custom     NOUN  NN  compound 4 - -         -   I-ARG0 I-ARG1 customs.n.01          custom/Cc.<.s
287 4 officers   + officer    NOUN  NNS pobj     2 - -         -   I-ARG0 I-ARG1 military_officer.n.01 officers/Cc..p
287 5 is         + be         AUX   VBZ ROOT     5 - be.01     -   -      B-V    be.v.01               is/Pd.sc:12:1h.|f--3s:12
287 6 unpleasant - unpleasant ADJ   JJ  acomp    5 - -         -   -      B-ARG2 unpleasant.a.01       unpleasant/Ca
287 7 .          - .          PUNCT .   punct    5 - -         -   -      -      -                     -

# sent_i = 288
# sent = I was afraid of being laughed at.
# hyperedge = (was/Pd.sc:12:1h.<f:12 i/Ci (of/Br afraid/Ca (being/Mv.< (at/Ml.r.> laughed/P.::.<f:0123))))
# hyperedge builder = (288.1/Pd.sc:12:1h.<f:12 288.0/Ci (288.3/Br 288.2/Ca (288.4/Mv.< (288.6/Ml.r.> 288.5/P.::.<f:0123))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
288 0 I       + I      PRON  PRP nsubj   1 - -        B-ARG1 -   -      -             i/Ci
288 1 was     + be     AUX   VBD ROOT    1 - be.01    B-V    -   -      be.v.01       was/Pd.sc:12:1h.<f:12
288 2 afraid  + afraid ADJ   JJ  acomp   1 - -        B-ARG2 -   -      afraid.a.01   afraid/Ca
288 3 of      + of     ADP   IN  prep    2 - -        I-ARG2 -   -      -             of/Br
288 4 being   + be     AUX   VBG auxpass 5 - be.03    I-ARG2 B-V -      -             being/Mv.<
288 5 laughed + laugh  VERB  VBD pcomp   3 - laugh.01 I-ARG2 -   B-V    ridicule.v.01 laughed/P.::.<f:0123
288 6 at      - at     ADP   IN  prt     5 - -        I-ARG2 -   B-ARG2 ridicule.v.01 at/Ml.r.>
288 7 .       - .      PUNCT .   punct   1 - -        -      -   -      -             -

# sent_i = 289
# sent = The government tried to stop the book being published.
# hyperedge = (tried/Pd.sr:01:01.<f:01 (the/Md.< government/Cc..s) ((to/Mi.< stop/P.-r:01:01.-i:012) (the/Md.< government/Cc..s) ((being/Mv.< published/P.p:1:h.<pf:01) (the/Md.< book/Cc..s))))
# hyperedge builder = (289.2/Pd.sr:01:01.<f:01 (289.0/Md.< 289.1/Cc..s) ((289.3/Mi.< 289.4/P.-r:01:01.-i:012) (289.0/Md.< 289.1/Cc..s) ((289.7/Mv.< 289.8/P.p:1:h.<pf:01) (289.5/Md.< 289.6/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
289 0 The        + the        DET   DT  det       1 - -          B-ARG0 B-ARG0 -   -      -               the/Md.<
289 1 government + government NOUN  NN  nsubj     2 - -          I-ARG0 I-ARG0 -   -      government.n.01 government/Cc..s
289 2 tried      + try        VERB  VBD ROOT      2 - try.01     B-V    -      -   -      try.v.01        tried/Pd.sr:01:01.<f:01
289 3 to         + to         PART  TO  aux       4 - -          B-ARG1 -      -   -      -               to/Mi.<
289 4 stop       + stop       VERB  VB  xcomp     2 - stop.01    I-ARG1 B-V    -   -      stop.v.03       stop/P.-r:01:01.-i:012
289 5 the        + the        DET   DT  det       6 - -          I-ARG1 B-ARG1 -   B-ARG1 -               the/Md.<
289 6 book       + book       NOUN  NN  nsubjpass 8 - -          I-ARG1 I-ARG1 -   I-ARG1 book.n.01       book/Cc..s
289 7 being      + be         AUX   VBG auxpass   8 - be.03      I-ARG1 I-ARG1 B-V -      -               being/Mv.<
289 8 published  - publish    VERB  VBN ccomp     4 - publish.01 I-ARG1 I-ARG1 -   B-V    print.v.01      published/P.p:1:h.<pf:01
289 9 .          - .          PUNCT .   punct     2 - -          -      -      -   -      -               -

# sent_i = 290
# sent = I'm annoyed at having been made a fool of.
# hyperedge = ('m/Pd.sc:12:1h.|f:12 i/Ci (at/Br annoyed/Ca ((having/Mv.< (been/Mv.< (of/Ml.r.> made/P.-o:21:m1.<pf:012))) i/Ci (a/Md.< fool/Cc..s))))
# hyperedge builder = (290.1/Pd.sc:12:1h.|f:12 290.0/Ci (290.3/Br 290.2/Ca ((290.4/Mv.< (290.5/Mv.< (290.9/Ml.r.> 290.6/P.-o:21:m1.<pf:012))) 290.0/Ci (290.7/Md.< 290.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
290 0  I       - I       PRON  PRP nsubj   1 - -       B-ARG1 -   -   B-ARG2   -            i/Ci
290 1  'm      + be      VERB  VBP ROOT    1 - be.01   B-V    -   -   -        be.v.01      'm/Pd.sc:12:1h.|f:12
290 2  annoyed + annoyed ADJ   JJ  acomp   1 - -       B-ARG2 -   -   -        annoyed.s.01 annoyed/Ca
290 3  at      + at      ADP   IN  prep    2 - -       I-ARG2 -   -   -        -            at/Br
290 4  having  + have    AUX   VBG aux     6 - have.01 I-ARG2 B-V -   -        -            having/Mv.<
290 5  been    + be      AUX   VBN auxpass 6 - be.03   I-ARG2 -   B-V -        -            been/Mv.<
290 6  made    + make    VERB  VBN pcomp   3 - make.27 I-ARG2 -   -   B-V      make.v.02    made/P.-o:21:m1.<pf:012
290 7  a       + a       DET   DT  det     8 - -       I-ARG2 -   -   B-ARG1   -            a/Md.<
290 8  fool    + fool    NOUN  NN  oprd    6 - -       I-ARG2 -   -   I-ARG1   fool.n.01    fool/Cc..s
290 9  of      - of      ADP   RP  prt     6 - -       I-ARG2 -   -   B-C-ARG2 -            of/Ml.r.>
290 10 .       - .       PUNCT .   punct   1 - -       -      -   -   -        -            -

# sent_i = 291
# sent = A ride on a London bus is the best way to see the city.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (on/Br (a/Md.< ride/Cc..s) (a/Md.< (+/B.am london/Cp.<.s.g bus/Cc..s))) (+/Jr.ma (the/Md.< (best/Ms.< way/Cc..s)) ((to/Mi.< see/P.-o:m1:m1.-i:012) (the/Md.< (best/Ms.< way/Cc..s)) (the/Md.< city/Cc..s))))
# hyperedge builder = (291.6/Pd.sc:12:1h.|f--3s:12 (291.2/Br (291.0/Md.< 291.1/Cc..s) (291.3/Md.< (+/B.am 291.4/Cp.<.s.g 291.5/Cc..s))) (+/Jr.ma (291.7/Md.< (291.8/Ms.< 291.9/Cc..s)) ((291.10/Mi.< 291.11/P.-o:m1:m1.-i:012) (291.7/Md.< (291.8/Ms.< 291.9/Cc..s)) (291.12/Md.< 291.13/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
291 0  A      + a      DET   DT  det      1  -     -      B-ARG1 -          -           a/Md.<
291 1  ride   + ride   NOUN  NN  nsubj    6  -     -      I-ARG1 -          drive.n.08  ride/Cc..s
291 2  on     + on     ADP   IN  prep     1  -     -      I-ARG1 -          -           on/Br
291 3  a      + a      DET   DT  det      5  -     -      I-ARG1 -          -           a/Md.<
291 4  London + London PROPN NNP compound 5  B-GPE -      I-ARG1 -          london.n.01 london/Cp.<.s.g
291 5  bus    + bus    NOUN  NN  pobj     2  -     -      I-ARG1 -          bus.n.01    bus/Cc..s
291 6  is     + be     AUX   VBZ ROOT     6  -     be.01  B-V    -          be.v.01     is/Pd.sc:12:1h.|f--3s:12
291 7  the    + the    DET   DT  det      9  -     -      B-ARG2 B-ARGM-MNR -           the/Md.<
291 8  best   + good   ADJ   JJS amod     9  -     -      I-ARG2 I-ARGM-MNR best.a.01   best/Ms.<
291 9  way    + way    NOUN  NN  attr     6  -     -      I-ARG2 I-ARGM-MNR manner.n.01 way/Cc..s
291 10 to     + to     PART  TO  aux      11 -     -      I-ARG2 -          -           to/Mi.<
291 11 see    + see    VERB  VB  relcl    9  -     see.01 I-ARG2 B-V        see.v.01    see/P.-o:m1:m1.-i:012
291 12 the    + the    DET   DT  det      13 -     -      I-ARG2 B-ARG1     -           the/Md.<
291 13 city   - city   NOUN  NN  dobj     11 -     -      I-ARG2 I-ARG1     city.n.01   city/Cc..s
291 14 .      - .      PUNCT .   punct    6  -     -      -      -          -           -

# sent_i = 292
# sent = We need to act quickly.
# hyperedge = (need/Pd.sr:01:01.|f:01 we/Ci ((to/Mi.< act/P.-?:0m:0m.-i:01) we/Ci quickly/M))
# hyperedge builder = (292.1/Pd.sr:01:01.|f:01 292.0/Ci ((292.2/Mi.< 292.3/P.-?:0m:0m.-i:01) 292.0/Ci 292.4/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
292 0 We      + we      PRON  PRP nsubj  1 - -       B-ARG0 B-ARG0     -                we/Ci
292 1 need    + need    VERB  VBP ROOT   1 - need.01 B-V    -          necessitate.v.01 need/Pd.sr:01:01.|f:01
292 2 to      + to      PART  TO  aux    3 - -       B-ARG1 -          -                to/Mi.<
292 3 act     + act     VERB  VB  xcomp  1 - act.02  I-ARG1 B-V        act.v.01         act/P.-?:0m:0m.-i:01
292 4 quickly - quickly ADV   RB  advmod 3 - -       I-ARG1 B-ARGM-MNR quickly.r.01     quickly/M
292 5 .       - .       PUNCT .   punct  1 - -       -      -          -                -

# sent_i = 293
# sent = I didn't expect you to change your mind suddenly.
# hyperedge = ((did/Mv.< (n't/Mn.< expect/Pd.sr:01:01.-i:01)) i/Ci ((to/Mi.< change/P.so?:01t:01t.-i:0123) you/Ci ((+/Jc.rm.rr your/Mp you/Ci) mind/Cc..s) suddenly/M))
# hyperedge builder = ((293.1/Mv.< (293.2/Mn.< 293.3/Pd.sr:01:01.-i:01)) 293.0/Ci ((293.5/Mi.< 293.6/P.so?:01t:01t.-i:0123) 293.4/Ci ((+/Jc.rm.rr 293.7/Mp 293.4/Ci) 293.8/Cc..s) 293.9/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
293 0  I        + I        PRON  PRP  nsubj  3 - -         -   B-ARG0     -          -       -                              i/Ci
293 1  did      - do       AUX   VBD  aux    3 - do.01     B-V -          -          -       -                              did/Mv.<
293 2  n't      + not      PART  RB   neg    3 - -         -   B-ARGM-NEG -          -       not.r.01                       n't/Mn.<
293 3  expect   + expect   VERB  VB   ROOT   3 - expect.01 -   B-V        -          -       expect.v.01                    expect/Pd.sr:01:01.-i:01
293 4  you      + you      PRON  PRP  nsubj  6 - -         -   B-ARG1     B-ARG0     B-MAIN0 -                              you/Ci
293 5  to       + to       PART  TO   aux    6 - -         -   I-ARG1     -          -       -                              to/Mi.<
293 6  change   + change   VERB  VB   ccomp  3 - change.01 -   I-ARG1     B-V        -       change.v.01                    change/P.so?:01t:01t.-i:0123
293 7  your     + your     PRON  PRP$ poss   8 - -         -   I-ARG1     B-ARG1     B-REF0  -                              your/Mp
293 8  mind     + mind     NOUN  NN   dobj   6 - -         -   I-ARG1     I-ARG1     -       judgment.n.01                  mind/Cc..s
293 9  suddenly - suddenly ADV   RB   advmod 6 - -         -   I-ARG1     B-ARGM-TMP -       on_the_spur_of_the_moment.r.01 suddenly/M
293 10 .        - .        PUNCT .    punct  3 - -         -   -          -          -       -                              -

# sent_i = 294
# sent = I didn't expect you suddenly to change your mind.
# hyperedge = ((did/Mv.< (n't/Mn.< expect/Pd.sr:01:01.-i:01)) i/Ci ((to/Mi.< change/P.s?o:0t1:0t1.-i:0123) you/Ci suddenly/M ((+/Jc.rm.rr your/Mp you/Ci) mind/Cc..s)))
# hyperedge builder = ((294.1/Mv.< (294.2/Mn.< 294.3/Pd.sr:01:01.-i:01)) 294.0/Ci ((294.6/Mi.< 294.7/P.s?o:0t1:0t1.-i:0123) 294.4/Ci 294.5/M ((+/Jc.rm.rr 294.8/Mp 294.4/Ci) 294.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
294 0  I        + I        PRON  PRP  nsubj  3 - -         -   B-ARG0     -          -       -                              i/Ci
294 1  did      - do       AUX   VBD  aux    3 - do.01     B-V -          -          -       -                              did/Mv.<
294 2  n't      + not      PART  RB   neg    3 - -         -   B-ARGM-NEG -          -       not.r.01                       n't/Mn.<
294 3  expect   + expect   VERB  VB   ROOT   3 - expect.01 -   B-V        -          -       expect.v.01                    expect/Pd.sr:01:01.-i:01
294 4  you      + you      PRON  PRP  nsubj  7 - -         -   B-ARG1     B-ARG0     B-MAIN0 -                              you/Ci
294 5  suddenly + suddenly ADV   RB   advmod 7 - -         -   I-ARG1     B-ARGM-TMP -       on_the_spur_of_the_moment.r.01 suddenly/M
294 6  to       + to       PART  TO   aux    7 - -         -   I-ARG1     -          -       -                              to/Mi.<
294 7  change   + change   VERB  VB   ccomp  3 - change.01 -   I-ARG1     B-V        -       change.v.01                    change/P.s?o:0t1:0t1.-i:0123
294 8  your     + your     PRON  PRP$ poss   9 - -         -   I-ARG1     B-ARG1     B-REF0  -                              your/Mp
294 9  mind     - mind     NOUN  NN   dobj   7 - -         -   I-ARG1     I-ARG1     -       judgment.n.01                  mind/Cc..s
294 10 .        - .        PUNCT .    punct  3 - -         -   -          -          -       -                              -

# sent_i = 295
# sent = I didn't expect you to suddenly change your mind.
# hyperedge = ((did/Mv.< (n't/Mn.< expect/Pd.sr:01:01.-i:01)) i/Ci ((to/Mi.< change/P.s?o:0m1:0m1.-i:0123) you/Ci suddenly/M ((+/Jc.rm.rr your/Mp you/Ci) mind/Cc..s)))
# hyperedge builder = ((295.1/Mv.< (295.2/Mn.< 295.3/Pd.sr:01:01.-i:01)) 295.0/Ci ((295.5/Mi.< 295.7/P.s?o:0m1:0m1.-i:0123) 295.4/Ci 295.6/M ((+/Jc.rm.rr 295.8/Mp 295.4/Ci) 295.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
295 0  I        + I        PRON  PRP  nsubj  3 - -         -   B-ARG0     -          -       -                              i/Ci
295 1  did      - do       AUX   VBD  aux    3 - do.01     B-V -          -          -       -                              did/Mv.<
295 2  n't      + not      PART  RB   neg    3 - -         -   B-ARGM-NEG -          -       not.r.01                       n't/Mn.<
295 3  expect   + expect   VERB  VB   ROOT   3 - expect.01 -   B-V        -          -       expect.v.01                    expect/Pd.sr:01:01.-i:01
295 4  you      + you      PRON  PRP  nsubj  7 - -         -   B-ARG1     B-ARG0     B-MAIN0 -                              you/Ci
295 5  to       + to       PART  TO   aux    7 - -         -   I-ARG1     -          -       -                              to/Mi.<
295 6  suddenly + suddenly ADV   RB   advmod 7 - -         -   I-ARG1     B-ARGM-MNR -       on_the_spur_of_the_moment.r.01 suddenly/M
295 7  change   + change   VERB  VB   ccomp  3 - change.01 -   I-ARG1     B-V        -       change.v.01                    change/P.s?o:0m1:0m1.-i:0123
295 8  your     + your     PRON  PRP$ poss   9 - -         -   I-ARG1     B-ARG1     B-REF0  -                              your/Mp
295 9  mind     - mind     NOUN  NN   dobj   7 - -         -   I-ARG1     I-ARG1     -       judgment.n.01                  mind/Cc..s
295 10 .        - .        PUNCT .    punct  3 - -         -   -          -          -       -                              -

# sent_i = 296
# sent = No one claims to really understand what is happening.
# hyperedge = (claims/Pd.sr:01:01.|f--3s:012 (no/Md.< one/Cc..s) ((to/Mi.< understand/P.-?r:0r1:0r1.-i:012) (no/Md.< one/Cc..s) really/M ((is/Mv.< happening/P.s:1:1.|pg:12) what/Cw)))
# hyperedge builder = (296.2/Pd.sr:01:01.|f--3s:012 (296.0/Md.< 296.1/Cc..s) ((296.3/Mi.< 296.5/P.-?r:0r1:0r1.-i:012) (296.0/Md.< 296.1/Cc..s) 296.4/M ((296.7/Mv.< 296.8/P.s:1:1.|pg:12) 296.6/Cw)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
296 0 No         + no         DET   DT  det    1 - -             B-ARG0 B-ARG0     -   -      no.a.01         no/Md.<
296 1 one        + one        NOUN  NN  nsubj  2 - -             I-ARG0 I-ARG0     -   -      one.n.02        one/Cc..s
296 2 claims     + claim      VERB  VBZ ROOT   2 - claim.01      B-V    -          -   -      claim.v.01      claims/Pd.sr:01:01.|f--3s:012
296 3 to         + to         PART  TO  aux    5 - -             B-ARG1 -          -   -      -               to/Mi.<
296 4 really     + really     ADV   RB  advmod 5 - -             I-ARG1 B-ARGM-ADV -   -      truly.r.01      really/M
296 5 understand + understand VERB  VB  xcomp  2 - understand.01 I-ARG1 B-V        -   -      understand.v.01 understand/P.-?r:0r1:0r1.-i:012
296 6 what       + what       PRON  WP  nsubj  8 - -             I-ARG1 B-ARG1     -   B-ARG1 -               what/Cw
296 7 is         + be         AUX   VBZ aux    8 - be.03         I-ARG1 I-ARG1     B-V -      -               is/Mv.<
296 8 happening  - happen     VERB  VBG ccomp  5 - happen.01     I-ARG1 I-ARG1     -   B-V    happen.v.01     happening/P.s:1:1.|pg:12
296 9 .          - .          PUNCT .   punct  2 - -             -      -          -   -      -               -

# sent_i = 297
# sent = There is nothing to get excited about.
# hyperedge = (is/Pd.ec:-1:-1.|f--3s:1 there/Me (+/Jr.ma nothing/Ci..s ((to/Mi.< (about/Ml.r.> get/P.-c:12:1g.-i:12)) nothing/Ci..s excited/Ca)))
# hyperedge builder = (297.1/Pd.ec:-1:-1.|f--3s:1 297.0/Me (+/Jr.ma 297.2/Ci..s ((297.3/Mi.< (297.6/Ml.r.> 297.4/P.-c:12:1g.-i:12)) 297.2/Ci..s 297.5/Ca)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
297 0 There   + there   PRON  EX  expl  1 - -      -      -      -            there/Me
297 1 is      + be      AUX   VBZ ROOT  1 - be.02  B-V    -      be.v.01      is/Pd.ec:-1:-1.|f--3s:1
297 2 nothing + nothing PRON  NN  attr  1 - -      B-ARG1 B-ARG1 nothing.n.01 nothing/Ci..s
297 3 to      + to      PART  TO  aux   4 - -      I-ARG1 -      -            to/Mi.<
297 4 get     + get     VERB  VB  relcl 2 - get.03 I-ARG1 B-V    get.v.03     get/P.-c:12:1g.-i:12
297 5 excited + excited ADJ   JJ  acomp 4 - -      I-ARG1 B-ARG2 excited.a.02 excited/Ca
297 6 about   - about   ADP   RP  prt   4 - -      I-ARG1 I-ARG2 -            about/Ml.r.>
297 7 .       - .       PUNCT .   punct 1 - -      -      -      -            -

# sent_i = 298
# sent = Your meals are all you have to pay for.
# hyperedge = (are/Pd.sc:12:1h.|f:12 ((+/Jc.rm.rr your/Mp you/Ci) meals/Cc..p) (+/Jr.ma all/Cd ((have/Mv.< (to/Mi.< (for/Ml.r.> pay/P.-s:30:10.-i:0123))) ((+/Jc.rm.rr your/Mp you/Ci) meals/Cc..p) you/Ci)))
# hyperedge builder = (298.2/Pd.sc:12:1h.|f:12 ((+/Jc.rm.rr 298.0/Mp 298.4/Ci) 298.1/Cc..p) (+/Jr.ma 298.3/Cd ((298.5/Mv.< (298.6/Mi.< (298.8/Ml.r.> 298.7/P.-s:30:10.-i:0123))) ((+/Jc.rm.rr 298.0/Mp 298.4/Ci) 298.1/Cc..p) 298.4/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
298 0 Your  + your PRON  PRP$ poss  1 - -       B-ARG1 -   B-ARG3     B-REF0  -         your/Mp
298 1 meals + meal NOUN  NNS  nsubj 2 - -       I-ARG1 -   I-ARG3     -       meal.n.01 meals/Cc..p
298 2 are   + be   AUX   VBP  ROOT  2 - be.01   B-V    -   -          -       be.v.01   are/Pd.sc:12:1h.|f:12
298 3 all   + all  DET   DT   attr  2 - -       B-ARG2 -   -          -       all.a.01  all/Cd
298 4 you   + you  PRON  PRP  nsubj 7 - -       I-ARG2 -   B-ARG0     B-MAIN0 -         you/Ci
298 5 have  + have VERB  VBP  aux   7 - have.02 I-ARG2 B-V B-ARGM-MOD -       -         have/Mv.<
298 6 to    + to   PART  TO   aux   7 - -       I-ARG2 -   -          -       -         to/Mi.<
298 7 pay   + pay  VERB  VB   relcl 3 - pay.01  I-ARG2 -   B-V        -       pay.v.01  pay/P.-s:30:10.-i:0123
298 8 for   - for  ADP   RP   prt   7 - -       I-ARG2 -   B-C-ARG3   -       -         for/Ml.r.>
298 9 .     - .    PUNCT .    punct 2 - -       -      -   -          -       -         -

# sent_i = 299
# sent = Not to take holiday now and then is a great mistake.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 ((not/Mn.< (to/Mi.< take/P.o?:kt:!!.-i)) holiday/Cc..s (and/J now/M then/M)) (a/Md.< (great/Ma.< mistake/Cc..s)))
# hyperedge builder = (299.7/Pd.sc:12:1h.|f--3s:12 ((299.0/Mn.< (299.1/Mi.< 299.2/P.o?:kt:!!.-i)) 299.3/Cc..s (299.5/J 299.4/M 299.6/M)) (299.8/Md.< (299.9/Ma.< 299.10/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
299 0  Not     + not     PART  RB  neg    2  - -          -          B-ARGM-NEG B-ARG1 not.r.01          not/Mn.<
299 1  to      + to      PART  TO  aux    2  - -          -          -          I-ARG1 -                 to/Mi.<
299 2  take    + take    VERB  VB  csubj  7  - take.LV    B-V        B-ARGM-LVB I-ARG1 take.v.01         take/P.o?:kt:!!.-i
299 3  holiday + holiday NOUN  NN  dobj   2  - holiday.01 B-ARGM-PRR B-V        I-ARG1 vacation.n.01     holiday/Cc..s
299 4  now     + now     ADV   RB  advmod 2  - -          -          B-ARGM-TMP I-ARG1 occasionally.r.01 now/M
299 5  and     + and     CCONJ CC  cc     4  - -          -          I-ARGM-TMP I-ARG1 occasionally.r.01 and/J
299 6  then    + then    ADV   RB  conj   4  - -          -          I-ARGM-TMP I-ARG1 occasionally.r.01 then/M
299 7  is      + be      AUX   VBZ ROOT   7  - be.01      -          -          B-V    be.v.01           is/Pd.sc:12:1h.|f--3s:12
299 8  a       + a       DET   DT  det    10 - -          -          -          B-ARG2 -                 a/Md.<
299 9  great   + great   ADJ   JJ  amod   10 - -          -          -          I-ARG2 great.s.02        great/Ma.<
299 10 mistake - mistake NOUN  NN  attr   7  - -          -          -          I-ARG2 mistake.n.01      mistake/Cc..s
299 11 .       - .       PUNCT .   punct  7  - -          -          -          -      -                 -

# sent_i = 300
# sent = To defrost this fridge takes ages.
# hyperedge = (takes/Pd.so:01:01.|f--3s:012 ((to/Mi.< defrost/P.o:1:1.-i:012) (this/Md.< fridge/Cc..s)) ages/Cc..p)
# hyperedge builder = (300.4/Pd.so:01:01.|f--3s:012 ((300.0/Mi.< 300.1/P.o:1:1.-i:012) (300.2/Md.< 300.3/Cc..s)) 300.5/Cc..p)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
300 0 To      + to      PART  TO  aux   1 - -          -      B-ARG0 -                          to/Mi.<
300 1 defrost + defrost VERB  VB  csubj 4 - defrost.01 B-V    I-ARG0 defrost.v.01               defrost/P.o:1:1.-i:012
300 2 this    + this    DET   DT  det   3 - -          B-ARG1 I-ARG0 -                          this/Md.<
300 3 fridge  + fridge  NOUN  NN  dobj  1 - -          I-ARG1 I-ARG0 electric_refrigerator.n.01 fridge/Cc..s
300 4 takes   + take    VERB  VBZ ROOT  4 - take.10    -      B-V    take.v.02                  takes/Pd.so:01:01.|f--3s:012
300 5 ages    - age     NOUN  NNS dobj  4 - -          -      B-ARG1 long_time.n.01             ages/Cc..p
300 6 .       - .       PUNCT .   punct 4 - -          -      -      -                          -

# sent_i = 301
# sent = It takes ages to defrost this fridge.
# hyperedge = (takes/Pd.sor:010:010.|f--3s:012 it/Ci ages/Cc..p ((to/Mi.< defrost/P.o:1:1.-i:012) (this/Md.< fridge/Cc..s)))
# hyperedge builder = (301.1/Pd.sor:010:010.|f--3s:012 301.0/Ci 301.2/Cc..p ((301.3/Mi.< 301.4/P.o:1:1.-i:012) (301.5/Md.< 301.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
301 0 It      + it      PRON  PRP nsubj 1 - -          B-R-ARG0 -      -                          it/Ci
301 1 takes   + take    VERB  VBZ ROOT  1 - take.10    B-V      -      take.v.02                  takes/Pd.sor:010:010.|f--3s:012
301 2 ages    + age     NOUN  NNS dobj  1 - -          B-ARG1   -      long_time.n.01             ages/Cc..p
301 3 to      + to      PART  TO  aux   4 - -          B-ARG0   -      -                          to/Mi.<
301 4 defrost + defrost VERB  VB  xcomp 1 - defrost.01 I-ARG0   B-V    defrost.v.01               defrost/P.o:1:1.-i:012
301 5 this    + this    DET   DT  det   6 - -          I-ARG0   B-ARG1 -                          this/Md.<
301 6 fridge  - fridge  NOUN  NN  dobj  4 - -          I-ARG0   I-ARG1 electric_refrigerator.n.01 fridge/Cc..s
301 7 .       - .       PUNCT .   punct 1 - -          -        -      -                          -

# sent_i = 302
# sent = Defrosting this fridge takes ages.
# hyperedge = (takes/Pd.so:01:01.|f--3s:012 (defrosting/P.o:1:1.|pg:012 (this/Md.< fridge/Cc..s)) ages/Cc..p)
# hyperedge builder = (302.3/Pd.so:01:01.|f--3s:012 (302.0/P.o:1:1.|pg:012 (302.1/Md.< 302.2/Cc..s)) 302.4/Cc..p)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
302 0 Defrosting + defrost VERB  VBG csubj 3 - defrost.01 B-V    B-ARG0 defrost.v.01               defrosting/P.o:1:1.|pg:012
302 1 this       + this    DET   DT  det   2 - -          B-ARG1 I-ARG0 -                          this/Md.<
302 2 fridge     + fridge  NOUN  NN  dobj  0 - -          I-ARG1 I-ARG0 electric_refrigerator.n.01 fridge/Cc..s
302 3 takes      + take    VERB  VBZ ROOT  3 - take.10    -      B-V    take.v.02                  takes/Pd.so:01:01.|f--3s:012
302 4 ages       - age     NOUN  NNS dobj  3 - -          -      B-ARG1 long_time.n.01             ages/Cc..p
302 5 .          - .       PUNCT .   punct 3 - -          -      -      -                          -

# sent_i = 303
# sent = The important thing is not to panic.
# hyperedge = (is/Pd.sr:--:--.:12 (the/Md.< (important/Ma.< thing/Cc..s)) ((not/Mn.< (to/Mi.< panic/P.-:1:1.-i:01)) (the/Md.< (important/Ma.< thing/Cc..s))))
# hyperedge builder = (303.3/Pd.sr:--:--.:12 (303.0/Md.< (303.1/Ma.< 303.2/Cc..s)) ((303.4/Mn.< (303.5/Mi.< 303.6/P.-:1:1.-i:01)) (303.0/Md.< (303.1/Ma.< 303.2/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
303 0 The       + the       DET   DT det   2 - -        -   B-ARG1     -              the/Md.<
303 1 important + important ADJ   JJ amod  2 - -        -   I-ARG1     important.a.01 important/Ma.<
303 2 thing     + thing     NOUN  NN nsubj 3 - -        -   I-ARG1     thing.n.10     thing/Cc..s
303 3 is        + be        VERB  MD ROOT  3 - be.01    B-V B-ARGM-MOD be.v.01        is/Pd.sr:--:--.:12
303 4 not       + not       PART  RB neg   6 - -        -   B-ARGM-NEG not.r.01       not/Mn.<
303 5 to        + to        PART  TO aux   6 - -        -   -          -              to/Mi.<
303 6 panic     - panic     VERB  VB xcomp 3 - panic.01 -   B-V        panic.v.01     panic/P.-:1:1.-i:01
303 7 .         - .         PUNCT .  punct 3 - -        -   -          -              -

# sent_i = 304
# sent = The idea was to surprise everybody.
# hyperedge = (was/Pd.sr:12:1h.<f:12 (the/Md.< idea/Cc..s) ((to/Mi.< surprise/P.o:1:1.-i:012) everybody/Ci..s))
# hyperedge builder = (304.2/Pd.sr:12:1h.<f:12 (304.0/Md.< 304.1/Cc..s) ((304.3/Mi.< 304.4/P.o:1:1.-i:012) 304.5/Ci..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
304 0 The       + the       DET   DT  det   1 - -           B-ARG1 -      -             the/Md.<
304 1 idea      + idea      NOUN  NN  nsubj 2 - -           I-ARG1 -      idea.n.01     idea/Cc..s
304 2 was       + be        AUX   VBD ROOT  2 - be.01       B-V    -      be.v.01       was/Pd.sr:12:1h.<f:12
304 3 to        + to        PART  TO  aux   4 - -           B-ARG2 -      -             to/Mi.<
304 4 surprise  + surprise  VERB  VB  xcomp 2 - surprise.01 I-ARG2 B-V    surprise.v.01 surprise/P.o:1:1.-i:012
304 5 everybody - everybody PRON  NN  dobj  4 - -           I-ARG2 B-ARG1 -             everybody/Ci..s
304 6 .         - .         PUNCT .   punct 2 - -           -      -      -             -

# sent_i = 305
# sent = Laura has gone to town to do some shopping.
# hyperedge = ((has/Mv.< gone/Pd.sxx:04i:1gi.<pf:0134) laura/Cp..s.p (to/T town/Cc..s) ((to/Mi.< do/P.-o:01:01.-i:01234) laura/Cp..s.p (some/Md.< shopping/Cc..s)))
# hyperedge builder = ((305.1/Mv.< 305.2/Pd.sxx:04i:1gi.<pf:0134) 305.0/Cp..s.p (305.3/T 305.4/Cc..s) ((305.5/Mi.< 305.6/P.-o:01:01.-i:01234) 305.0/Cp..s.p (305.7/Md.< 305.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
305 0 Laura    + Laura    PROPN NNP nsubj 2 B-PERSON -       -   B-ARG0     B-ARG0 -             laura/Cp..s.p
305 1 has      + have     AUX   VBZ aux   2 -        have.01 B-V -          -      -             has/Mv.<
305 2 gone     + go       VERB  VBN ROOT  2 -        go.02   -   B-V        -      travel.v.01   gone/Pd.sxx:04i:1gi.<pf:0134
305 3 to       + to       ADP   IN  prep  2 -        -       -   B-ARG4     -      -             to/T
305 4 town     + town     NOUN  NN  pobj  3 -        -       -   I-ARG4     -      town.n.01     town/Cc..s
305 5 to       + to       PART  TO  aux   6 -        -       -   B-ARGM-PRP -      -             to/Mi.<
305 6 do       + do       VERB  VB  advcl 2 -        do.02   -   I-ARGM-PRP B-V    perform.v.01  do/P.-o:01:01.-i:01234
305 7 some     + some     DET   DT  det   8 -        -       -   I-ARGM-PRP B-ARG1 some.a.01     some/Md.<
305 8 shopping - shopping NOUN  NN  dobj  6 -        -       -   I-ARGM-PRP I-ARG1 shopping.n.01 shopping/Cc..s
305 9 .        - .        PUNCT .   punct 2 -        -       -   -          -      -             -

# sent_i = 306
# sent = To get a good seat, you need to arrive early.
# hyperedge = (need/Pd.xsr:i01:i01.|f:01 ((to/Mi.< get/P.o-:10:10.-i:01234) (a/Md.< (good/Ma.< seat/Cc..s)) you/Ci) you/Ci ((to/Mi.< arrive/P.-?:1t:1t.-i:1234) you/Ci early/M))
# hyperedge builder = (306.7/Pd.xsr:i01:i01.|f:01 ((306.0/Mi.< 306.1/P.o-:10:10.-i:01234) (306.2/Md.< (306.3/Ma.< 306.4/Cc..s)) 306.6/Ci) 306.6/Ci ((306.8/Mi.< 306.9/P.-?:1t:1t.-i:1234) 306.6/Ci 306.10/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
306 0  To     + to     PART  TO  aux    1 - -         -      B-ARGM-PRP -          -                to/Mi.<
306 1  get    + get    VERB  VB  advcl  7 - get.01    B-V    I-ARGM-PRP -          get.v.01         get/P.o-:10:10.-i:01234
306 2  a      + a      DET   DT  det    4 - -         B-ARG1 I-ARGM-PRP -          -                a/Md.<
306 3  good   + good   ADJ   JJ  amod   4 - -         I-ARG1 I-ARGM-PRP -          good.a.01        good/Ma.<
306 4  seat   - seat   NOUN  NN  dobj   1 - -         I-ARG1 I-ARGM-PRP -          seat.n.01        seat/Cc..s
306 5  ,      + ,      PUNCT ,   punct  7 - -         -      -          -          -                -
306 6  you    + you    PRON  PRP nsubj  7 - -         B-ARG0 B-ARG0     B-ARG1     -                you/Ci
306 7  need   + need   VERB  VBP ROOT   7 - need.01   -      B-V        -          necessitate.v.01 need/Pd.xsr:i01:i01.|f:01
306 8  to     + to     PART  TO  aux    9 - -         -      B-ARG1     -          -                to/Mi.<
306 9  arrive + arrive VERB  VB  xcomp  7 - arrive.01 -      I-ARG1     B-V        arrive.v.01      arrive/P.-?:1t:1t.-i:1234
306 10 early  - early  ADV   RB  advmod 9 - -         -      I-ARG1     B-ARGM-TMP early.r.02       early/M
306 11 .      - .      PUNCT .   punct  7 - -         -      -          -          -                -

# sent_i = 307
# sent = Laura came home to find her house on fire.
# hyperedge = (came/Pd.s?r:14i:1gi.<f:1234 laura/Cp..s.p home/M ((to/Mi.< find/P.-o:01:01.-i:012) laura/Cp..s.p (on/Br ((+/Jc.rm.rp her/Mp laura/Cp..s.p) house/Cc..s) fire/Cc..s)))
# hyperedge builder = (307.1/Pd.s?r:14i:1gi.<f:1234 307.0/Cp..s.p 307.2/M ((307.3/Mi.< 307.4/P.-o:01:01.-i:012) 307.0/Cp..s.p (307.7/Br ((+/Jc.rm.rp 307.5/Mp 307.0/Cp..s.p) 307.6/Cc..s) 307.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
307 0 Laura + Laura PROPN NNP  nsubj  1 B-PERSON -       B-ARG1     B-ARG0 B-MAIN0 -             laura/Cp..s.p
307 1 came  + come  VERB  VBD  ROOT   1 -        come.01 B-V        -      -       arrive.v.01   came/Pd.s?r:14i:1gi.<f:1234
307 2 home  + home  ADV   RB   advmod 1 -        -       B-ARG4     -      -       home.r.01     home/M
307 3 to    + to    PART  TO   aux    4 -        -       B-ARGM-PRP -      -       -             to/Mi.<
307 4 find  + find  VERB  VB   xcomp  1 -        find.01 I-ARGM-PRP B-V    -       discover.v.04 find/P.-o:01:01.-i:012
307 5 her   + her   PRON  PRP$ poss   6 -        -       I-ARGM-PRP B-ARG1 B-REF0  -             her/Mp
307 6 house + house NOUN  NN   dobj   4 -        -       I-ARGM-PRP I-ARG1 -       house.n.01    house/Cc..s
307 7 on    + on    ADP   IN   prep   6 -        -       I-ARGM-PRP I-ARG1 -       -             on/Br
307 8 fire  - fire  NOUN  NN   pobj   7 -        -       I-ARGM-PRP I-ARG1 -       fire.n.01     fire/Cc..s
307 9 .     - .     PUNCT .    punct  1 -        -       -          -      -       -             -

# sent_i = 308
# sent = He grew up to be a handsome young man.
# hyperedge = ((up/Ml.r.> grew/Pd.sr:1i:0i.<f:1) he/Ci ((to/Mi.< be/P.-c:12:1h.-i:12) he/Ci (a/Md.< (handsome/Ma.< (young/Ma.< man/Cc..s)))))
# hyperedge builder = ((308.2/Ml.r.> 308.1/Pd.sr:1i:0i.<f:1) 308.0/Ci ((308.3/Mi.< 308.4/P.-c:12:1h.-i:12) 308.0/Ci (308.5/Md.< (308.6/Ma.< (308.7/Ma.< 308.8/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
308 0 He       + he       PRON  PRP nsubj 1 - -          B-ARG1     B-ARG1 -                 he/Ci
308 1 grew     + grow     VERB  VBD ROOT  1 - grow_up.04 B-V        -      grow_up.v.01      grew/Pd.sr:1i:0i.<f:1
308 2 up       + up       ADP   RP  prt   1 - -          -          -      grow_up.v.01      up/Ml.r.>
308 3 to       + to       PART  TO  aux   4 - -          B-ARGM-PRP -      -                 to/Mi.<
308 4 be       + be       VERB  VB  xcomp 1 - be.01      I-ARGM-PRP B-V    be.v.01           be/P.-c:12:1h.-i:12
308 5 a        + a        DET   DT  det   8 - -          I-ARGM-PRP B-ARG2 -                 a/Md.<
308 6 handsome + handsome ADJ   JJ  amod  8 - -          I-ARGM-PRP I-ARG2 fine-looking.s.01 handsome/Ma.<
308 7 young    + young    ADJ   JJ  amod  8 - -          I-ARGM-PRP I-ARG2 young.a.01        young/Ma.<
308 8 man      - man      NOUN  NN  attr  4 - -          I-ARGM-PRP I-ARG2 man.n.01          man/Cc..s
308 9 .        - .        PUNCT .   punct 1 - -          -          -      -                 -

# sent_i = 309
# sent = I found my keys only to lose them again.
# hyperedge = (found/Pd.sor:01i:01i.<f:012 i/Ci ((+/Jc.rm.rr my/Mp i/Ci) keys/Cc..p) ((to/Mi.< lose/P.-?o?:0r1t:0r1t.-i:0123) i/Ci only/M (+/Jc.rm.rc them/Ci (my/Mp keys/Cc..p)) again/M))
# hyperedge builder = (309.1/Pd.sor:01i:01i.<f:012 309.0/Ci ((+/Jc.rm.rr 309.2/Mp 309.0/Ci) 309.3/Cc..p) ((309.5/Mi.< 309.6/P.-?o?:0r1t:0r1t.-i:0123) 309.0/Ci 309.4/M (+/Jc.rm.rc 309.7/Ci (309.2/Mp 309.3/Cc..p)) 309.8/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 coref2 synset atoms
309 0 I     + I     PRON  PRP  nsubj  1 - -       B-ARG0     B-ARG0     B-MAIN0 -       -          i/Ci
309 1 found + find  VERB  VBD  ROOT   1 - find.01 B-V        -          -       -       find.v.03  found/Pd.sor:01i:01i.<f:012
309 2 my    + my    PRON  PRP$ poss   3 - -       B-ARG1     -          B-REF0  B-MAIN1 -          my/Mp
309 3 keys  + key   NOUN  NNS  dobj   1 - -       I-ARG1     -          -       I-MAIN1 key.n.01   keys/Cc..p
309 4 only  + only  ADV   RB   advmod 6 - -       B-ARGM-PRP B-ARGM-ADV -       -       only.r.03  only/M
309 5 to    + to    PART  TO   aux    6 - -       I-ARGM-PRP -          -       -       -          to/Mi.<
309 6 lose  + lose  VERB  VB   xcomp  1 - lose.02 I-ARGM-PRP B-V        -       -       lose.v.01  lose/P.-?o?:0r1t:0r1t.-i:0123
309 7 them  + they  PRON  PRP  dobj   6 - -       I-ARGM-PRP B-ARG1     -       B-REF1  -          them/Ci
309 8 again - again ADV   RB   advmod 6 - -       I-ARGM-PRP B-ARGM-TMP -       -       again.r.01 again/M
309 9 .     - .     PUNCT .    punct  1 - -       -          -          -       -       -          -

# sent_i = 310
# sent = He arrived for the concert only to find it had been cancelled.
# hyperedge = (arrived/Pd.sxx:14r:1lr.<f:1234 he/Ci (for/T (the/Md.< concert/Cc..s)) ((to/Mi.< find/P.-?r:0r1:0r1.-i:012) he/Ci only/M ((had/Mv.< (been/Mv.< cancelled/P.p:1:1.<pf:01)) (+/Jc.rm.rc it/Ci (the/Md.< concert/Cc..s)))))
# hyperedge builder = (310.1/Pd.sxx:14r:1lr.<f:1234 310.0/Ci (310.2/T (310.3/Md.< 310.4/Cc..s)) ((310.6/Mi.< 310.7/P.-?r:0r1:0r1.-i:012) 310.0/Ci 310.5/M ((310.9/Mv.< (310.10/Mv.< 310.11/P.p:1:1.<pf:01)) (+/Jc.rm.rc 310.8/Ci (310.3/Md.< 310.4/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
310 0  He        + he      PRON  PRP nsubj     1  - -         B-ARG1     B-ARG0     -   -   -      -       -             he/Ci
310 1  arrived   + arrive  VERB  VBD ROOT      1  - arrive.01 B-V        -          -   -   -      -       arrive.v.01   arrived/Pd.sxx:14r:1lr.<f:1234
310 2  for       + for     ADP   IN  prep      1  - -         B-ARG4     -          -   -   -      -       -             for/T
310 3  the       + the     DET   DT  det       4  - -         I-ARG4     -          -   -   -      B-MAIN0 -             the/Md.<
310 4  concert   + concert NOUN  NN  pobj      2  - -         I-ARG4     -          -   -   -      I-MAIN0 concert.n.01  concert/Cc..s
310 5  only      + only    ADV   RB  advmod    7  - -         B-ARGM-ADV B-ARGM-ADV -   -   -      -       only.r.03     only/M
310 6  to        + to      PART  TO  aux       7  - -         I-ARGM-ADV -          -   -   -      -       -             to/Mi.<
310 7  find      + find    VERB  VB  advcl     1  - find.01   I-ARGM-ADV B-V        -   -   -      -       discover.v.04 find/P.-?r:0r1:0r1.-i:012
310 8  it        + it      PRON  PRP nsubjpass 11 - -         I-ARGM-ADV B-ARG1     -   -   B-ARG1 B-REF0  -             it/Ci
310 9  had       + have    AUX   VBD aux       11 - have.01   I-ARGM-ADV I-ARG1     B-V -   -      -       -             had/Mv.<
310 10 been      + be      AUX   VBN auxpass   11 - be.03     I-ARGM-ADV I-ARG1     -   B-V -      -       -             been/Mv.<
310 11 cancelled - cancel  VERB  VBN ccomp     7  - cancel.01 I-ARGM-ADV I-ARG1     -   -   B-V    -       cancel.v.01   cancelled/P.p:1:1.<pf:01
310 12 .         - .       PUNCT .   punct     1  - -         -          -          -   -   -      -       -             -

# sent_i = 311
# sent = He arrived for the concert to find it had been cancelled.
# hyperedge = (arrived/Pd.sxx:14r:1lr.<f:1234 he/Ci (for/T (the/Md.< concert/Cc..s)) ((to/Mi.< find/P.-r:01:01.-i:012) he/Ci ((had/Mv.< (been/Mv.< cancelled/P.p:1:1.<pf:01)) (+/Jc.rm.rc it/Ci (the/Md.< concert/Cc..s)))))
# hyperedge builder = (311.1/Pd.sxx:14r:1lr.<f:1234 311.0/Ci (311.2/T (311.3/Md.< 311.4/Cc..s)) ((311.5/Mi.< 311.6/P.-r:01:01.-i:012) 311.0/Ci ((311.8/Mv.< (311.9/Mv.< 311.10/P.p:1:1.<pf:01)) (+/Jc.rm.rc 311.7/Ci (311.3/Md.< 311.4/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
311 0  He        + he      PRON  PRP nsubj     1  - -         B-ARG1     B-ARG0 -   -   -      -       -             he/Ci
311 1  arrived   + arrive  VERB  VBD ROOT      1  - arrive.01 B-V        -      -   -   -      -       arrive.v.01   arrived/Pd.sxx:14r:1lr.<f:1234
311 2  for       + for     ADP   IN  prep      1  - -         B-ARG4     -      -   -   -      -       -             for/T
311 3  the       + the     DET   DT  det       4  - -         I-ARG4     -      -   -   -      B-MAIN0 -             the/Md.<
311 4  concert   + concert NOUN  NN  pobj      2  - -         I-ARG4     -      -   -   -      I-MAIN0 concert.n.01  concert/Cc..s
311 5  to        + to      PART  TO  aux       6  - -         B-ARGM-ADV -      -   -   -      -       -             to/Mi.<
311 6  find      + find    VERB  VB  advcl     1  - find.01   I-ARGM-ADV B-V    -   -   -      -       discover.v.04 find/P.-r:01:01.-i:012
311 7  it        + it      PRON  PRP nsubjpass 10 - -         I-ARGM-ADV B-ARG1 -   -   B-ARG1 B-REF0  -             it/Ci
311 8  had       + have    AUX   VBD aux       10 - have.01   I-ARGM-ADV I-ARG1 B-V -   -      -       -             had/Mv.<
311 9  been      + be      AUX   VBN auxpass   10 - be.03     I-ARGM-ADV I-ARG1 -   B-V -      -       -             been/Mv.<
311 10 cancelled - cancel  VERB  VBN ccomp     6  - cancel.01 I-ARGM-ADV I-ARG1 -   -   B-V    -       cancel.v.01   cancelled/P.p:1:1.<pf:01
311 11 .         - .       PUNCT .   punct     1  - -         -          -      -   -   -      -       -             -

# sent_i = 312
# sent = To be frank, you didn't make a very good impression.
# hyperedge = ((did/Mv.< (n't/Mn.< make/Pd.xso:s1k:!!!.-i)) ((to/Mi.< be/P.c:2:h.-i:12) frank/Ca) you/Ci (a/Md.< ((very/M.< good/Ma.<) impression/Cc..s)))
# hyperedge builder = ((312.5/Mv.< (312.6/Mn.< 312.7/Pd.xso:s1k:!!!.-i)) ((312.0/Mi.< 312.1/P.c:2:h.-i:12) 312.2/Ca) 312.4/Ci (312.8/Md.< ((312.9/M.< 312.10/Ma.<) 312.11/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
312 0  To         + to         PART  TO  aux    1  - -             -      -   -          B-ARGM-DIS -               to/Mi.<
312 1  be         + be         VERB  VB  advcl  7  - be.01         B-V    -   -          I-ARGM-DIS be.v.01         be/P.c:2:h.-i:12
312 2  frank      - frank      ADJ   JJ  acomp  1  - -             B-ARG2 -   -          I-ARGM-DIS blunt.s.03      frank/Ca
312 3  ,          + ,          PUNCT ,   punct  7  - -             -      -   -          -          -               -
312 4  you        + you        PRON  PRP nsubj  7  - -             -      -   -          B-ARG1     -               you/Ci
312 5  did        - do         AUX   VBD aux    7  - do.01         -      B-V -          -          -               did/Mv.<
312 6  n't        + not        PART  RB  neg    7  - -             -      -   -          B-ARGM-NEG not.r.01        n't/Mn.<
312 7  make       + make       VERB  VB  ROOT   7  - make.LV       -      -   B-V        B-ARGM-LVB -               make/Pd.xso:s1k:!!!.-i
312 8  a          + a          DET   DT  det    11 - -             -      -   -          B-C-ARG1   -               a/Md.<
312 9  very       + very       ADV   RB  advmod 10 - -             -      -   -          I-C-ARG1   very.r.01       very/M.<
312 10 good       + good       ADJ   JJ  amod   11 - -             -      -   -          I-C-ARG1   good.a.01       good/Ma.<
312 11 impression - impression NOUN  NN  dobj   7  - impression.03 -      -   B-ARGM-PRR B-V        impression.n.02 impression/Cc..s
312 12 .          - .          PUNCT .   punct  7  - -             -      -   -          -          -               -

# sent_i = 313
# sent = I'm a bit tired of sightseeing, to tell you the truth.
# hyperedge = ('m/Pd.scx:12r:1hr.|f:12 i/Ci (+/B.am (a/Md.< bit/Cc.<.s) (of/Br tired/Ca sightseeing/Cc..s)) ((to/Mi.< tell/P.-io:021:0g1.-i:012) i/Ci you/Ci (the/Md.< truth/Cc..s)))
# hyperedge builder = (313.1/Pd.scx:12r:1hr.|f:12 313.0/Ci (+/B.am (313.2/Md.< 313.3/Cc.<.s) (313.5/Br 313.4/Ca 313.6/Cc..s)) ((313.8/Mi.< 313.9/P.-io:021:0g1.-i:012) 313.0/Ci 313.10/Ci (313.11/Md.< 313.12/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
313 0  I           - I           PRON  PRP nsubj    1  - -       B-ARG1     B-ARG0 -                i/Ci
313 1  'm          + be          VERB  VBP ROOT     1  - be.01   B-V        -      be.v.01          'm/Pd.scx:12r:1hr.|f:12
313 2  a           + a           DET   DT  det      3  - -       B-ARG2     -      a_bit.r.01       a/Md.<
313 3  bit         + bit         NOUN  NN  npadvmod 4  - -       I-ARG2     -      a_bit.r.01       bit/Cc.<.s
313 4  tired       + tired       ADJ   JJ  acomp    1  - -       I-ARG2     -      tired.a.01       tired/Ca
313 5  of          + of          ADP   IN  prep     4  - -       I-ARG2     -      -                of/Br
313 6  sightseeing - sightseeing NOUN  NN  pobj     5  - -       I-ARG2     -      sightseeing.n.01 sightseeing/Cc..s
313 7  ,           + ,           PUNCT ,   punct    1  - -       -          -      -                -
313 8  to          + to          PART  TO  aux      9  - -       B-ARGM-ADV -      -                to/Mi.<
313 9  tell        + tell        VERB  VB  advcl    1  - tell.01 I-ARGM-ADV B-V    tell.v.02        tell/P.-io:021:0g1.-i:012
313 10 you         + you         PRON  PRP dative   9  - -       I-ARGM-ADV B-ARG2 -                you/Ci
313 11 the         + the         DET   DT  det      12 - -       I-ARGM-ADV B-ARG1 -                the/Md.<
313 12 truth       - truth       NOUN  NN  dobj     9  - -       I-ARGM-ADV I-ARG1 truth.n.01       truth/Cc..s
313 13 .           - .           PUNCT .   punct    1  - -       -          -      -                -

# sent_i = 314
# sent = I decided to take a taxi.
# hyperedge = (decided/Pd.sr:01:01.<f:0123 i/Ci ((to/Mi.< take/P.-o:0k:!!.-i) i/Ci (a/Md.< taxi/Cc..s)))
# hyperedge builder = (314.1/Pd.sr:01:01.<f:0123 314.0/Ci ((314.2/Mi.< 314.3/P.-o:0k:!!.-i) 314.0/Ci (314.4/Md.< 314.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
314 0 I       + I      PRON  PRP nsubj 1 - -         B-ARG0 -          B-ARG0     -           i/Ci
314 1 decided + decide VERB  VBD ROOT  1 - decide.01 B-V    -          -          decide.v.01 decided/Pd.sr:01:01.<f:0123
314 2 to      + to     PART  TO  aux   3 - -         B-ARG1 -          -          -           to/Mi.<
314 3 take    + take   VERB  VB  xcomp 1 - take.LV   I-ARG1 B-V        B-ARGM-LVB take.v.09   take/P.-o:0k:!!.-i
314 4 a       + a      DET   DT  det   5 - -         I-ARG1 -          -          -           a/Md.<
314 5 taxi    - taxi   NOUN  NN  dobj  3 - taxi.00   I-ARG1 B-ARGM-PRR B-V        cab.n.03    taxi/Cc..s
314 6 .       - .      PUNCT .   punct 1 - -         -      -          -          -           -

# sent_i = 315
# sent = I suggested taking a taxi.
# hyperedge = (suggested/Pd.sr:01:01.<f:012 i/Ci (taking/P.o:k:!.|pg (a/Md.< taxi/Cc..s)))
# hyperedge builder = (315.1/Pd.sr:01:01.<f:012 315.0/Ci (315.2/P.o:k:!.|pg (315.3/Md.< 315.4/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
315 0 I         + I       PRON  PRP nsubj 1 - -          B-ARG0 -          -          -            i/Ci
315 1 suggested + suggest VERB  VBD ROOT  1 - suggest.01 B-V    -          -          propose.v.01 suggested/Pd.sr:01:01.<f:012
315 2 taking    + take    VERB  VBG xcomp 1 - take.LV    B-ARG1 B-V        B-ARGM-LVB take.v.09    taking/P.o:k:!.|pg
315 3 a         + a       DET   DT  det   4 - -          I-ARG1 -          -          -            a/Md.<
315 4 taxi      - taxi    NOUN  NN  dobj  2 - taxi.00    I-ARG1 B-ARGM-PRR B-V        cab.n.03     taxi/Cc..s
315 5 .         - .       PUNCT .   punct 1 - -          -      -          -          -            -

# sent_i = 316
# sent = Brian agreed to pay half the cost.
# hyperedge = (agreed/Pd.sr:01:01.<f:012 brian/Cp..s.p ((to/Mi.< pay/P.-o:01:0q.-i:0123) brian/Cp..s.p (half/M.<..c (the/Md.< cost/Cc..s))))
# hyperedge builder = (316.1/Pd.sr:01:01.<f:012 316.0/Cp..s.p ((316.2/Mi.< 316.3/P.-o:01:0q.-i:0123) 316.0/Cp..s.p (316.4/M.<..c (316.5/Md.< 316.6/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
316 0 Brian  + Brian PROPN NNP nsubj  1 B-PERSON   -        B-ARG0 B-ARG0 -             brian/Cp..s.p
316 1 agreed + agree VERB  VBD ROOT   1 -          agree.01 B-V    -      agree.v.02    agreed/Pd.sr:01:01.<f:012
316 2 to     + to    PART  TO  aux    3 -          -        B-ARG1 -      -             to/Mi.<
316 3 pay    + pay   VERB  VB  xcomp  1 -          pay.01   I-ARG1 B-V    pay.v.01      pay/P.-o:01:0q.-i:0123
316 4 half   + half  DET   PDT predet 6 B-CARDINAL -        I-ARG1 B-ARG1 one-half.n.01 half/M.<..c
316 5 the    + the   DET   DT  det    6 -          -        I-ARG1 I-ARG1 -             the/Md.<
316 6 cost   - cost  NOUN  NN  dobj   3 -          -        I-ARG1 I-ARG1 cost.n.01     cost/Cc..s
316 7 .      - .     PUNCT .   punct  1 -          -        -      -      -             -

# sent_i = 317
# sent = I can't stand sitting around doing nothing.
# hyperedge = ((ca/Mm.< (n't/Mn.< stand/Pd.sr:01:10.-i:01)) i/Ci ((around/Ml.r.> sitting/P.-x:1r:0r.|pg:12) i/Ci (doing/P.-o:01:01.|pg:01234 i/Ci nothing/Ci..s)))
# hyperedge builder = ((317.1/Mm.< (317.2/Mn.< 317.3/Pd.sr:01:10.-i:01)) 317.0/Ci ((317.5/Ml.r.> 317.4/P.-x:1r:0r.|pg:12) 317.0/Ci (317.6/P.-o:01:01.|pg:01234 317.0/Ci 317.7/Ci..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
317 0 I       + I       PRON  PRP nsubj 3 - -        -   B-ARG0     B-ARG1     B-ARG0 -            i/Ci
317 1 ca      - can     AUX   MD  aux   3 - -        B-V B-ARGM-MOD -          -      -            ca/Mm.<
317 2 n't     + not     PART  RB  neg   3 - -        -   B-ARGM-NEG -          -      not.r.01     n't/Mn.<
317 3 stand   + stand   VERB  VB  ROOT  3 - stand.03 -   B-V        -          -      digest.v.03  stand/Pd.sr:01:10.-i:01
317 4 sitting + sit     VERB  VBG xcomp 3 - sit.01   -   B-ARG1     B-V        -      sit.v.02     sitting/P.-x:1r:0r.|pg:12
317 5 around  + around  ADP   RP  prt   4 - -        -   I-ARG1     B-ARG2     -      about.r.03   around/Ml.r.>
317 6 doing   + do      VERB  VBG advcl 4 - do.02    -   I-ARG1     B-ARGM-ADV B-V    make.v.01    doing/P.-o:01:01.|pg:01234
317 7 nothing - nothing PRON  NN  dobj  6 - -        -   I-ARG1     I-ARGM-ADV B-ARG1 nothing.n.01 nothing/Ci..s
317 8 .       - .       PUNCT .   punct 3 - -        -   -          -          -      -            -

# sent_i = 318
# sent = I hate to leave everything to the last minute.
# hyperedge = (hate/Pd.sr:01:10.|f:012 i/Ci ((to/Mi.< leave/P.-ox:01t:01t.-i:01) i/Ci everything/Ci..s (to/Tt (the/Md.<..t (last/Ma.<..t minute/Cc..s.t)))))
# hyperedge builder = (318.1/Pd.sr:01:10.|f:012 318.0/Ci ((318.2/Mi.< 318.3/P.-ox:01t:01t.-i:01) 318.0/Ci 318.4/Ci..s (318.5/Tt (318.6/Md.<..t (318.7/Ma.<..t 318.8/Cc..s.t)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
318 0 I          + I          PRON  PRP nsubj 1 -      -        B-ARG0 B-ARG0     -                  i/Ci
318 1 hate       + hate       VERB  VBP ROOT  1 -      hate.01  B-V    -          hate.v.01          hate/Pd.sr:01:10.|f:012
318 2 to         + to         PART  TO  aux   3 -      -        B-ARG1 -          -                  to/Mi.<
318 3 leave      + leave      VERB  VB  xcomp 1 -      leave.14 I-ARG1 B-V        leave.v.02         leave/P.-ox:01t:01t.-i:01
318 4 everything + everything PRON  NN  dobj  3 -      -        I-ARG1 B-ARG1     -                  everything/Ci..s
318 5 to         + to         ADP   IN  prep  3 -      -        I-ARG1 B-ARGM-TMP -                  to/Tt
318 6 the        + the        DET   DT  det   8 B-TIME -        I-ARG1 I-ARGM-TMP -                  the/Md.<..t
318 7 last       + last       ADJ   JJ  amod  8 I-TIME -        I-ARG1 I-ARGM-TMP eleventh_hour.n.01 last/Ma.<..t
318 8 minute     - minute     NOUN  NN  pobj  5 I-TIME -        I-ARG1 I-ARGM-TMP eleventh_hour.n.01 minute/Cc..s.t
318 9 .          - .          PUNCT .   punct 1 -      -        -      -          -                  -

# sent_i = 319
# sent = I hate leaving everything to the last minute.
# hyperedge = (hate/Pd.sr:01:10.|f:012 i/Ci (leaving/P.-ox:01t:01t.|pg:01 i/Ci everything/Ci..s (to/Tt (the/Md.<..t (last/Ma.<..t minute/Cc..s.t)))))
# hyperedge builder = (319.1/Pd.sr:01:10.|f:012 319.0/Ci (319.2/P.-ox:01t:01t.|pg:01 319.0/Ci 319.3/Ci..s (319.4/Tt (319.5/Md.<..t (319.6/Ma.<..t 319.7/Cc..s.t)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
319 0 I          + I          PRON  PRP nsubj 1 -      -        B-ARG0 B-ARG0     -                  i/Ci
319 1 hate       + hate       VERB  VBP ROOT  1 -      hate.01  B-V    -          hate.v.01          hate/Pd.sr:01:10.|f:012
319 2 leaving    + leave      VERB  VBG xcomp 1 -      leave.14 B-ARG1 B-V        leave.v.02         leaving/P.-ox:01t:01t.|pg:01
319 3 everything + everything PRON  NN  dobj  2 -      -        I-ARG1 B-ARG1     -                  everything/Ci..s
319 4 to         + to         ADP   IN  prep  2 -      -        I-ARG1 B-ARGM-TMP -                  to/Tt
319 5 the        + the        DET   DT  det   7 B-TIME -        I-ARG1 I-ARGM-TMP -                  the/Md.<..t
319 6 last       + last       ADJ   JJ  amod  7 I-TIME -        I-ARG1 I-ARGM-TMP eleventh_hour.n.01 last/Ma.<..t
319 7 minute     - minute     NOUN  NN  pobj  4 I-TIME -        I-ARG1 I-ARGM-TMP eleventh_hour.n.01 minute/Cc..s.t
319 8 .          - .          PUNCT .   punct 1 -      -        -      -          -                  -

# sent_i = 320
# sent = We intend to take immediate action.
# hyperedge = (intend/Pd.sr:01:01.|f:01 we/Ci ((to/Mi.< take/P.-o:0k:!!.-i) we/Ci (immediate/Ma.< action/Cc..s)))
# hyperedge builder = (320.1/Pd.sr:01:01.|f:01 320.0/Ci ((320.2/Mi.< 320.3/P.-o:0k:!!.-i) 320.0/Ci (320.4/Ma.< 320.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
320 0 We        + we        PRON  PRP nsubj 1 - -         B-ARG0 -          B-ARG0 -              we/Ci
320 1 intend    + intend    VERB  VBP ROOT  1 - intend.01 B-V    -          -      intend.v.01    intend/Pd.sr:01:01.|f:01
320 2 to        + to        PART  TO  aux   3 - -         B-ARG1 -          -      -              to/Mi.<
320 3 take      + take      VERB  VB  xcomp 1 - take.LV   I-ARG1 B-V        -      take.v.01      take/P.-o:0k:!!.-i
320 4 immediate + immediate ADJ   JJ  amod  5 - -         I-ARG1 -          -      immediate.s.05 immediate/Ma.<
320 5 action    - action    NOUN  NN  dobj  3 - act.02    I-ARG1 B-ARGM-PRR B-V    action.n.01    action/Cc..s
320 6 .         - .         PUNCT .   punct 1 - -         -      -          -      -              -

# sent_i = 321
# sent = We intend taking immediate action.
# hyperedge = (intend/Pd.sr:01:01.|f:01 we/Ci (taking/P.-o:0k:!!.|pg we/Ci (immediate/Ma.< action/Cc..s)))
# hyperedge builder = (321.1/Pd.sr:01:01.|f:01 321.0/Ci (321.2/P.-o:0k:!!.|pg 321.0/Ci (321.3/Ma.< 321.4/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
321 0 We        + we        PRON  PRP nsubj 1 - -         B-ARG0 -          B-ARG0     -              we/Ci
321 1 intend    + intend    VERB  VBP ROOT  1 - intend.01 B-V    -          -          intend.v.01    intend/Pd.sr:01:01.|f:01
321 2 taking    + take      VERB  VBG xcomp 1 - take.LV   B-ARG1 B-V        B-ARGM-LVB take.v.01      taking/P.-o:0k:!!.|pg
321 3 immediate + immediate ADJ   JJ  amod  4 - -         I-ARG1 -          -          immediate.s.05 immediate/Ma.<
321 4 action    - action    NOUN  NN  dobj  2 - act.02    I-ARG1 B-ARGM-PRR B-V        action.n.01    action/Cc..s
321 5 .         - .         PUNCT .   punct 1 - -         -      -          -          -              -

# sent_i = 322
# sent = I didn't like to complain.
# hyperedge = ((did/Mv.< (n't/Mn.< like/Pd.sr:01:01.-i:01)) i/Ci ((to/Mi.< complain/P.-:0:0.-i:012) i/Ci))
# hyperedge builder = ((322.1/Mv.< (322.2/Mn.< 322.3/Pd.sr:01:01.-i:01)) 322.0/Ci ((322.4/Mi.< 322.5/P.-:0:0.-i:012) 322.0/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
322 0 I        + I        PRON  PRP nsubj 3 - -           -   B-ARG0     B-ARG0 -             i/Ci
322 1 did      - do       AUX   VBD aux   3 - do.01       B-V -          -      -             did/Mv.<
322 2 n't      + not      PART  RB  neg   3 - -           -   B-ARGM-NEG -      not.r.01      n't/Mn.<
322 3 like     + like     VERB  VB  ROOT  3 - like.01     -   B-V        -      wish.v.02     like/Pd.sr:01:01.-i:01
322 4 to       + to       PART  TO  aux   5 - -           -   B-ARG1     -      -             to/Mi.<
322 5 complain - complain VERB  VB  xcomp 3 - complain.01 -   I-ARG1     B-V    complain.v.01 complain/P.-:0:0.-i:012
322 6 .        - .        PUNCT .   punct 3 - -           -   -          -      -             -

# sent_i = 323
# sent = I didn't complain because it wasn't a good idea.
# hyperedge = ((did/Mv.< (n't/Mn.< complain/Pd.sx:0c:0c.-i:012)) i/Ci (because/T ((n't/Mn.> was/P.sc:12:1h.<f:12) it/Ci (a/Md.< (good/Ma.< idea/Cc..s)))))
# hyperedge builder = ((323.1/Mv.< (323.2/Mn.< 323.3/Pd.sx:0c:0c.-i:012)) 323.0/Ci (323.4/T ((323.7/Mn.> 323.6/P.sc:12:1h.<f:12) 323.5/Ci (323.8/Md.< (323.9/Ma.< 323.10/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
323 0  I        + I        PRON  PRP nsubj 3  - -           -   B-ARG0     -          -             i/Ci
323 1  did      - do       AUX   VBD aux   3  - do.01       B-V -          -          -             did/Mv.<
323 2  n't      + not      PART  RB  neg   3  - -           -   B-ARGM-NEG -          not.r.01      n't/Mn.<
323 3  complain + complain VERB  VB  ROOT  3  - complain.01 -   B-V        -          complain.v.01 complain/Pd.sx:0c:0c.-i:012
323 4  because  + because  SCONJ IN  mark  6  - -           -   B-ARGM-CAU -          -             because/T
323 5  it       + it       PRON  PRP nsubj 6  - -           -   I-ARGM-CAU B-ARG1     -             it/Ci
323 6  was      - be       VERB  VBD advcl 3  - be.01       -   I-ARGM-CAU B-V        be.v.01       was/P.sc:12:1h.<f:12
323 7  n't      + not      PART  RB  neg   6  - -           -   I-ARGM-CAU B-ARGM-NEG not.r.01      n't/Mn.>
323 8  a        + a        DET   DT  det   10 - -           -   I-ARGM-CAU B-ARG2     -             a/Md.<
323 9  good     + good     ADJ   JJ  amod  10 - -           -   I-ARGM-CAU I-ARG2     good.a.01     good/Ma.<
323 10 idea     - idea     NOUN  NN  attr  6  - -           -   I-ARGM-CAU I-ARG2     idea.n.01     idea/Cc..s
323 11 .        - .        PUNCT .   punct 3  - -           -   -          -          -             -

# sent_i = 324
# sent = I didn't like complaining.
# hyperedge = ((did/Mv.< (n't/Mn.< like/Pd.sr:01:01.-i:01)) i/Ci (complaining/P.-:0:0.|pg:012 i/Ci))
# hyperedge builder = ((324.1/Mv.< (324.2/Mn.< 324.3/Pd.sr:01:01.-i:01)) 324.0/Ci (324.4/P.-:0:0.|pg:012 324.0/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
324 0 I           + I        PRON  PRP nsubj 3 - -           -   B-ARG0     B-ARG0 -             i/Ci
324 1 did         - do       AUX   VBD aux   3 - do.01       B-V -          -      -             did/Mv.<
324 2 n't         + not      PART  RB  neg   3 - -           -   B-ARGM-NEG -      not.r.01      n't/Mn.<
324 3 like        + like     VERB  VB  ROOT  3 - like.01     -   B-V        -      like.v.02     like/Pd.sr:01:01.-i:01
324 4 complaining - complain VERB  VBG xcomp 3 - complain.01 -   B-ARG1     B-V    complain.v.01 complaining/P.-:0:0.|pg:012
324 5 .           - .        PUNCT .   punct 3 - -           -   -          -      -             -

# sent_i = 325
# sent = Don't bother to wash up.
# hyperedge = ((do/Mv.< (n't/Mn.< bother/Pd.r:1:h.-i:01)) ((to/Mi.< (up/Ml.r.> wash/P.::.-i:0123))))
# hyperedge builder = ((325.0/Mv.< (325.1/Mn.< 325.2/Pd.r:1:h.-i:01)) ((325.3/Mi.< (325.5/Ml.r.> 325.4/P.::.-i:0123))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
325 0 Do     - do     AUX   VB aux   2 - do.01      B-V -          -   -                    do/Mv.<
325 1 n't    + not    PART  RB neg   2 - -          -   B-ARGM-NEG -   not.r.01             n't/Mn.<
325 2 bother + bother VERB  VB ROOT  2 - bother.02  -   B-V        -   trouble_oneself.v.01 bother/Pd.r:1:h.-i:01
325 3 to     + to     PART  TO aux   4 - -          -   B-ARG1     -   -                    to/Mi.<
325 4 wash   + wash   VERB  VB xcomp 2 - wash_up.06 -   I-ARG1     B-V wash_up.v.01         wash/P.::.-i:0123
325 5 up     - up     ADP   RP prt   4 - -          -   I-ARG1     -   wash_up.v.01         up/Ml.r.>
325 6 .      - .      PUNCT .  punct 2 - -          -   -          -   -                    -

# sent_i = 326
# sent = Don't bother washing up.
# hyperedge = ((do/Mv.< (n't/Mn.< bother/Pd.r:1:h.-i:01)) ((up/Ml.r.> washing/P.::.|pg:0123)))
# hyperedge builder = ((326.0/Mv.< (326.1/Mn.< 326.2/Pd.r:1:h.-i:01)) ((326.4/Ml.r.> 326.3/P.::.|pg:0123)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
326 0 Do      - do     AUX   VB  aux   2 - do.01      B-V -          -   -                    do/Mv.<
326 1 n't     + not    PART  RB  neg   2 - -          -   B-ARGM-NEG -   not.r.01             n't/Mn.<
326 2 bother  + bother VERB  VB  ROOT  2 - bother.02  -   B-V        -   trouble_oneself.v.01 bother/Pd.r:1:h.-i:01
326 3 washing + wash   VERB  VBG xcomp 2 - wash_up.06 -   B-ARG1     B-V wash_up.v.01         washing/P.::.|pg:0123
326 4 up      - up     ADP   RP  prt   3 - -          -   I-ARG1     -   wash_up.v.01         up/Ml.r.>
326 5 .       - .      PUNCT .   punct 2 - -          -   -          -   -                    -

# sent_i = 327
# sent = At the next services he stopped to buy a newspaper.
# hyperedge = (stopped/Pd.xsr:l0i:l0i.<f:012 (at/Tl (the/Md.< (next/Ma.< services/Cc..p))) he/Ci ((to/Mi.< buy/P.-o:01:01.-i:01234) he/Ci (a/Md.< newspaper/Cc..s)))
# hyperedge builder = (327.5/Pd.xsr:l0i:l0i.<f:012 (327.0/Tl (327.1/Md.< (327.2/Ma.< 327.3/Cc..p))) 327.4/Ci ((327.6/Mi.< 327.7/P.-o:01:01.-i:01234) 327.4/Ci (327.8/Md.< 327.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
327 0  At        + at        ADP   IN  prep  5 - -       B-ARGM-LOC -      -              at/Tl
327 1  the       + the       DET   DT  det   3 - -       I-ARGM-LOC -      -              the/Md.<
327 2  next      + next      ADJ   JJ  amod  3 - -       I-ARGM-LOC -      adjacent.s.01  next/Ma.<
327 3  services  + service   NOUN  NNS pobj  0 - -       I-ARGM-LOC -      service.n.04   services/Cc..p
327 4  he        + he        PRON  PRP nsubj 5 - -       B-ARG0     B-ARG0 -              he/Ci
327 5  stopped   + stop      VERB  VBD ROOT  5 - stop.01 B-V        -      stop.v.01      stopped/Pd.xsr:l0i:l0i.<f:012
327 6  to        + to        PART  TO  aux   7 - -       B-ARGM-PRP -      -              to/Mi.<
327 7  buy       + buy       VERB  VB  xcomp 5 - buy.01  I-ARGM-PRP B-V    buy.v.01       buy/P.-o:01:01.-i:01234
327 8  a         + a         DET   DT  det   9 - -       I-ARGM-PRP B-ARG1 -              a/Md.<
327 9  newspaper - newspaper NOUN  NN  dobj  7 - -       I-ARGM-PRP I-ARG1 newspaper.n.01 newspaper/Cc..s
327 10 .         - .         PUNCT .   punct 5 - -       -          -      -              -

# sent_i = 328
# sent = You'd better stop dreaming and get on with some work.
# hyperedge = (and/J (('d/Mm.< stop/Pd.s?r:0r1:0r1.-i:012) you/Ci better/M (dreaming/P.-:0:1.|pg:01 you/Ci)) ((with/Ml.r.> (on/Ml.r.> get/Pd.-o:0-:0-.-i:01)) you/Ci (some/Md.< work/Cc..s)))
# hyperedge builder = (328.5/J ((328.1/Mm.< 328.3/Pd.s?r:0r1:0r1.-i:012) 328.0/Ci 328.2/M (328.4/P.-:0:1.|pg:01 328.0/Ci)) ((328.8/Ml.r.> (328.7/Ml.r.> 328.6/Pd.-o:0-:0-.-i:01)) 328.0/Ci (328.9/Md.< 328.10/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
328 0  You      - you    PRON  PRP nsubj  3  - -         B-ARG0 B-ARG0     B-ARG0 B-ARG0 -                you/Ci
328 1  'd       + have   VERB  MD  aux    3  - have.07   B-V    B-ARGM-MOD -      -      -                'd/Mm.<
328 2  better   + better ADV   RB  advmod 3  - -         B-ARG1 B-ARGM-ADV -      -      better.s.03      better/M
328 3  stop     + stop   VERB  VB  ROOT   3  - stop.01   B-ARG2 B-V        -      -      discontinue.v.01 stop/Pd.s?r:0r1:0r1.-i:012
328 4  dreaming + dream  VERB  VBG xcomp  3  - dream.01  I-ARG2 B-ARG1     B-V    -      dream.v.01       dreaming/P.-:0:1.|pg:01
328 5  and      + and    CCONJ CC  cc     3  - -         -      -          -      -      -                and/J
328 6  get      + get    VERB  VB  conj   3  - get_on.21 -      -          -      B-V    progress.v.01    get/Pd.-o:0-:0-.-i:01
328 7  on       + on     ADP   RP  prt    6  - -         -      -          -      -      progress.v.01    on/Ml.r.>
328 8  with     + with   ADP   RP  prt    6  - -         -      -          -      B-ARG1 -                with/Ml.r.>
328 9  some     + some   DET   DT  det    10 - -         -      -          -      I-ARG1 some.a.01        some/Md.<
328 10 work     - work   NOUN  NN  dobj   6  - -         -      -          -      I-ARG1 work.n.01        work/Cc..s
328 11 .        - .      PUNCT .   punct  3  - -         -      -          -      -      -                -

# sent_i = 329
# sent = I expected Dave to meet me at the airport.
# hyperedge = (expected/Pd.sr:01:01.<f:01 i/Ci ((to/Mi.< meet/P.sox:01l:0ol.-i:01) dave/Cp..s.p (+/Jc.rm.rr me/Ci i/Ci) (at/Tl (the/Md.< airport/Cc..s))))
# hyperedge builder = (329.1/Pd.sr:01:01.<f:01 329.0/Ci ((329.3/Mi.< 329.4/P.sox:01l:0ol.-i:01) 329.2/Cp..s.p (+/Jc.rm.rr 329.5/Ci 329.0/Ci) (329.6/Tl (329.7/Md.< 329.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
329 0 I        + I       PRON  PRP nsubj 1 -        -         B-ARG0 -          B-MAIN0 -            i/Ci
329 1 expected + expect  VERB  VBD ROOT  1 -        expect.01 B-V    -          -       expect.v.01  expected/Pd.sr:01:01.<f:01
329 2 Dave     + Dave    PROPN NNP nsubj 4 B-PERSON -         B-ARG1 B-ARG0     -       -            dave/Cp..s.p
329 3 to       + to      PART  TO  aux   4 -        -         I-ARG1 -          -       -            to/Mi.<
329 4 meet     + meet    VERB  VB  ccomp 1 -        meet.03   I-ARG1 B-V        -       meet.v.01    meet/P.sox:01l:0ol.-i:01
329 5 me       + I       PRON  PRP dobj  4 -        -         I-ARG1 B-ARG1     B-REF0  -            me/Ci
329 6 at       + at      ADP   IN  prep  4 -        -         I-ARG1 B-ARGM-LOC -       -            at/Tl
329 7 the      + the     DET   DT  det   8 -        -         I-ARG1 I-ARGM-LOC -       -            the/Md.<
329 8 airport  - airport NOUN  NN  pobj  6 -        -         I-ARG1 I-ARGM-LOC -       airport.n.01 airport/Cc..s
329 9 .        - .       PUNCT .   punct 1 -        -         -      -          -       -            -

# sent_i = 330
# sent = We asked the teacher not to give us any homework.
# hyperedge = (asked/Pd.sor:021:0g1.<f:012 we/Ci (the/Md.< teacher/Cc..s) ((not/Mn.< (to/Mi.< give/P.-io:021:0g1.-i:012)) (the/Md.< teacher/Cc..s) (+/Jc.rm.rr us/Ci we/Ci) (any/Md.< homework/Cc..s)))
# hyperedge builder = (330.1/Pd.sor:021:0g1.<f:012 330.0/Ci (330.2/Md.< 330.3/Cc..s) ((330.4/Mn.< (330.5/Mi.< 330.6/P.-io:021:0g1.-i:012)) (330.2/Md.< 330.3/Cc..s) (+/Jc.rm.rr 330.7/Ci 330.0/Ci) (330.8/Md.< 330.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
330 0  We       + we       PRON  PRP nsubj  1 - -       B-ARG0 -          B-MAIN0 -             we/Ci
330 1  asked    + ask      VERB  VBD ROOT   1 - ask.02  B-V    -          -       ask.v.02      asked/Pd.sor:021:0g1.<f:012
330 2  the      + the      DET   DT  det    3 - -       B-ARG2 B-ARG0     -       -             the/Md.<
330 3  teacher  + teacher  NOUN  NN  dobj   1 - -       I-ARG2 I-ARG0     -       teacher.n.01  teacher/Cc..s
330 4  not      + not      PART  RB  neg    6 - -       B-ARG1 B-ARGM-NEG -       not.r.01      not/Mn.<
330 5  to       + to       PART  TO  aux    6 - -       I-ARG1 -          -       -             to/Mi.<
330 6  give     + give     VERB  VB  xcomp  1 - give.01 I-ARG1 B-V        -       give.v.03     give/P.-io:021:0g1.-i:012
330 7  us       + we       PRON  PRP dative 6 - -       I-ARG1 B-ARG2     B-REF0  -             us/Ci
330 8  any      + any      DET   DT  det    9 - -       I-ARG1 B-ARG1     -       any.s.01      any/Md.<
330 9  homework - homework NOUN  NN  dobj   6 - -       I-ARG1 I-ARG1     -       homework.n.01 homework/Cc..s
330 10 .        - .        PUNCT .   punct  1 - -       -      -          -       -             -

# sent_i = 331
# sent = The doctor told Celia to stay in bed.
# hyperedge = (told/Pd.sor:021:0g1.<f:012 (the/Md.< doctor/Cc..s) celia/Cp..s.p ((to/Mi.< stay/P.-x:13:1h.-i:123) celia/Cp..s.p (in/T bed/Cc..s)))
# hyperedge builder = (331.2/Pd.sor:021:0g1.<f:012 (331.0/Md.< 331.1/Cc..s) 331.3/Cp..s.p ((331.4/Mi.< 331.5/P.-x:13:1h.-i:123) 331.3/Cp..s.p (331.6/T 331.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
331 0 The    + the    DET   DT  det   1 -        -       B-ARG0 -      -           the/Md.<
331 1 doctor + doctor NOUN  NN  nsubj 2 -        -       I-ARG0 -      doctor.n.01 doctor/Cc..s
331 2 told   + tell   VERB  VBD ROOT  2 -        tell.01 B-V    -      order.v.01  told/Pd.sor:021:0g1.<f:012
331 3 Celia  + Celia  PROPN NNP dobj  2 B-PERSON -       B-ARG2 B-ARG1 -           celia/Cp..s.p
331 4 to     + to     PART  TO  aux   5 -        -       B-ARG1 -      -           to/Mi.<
331 5 stay   + stay   VERB  VB  xcomp 2 -        stay.01 I-ARG1 B-V    stay.v.01   stay/P.-x:13:1h.-i:123
331 6 in     + in     ADP   IN  prep  5 -        -       I-ARG1 B-ARG3 -           in/T
331 7 bed    - bed    NOUN  NN  pobj  6 -        -       I-ARG1 I-ARG3 bed.n.01    bed/Cc..s
331 8 .      - .      PUNCT .   punct 2 -        -       -      -      -           -

# sent_i = 332
# sent = The crisis has forced the government to act.
# hyperedge = ((has/Mv.< forced/Pd.sor:012:01h.<pf:012) (the/Md.< crisis/Cc..s) (the/Md.< government/Cc..s) ((to/Mi.< act/P.-:0:0.-i:01) (the/Md.< government/Cc..s)))
# hyperedge builder = ((332.2/Mv.< 332.3/Pd.sor:012:01h.<pf:012) (332.0/Md.< 332.1/Cc..s) (332.4/Md.< 332.5/Cc..s) ((332.6/Mi.< 332.7/P.-:0:0.-i:01) (332.4/Md.< 332.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
332 0 The        + the        DET   DT  det   1 - -        -   B-ARG0 -      -               the/Md.<
332 1 crisis     + crisis     NOUN  NN  nsubj 3 - -        -   I-ARG0 -      crisis.n.01     crisis/Cc..s
332 2 has        + have       AUX   VBZ aux   3 - have.01  B-V -      -      -               has/Mv.<
332 3 forced     + force      VERB  VBN ROOT  3 - force.01 -   B-V    -      coerce.v.01     forced/Pd.sor:012:01h.<pf:012
332 4 the        + the        DET   DT  det   5 - -        -   B-ARG1 B-ARG0 -               the/Md.<
332 5 government + government NOUN  NN  dobj  3 - -        -   I-ARG1 I-ARG0 government.n.01 government/Cc..s
332 6 to         + to         PART  TO  aux   7 - -        -   B-ARG2 -      -               to/Mi.<
332 7 act        - act        VERB  VB  xcomp 3 - act.02   -   I-ARG2 B-V    act.v.01        act/P.-:0:0.-i:01
332 8 .          - .          PUNCT .   punct 3 - -        -   -      -      -               -

# sent_i = 333
# sent = The police believed the Mafia to have committed the crime.
# hyperedge = (believed/Pd.sr:01:01.<f:012 (the/Md.< police/Cc..s) ((to/Mi.< (have/Mv.< committed/P.so:01:01.<pf:01)) (the/Md.< mafia/Cp..s.o) (the/Md.< crime/Cc..s)))
# hyperedge builder = (333.2/Pd.sr:01:01.<f:012 (333.0/Md.< 333.1/Cc..s) ((333.5/Mi.< (333.6/Mv.< 333.7/P.so:01:01.<pf:01)) (333.3/Md.< 333.4/Cp..s.o) (333.8/Md.< 333.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
333 0  The       + the     DET   DT  det   1 -     -          B-ARG0 -   -      -               the/Md.<
333 1  police    + police  NOUN  NN  nsubj 2 -     -          I-ARG0 -   -      police.n.01     police/Cc..s
333 2  believed  + believe VERB  VBD ROOT  2 -     believe.01 B-V    -   -      believe.v.01    believed/Pd.sr:01:01.<f:012
333 3  the       + the     DET   DT  det   4 -     -          B-ARG1 -   B-ARG0 -               the/Md.<
333 4  Mafia     + Mafia   PROPN NNP nsubj 7 B-ORG -          I-ARG1 -   I-ARG0 mafia.n.02      mafia/Cp..s.o
333 5  to        + to      PART  TO  aux   7 -     -          I-ARG1 -   -      -               to/Mi.<
333 6  have      + have    AUX   VB  aux   7 -     have.01    I-ARG1 B-V -      -               have/Mv.<
333 7  committed + commit  VERB  VBN ccomp 2 -     commit.02  I-ARG1 -   B-V    perpetrate.v.01 committed/P.so:01:01.<pf:01
333 8  the       + the     DET   DT  det   9 -     -          I-ARG1 -   B-ARG1 -               the/Md.<
333 9  crime     - crime   NOUN  NN  dobj  7 -     -          I-ARG1 -   I-ARG1 crime.n.01      crime/Cc..s
333 10 .         - .       PUNCT .   punct 2 -     -          -      -   -      -               -

# sent_i = 334
# sent = We consider ourselves to be a separate nation.
# hyperedge = (consider/Pd.sr:01:01.|f:01 we/Ci ((to/Mi.< be/P.-sc:1?2:1?h.-i:12) we/Ci (+/Jc.rm.rr ourselves/Ci we/Ci) (a/Md.< (separate/Ma.< nation/Cc..s))))
# hyperedge builder = (334.1/Pd.sr:01:01.|f:01 334.0/Ci ((334.3/Mi.< 334.4/P.-sc:1?2:1?h.-i:12) 334.0/Ci (+/Jc.rm.rr 334.2/Ci 334.0/Ci) (334.5/Md.< (334.6/Ma.< 334.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
334 0 We        + we        PRON  PRP nsubj 1 - -           B-ARG0 B-ARG1     B-MAIN0 -             we/Ci
334 1 consider  + consider  VERB  VBP ROOT  1 - consider.01 B-V    -          -       see.v.05      consider/Pd.sr:01:01.|f:01
334 2 ourselves + ourselves PRON  PRP nsubj 4 - -           B-ARG1 B-ARGM-REC B-REF0  -             ourselves/Ci
334 3 to        + to        PART  TO  aux   4 - -           I-ARG1 -          -       -             to/Mi.<
334 4 be        + be        VERB  VB  ccomp 1 - be.01       I-ARG1 B-V        -       be.v.01       be/P.-sc:1?2:1?h.-i:12
334 5 a         + a         DET   DT  det   7 - -           I-ARG1 B-ARG2     -       -             a/Md.<
334 6 separate  + separate  ADJ   JJ  amod  7 - -           I-ARG1 I-ARG2     -       separate.a.01 separate/Ma.<
334 7 nation    - nation    NOUN  NN  attr  4 - -           I-ARG1 I-ARG2     -       state.n.04    nation/Cc..s
334 8 .         - .         PUNCT .   punct 1 - -           -      -          -       -             -

# sent_i = 335
# sent = We consider ourselves a separate nation.
# hyperedge = (consider/Pd.soo:01-:01-.|f:01 we/Ci (+/Jc.rm.rr ourselves/Ci we/Ci) (a/Md.< (separate/Ma.< nation/Cc..s)))
# hyperedge builder = (335.1/Pd.soo:01-:01-.|f:01 335.0/Ci (+/Jc.rm.rr 335.2/Ci 335.0/Ci) (335.3/Md.< (335.4/Ma.< 335.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 coref1 synset atoms
335 0 We        + we        PRON  PRP nsubj 1 - -           B-ARG0 B-MAIN0 -             we/Ci
335 1 consider  + consider  VERB  VBP ROOT  1 - consider.01 B-V    -       see.v.05      consider/Pd.soo:01-:01-.|f:01
335 2 ourselves + ourselves PRON  PRP dobj  1 - -           B-ARG1 B-REF0  -             ourselves/Ci
335 3 a         + a         DET   DT  det   5 - -           I-ARG1 -       -             a/Md.<
335 4 separate  + separate  ADJ   JJ  amod  5 - -           I-ARG1 -       separate.a.01 separate/Ma.<
335 5 nation    - nation    NOUN  NN  dobj  1 - -           I-ARG1 -       state.n.04    nation/Cc..s
335 6 .         - .         PUNCT .   punct 1 - -           -      -       -             -

# sent_i = 336
# sent = I want everyone to enjoy themselves.
# hyperedge = (want/Pd.sr:01:01.|f:01234 i/Ci ((to/Mi.< enjoy/P.so:01:10.-i:01) everyone/Ci..s (+/Jc.rm.rr themselves/Ci everyone/Ci..s)))
# hyperedge builder = (336.1/Pd.sr:01:01.|f:01234 336.0/Ci ((336.3/Mi.< 336.4/P.so:01:10.-i:01) 336.2/Ci..s (+/Jc.rm.rr 336.5/Ci 336.2/Ci..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
336 0 I          + I          PRON  PRP nsubj 1 - -        B-ARG0 -      -       -           i/Ci
336 1 want       + want       VERB  VBP ROOT  1 - want.01  B-V    -      -       desire.v.01 want/Pd.sr:01:01.|f:01234
336 2 everyone   + everyone   PRON  NN  nsubj 4 - -        B-ARG1 B-ARG0 B-MAIN0 -           everyone/Ci..s
336 3 to         + to         PART  TO  aux   4 - -        I-ARG1 -      -       -           to/Mi.<
336 4 enjoy      + enjoy      VERB  VB  ccomp 1 - enjoy.01 I-ARG1 B-V    -       enjoy.v.01  enjoy/P.so:01:10.-i:01
336 5 themselves - themselves PRON  PRP dobj  4 - -        I-ARG1 B-ARG1 B-REF0  -           themselves/Ci
336 6 .          - .          PUNCT .   punct 1 - -        -      -      -       -           -

# sent_i = 337
# sent = I'd like you to hold the door open for me.
# hyperedge = (('d/Mm.< like/Pd.sr:01:01.-i:01) i/Ci ((to/Mi.< hold/P.sooi:01h2:01hg.-i:0123) you/Ci (the/Md.< door/Cc..s) open/M (for/T (+/Jc.rm.rr me/Ci i/Ci))))
# hyperedge builder = ((337.1/Mm.< 337.2/Pd.sr:01:01.-i:01) 337.0/Ci ((337.4/Mi.< 337.5/P.sooi:01h2:01hg.-i:0123) 337.3/Ci (337.6/Md.< 337.7/Cc..s) 337.8/M (337.9/T (+/Jc.rm.rr 337.10/Ci 337.0/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
337 0  I    - I     PRON  PRP nsubj  2 - -       -   B-ARG0     -          B-MAIN0 -         i/Ci
337 1  'd   + would AUX   MD  aux    2 - -       B-V B-ARGM-MOD -          -       -         'd/Mm.<
337 2  like + like  VERB  VB  ROOT   2 - like.02 -   B-V        -          -       wish.v.02 like/Pd.sr:01:01.-i:01
337 3  you  + you   PRON  PRP nsubj  5 - -       -   B-ARG1     B-ARG0     -       -         you/Ci
337 4  to   + to    PART  TO  aux    5 - -       -   I-ARG1     -          -       -         to/Mi.<
337 5  hold + hold  VERB  VB  ccomp  2 - hold.01 -   I-ARG1     B-V        -       hold.v.02 hold/P.sooi:01h2:01hg.-i:0123
337 6  the  + the   DET   DT  det    7 - -       -   I-ARG1     B-ARG1     -       -         the/Md.<
337 7  door + door  NOUN  NN  dobj   5 - -       -   I-ARG1     I-ARG1     -       door.n.01 door/Cc..s
337 8  open + open  ADJ   JJ  oprd   5 - -       -   I-ARG1     B-ARGM-PRD -       open.a.01 open/M
337 9  for  + for   ADP   IN  dative 5 - -       -   I-ARG1     B-ARG2     -       -         for/T
337 10 me   - I     PRON  PRP pobj   9 - -       -   I-ARG1     I-ARG2     B-REF0  -         me/Ci
337 11 .    - .     PUNCT .   punct  2 - -       -   -          -          -       -         -

# sent_i = 338
# sent = It is difficult to solve the problem.
# hyperedge = (is/Pd.scr:-21:-h1.|f--3s:12 it/Ci difficult/Ca ((to/Mi.< solve/P.o:1:1.-i:012) (the/Md.< problem/Cc..s)))
# hyperedge builder = (338.1/Pd.scr:-21:-h1.|f--3s:12 338.0/Ci 338.2/Ca ((338.3/Mi.< 338.4/P.o:1:1.-i:012) (338.5/Md.< 338.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
338 0 It        + it        PRON  PRP nsubj 1 - -        -      -      -              it/Ci
338 1 is        + be        AUX   VBZ ROOT  1 - be.01    B-V    -      be.v.01        is/Pd.scr:-21:-h1.|f--3s:12
338 2 difficult + difficult ADJ   JJ  acomp 1 - -        B-ARG2 -      difficult.a.01 difficult/Ca
338 3 to        + to        PART  TO  aux   4 - -        B-ARG1 -      -              to/Mi.<
338 4 solve     + solve     VERB  VB  xcomp 1 - solve.01 I-ARG1 B-V    solve.v.01     solve/P.o:1:1.-i:012
338 5 the       + the       DET   DT  det   6 - -        I-ARG1 B-ARG1 -              the/Md.<
338 6 problem   - problem   NOUN  NN  dobj  4 - -        I-ARG1 I-ARG1 problem.n.02   problem/Cc..s
338 7 .         - .         PUNCT .   punct 1 - -        -      -      -              -

# sent_i = 339
# sent = It is rare to see a horse and cart nowadays.
# hyperedge = (is/Pd.scr:-21:-h1.|f--3s:12 it/Ci rare/Ca ((to/Mi.< see/P.o?:1t:1t.-i:012) (and/J (a/Md.< horse/Cc..s) cart/Cc..s) nowadays/M))
# hyperedge builder = (339.1/Pd.scr:-21:-h1.|f--3s:12 339.0/Ci 339.2/Ca ((339.3/Mi.< 339.4/P.o?:1t:1t.-i:012) (339.7/J (339.5/Md.< 339.6/Cc..s) 339.8/Cc..s) 339.9/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
339 0  It       + it       PRON  PRP nsubj  1 - -      -      -          -             it/Ci
339 1  is       + be       AUX   VBZ ROOT   1 - be.01  B-V    -          be.v.01       is/Pd.scr:-21:-h1.|f--3s:12
339 2  rare     + rare     ADJ   JJ  acomp  1 - -      B-ARG2 -          rare.s.01     rare/Ca
339 3  to       + to       PART  TO  aux    4 - -      B-ARG1 -          -             to/Mi.<
339 4  see      + see      VERB  VB  xcomp  1 - see.01 I-ARG1 B-V        see.v.01      see/P.o?:1t:1t.-i:012
339 5  a        + a        DET   DT  det    6 - -      I-ARG1 B-ARG1     -             a/Md.<
339 6  horse    + horse    NOUN  NN  dobj   4 - -      I-ARG1 I-ARG1     horse.n.01    horse/Cc..s
339 7  and      + and      CCONJ CC  cc     6 - -      I-ARG1 I-ARG1     -             and/J
339 8  cart     + cart     NOUN  NN  conj   6 - -      I-ARG1 I-ARG1     cart.n.01     cart/Cc..s
339 9  nowadays - nowadays ADV   RB  advmod 4 - -      I-ARG1 B-ARGM-TMP nowadays.r.01 nowadays/M
339 10 .        - .        PUNCT .   punct  1 - -      -      -          -             -

# sent_i = 340
# sent = It was easy to write the letter.
# hyperedge = (was/Pd.scr:-21:-h1.<f:12 it/Ci easy/Ca ((to/Mi.< write/P.o:1:1.-i:012) (the/Md.< letter/Cc..s)))
# hyperedge builder = (340.1/Pd.scr:-21:-h1.<f:12 340.0/Ci 340.2/Ca ((340.3/Mi.< 340.4/P.o:1:1.-i:012) (340.5/Md.< 340.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
340 0 It     + it     PRON  PRP nsubj 1 - -        -      -      -           it/Ci
340 1 was    + be     AUX   VBD ROOT  1 - be.01    B-V    -      be.v.01     was/Pd.scr:-21:-h1.<f:12
340 2 easy   + easy   ADJ   JJ  acomp 1 - -        B-ARG2 -      easy.a.01   easy/Ca
340 3 to     + to     PART  TO  aux   4 - -        B-ARG1 -      -           to/Mi.<
340 4 write  + write  VERB  VB  xcomp 1 - write.01 I-ARG1 B-V    write.v.01  write/P.o:1:1.-i:012
340 5 the    + the    DET   DT  det   6 - -        I-ARG1 B-ARG1 -           the/Md.<
340 6 letter - letter NOUN  NN  dobj  4 - -        I-ARG1 I-ARG1 letter.n.01 letter/Cc..s
340 7 .      - .      PUNCT .   punct 1 - -        -      -      -           -

# sent_i = 341
# sent = The letter was easy to write.
# hyperedge = (was/Pd.sc:12:1h.<f:12 (the/Md.< letter/Cc..s) (+/Br.am easy/Ca ((to/Mi.< write/P.-:1:1.-i:012) (the/Md.< letter/Cc..s))))
# hyperedge builder = (341.2/Pd.sc:12:1h.<f:12 (341.0/Md.< 341.1/Cc..s) (+/Br.am 341.3/Ca ((341.4/Mi.< 341.5/P.-:1:1.-i:012) (341.0/Md.< 341.1/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
341 0 The    + the    DET   DT  det   1 - -        B-ARG1 B-ARG1 -           the/Md.<
341 1 letter + letter NOUN  NN  nsubj 2 - -        I-ARG1 I-ARG1 letter.n.01 letter/Cc..s
341 2 was    + be     AUX   VBD ROOT  2 - be.01    B-V    -      be.v.01     was/Pd.sc:12:1h.<f:12
341 3 easy   + easy   ADJ   JJ  acomp 2 - -        B-ARG2 -      easy.a.01   easy/Ca
341 4 to     + to     PART  TO  aux   5 - -        I-ARG2 -      -           to/Mi.<
341 5 write  - write  VERB  VB  xcomp 3 - write.01 I-ARG2 B-V    write.v.01  write/P.-:1:1.-i:012
341 6 .      - .      PUNCT .   punct 2 - -        -      -      -           -

# sent_i = 342
# sent = It was an easy letter to write.
# hyperedge = (was/Pd.sc:12:1h.<f:12 it/Ci (+/Jr.ma (an/Md.< (easy/Ma.< letter/Cc..s)) ((to/Mi.< write/P.-:1:1.-i:012) (an/Md.< (easy/Ma.< letter/Cc..s)))))
# hyperedge builder = (342.1/Pd.sc:12:1h.<f:12 342.0/Ci (+/Jr.ma (342.2/Md.< (342.3/Ma.< 342.4/Cc..s)) ((342.5/Mi.< 342.6/P.-:1:1.-i:012) (342.2/Md.< (342.3/Ma.< 342.4/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
342 0 It     + it     PRON  PRP nsubj 1 - -        B-ARG1 -      -           it/Ci
342 1 was    + be     AUX   VBD ROOT  1 - be.01    B-V    -      be.v.01     was/Pd.sc:12:1h.<f:12
342 2 an     + an     DET   DT  det   4 - -        B-ARG2 B-ARG1 -           an/Md.<
342 3 easy   + easy   ADJ   JJ  amod  4 - -        I-ARG2 I-ARG1 easy.a.01   easy/Ma.<
342 4 letter + letter NOUN  NN  attr  1 - -        I-ARG2 I-ARG1 letter.n.01 letter/Cc..s
342 5 to     + to     PART  TO  aux   6 - -        I-ARG2 -      -           to/Mi.<
342 6 write  - write  VERB  VB  relcl 4 - write.01 I-ARG2 B-V    write.v.01  write/P.-:1:1.-i:012
342 7 .      - .      PUNCT .   punct 1 - -        -      -      -           -

# sent_i = 343
# sent = The coffee was too hot to drink.
# hyperedge = (was/Pd.sc:12:1h.<f:12 (the/Md.< coffee/Cc..s) (+/Br.am (too/M.< hot/Ca) ((to/Mi.< drink/P.-:1:1.-i:012) (the/Md.< coffee/Cc..s))))
# hyperedge builder = (343.2/Pd.sc:12:1h.<f:12 (343.0/Md.< 343.1/Cc..s) (+/Br.am (343.3/M.< 343.4/Ca) ((343.5/Mi.< 343.6/P.-:1:1.-i:012) (343.0/Md.< 343.1/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
343 0 The    + the    DET   DT  det    1 - -        B-ARG1 B-ARG1 -                the/Md.<
343 1 coffee + coffee NOUN  NN  nsubj  2 - -        I-ARG1 I-ARG1 coffee.n.01      coffee/Cc..s
343 2 was    + be     AUX   VBD ROOT   2 - be.01    B-V    -      be.v.01          was/Pd.sc:12:1h.<f:12
343 3 too    + too    ADV   RB  advmod 4 - -        B-ARG2 -      excessively.r.01 too/M.<
343 4 hot    + hot    ADJ   JJ  acomp  2 - -        I-ARG2 -      hot.a.01         hot/Ca
343 5 to     + to     PART  TO  aux    6 - -        I-ARG2 -      -                to/Mi.<
343 6 drink  - drink  VERB  VB  xcomp  4 - drink.01 I-ARG2 B-V    drink.v.01       drink/P.-:1:1.-i:012
343 7 .      - .      PUNCT .   punct  2 - -        -      -      -                -

# sent_i = 344
# sent = This rucksack isn't big enough to get everything in.
# hyperedge = ((n't/Mn.> is/Pd.sc:12:1h.|f--3s:12) (this/Md.< rucksack/Cc..s) (+/Br.am (enough/M.> big/Ca) ((to/Mi.< (in/Ml.r.> get/P.-o:01:01.-i:01234)) (this/Md.< rucksack/Cc..s) everything/Ci..s)))
# hyperedge builder = ((344.3/Mn.> 344.2/Pd.sc:12:1h.|f--3s:12) (344.0/Md.< 344.1/Cc..s) (+/Br.am (344.5/M.> 344.4/Ca) ((344.6/Mi.< (344.9/Ml.r.> 344.7/P.-o:01:01.-i:01234)) (344.0/Md.< 344.1/Cc..s) 344.8/Ci..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
344 0  This       + this       DET   DT  det    1 - -      B-ARG1     B-ARG0 -             this/Md.<
344 1  rucksack   + rucksack   NOUN  NN  nsubj  2 - -      I-ARG1     I-ARG0 backpack.n.01 rucksack/Cc..s
344 2  is         - be         AUX   VBZ ROOT   2 - be.01  B-V        -      be.v.01       is/Pd.sc:12:1h.|f--3s:12
344 3  n't        + not        PART  RB  neg    2 - -      B-ARGM-NEG -      not.r.01      n't/Mn.>
344 4  big        + big        ADJ   JJ  acomp  2 - -      B-ARG2     -      large.a.01    big/Ca
344 5  enough     + enough     ADV   RB  advmod 4 - -      I-ARG2     -      enough.r.01   enough/M.>
344 6  to         + to         PART  TO  aux    7 - -      I-ARG2     -      -             to/Mi.<
344 7  get        + get        VERB  VB  xcomp  4 - get.01 I-ARG2     B-V    enter.v.01    get/P.-o:01:01.-i:01234
344 8  everything + everything PRON  NN  dobj   7 - -      I-ARG2     B-ARG1 -             everything/Ci..s
344 9  in         - in         ADP   RP  prt    7 - -      I-ARG2     B-ARG2 enter.v.01    in/Ml.r.>
344 10 .          - .          PUNCT .   punct  2 - -      -          -      -             -

# sent_i = 345
# sent = We were sorry to hear your bad news.
# hyperedge = (were/Pd.sc:12:1h.<f:12 we/Ci (+/Br.am sorry/Ca ((to/Mi.< hear/P.-o:01:01.-i:012) we/Ci (your/Mp (bad/Ma.< news/Cc..s)))))
# hyperedge builder = (345.1/Pd.sc:12:1h.<f:12 345.0/Ci (+/Br.am 345.2/Ca ((345.3/Mi.< 345.4/P.-o:01:01.-i:012) 345.0/Ci (345.5/Mp (345.6/Ma.< 345.7/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
345 0 We    + we    PRON  PRP  nsubj 1 - -       B-ARG1 B-ARG0 -              we/Ci
345 1 were  + be    AUX   VBD  ROOT  1 - be.01   B-V    -      be.v.01        were/Pd.sc:12:1h.<f:12
345 2 sorry + sorry ADJ   JJ   acomp 1 - -       B-ARG2 -      regretful.a.01 sorry/Ca
345 3 to    + to    PART  TO   aux   4 - -       I-ARG2 -      -              to/Mi.<
345 4 hear  + hear  VERB  VB   xcomp 2 - hear.01 I-ARG2 B-V    hear.v.01      hear/P.-o:01:01.-i:012
345 5 your  + your  PRON  PRP$ poss  7 - -       I-ARG2 B-ARG1 -              your/Mp
345 6 bad   + bad   ADJ   JJ   amod  7 - -       I-ARG2 I-ARG1 bad.a.01       bad/Ma.<
345 7 news  - news  NOUN  NN   dobj  4 - -       I-ARG2 I-ARG1 news.n.01      news/Cc..s
345 8 .     - .     PUNCT .    punct 1 - -       -      -      -              -

# sent_i = 346
# sent = The peace talks are likely to last several weeks.
# hyperedge = (are/Pd.sc:--:--.:12 (the/Md.< (+/B.am peace/Cc.<.s talks/Cc..p)) (+/Br.am likely/Ca ((to/Mi.< last/P.-x:12:1q.-i:12) (the/Md.< (+/B.am peace/Cc.<.s talks/Cc..p)) (several/Ma.<..d weeks/Cc..p.d))))
# hyperedge builder = (346.3/Pd.sc:--:--.:12 (346.0/Md.< (+/B.am 346.1/Cc.<.s 346.2/Cc..p)) (+/Br.am 346.4/Ca ((346.5/Mi.< 346.6/P.-x:12:1q.-i:12) (346.0/Md.< (+/B.am 346.1/Cc.<.s 346.2/Cc..p)) (346.7/Ma.<..d 346.8/Cc..p.d))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
346 0 The     + the     DET   DT  det      2 -      -       -   B-ARG1     -            the/Md.<
346 1 peace   + peace   NOUN  NN  compound 2 -      -       -   I-ARG1     peace.n.01   peace/Cc.<.s
346 2 talks   + talk    NOUN  NNS nsubj    3 -      -       -   I-ARG1     talk.n.01    talks/Cc..p
346 3 are     + be      VERB  MD  ROOT     3 -      be.01   B-V B-ARGM-MOD -            are/Pd.sc:--:--.:12
346 4 likely  + likely  ADJ   JJ  acomp    3 -      -       -   -          likely.a.01  likely/Ca
346 5 to      + to      PART  TO  aux      6 -      -       -   -          -            to/Mi.<
346 6 last    + last    VERB  VB  xcomp    4 -      last.01 -   B-V        last.v.01    last/P.-x:12:1q.-i:12
346 7 several + several ADJ   JJ  amod     8 B-DATE -       -   B-ARG2     several.s.01 several/Ma.<..d
346 8 weeks   - week    NOUN  NNS npadvmod 6 I-DATE -       -   I-ARG2     week.n.01    weeks/Cc..p.d
346 9 .       - .       PUNCT .   punct    3 -      -       -   -          -            -

# sent_i = 347
# sent = The party is sure to be a great success.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (the/Md.< party/Cc..s) (+/Br.am sure/Ca ((to/Mi.< be/P.-c:12:1h.-i:12) (the/Md.< party/Cc..s) (a/Md.< (great/Ma.< success/Cc..s)))))
# hyperedge builder = (347.2/Pd.sc:12:1h.|f--3s:12 (347.0/Md.< 347.1/Cc..s) (+/Br.am 347.3/Ca ((347.4/Mi.< 347.5/P.-c:12:1h.-i:12) (347.0/Md.< 347.1/Cc..s) (347.6/Md.< (347.7/Ma.< 347.8/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
347 0 The     + the     DET   DT  det   1 - -     B-ARG1 B-ARG1 -            the/Md.<
347 1 party   + party   NOUN  NN  nsubj 2 - -     I-ARG1 I-ARG1 party.n.04   party/Cc..s
347 2 is      + be      AUX   VBZ ROOT  2 - be.01 B-V    -      be.v.01      is/Pd.sc:12:1h.|f--3s:12
347 3 sure    + sure    ADJ   JJ  acomp 2 - -     B-ARG2 -      certain.a.04 sure/Ca
347 4 to      + to      PART  TO  aux   5 - -     I-ARG2 -      -            to/Mi.<
347 5 be      + be      VERB  VB  xcomp 3 - be.01 I-ARG2 B-V    be.v.01      be/P.-c:12:1h.-i:12
347 6 a       + a       DET   DT  det   8 - -     I-ARG2 B-ARG2 -            a/Md.<
347 7 great   + great   ADJ   JJ  amod  8 - -     I-ARG2 I-ARG2 great.s.03   great/Ma.<
347 8 success - success NOUN  NN  attr  5 - -     I-ARG2 I-ARG2 success.n.01 success/Cc..s
347 9 .       - .       PUNCT .   punct 2 - -     -      -      -            -

# sent_i = 348
# sent = We shall never lose our determination to succeed.
# hyperedge = ((shall/Mm.< (never/Mn.< lose/Pd.so:01:01.-i:0123)) we/Ci (+/Jr.ma ((+/Jc.rm.rr our/Mp we/Ci) determination/Cc..s) ((to/Mi.< succeed/P.-:1:1.-i:01) ((+/Jc.rm.rr our/Mp we/Ci) determination/Cc..s))))
# hyperedge builder = ((348.1/Mm.< (348.2/Mn.< 348.3/Pd.so:01:01.-i:0123)) 348.0/Ci (+/Jr.ma ((+/Jc.rm.rr 348.4/Mp 348.0/Ci) 348.5/Cc..s) ((348.6/Mi.< 348.7/P.-:1:1.-i:01) ((+/Jc.rm.rr 348.4/Mp 348.0/Ci) 348.5/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
348 0 We            + we            PRON  PRP  nsubj 3 - -          B-ARG0     -      B-MAIN0 -                  we/Ci
348 1 shall         + shall         AUX   MD   aux   3 - -          B-ARGM-MOD -      -       -                  shall/Mm.<
348 2 never         + never         ADV   RB   neg   3 - -          B-ARGM-NEG -      -       never.r.01         never/Mn.<
348 3 lose          + lose          VERB  VB   ROOT  3 - lose.02    B-V        -      -       lose.v.01          lose/Pd.so:01:01.-i:0123
348 4 our           + our           PRON  PRP$ poss  5 - -          B-ARG1     B-ARG1 B-REF0  -                  our/Mp
348 5 determination + determination NOUN  NN   dobj  3 - -          I-ARG1     I-ARG1 -       determination.n.02 determination/Cc..s
348 6 to            + to            PART  TO   aux   7 - -          I-ARG1     -      -       -                  to/Mi.<
348 7 succeed       - succeed       VERB  VB   acl   5 - succeed.01 I-ARG1     B-V    -       succeed.v.01       succeed/P.-:1:1.-i:01
348 8 .             - .             PUNCT .    punct 3 - -          -          -      -       -                  -

# sent_i = 349
# sent = Our decision to oppose the scheme was the right one.
# hyperedge = (was/Pd.sc:12:1h.<f:12 (+/Jr.ma (our/Mp decision/Cc..s) ((to/Mi.< oppose/P.o:1:1.-i:01) (the/Md.< scheme/Cc..s))) (+/Jc.rm.cc (the/Md.< (right/Ma.< one/Cc..s)) (our/Mp decision/Cc..s)))
# hyperedge builder = (349.6/Pd.sc:12:1h.<f:12 (+/Jr.ma (349.0/Mp 349.1/Cc..s) ((349.2/Mi.< 349.3/P.o:1:1.-i:01) (349.4/Md.< 349.5/Cc..s))) (+/Jc.rm.cc (349.7/Md.< (349.8/Ma.< 349.9/Cc..s)) (349.0/Mp 349.1/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
349 0  Our      + our      PRON  PRP$ poss  1 - -         -      B-ARG1 B-MAIN0 -             our/Mp
349 1  decision + decision NOUN  NN   nsubj 6 - -         -      I-ARG1 I-MAIN0 decision.n.01 decision/Cc..s
349 2  to       + to       PART  TO   aux   3 - -         -      I-ARG1 -       -             to/Mi.<
349 3  oppose   + oppose   VERB  VB   acl   1 - oppose.01 B-V    I-ARG1 -       oppose.v.01   oppose/P.o:1:1.-i:01
349 4  the      + the      DET   DT   det   5 - -         B-ARG1 I-ARG1 -       -             the/Md.<
349 5  scheme   + scheme   NOUN  NN   dobj  3 - -         I-ARG1 I-ARG1 -       scheme.n.01   scheme/Cc..s
349 6  was      + be       AUX   VBD  ROOT  6 - be.01     -      B-V    -       be.v.01       was/Pd.sc:12:1h.<f:12
349 7  the      + the      DET   DT   det   9 - -         -      B-ARG2 B-REF0  -             the/Md.<
349 8  right    + right    ADJ   JJ   amod  9 - -         -      I-ARG2 I-REF0  correct.a.01  right/Ma.<
349 9  one      - one      NOUN  NN   attr  6 - -         -      I-ARG2 I-REF0  one.n.02      one/Cc..s
349 10 .        - .        PUNCT .    punct 6 - -         -      -      -       -             -

# sent_i = 350
# sent = I just don't know what to say.
# hyperedge = ((do/Mv.< (n't/Mn.< know/Pd.s?r:0r1:0r1.-i:012)) i/Ci just/M ((to/Mi.< say/P.-o:01:01.-i:0123) i/Ci what/Cw))
# hyperedge builder = ((350.2/Mv.< (350.3/Mn.< 350.4/Pd.s?r:0r1:0r1.-i:012)) 350.0/Ci 350.1/M ((350.6/Mi.< 350.7/P.-o:01:01.-i:0123) 350.0/Ci 350.5/Cw))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
350 0 I    + I    PRON  PRP nsubj  4 - -       -   B-ARG0     B-ARG0 -          i/Ci
350 1 just + just ADV   RB  advmod 4 - -       -   B-ARGM-ADV -      just.r.04  just/M
350 2 do   - do   AUX   VBP aux    4 - do.01   B-V -          -      -          do/Mv.<
350 3 n't  + not  PART  RB  neg    4 - -       -   B-ARGM-NEG -      not.r.01   n't/Mn.<
350 4 know + know VERB  VB  ROOT   4 - know.01 -   B-V        -      know.v.01  know/Pd.s?r:0r1:0r1.-i:012
350 5 what + what PRON  WP  dobj   7 - -       -   B-ARG1     B-ARG1 -          what/Cw
350 6 to   + to   PART  TO  aux    7 - -       -   I-ARG1     -      -          to/Mi.<
350 7 say  - say  VERB  VB  xcomp  4 - say.01  -   I-ARG1     B-V    state.v.01 say/P.-o:01:01.-i:0123
350 8 .    - .    PUNCT .   punct  4 - -       -   -          -      -          -

# sent_i = 351
# sent = Alice wasn't sure how much to tip the porter.
# hyperedge = ((n't/Mn.> was/Pd.sc:12:1h.<f:12) alice/Cp..s.p (+/Br.am sure/Ca ((to/Mi.< tip/P.-oo:012:0qg.-i:012) alice/Cp..s.p (how/Mw.< much/M) (the/Md.< porter/Cc..s))))
# hyperedge builder = ((351.2/Mn.> 351.1/Pd.sc:12:1h.<f:12) 351.0/Cp..s.p (+/Br.am 351.3/Ca ((351.6/Mi.< 351.7/P.-oo:012:0qg.-i:012) 351.0/Cp..s.p (351.4/Mw.< 351.5/M) (351.8/Md.< 351.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
351 0  Alice  + Alice  PROPN NNP nsubj  1 B-PERSON -      B-ARG1     B-ARG0 -            alice/Cp..s.p
351 1  was    - be     AUX   VBD ROOT   1 -        be.01  B-V        -      be.v.01      was/Pd.sc:12:1h.<f:12
351 2  n't    + not    PART  RB  neg    1 -        -      B-ARGM-NEG -      not.r.01     n't/Mn.>
351 3  sure   + sure   ADJ   JJ  acomp  1 -        -      B-ARG2     -      certain.a.02 sure/Ca
351 4  how    + how    ADV   WRB advmod 5 -        -      I-ARG2     B-ARG1 -            how/Mw.<
351 5  much   + much   ADJ   JJ  dobj   7 -        -      I-ARG2     I-ARG1 much.a.01    much/M
351 6  to     + to     PART  TO  aux    7 -        -      I-ARG2     -      -            to/Mi.<
351 7  tip    + tip    VERB  VB  ccomp  3 -        tip.02 I-ARG2     B-V    tip.v.03     tip/P.-oo:012:0qg.-i:012
351 8  the    + the    DET   DT  det    9 -        -      I-ARG2     B-ARG2 -            the/Md.<
351 9  porter - porter NOUN  NN  dobj   7 -        -      I-ARG2     I-ARG2 porter.n.01  porter/Cc..s
351 10 .      - .      PUNCT .   punct  1 -        -      -          -      -            -

# sent_i = 352
# sent = Have you any idea how to open this packet?
# hyperedge = (have/P?.so:01:01.|f:01 you/Ci (+/Jr.ma (any/Md.< idea/Cc..s) ((to/Mi.< open/P.?o:m1:m1.-i:0123) how/Mw (this/Md.< packet/Cc..s))))
# hyperedge builder = (352.0/P?.so:01:01.|f:01 352.1/Ci (+/Jr.ma (352.2/Md.< 352.3/Cc..s) ((352.5/Mi.< 352.6/P.?o:m1:m1.-i:0123) 352.4/Mw (352.7/Md.< 352.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
352 0 Have   + have   VERB  VBP ROOT   0 - have.03 B-V    -          have.v.01   have/P?.so:01:01.|f:01
352 1 you    + you    PRON  PRP nsubj  0 - -       B-ARG0 -          -           you/Ci
352 2 any    + any    DET   DT  det    3 - -       B-ARG1 -          any.s.01    any/Md.<
352 3 idea   + idea   NOUN  NN  dobj   0 - -       I-ARG1 -          idea.n.01   idea/Cc..s
352 4 how    + how    ADV   WRB advmod 6 - -       I-ARG1 B-ARGM-MNR -           how/Mw
352 5 to     + to     PART  TO  aux    6 - -       I-ARG1 -          -           to/Mi.<
352 6 open   + open   VERB  VB  relcl  3 - open.01 I-ARG1 B-V        open.v.01   open/P.?o:m1:m1.-i:0123
352 7 this   + this   DET   DT  det    8 - -       I-ARG1 B-ARG1     -           this/Md.<
352 8 packet - packet NOUN  NN  dobj   6 - -       I-ARG1 I-ARG1     packet.n.03 packet/Cc..s
352 9 ?      - ?      PUNCT .   punct  0 - -       -      -          -           -

# sent_i = 353
# sent = No one told us where to meet.
# hyperedge = (told/Pd.sor:021:0g1.<f:012 (no/Md.< one/Cc..s) us/Ci ((to/Mi.< meet/P.-?:0l:0l.-i:01) us/Ci where/Mw))
# hyperedge builder = (353.2/Pd.sor:021:0g1.<f:012 (353.0/Md.< 353.1/Cc..s) 353.3/Ci ((353.5/Mi.< 353.6/P.-?:0l:0l.-i:01) 353.3/Ci 353.4/Mw))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
353 0 No    + no    DET   DT  det    1 - -       B-ARG0 -          no.a.01   no/Md.<
353 1 one   + one   NOUN  NN  nsubj  2 - -       I-ARG0 -          one.n.02  one/Cc..s
353 2 told  + tell  VERB  VBD ROOT   2 - tell.01 B-V    -          tell.v.02 told/Pd.sor:021:0g1.<f:012
353 3 us    + we    PRON  PRP dobj   2 - -       B-ARG2 B-ARG0     -         us/Ci
353 4 where + where ADV   WRB advmod 6 - -       B-ARG1 B-ARGM-LOC -         where/Mw
353 5 to    + to    PART  TO  aux    6 - -       I-ARG1 -          -         to/Mi.<
353 6 meet  - meet  VERB  VB  xcomp  2 - meet.03 I-ARG1 B-V        meet.v.02 meet/P.-?:0l:0l.-i:01
353 7 .     - .     PUNCT .   punct  2 - -       -      -          -         -

# sent_i = 354
# sent = I'll wait for you to finish your breakfast.
# hyperedge = (('ll/Mm.< (for/Ml.r.> wait/Pd.sr:1-:1-.-i:12m)) i/Ci ((to/Mi.< finish/P.so:01:01.-i:012) you/Ci ((+/Jc.rm.rr your/Mp you/Ci) breakfast/Cc..s)))
# hyperedge builder = ((354.1/Mm.< (354.3/Ml.r.> 354.2/Pd.sr:1-:1-.-i:12m)) 354.0/Ci ((354.5/Mi.< 354.6/P.so:01:01.-i:012) 354.4/Ci ((+/Jc.rm.rr 354.7/Mp 354.4/Ci) 354.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
354 0 I         - I         PRON  PRP  nsubj 2 - -         -   B-ARG1     -      -       -              i/Ci
354 1 'll       + will      AUX   MD   aux   2 - -         B-V B-ARGM-MOD -      -       -              'll/Mm.<
354 2 wait      + wait      VERB  VB   ROOT  2 - wait.01   -   B-V        -      -       wait.v.01      wait/Pd.sr:1-:1-.-i:12m
354 3 for       + for       ADP   IN   prt   2 - -         -   B-ARG2     -      -       -              for/Ml.r.>
354 4 you       + you       PRON  PRP  nsubj 6 - -         -   I-ARG2     B-ARG0 B-MAIN0 -              you/Ci
354 5 to        + to        PART  TO   aux   6 - -         -   I-ARG2     -      -       -              to/Mi.<
354 6 finish    + finish    VERB  VB   xcomp 2 - finish.01 -   I-ARG2     B-V    -       eat_up.v.01    finish/P.so:01:01.-i:012
354 7 your      + your      PRON  PRP$ poss  8 - -         -   I-ARG2     B-ARG1 B-REF0  -              your/Mp
354 8 breakfast - breakfast NOUN  NN   dobj  6 - -         -   I-ARG2     I-ARG1 -       breakfast.n.01 breakfast/Cc..s
354 9 .         - .         PUNCT .    punct 2 - -         -   -          -      -       -              -

# sent_i = 355
# sent = There's too much work for you to finish today.
# hyperedge = ('s/Pd.ec:-1:-1.|f--3s:1 there/Me (+/Jr.ma ((too/M.< much/Ma.<) work/Cc..s) (for/T ((to/Mi.< finish/P.-sx:10t:10t.-i:012) ((too/M.< much/Ma.<) work/Cc..s) you/Ci today/Cc..s.d))))
# hyperedge builder = (355.1/Pd.ec:-1:-1.|f--3s:1 355.0/Me (+/Jr.ma ((355.2/M.< 355.3/Ma.<) 355.4/Cc..s) (355.5/T ((355.7/Mi.< 355.8/P.-sx:10t:10t.-i:012) ((355.2/M.< 355.3/Ma.<) 355.4/Cc..s) 355.6/Ci 355.9/Cc..s.d))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
355 0  There  - there  PRON  EX  expl     1 -      -         -      -          -                there/Me
355 1  's     + be     AUX   VBZ ROOT     1 -      be.02     B-V    -          be.v.01          's/Pd.ec:-1:-1.|f--3s:1
355 2  too    + too    ADV   RB  advmod   3 -      -         B-ARG1 B-ARG1     excessively.r.01 too/M.<
355 3  much   + much   ADJ   JJ  amod     4 -      -         I-ARG1 I-ARG1     much.a.01        much/Ma.<
355 4  work   + work   NOUN  NN  attr     1 -      -         I-ARG1 I-ARG1     work.n.01        work/Cc..s
355 5  for    + for    ADP   IN  mark     8 -      -         I-ARG1 -          -                for/T
355 6  you    + you    PRON  PRP nsubj    8 -      -         I-ARG1 B-ARG0     -                you/Ci
355 7  to     + to     PART  TO  aux      8 -      -         I-ARG1 -          -                to/Mi.<
355 8  finish + finish VERB  VB  relcl    4 -      finish.01 I-ARG1 B-V        complete.v.01    finish/P.-sx:10t:10t.-i:012
355 9  today  - today  NOUN  NN  npadvmod 8 B-DATE -         I-ARG1 B-ARGM-TMP today.n.02       today/Cc..s.d
355 10 .      - .      PUNCT .   punct    1 -      -         -      -          -                -

# sent_i = 356
# sent = It was rude of your friend not to shake hands.
# hyperedge = (was/Pd.scr:-21:-h1.<f:12 it/Ci (of/Br rude/Ca (your/Mp friend/Cc..s)) ((not/Mn.< (to/Mi.< shake/P.-o:01:01.-i:01)) (your/Mp friend/Cc..s) hands/Cc..p))
# hyperedge builder = (356.1/Pd.scr:-21:-h1.<f:12 356.0/Ci (356.3/Br 356.2/Ca (356.4/Mp 356.5/Cc..s)) ((356.6/Mn.< (356.7/Mi.< 356.8/P.-o:01:01.-i:01)) (356.4/Mp 356.5/Cc..s) 356.9/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
356 0  It     + it     PRON  PRP  nsubj 1 - -        -      -          -                 it/Ci
356 1  was    + be     AUX   VBD  ROOT  1 - be.01    B-V    -          be.v.01           was/Pd.scr:-21:-h1.<f:12
356 2  rude   + rude   ADJ   JJ   acomp 1 - -        B-ARG2 -          ill-mannered.s.01 rude/Ca
356 3  of     + of     ADP   IN   prep  2 - -        I-ARG2 -          -                 of/Br
356 4  your   + your   PRON  PRP$ poss  5 - -        I-ARG2 B-ARG0     -                 your/Mp
356 5  friend + friend NOUN  NN   pobj  3 - -        I-ARG2 I-ARG0     friend.n.01       friend/Cc..s
356 6  not    + not    PART  RB   neg   8 - -        B-ARG1 B-ARGM-NEG not.r.01          not/Mn.<
356 7  to     + to     PART  TO   aux   8 - -        I-ARG1 -          -                 to/Mi.<
356 8  shake  + shake  VERB  VB   xcomp 1 - shake.01 I-ARG1 B-V        shake.v.09        shake/P.-o:01:01.-i:01
356 9  hands  - hand   NOUN  NNS  dobj  8 - -        I-ARG1 B-ARG1     hand.n.01         hands/Cc..p
356 10 .      - .      PUNCT .    punct 1 - -        -      -          -                 -

# sent_i = 357
# sent = It was clever of Tina to find that out.
# hyperedge = (was/Pd.scr:-21:-h1.<f:12 it/Ci (of/Br clever/Ca tina/Cp..s.p) ((to/Mi.< (out/Ml.r.> find/P.-o:01:01.-i:012)) tina/Cp..s.p that/Cd))
# hyperedge builder = (357.1/Pd.scr:-21:-h1.<f:12 357.0/Ci (357.3/Br 357.2/Ca 357.4/Cp..s.p) ((357.5/Mi.< (357.8/Ml.r.> 357.6/P.-o:01:01.-i:012)) 357.4/Cp..s.p 357.7/Cd))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
357 0 It     + it     PRON  PRP nsubj 1 -        -           -      -      -              it/Ci
357 1 was    + be     AUX   VBD ROOT  1 -        be.01       B-V    -      be.v.01        was/Pd.scr:-21:-h1.<f:12
357 2 clever + clever ADJ   JJ  acomp 1 -        -           B-ARG2 -      apt.s.03       clever/Ca
357 3 of     + of     ADP   IN  prep  2 -        -           I-ARG2 -      -              of/Br
357 4 Tina   + Tina   PROPN NNP pobj  3 B-PERSON -           I-ARG2 B-ARG0 -              tina/Cp..s.p
357 5 to     + to     PART  TO  aux   6 -        -           B-ARG1 -      -              to/Mi.<
357 6 find   + find   VERB  VB  xcomp 1 -        find_out.03 I-ARG1 B-V    determine.v.01 find/P.-o:01:01.-i:012
357 7 that   + that   DET   DT  dobj  6 -        -           I-ARG1 B-ARG1 -              that/Cd
357 8 out    - out    ADP   RP  prt   6 -        -           I-ARG1 -      determine.v.01 out/Ml.r.>
357 9 .      - .      PUNCT .   punct 1 -        -           -      -      -              -

# sent_i = 358
# sent = For plants to grow properly, you have to water them regularly.
# hyperedge = (have/Pd.xsr:---:---.|f (for/T ((to/Mi.< grow/P.s?:1m:hm.-i:012) plants/Cc..p properly/M)) you/Ci ((to/Mi.< water/P.-o?:01t:0gt.-i:01) you/Ci (+/Jc.rm.rc them/Ci plants/Cc..p) regularly/M))
# hyperedge builder = (358.7/Pd.xsr:---:---.|f (358.0/T ((358.2/Mi.< 358.3/P.s?:1m:hm.-i:012) 358.1/Cc..p 358.4/M)) 358.6/Ci ((358.8/Mi.< 358.9/P.-o?:01t:0gt.-i:01) 358.6/Ci (+/Jc.rm.rc 358.10/Ci 358.1/Cc..p) 358.11/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
358 0  For       + for       ADP   IN  mark   3 - -        -          -   -          -       -              for/T
358 1  plants    + plant     NOUN  NNS nsubj  3 - -        B-ARG1     -   -          B-MAIN0 plant.n.02     plants/Cc..p
358 2  to        + to        PART  TO  aux    3 - -        -          -   -          -       -              to/Mi.<
358 3  grow      + grow      VERB  VB  advcl  7 - grow.03  B-V        -   -          -       grow.v.03      grow/P.s?:1m:hm.-i:012
358 4  properly  - properly  ADV   RB  advmod 3 - -        B-ARGM-MNR -   -          -       properly.r.01  properly/M
358 5  ,         + ,         PUNCT ,   punct  7 - -        -          -   -          -       -              -
358 6  you       + you       PRON  PRP nsubj  7 - -        -          -   B-ARG0     -       -              you/Ci
358 7  have      + have      VERB  VBP ROOT   7 - have.02  -          B-V B-ARGM-MOD -       -              have/Pd.xsr:---:---.|f
358 8  to        + to        PART  TO  aux    9 - -        -          -   -          -       -              to/Mi.<
358 9  water     + water     VERB  VB  xcomp  7 - water.01 -          -   B-V        -       water.v.01     water/P.-o?:01t:0gt.-i:01
358 10 them      + they      PRON  PRP dobj   9 - -        -          -   B-ARG1     B-REF0  -              them/Ci
358 11 regularly - regularly ADV   RB  advmod 9 - -        -          -   B-ARGM-TMP -       regularly.r.01 regularly/M
358 12 .         - .         PUNCT .   punct  7 - -        -          -   -          -       -              -

# sent_i = 359
# sent = Nothing can go wrong.
# hyperedge = ((can/Mm.< go/Pd.s?:12:1h.-i:123) nothing/Ci..s wrong/M)
# hyperedge builder = ((359.1/Mm.< 359.2/Pd.s?:12:1h.-i:123) 359.0/Ci..s 359.3/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
359 0 Nothing + nothing PRON  NN nsubj  2 - -     -   B-ARG1     nothing.n.01 nothing/Ci..s
359 1 can     + can     AUX   MD aux    2 - -     B-V B-ARGM-MOD -            can/Mm.<
359 2 go      + go      VERB  VB ROOT   2 - go.08 -   B-V        fail.v.02    go/Pd.s?:12:1h.-i:123
359 3 wrong   - wrong   ADV   RB advmod 2 - -     -   B-ARG2     fail.v.02    wrong/M
359 4 .       - .       PUNCT .  punct  2 - -     -   -          -            -

# sent_i = 360
# sent = We'd better not be late.
# hyperedge = (('d/Mm.< (not/Mn.< be/Pd.s?c:1-2:1-h.-i:12)) we/Ci better/M= late/Ca)
# hyperedge builder = ((360.1/Mm.< (360.3/Mn.< 360.4/Pd.s?c:1-2:1-h.-i:12)) 360.0/Ci 360.2/M= 360.5/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
360 0 We     - we   PRON  PRP nsubj  4 - -       B-ARG0 B-ARG1     -            we/Ci
360 1 'd     + have AUX   MD  aux    4 - have.07 B-V    -          -            'd/Mm.<
360 2 better + well ADV   RBR advmod 4 - -       B-ARG1 -          better.s.03  better/M=
360 3 not    + not  PART  RB  neg    4 - -       B-ARG2 B-ARGM-NEG not.r.01     not/Mn.<
360 4 be     + be   VERB  VB  ROOT   4 - be.01   I-ARG2 B-V        be.v.01      be/Pd.s?c:1-2:1-h.-i:12
360 5 late   - late ADJ   JJ  acomp  4 - -       I-ARG2 B-ARG2     belated.s.01 late/Ca
360 6 .      - .    PUNCT .   punct  4 - -       -      -          -            -

# sent_i = 361
# sent = They decided to accept the offer rather than go to court.
# hyperedge = (decided/Pd.sr:01:01.<f:0123 they/Ci ((rather/M.< than/J) ((to/Mi.< accept/P.-o:01:01.-i:0123) they/Ci (the/Md.< offer/Cc..s)) (go/P.-x:04:1g.-i:0134 they/Ci (to/T court/Cc..s))))
# hyperedge builder = (361.1/Pd.sr:01:01.<f:0123 361.0/Ci ((361.6/M.< 361.7/J) ((361.2/Mi.< 361.3/P.-o:01:01.-i:0123) 361.0/Ci (361.4/Md.< 361.5/Cc..s)) (361.8/P.-x:04:1g.-i:0134 361.0/Ci (361.9/T 361.10/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
361 0  They    + they   PRON  PRP nsubj  1 - -         B-ARG0 B-ARG0 B-ARG0 -           they/Ci
361 1  decided + decide VERB  VBD ROOT   1 - decide.01 B-V    -      -      decide.v.01 decided/Pd.sr:01:01.<f:0123
361 2  to      + to     PART  TO  aux    3 - -         B-ARG1 -      -      -           to/Mi.<
361 3  accept  + accept VERB  VB  xcomp  1 - accept.01 I-ARG1 B-V    -      accept.v.02 accept/P.-o:01:01.-i:0123
361 4  the     + the    DET   DT  det    5 - -         I-ARG1 B-ARG1 -      -           the/Md.<
361 5  offer   + offer  NOUN  NN  dobj   3 - -         I-ARG1 I-ARG1 -      offer.n.02  offer/Cc..s
361 6  rather  + rather ADV   RB  advmod 7 - -         I-ARG1 -      -      rather.r.01 rather/M.<
361 7  than    + than   SCONJ IN  cc     3 - -         I-ARG1 -      -      -           than/J
361 8  go      + go     VERB  VB  conj   3 - go.02     I-ARG1 -      B-V    action.v.01 go/P.-x:04:1g.-i:0134
361 9  to      + to     ADP   IN  prep   8 - -         I-ARG1 -      B-ARG4 action.v.01 to/T
361 10 court   - court  NOUN  NN  pobj   9 - -         I-ARG1 -      I-ARG4 action.v.01 court/Cc..s
361 11 .       - .      PUNCT .   punct  1 - -         -      -      -      -           -

# sent_i = 362
# sent = They decided to accept the offer rather than going to court.
# hyperedge = (decided/Pd.sr:01:01.<f:0123 they/Ci ((to/Mi.< accept/P.-ox:01r:01r.-i:0123) they/Ci (the/Md.< offer/Cc..s) ((rather/M.< than/T) (going/P.-x:04:1g.|pg:0134 they/Ci (to/T court/Cc..s)))))
# hyperedge builder = (362.1/Pd.sr:01:01.<f:0123 362.0/Ci ((362.2/Mi.< 362.3/P.-ox:01r:01r.-i:0123) 362.0/Ci (362.4/Md.< 362.5/Cc..s) ((362.6/M.< 362.7/T) (362.8/P.-x:04:1g.|pg:0134 362.0/Ci (362.9/T 362.10/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
362 0  They    + they   PRON  PRP nsubj  1 - -         B-ARG0 B-ARG0     B-ARG0 -           they/Ci
362 1  decided + decide VERB  VBD ROOT   1 - decide.01 B-V    -          -      decide.v.01 decided/Pd.sr:01:01.<f:0123
362 2  to      + to     PART  TO  aux    3 - -         B-ARG1 -          -      -           to/Mi.<
362 3  accept  + accept VERB  VB  xcomp  1 - accept.01 I-ARG1 B-V        -      accept.v.02 accept/P.-ox:01r:01r.-i:0123
362 4  the     + the    DET   DT  det    5 - -         I-ARG1 B-ARG1     -      -           the/Md.<
362 5  offer   + offer  NOUN  NN  dobj   3 - -         I-ARG1 I-ARG1     -      offer.n.02  offer/Cc..s
362 6  rather  + rather ADV   RB  advmod 7 - -         I-ARG1 B-ARGM-ADV -      rather.r.01 rather/M.<
362 7  than    + than   SCONJ IN  prep   3 - -         I-ARG1 I-ARGM-ADV -      -           than/T
362 8  going   + go     VERB  VBG pcomp  7 - go.02     I-ARG1 I-ARGM-ADV B-V    action.v.01 going/P.-x:04:1g.|pg:0134
362 9  to      + to     ADP   IN  prep   8 - -         I-ARG1 I-ARGM-ADV B-ARG4 action.v.01 to/T
362 10 court   - court  NOUN  NN  pobj   9 - -         I-ARG1 I-ARGM-ADV I-ARG4 action.v.01 court/Cc..s
362 11 .       - .      PUNCT .   punct  1 - -         -      -          -      -           -

# sent_i = 363
# sent = The official made me fill in a form.
# hyperedge = (made/Pd.sr:01:0h.<f:01 (the/Md.< official/Cc..s) ((in/Ml.r.> fill/P.so:01:0g.-i:012) me/Ci (a/Md.< form/Cc..s)))
# hyperedge builder = (363.2/Pd.sr:01:0h.<f:01 (363.0/Md.< 363.1/Cc..s) ((363.5/Ml.r.> 363.4/P.so:01:0g.-i:012) 363.3/Ci (363.6/Md.< 363.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
363 0 The      + the      DET   DT  det   1 - -          B-ARG0 -      -             the/Md.<
363 1 official + official NOUN  NN  nsubj 2 - -          I-ARG0 -      official.n.01 official/Cc..s
363 2 made     + make     VERB  VBD ROOT  2 - make.02    B-V    -      induce.v.02   made/Pd.sr:01:0h.<f:01
363 3 me       + I        PRON  PRP nsubj 4 - -          B-ARG1 B-ARG0 -             me/Ci
363 4 fill     + fill     VERB  VB  ccomp 2 - fill_in.05 I-ARG1 B-V    complete.v.05 fill/P.so:01:0g.-i:012
363 5 in       + in       ADP   RP  prt   4 - -          I-ARG1 -      complete.v.05 in/Ml.r.>
363 6 a        + a        DET   DT  det   7 - -          I-ARG1 B-ARG1 -             a/Md.<
363 7 form     - form     NOUN  NN  dobj  4 - -          I-ARG1 I-ARG1 form.n.08     form/Cc..s
363 8 .        - .        PUNCT .   punct 2 - -          -      -      -             -

# sent_i = 364
# sent = The headmaster let the pupils go home early.
# hyperedge = (let/Pd.sr:01:01.<f:01 (the/Md.< headmaster/Cc..s) (go/P.s??:04t:1gt.-i:0134 (the/Md.< pupils/Cc..p) home/M early/M))
# hyperedge builder = (364.2/Pd.sr:01:01.<f:01 (364.0/Md.< 364.1/Cc..s) (364.5/P.s??:04t:1gt.-i:0134 (364.3/Md.< 364.4/Cc..p) 364.6/M 364.7/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
364 0 The        + the        DET   DT  det    1 - -      B-ARG0 -          -               the/Md.<
364 1 headmaster + headmaster NOUN  NN  nsubj  2 - -      I-ARG0 -          headmaster.n.01 headmaster/Cc..s
364 2 let        + let        VERB  VBD ROOT   2 - let.01 B-V    -          let.v.01        let/Pd.sr:01:01.<f:01
364 3 the        + the        DET   DT  det    4 - -      B-ARG1 B-ARG0     -               the/Md.<
364 4 pupils     + pupil      NOUN  NNS nsubj  5 - -      I-ARG1 I-ARG0     student.n.01    pupils/Cc..p
364 5 go         + go         VERB  VB  ccomp  2 - go.02  I-ARG1 B-V        go_home.v.01    go/P.s??:04t:1gt.-i:0134
364 6 home       + home       ADV   RB  advmod 5 - -      I-ARG1 B-ARG4     go_home.v.01    home/M
364 7 early      - early      ADV   RB  advmod 5 - -      I-ARG1 B-ARGM-TMP early.r.02      early/M
364 8 .          - .          PUNCT .   punct  2 - -      -      -          -               -

# sent_i = 365
# sent = Someone saw the men leave the building.
# hyperedge = (saw/Pd.sr:01:01.<f:012 someone/Ci..s (leave/P.so:01:0d.-i:012 (the/Md.< men/Cc..p) (the/Md.< building/Cc..s)))
# hyperedge builder = (365.1/Pd.sr:01:01.<f:012 365.0/Ci..s (365.4/P.so:01:0d.-i:012 (365.2/Md.< 365.3/Cc..p) (365.5/Md.< 365.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
365 0 Someone  + someone  PRON  NN  nsubj 1 - -        B-ARG0 -      person.n.01   someone/Ci..s
365 1 saw      + see      VERB  VBD ROOT  1 - see.01   B-V    -      see.v.01      saw/Pd.sr:01:01.<f:012
365 2 the      + the      DET   DT  det   3 - -        B-ARG1 B-ARG0 -             the/Md.<
365 3 men      + man      NOUN  NNS nsubj 4 - -        I-ARG1 I-ARG0 man.n.01      men/Cc..p
365 4 leave    + leave    VERB  VB  ccomp 1 - leave.11 I-ARG1 B-V    leave.v.01    leave/P.so:01:0d.-i:012
365 5 the      + the      DET   DT  det   6 - -        I-ARG1 B-ARG1 -             the/Md.<
365 6 building - building NOUN  NN  dobj  4 - -        I-ARG1 I-ARG1 building.n.01 building/Cc..s
365 7 .        - .        PUNCT .   punct 1 - -        -      -      -             -

# sent_i = 366
# sent = I do everything except cook.
# hyperedge = (do/Pd.so:01:01.|f:01234 i/Ci (except/Br everything/Ci..s cook/P.-:0:0.-i:01))
# hyperedge builder = (366.1/Pd.so:01:01.|f:01234 366.0/Ci (366.3/Br 366.2/Ci..s 366.4/P.-:0:0.-i:01))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
366 0 I          + I          PRON  PRP nsubj 1 - -       B-ARG0 B-ARG0 -            i/Ci
366 1 do         + do         VERB  VBP ROOT  1 - do.02   B-V    -      perform.v.01 do/Pd.so:01:01.|f:01234
366 2 everything + everything PRON  NN  dobj  1 - -       B-ARG1 -      -            everything/Ci..s
366 3 except     + except     SCONJ IN  prep  2 - -       I-ARG1 -      -            except/Br
366 4 cook       - cook       VERB  VB  pcomp 3 - cook.01 I-ARG1 B-V    cook.v.01    cook/P.-:0:0.-i:01
366 5 .          - .          PUNCT .   punct 1 - -       -      -      -            -

# sent_i = 367
# sent = You've done nothing but grumble all day.
# hyperedge = (but/J (('ve/Mv.< done/Pd.so:01:01.<pf:01234) you/Ci nothing/Ci..s) (grumble/P.-x:0t:0t.-i:012 you/Ci (all/Md.<..d day/Cc..s.d)))
# hyperedge builder = (367.4/J ((367.1/Mv.< 367.2/Pd.so:01:01.<pf:01234) 367.0/Ci 367.3/Ci..s) (367.5/P.-x:0t:0t.-i:012 367.0/Ci (367.6/Md.<..d 367.7/Cc..s.d)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
367 0 You     - you     PRON  PRP nsubj    2 -      -          -   B-ARG0 B-ARG0     -            you/Ci
367 1 've     + have    AUX   VB  aux      2 -      have.01    B-V -      -          -            've/Mv.<
367 2 done    + do      VERB  VBN ROOT     2 -      do.02      -   B-V    -          perform.v.01 done/Pd.so:01:01.<pf:01234
367 3 nothing + nothing PRON  NN  dobj     2 -      -          -   B-ARG1 -          nothing.n.01 nothing/Ci..s
367 4 but     + but     CCONJ CC  cc       2 -      -          -   I-ARG1 -          -            but/J
367 5 grumble + grumble VERB  VB  conj     2 -      grumble.01 -   I-ARG1 B-V        grouch.v.01  grumble/P.-x:0t:0t.-i:012
367 6 all     + all     DET   DT  det      7 B-DATE -          -   -      B-ARGM-TMP all.a.01     all/Md.<..d
367 7 day     - day     NOUN  NN  npadvmod 5 I-DATE -          -   -      I-ARGM-TMP day.n.05     day/Cc..s.d
367 8 .       - .       PUNCT .   punct    2 -      -          -   -      -          -            -

# sent_i = 368
# sent = No one likes washing the car.
# hyperedge = (likes/Pd.sr:01:01.|f--3s:01 (no/Md.< one/Cc..s) (washing/P.-o:01:01.|pg:01234 (no/Md.< one/Cc..s) (the/Md.< car/Cc..s)))
# hyperedge builder = (368.2/Pd.sr:01:01.|f--3s:01 (368.0/Md.< 368.1/Cc..s) (368.3/P.-o:01:01.|pg:01234 (368.0/Md.< 368.1/Cc..s) (368.4/Md.< 368.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
368 0 No      + no   DET   DT  det   1 - -       B-ARG0 B-ARG0 no.a.01   no/Md.<
368 1 one     + one  NOUN  NN  nsubj 2 - -       I-ARG0 I-ARG0 one.n.02  one/Cc..s
368 2 likes   + like VERB  VBZ ROOT  2 - like.01 B-V    -      like.v.02 likes/Pd.sr:01:01.|f--3s:01
368 3 washing + wash VERB  VBG xcomp 2 - wash.01 B-ARG1 B-V    wash.v.03 washing/P.-o:01:01.|pg:01234
368 4 the     + the  DET   DT  det   5 - -       I-ARG1 B-ARG1 -         the/Md.<
368 5 car     - car  NOUN  NN  dobj  3 - -       I-ARG1 I-ARG1 car.n.01  car/Cc..s
368 6 .       - .    PUNCT .   punct 2 - -       -      -      -         -

# sent_i = 369
# sent = Going on holiday always makes me feel uneasy.
# hyperedge = (makes/Pd.s?r:0t1:0th.|f--3s:01 (going/P.x:1:1.|pg:0134 (on/T holiday/Cc..s)) always/M (feel/P.sc:01:11.-i:012 me/Ci uneasy/Ca))
# hyperedge builder = (369.4/Pd.s?r:0t1:0th.|f--3s:01 (369.0/P.x:1:1.|pg:0134 (369.1/T 369.2/Cc..s)) 369.3/M (369.6/P.sc:01:11.-i:012 369.5/Ci 369.7/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
369 0 Going   + go      VERB  VBG csubj  4 - go.02   B-V    B-ARG0     -      travel.v.01   going/P.x:1:1.|pg:0134
369 1 on      + on      ADP   IN  prep   0 - -       B-ARG1 I-ARG0     -      -             on/T
369 2 holiday + holiday NOUN  NN  pobj   1 - -       I-ARG1 I-ARG0     -      vacation.n.01 holiday/Cc..s
369 3 always  + always  ADV   RB  advmod 4 - -       -      B-ARGM-TMP -      always.r.01   always/M
369 4 makes   + make    VERB  VBZ ROOT   4 - make.02 -      B-V        -      make.v.02     makes/Pd.s?r:0t1:0th.|f--3s:01
369 5 me      + I       PRON  PRP nsubj  6 - -       -      B-ARG1     B-ARG0 -             me/Ci
369 6 feel    + feel    VERB  VB  ccomp  4 - feel.01 -      I-ARG1     B-V    feel.v.01     feel/P.sc:01:11.-i:012
369 7 uneasy  - uneasy  ADJ   JJ  acomp  6 - -       -      I-ARG1     B-ARG1 uneasy.a.01   uneasy/Ca
369 8 .       - .       PUNCT .   punct  4 - -       -      -          -      -             -

# sent_i = 370
# sent = I dislike people asking me personal questions.
# hyperedge = (dislike/Pd.sr:01:10.|f:01 i/Ci (asking/P.sio:021:0g1.|pg:0123 people/Cc..p (+/Jc.rm.rr me/Ci i/Ci) (personal/Ma.< questions/Cc..p)))
# hyperedge builder = (370.1/Pd.sr:01:10.|f:01 370.0/Ci (370.3/P.sio:021:0g1.|pg:0123 370.2/Cc..p (+/Jc.rm.rr 370.4/Ci 370.0/Ci) (370.5/Ma.< 370.6/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
370 0 I         + I        PRON  PRP nsubj  1 - -          B-ARG0 -      B-MAIN0 -             i/Ci
370 1 dislike   + dislike  VERB  VBP ROOT   1 - dislike.01 B-V    -      -       dislike.v.01  dislike/Pd.sr:01:10.|f:01
370 2 people    + people   NOUN  NNS nsubj  3 - -          B-ARG1 B-ARG0 -       people.n.01   people/Cc..p
370 3 asking    + ask      VERB  VBG ccomp  1 - ask.01     I-ARG1 B-V    -       ask.v.01      asking/P.sio:021:0g1.|pg:0123
370 4 me        + I        PRON  PRP dative 3 - -          I-ARG1 B-ARG2 B-REF0  -             me/Ci
370 5 personal  + personal ADJ   JJ  amod   6 - -          I-ARG1 B-ARG1 -       personal.a.01 personal/Ma.<
370 6 questions - question NOUN  NNS dobj   3 - -          I-ARG1 I-ARG1 -       question.n.01 questions/Cc..p
370 7 .         - .        PUNCT .   punct  1 - -          -      -      -       -             -

# sent_i = 371
# sent = Do you mind me sitting here?
# hyperedge = ((do/Mv.< mind/P?.sr:01:1c.-i:01) you/Ci (sitting/P.s?:12:0l.|pg:12 me/Ci here/M))
# hyperedge builder = ((371.0/Mv.< 371.2/P?.sr:01:1c.-i:01) 371.1/Ci (371.4/P.s?:12:0l.|pg:12 371.3/Ci 371.5/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
371 0 Do      + do   AUX   VBP aux    2 - do.01   B-V -      -      -         do/Mv.<
371 1 you     + you  PRON  PRP nsubj  2 - -       -   B-ARG0 -      -         you/Ci
371 2 mind    + mind VERB  VB  ROOT   2 - mind.01 -   B-V    -      mind.v.01 mind/P?.sr:01:1c.-i:01
371 3 me      + I    PRON  PRP nsubj  4 - -       -   B-ARG1 B-ARG1 -         me/Ci
371 4 sitting + sit  VERB  VBG ccomp  2 - sit.01  -   I-ARG1 B-V    sit.v.01  sitting/P.s?:12:0l.|pg:12
371 5 here    - here ADV   RB  advmod 4 - -       -   I-ARG1 B-ARG2 here.r.01 here/M
371 6 ?       - ?    PUNCT .   punct  2 - -       -   -      -      -         -

# sent_i = 372
# sent = Do you mind my sitting here?
# hyperedge = ((do/Mv.< mind/P?.so:01:1c.-i:01) you/Ci (sitting/P.s?:12:0l.|pg:12 my/Ci here/M))
# hyperedge builder = ((372.0/Mv.< 372.2/P?.so:01:1c.-i:01) 372.1/Ci (372.4/P.s?:12:0l.|pg:12 372.3/Ci 372.5/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
372 0 Do      + do   AUX   VBP  aux    2 - do.01   B-V -      -      -         do/Mv.<
372 1 you     + you  PRON  PRP  nsubj  2 - -       -   B-ARG0 -      -         you/Ci
372 2 mind    + mind VERB  VB   ROOT   2 - mind.01 -   B-V    -      mind.v.01 mind/P?.so:01:1c.-i:01
372 3 my      + my   PRON  PRP$ nsubj  4 - -       -   B-ARG1 B-ARG1 -         my/Ci
372 4 sitting + sit  VERB  VBG  dobj   2 - sit.01  -   I-ARG1 B-V    sit.v.01  sitting/P.s?:12:0l.|pg:12
372 5 here    - here ADV   RB   advmod 4 - -       -   I-ARG1 B-ARG2 here.r.01 here/M
372 6 ?       - ?    PUNCT .    punct  2 - -       -   -      -      -         -

# sent_i = 373
# sent = I'm fed up with Sarah laughing at my accent.
# hyperedge = ('m/Pd.sc:12:1h.|f:12 i/Ci (with/Br (up/Ml.r.> fed/Ca) ((at/Ml.r.> laughing/P.so:0-:0-.|pg:0123) sarah/Cp..s.p ((+/Jc.rm.rr my/Mp i/Ci) accent/Cc..s))))
# hyperedge builder = (373.1/Pd.sc:12:1h.|f:12 373.0/Ci (373.4/Br (373.3/Ml.r.> 373.2/Ca) ((373.7/Ml.r.> 373.6/P.so:0-:0-.|pg:0123) 373.5/Cp..s.p ((+/Jc.rm.rr 373.8/Mp 373.0/Ci) 373.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
373 0  I        - I      PRON  PRP  nsubj 1 -        -        B-ARG1 -      B-MAIN0 -              i/Ci
373 1  'm       + be     VERB  VBP  ROOT  1 -        be.01    B-V    -      -       be.v.01        'm/Pd.sc:12:1h.|f:12
373 2  fed      + fed    ADJ   JJ   acomp 1 -        -        B-ARG2 -      -       disgusted.s.01 fed/Ca
373 3  up       + up     ADP   RP   prt   2 -        -        I-ARG2 -      -       disgusted.s.01 up/Ml.r.>
373 4  with     + with   ADP   IN   prep  2 -        -        I-ARG2 -      -       -              with/Br
373 5  Sarah    + Sarah  PROPN NNP  nsubj 6 B-PERSON -        I-ARG2 B-ARG0 -       -              sarah/Cp..s.p
373 6  laughing + laugh  VERB  VBG  pcomp 4 -        laugh.01 I-ARG2 B-V    -       ridicule.v.01  laughing/P.so:0-:0-.|pg:0123
373 7  at       + at     ADP   IN   prt   6 -        -        I-ARG2 B-ARG2 -       ridicule.v.01  at/Ml.r.>
373 8  my       + my     PRON  PRP$ poss  9 -        -        I-ARG2 I-ARG2 B-REF0  -              my/Mp
373 9  accent   - accent NOUN  NN   dobj  6 -        -        I-ARG2 I-ARG2 -       accent.n.01    accent/Cc..s
373 10 .        - .      PUNCT .    punct 1 -        -        -      -      -       -              -

# sent_i = 374
# sent = I'm fed up with Sarah's laughing at my accent.
# hyperedge = ('m/Pd.sc:12:1h.|f:12 i/Ci (with/Br (up/Ml.r.> fed/Ca) ((at/Ml.r.> laughing/P.so:02:0c.|pg:0123) ('s/Bp sarah/Cp..s.p) ((+/Jc.rm.rr my/Mp i/Ci) accent/Cc..s))))
# hyperedge builder = (374.1/Pd.sc:12:1h.|f:12 374.0/Ci (374.4/Br (374.3/Ml.r.> 374.2/Ca) ((374.8/Ml.r.> 374.7/P.so:02:0c.|pg:0123) (374.6/Bp 374.5/Cp..s.p) ((+/Jc.rm.rr 374.9/Mp 374.0/Ci) 374.10/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
374 0  I        - I      PRON  PRP  nsubj 1  -        -        B-ARG1 -      B-MAIN0 -              i/Ci
374 1  'm       + be     VERB  VBP  ROOT  1  -        be.01    B-V    -      -       be.v.01        'm/Pd.sc:12:1h.|f:12
374 2  fed      + fed    ADJ   JJ   acomp 1  -        -        B-ARG2 -      -       disgusted.s.01 fed/Ca
374 3  up       + up     ADP   RP   prt   2  -        -        I-ARG2 -      -       disgusted.s.01 up/Ml.r.>
374 4  with     + with   ADP   IN   prep  2  -        -        I-ARG2 -      -       -              with/Br
374 5  Sarah    - Sarah  PROPN NNP  nsubj 7  B-PERSON -        I-ARG2 B-ARG0 -       -              sarah/Cp..s.p
374 6  's       + 's     PART  POS  case  5  -        -        I-ARG2 I-ARG0 -       -              's/Bp
374 7  laughing + laugh  VERB  VBG  pcomp 4  -        laugh.01 I-ARG2 B-V    -       ridicule.v.01  laughing/P.so:02:0c.|pg:0123
374 8  at       + at     ADP   IN   prt   7  -        -        I-ARG2 -      -       ridicule.v.01  at/Ml.r.>
374 9  my       + my     PRON  PRP$ poss  10 -        -        I-ARG2 B-ARG2 B-REF0  -              my/Mp
374 10 accent   - accent NOUN  NN   dobj  7  -        -        I-ARG2 I-ARG2 -       accent.n.01    accent/Cc..s
374 11 .        - .      PUNCT .    punct 1  -        -        -      -      -       -              -

# sent_i = 375
# sent = Your coming in late is a bit inconvenient.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 ((in/Ml.r.> coming/P.s?:1t:0t.|pg:12) your/Ci late/M) (+/B.am (a/Md.< bit/Cc.<.s) inconvenient/Ca))
# hyperedge builder = (375.4/Pd.sc:12:1h.|f--3s:12 ((375.2/Ml.r.> 375.1/P.s?:1t:0t.|pg:12) 375.0/Ci 375.3/M) (+/B.am (375.5/Md.< 375.6/Cc.<.s) 375.7/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
375 0 Your         + your         PRON  PRP$ nsubj    1 - -          B-ARG1     B-ARG1 -                 your/Ci
375 1 coming       + come         VERB  VBG  csubj    4 - come_in.07 B-V        I-ARG1 enter.v.01        coming/P.s?:1t:0t.|pg:12
375 2 in           + in           ADP   IN   prt      1 - -          -          I-ARG1 enter.v.01        in/Ml.r.>
375 3 late         + late         ADV   RB   advmod   1 - -          B-ARGM-TMP I-ARG1 late.r.01         late/M
375 4 is           + be           AUX   VBZ  ROOT     4 - be.01      -          B-V    be.v.01           is/Pd.sc:12:1h.|f--3s:12
375 5 a            + a            DET   DT   det      6 - -          -          B-ARG2 a_bit.r.01        a/Md.<
375 6 bit          + bit          NOUN  NN   npadvmod 7 - -          -          I-ARG2 a_bit.r.01        bit/Cc.<.s
375 7 inconvenient - inconvenient ADJ   JJ   acomp    4 - -          -          I-ARG2 inconvenient.a.01 inconvenient/Ca
375 8 .            - .            PUNCT .    punct    4 - -          -          -      -                 -

# sent_i = 376
# sent = Digging is hard work.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (digging/P.::.|pg:0123) (hard/Ma.< work/Cc..s))
# hyperedge builder = (376.1/Pd.sc:12:1h.|f--3s:12 (376.0/P.::.|pg:0123) (376.2/Ma.< 376.3/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
376 0 Digging + dig  VERB  VBG csubj 1 - dig.01 B-V B-ARG1 dig.v.01       digging/P.::.|pg:0123
376 1 is      + be   AUX   VBZ ROOT  1 - be.01  -   B-V    be.v.01        is/Pd.sc:12:1h.|f--3s:12
376 2 hard    + hard ADJ   JJ  amod  3 - -      -   B-ARG2 difficult.a.01 hard/Ma.<
376 3 work    - work NOUN  NN  attr  1 - -      -   I-ARG2 work.n.01      work/Cc..s
376 4 .       - .    PUNCT .   punct 1 - -      -   -      -              -

# sent_i = 377
# sent = Keeping a copy of your letters is a good idea.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (keeping/P.o:1:1.|pg:01 (of/Br (a/Md.< copy/Cc..s) (your/Mp letters/Cc..p))) (a/Md.< (good/Ma.< idea/Cc..s)))
# hyperedge builder = (377.6/Pd.sc:12:1h.|f--3s:12 (377.0/P.o:1:1.|pg:01 (377.3/Br (377.1/Md.< 377.2/Cc..s) (377.4/Mp 377.5/Cc..p))) (377.7/Md.< (377.8/Ma.< 377.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
377 0  Keeping + keep   VERB  VBG  csubj 6 - keep.01 B-V    B-ARG1 keep.v.03   keeping/P.o:1:1.|pg:01
377 1  a       + a      DET   DT   det   2 - -       B-ARG1 I-ARG1 -           a/Md.<
377 2  copy    + copy   NOUN  NN   dobj  0 - -       I-ARG1 I-ARG1 copy.n.02   copy/Cc..s
377 3  of      + of     ADP   IN   prep  2 - -       I-ARG1 I-ARG1 -           of/Br
377 4  your    + your   PRON  PRP$ poss  5 - -       I-ARG1 I-ARG1 -           your/Mp
377 5  letters + letter NOUN  NNS  pobj  3 - -       I-ARG1 I-ARG1 letter.n.01 letters/Cc..p
377 6  is      + be     AUX   VBZ  ROOT  6 - be.01   -      B-V    be.v.01     is/Pd.sc:12:1h.|f--3s:12
377 7  a       + a      DET   DT   det   9 - -       -      B-ARG2 -           a/Md.<
377 8  good    + good   ADJ   JJ   amod  9 - -       -      I-ARG2 good.a.01   good/Ma.<
377 9  idea    - idea   NOUN  NN   attr  6 - -       -      I-ARG2 idea.n.01   idea/Cc..s
377 10 .       - .      PUNCT .    punct 6 - -       -      -      -           -

# sent_i = 378
# sent = It's no good arguing.
# hyperedge = ('s/Pd.scr:121:1h1.|f--3s:12 it/Ci (no/Md.< good/Ca) (arguing/P.::.|pg:012))
# hyperedge builder = (378.1/Pd.scr:121:1h1.|f--3s:12 378.0/Ci (378.2/Md.< 378.3/Ca) (378.4/P.::.|pg:012))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
378 0 It      - it      PRON  PRP nsubj 1 - -        B-R-ARG1 -   -          it/Ci
378 1 's      + be      AUX   VBZ ROOT  1 - be.01    B-V      -   be.v.01    's/Pd.scr:121:1h1.|f--3s:12
378 2 no      + no      DET   DT  det   3 - -        B-ARG2   -   no.r.02    no/Md.<
378 3 good    + good    ADJ   JJ  acomp 1 - -        I-ARG2   -   good.s.13  good/Ca
378 4 arguing - arguing VERB  VBG xcomp 1 - argue.02 B-ARG1   B-V argue.v.02 arguing/P.::.|pg:012
378 5 .       - .       PUNCT .   punct 1 - -        -        -   -          -

# sent_i = 379
# sent = There won't be any problem parking.
# hyperedge = ((wo/Mm.< (n't/Mn.< be/Pd.ecr:-1-:-1-.-i:1)) there/Me (any/Md.< problem/Cc..s) (parking/P.::.|pg:012))
# hyperedge builder = ((379.1/Mm.< (379.2/Mn.< 379.3/Pd.ecr:-1-:-1-.-i:1)) 379.0/Me (379.4/Md.< 379.5/Cc..s) (379.6/P.::.|pg:012))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
379 0 There   + there   PRON  EX  expl  3 - -       -          -          -   -            there/Me
379 1 wo      - will    AUX   MD  aux   3 - -       B-V        B-ARGM-MOD -   -            wo/Mm.<
379 2 n't     + not     PART  RB  neg   3 - -       B-ARGM-NEG I-ARGM-MOD -   not.r.01     n't/Mn.<
379 3 be      + be      VERB  VB  ROOT  3 - be.02   -          B-V        -   be.v.01      be/Pd.ecr:-1-:-1-.-i:1
379 4 any     + any     DET   DT  det   5 - -       -          B-ARG1     -   any.s.01     any/Md.<
379 5 problem + problem NOUN  NN  attr  3 - -       -          I-ARG1     -   trouble.n.01 problem/Cc..s
379 6 parking - park    VERB  VBG xcomp 3 - park.01 -          I-ARG1     B-V parking.n.02 parking/P.::.|pg:012
379 7 .       - .       PUNCT .   punct 3 - -       -          -          -   -            -

# sent_i = 380
# sent = We had great fun skiing down the mountain.
# hyperedge = (had/Pd.sor:01-:01-.<f:01 we/Ci (great/Ma.< fun/Cc..s) (skiing/P.-x:01:0l.|pg:01 we/Ci (down/T (the/Md.< mountain/Cc..s))))
# hyperedge builder = (380.1/Pd.sor:01-:01-.<f:01 380.0/Ci (380.2/Ma.< 380.3/Cc..s) (380.4/P.-x:01:0l.|pg:01 380.0/Ci (380.5/T (380.6/Md.< 380.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
380 0 We       + we       PRON  PRP nsubj 1 - -       B-ARG0 B-ARG0 -                we/Ci
380 1 had      + have     VERB  VBD ROOT  1 - have.06 B-V    -      have_a_ball.v.01 had/Pd.sor:01-:01-.<f:01
380 2 great    + great    ADJ   JJ  amod  3 - -       B-ARG1 -      have_a_ball.v.01 great/Ma.<
380 3 fun      + fun      NOUN  NN  dobj  1 - -       I-ARG1 -      have_a_ball.v.01 fun/Cc..s
380 4 skiing   + skiing   VERB  VBG xcomp 1 - ski.01  I-ARG1 B-V    ski.v.01         skiing/P.-x:01:0l.|pg:01
380 5 down     + down     ADP   IN  prep  4 - -       I-ARG1 B-ARG1 down.r.01        down/T
380 6 the      + the      DET   DT  det   7 - -       I-ARG1 I-ARG1 -                the/Md.<
380 7 mountain - mountain NOUN  NN  pobj  5 - -       I-ARG1 I-ARG1 mountain.n.01    mountain/Cc..s
380 8 .        - .        PUNCT .   punct 1 - -       -      -      -                -

# sent_i = 381
# sent = Jeremy's hobby is inventing computer games.
# hyperedge = (is/Pd.sr:12:1h.|f--3s:12 ('s/Bp jeremy/Cp..s.p hobby/Cc..s) (inventing/P.-o:01:01.|pg:01 jeremy/Cp..s.p (+/B.am computer/Cc.<.s games/Cc..p)))
# hyperedge builder = (381.3/Pd.sr:12:1h.|f--3s:12 (381.1/Bp 381.0/Cp..s.p 381.2/Cc..s) (381.4/P.-o:01:01.|pg:01 381.0/Cp..s.p (+/B.am 381.5/Cc.<.s 381.6/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
381 0 Jeremy    - Jeremy   PROPN NNP poss     2 B-PERSON -         B-ARG1 B-ARG0 -                  jeremy/Cp..s.p
381 1 's        + 's       PART  POS case     0 -        -         I-ARG1 -      -                  's/Bp
381 2 hobby     + hobby    NOUN  NN  nsubj    3 -        -         I-ARG1 -      avocation.n.01     hobby/Cc..s
381 3 is        + be       AUX   VBZ ROOT     3 -        be.01     B-V    -      be.v.01            is/Pd.sr:12:1h.|f--3s:12
381 4 inventing + invent   VERB  VBG xcomp    3 -        invent.01 B-ARG2 B-V    invent.v.01        inventing/P.-o:01:01.|pg:01
381 5 computer  + computer NOUN  NN  compound 6 -        -         I-ARG2 B-ARG1 computer_game.n.01 computer/Cc.<.s
381 6 games     - game     NOUN  NNS dobj     4 -        -         I-ARG2 I-ARG1 computer_game.n.01 games/Cc..p
381 7 .         - .        PUNCT .   punct    3 -        -         -      -      -                  -

# sent_i = 382
# sent = What I suffer from is not being able to sleep.
# hyperedge = (is/P.sr:-2:-h.|f--3s:12 (suffer/P.sx:01:11.|f:01 i/Ci (from/T what/Cw)) ((not/Mn.< being/Pd.c:2:h.|pg:12) (+/Br.am able/Ca ((to/Mi.< sleep/P.::.-i:012)))))
# hyperedge builder = (382.4/P.sr:-2:-h.|f--3s:12 (382.2/P.sx:01:11.|f:01 382.1/Ci (382.3/T 382.0/Cw)) ((382.5/Mn.< 382.6/Pd.c:2:h.|pg:12) (+/Br.am 382.7/Ca ((382.8/Mi.< 382.9/P.::.-i:012)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
382 0  What   + what   PRON  WP  pobj  3 - -         -        -      -          -   -           what/Cw
382 1  I      + I      PRON  PRP nsubj 2 - -         B-ARG0   -      -          -   -           i/Ci
382 2  suffer + suffer VERB  VBP csubj 4 - suffer.01 B-V      -      -          -   suffer.v.09 suffer/P.sx:01:11.|f:01
382 3  from   + from   ADP   IN  prep  2 - -         B-C-ARG1 -      -          -   -           from/T
382 4  is     + be     AUX   VBZ ROOT  4 - be.01     -        B-V    -          -   be.v.01     is/P.sr:-2:-h.|f--3s:12
382 5  not    + not    PART  RB  neg   6 - -         -        B-ARG2 B-ARGM-NEG -   not.r.01    not/Mn.<
382 6  being  + be     VERB  VBG xcomp 4 - be.01     -        I-ARG2 B-V        -   be.v.01     being/Pd.c:2:h.|pg:12
382 7  able   + able   ADJ   JJ  acomp 6 - -         -        I-ARG2 B-ARG2     -   able.a.01   able/Ca
382 8  to     + to     PART  TO  aux   9 - -         -        I-ARG2 I-ARG2     -   -           to/Mi.<
382 9  sleep  - sleep  VERB  VB  xcomp 7 - sleep.01  -        I-ARG2 I-ARG2     B-V sleep.v.01  sleep/P.::.-i:012
382 10 .      - .      PUNCT .   punct 6 - -         -        -      -          -   -           -

# sent_i = 383
# sent = Someone suggested going for a walk.
# hyperedge = (suggested/Pd.sr:01:01.<f:012 someone/Ci..s (going/P.x:1:1.|pg:0134 (for/T (a/Md.< walk/Cc..s))))
# hyperedge builder = (383.1/Pd.sr:01:01.<f:012 383.0/Ci..s (383.2/P.x:1:1.|pg:0134 (383.3/T (383.4/Md.< 383.5/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
383 0 Someone   + someone PRON  NN  nsubj 1 - -          B-ARG0 -      person.n.01  someone/Ci..s
383 1 suggested + suggest VERB  VBD ROOT  1 - suggest.01 B-V    -      propose.v.01 suggested/Pd.sr:01:01.<f:012
383 2 going     + go      VERB  VBG xcomp 1 - go.02      B-ARG1 B-V    walk.v.10    going/P.x:1:1.|pg:0134
383 3 for       + for     ADP   IN  prep  2 - -          I-ARG1 B-ARG1 walk.v.10    for/T
383 4 a         + a       DET   DT  det   5 - -          I-ARG1 I-ARG1 walk.v.10    a/Md.<
383 5 walk      - walk    NOUN  NN  pobj  3 - -          I-ARG1 I-ARG1 walk.v.10    walk/Cc..s
383 6 .         - .       PUNCT .   punct 1 - -          -      -      -            -

# sent_i = 384
# sent = Imagine never having been abroad.
# hyperedge = (imagine/Pd.r:1:1.-i:012 ((never/Mn.< (having/Mv.< been/P.?:2:h.<pf:12)) abroad/M))
# hyperedge builder = (384.0/Pd.r:1:1.-i:012 ((384.1/Mn.< (384.2/Mv.< 384.3/P.?:2:h.<pf:12)) 384.4/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
384 0 Imagine + imagine VERB  VB  ROOT   0 - imagine.01 B-V    -   -          imagine.v.01 imagine/Pd.r:1:1.-i:012
384 1 never   + never   ADV   RB  neg    3 - -          B-ARG1 -   B-ARGM-NEG never.r.01   never/Mn.<
384 2 having  + have    AUX   VBG aux    3 - have.01    I-ARG1 B-V -          -            having/Mv.<
384 3 been    + be      VERB  VBN xcomp  0 - be.01      I-ARG1 -   B-V        be.v.01      been/P.?:2:h.<pf:12
384 4 abroad  - abroad  ADV   RB  advmod 3 - -          I-ARG1 -   B-ARG2     abroad.r.01  abroad/M
384 5 .       - .       PUNCT .   punct  0 - -          -      -   -          -            -

# sent_i = 385
# sent = I hate people laughing at me.
# hyperedge = (hate/Pd.so:01:10.|f:012 i/Ci (+/Jr.ma people/Cc..p ((at/Ml.r.> laughing/P.-o:02:0c.|pg:0123) people/Cc..p (+/Jc.rm.rr me/Ci i/Ci))))
# hyperedge builder = (385.1/Pd.so:01:10.|f:012 385.0/Ci (+/Jr.ma 385.2/Cc..p ((385.4/Ml.r.> 385.3/P.-o:02:0c.|pg:0123) 385.2/Cc..p (+/Jc.rm.rr 385.5/Ci 385.0/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
385 0 I        + I      PRON  PRP nsubj 1 - -        B-ARG0 -      B-MAIN0 -             i/Ci
385 1 hate     + hate   VERB  VBP ROOT  1 - hate.01  B-V    -      -       hate.v.01     hate/Pd.so:01:10.|f:012
385 2 people   + people NOUN  NNS dobj  1 - -        B-ARG1 B-ARG0 -       people.n.01   people/Cc..p
385 3 laughing + laugh  VERB  VBG acl   2 - laugh.01 I-ARG1 B-V    -       ridicule.v.01 laughing/P.-o:02:0c.|pg:0123
385 4 at       + at     ADP   IN  prt   3 - -        I-ARG1 -      -       ridicule.v.01 at/Ml.r.>
385 5 me       - I      PRON  PRP dobj  3 - -        I-ARG1 B-ARG2 B-REF0  -             me/Ci
385 6 .        - .      PUNCT .   punct 1 - -        -      -      -       -             -

# sent_i = 386
# sent = How can they justify lives being put at risk?
# hyperedge = ((can/Mm.< justify/P?.?so:m01:m01.-i:01234) how/Mw they/Ci (+/Jr.ma lives/Cc..p ((being/Mv.< put/P.-x:12:1h.<pf:012) lives/Cc..p (at/T risk/Cc..s))))
# hyperedge builder = ((386.1/Mm.< 386.3/P?.?so:m01:m01.-i:01234) 386.0/Mw 386.2/Ci (+/Jr.ma 386.4/Cc..p ((386.5/Mv.< 386.6/P.-x:12:1h.<pf:012) 386.4/Cc..p (386.7/T 386.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
386 0 How     + how     ADV   WRB advmod  3 - -          -   B-ARGM-MNR -   -      -            how/Mw
386 1 can     + can     AUX   MD  aux     3 - -          B-V B-ARGM-MOD -   -      -            can/Mm.<
386 2 they    + they    PRON  PRP nsubj   3 - -          -   B-ARG0     -   -      -            they/Ci
386 3 justify + justify VERB  VB  ROOT    3 - justify.01 -   B-V        -   -      justify.v.01 justify/P?.?so:m01:m01.-i:01234
386 4 lives   + life    NOUN  NNS dobj    3 - -          -   B-ARG1     -   B-ARG1 life.n.08    lives/Cc..p
386 5 being   + be      AUX   VBG auxpass 6 - be.03      -   I-ARG1     B-V -      -            being/Mv.<
386 6 put     + put     VERB  VBN acl     4 - put.03     -   I-ARG1     -   B-V    put.v.02     put/P.-x:12:1h.<pf:012
386 7 at      + at      ADP   IN  prep    6 - -          -   I-ARG1     -   B-ARG2 -            at/T
386 8 risk    - risk    NOUN  NN  pobj    7 - -          -   I-ARG1     -   I-ARG2 risk.n.02    risk/Cc..s
386 9 ?       - ?       PUNCT .   punct   3 - -          -   -          -   -      -            -

# sent_i = 387
# sent = We believe in giving people the freedom to choose.
# hyperedge = ((in/Ml.r.> believe/Pd.sr:0-:0-.|f:012) we/Ci (giving/P.io:21:g1.|pg:012 people/Cc..p (+/Jr.ma (the/Md.< freedom/Cc..s) ((to/Mi.< choose/P.-:0:0.-i:01234) people/Cc..p))))
# hyperedge builder = ((387.2/Ml.r.> 387.1/Pd.sr:0-:0-.|f:012) 387.0/Ci (387.3/P.io:21:g1.|pg:012 387.4/Cc..p (+/Jr.ma (387.5/Md.< 387.6/Cc..s) ((387.7/Mi.< 387.8/P.-:0:0.-i:01234) 387.4/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
387 0 We      + we      PRON  PRP nsubj  1 - -          B-ARG0 -      -      -               we/Ci
387 1 believe + believe VERB  VBP ROOT   1 - believe.01 B-V    -      -      believe_in.v.01 believe/Pd.sr:0-:0-.|f:012
387 2 in      + in      ADP   IN  prt    1 - -          B-ARG1 -      -      believe_in.v.01 in/Ml.r.>
387 3 giving  + give    VERB  VBG xcomp  1 - give.01    I-ARG1 B-V    -      give.v.01       giving/P.io:21:g1.|pg:012
387 4 people  + people  NOUN  NNS dative 3 - -          I-ARG1 B-ARG2 B-ARG0 people.n.01     people/Cc..p
387 5 the     + the     DET   DT  det    6 - -          I-ARG1 B-ARG1 -      -               the/Md.<
387 6 freedom + freedom NOUN  NN  dobj   3 - -          I-ARG1 I-ARG1 -      freedom.n.01    freedom/Cc..s
387 7 to      + to      PART  TO  aux    8 - -          I-ARG1 I-ARG1 -      -               to/Mi.<
387 8 choose  - choose  VERB  VB  acl    6 - choose.01  I-ARG1 I-ARG1 B-V    choose.v.01     choose/P.-:0:0.-i:01234
387 9 .       - .       PUNCT .   punct  1 - -          -      -      -      -               -

# sent_i = 388
# sent = It's just a matter of filling in a form.
# hyperedge = ('s/Pd.sc:12:1h.|f--3s:12 it/Ci (of/Br (just/M.< (a/Md.< matter/Cc..s)) ((in/Ml.r.> filling/P.o:1:g.|pg:012) (a/Md.< form/Cc..s))))
# hyperedge builder = (388.1/Pd.sc:12:1h.|f--3s:12 388.0/Ci (388.5/Br (388.2/M.< (388.3/Md.< 388.4/Cc..s)) ((388.7/Ml.r.> 388.6/P.o:1:g.|pg:012) (388.8/Md.< 388.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
388 0  It      - it     PRON  PRP nsubj  1 - -          B-ARG1 -      -             it/Ci
388 1  's      + be     AUX   VBZ ROOT   1 - be.01      B-V    -      be.v.01       's/Pd.sc:12:1h.|f--3s:12
388 2  just    + just   ADV   RB  advmod 4 - -          B-ARG2 -      merely.r.01   just/M.<
388 3  a       + a      DET   DT  det    4 - -          I-ARG2 -      -             a/Md.<
388 4  matter  + matter NOUN  NN  attr   1 - -          I-ARG2 -      matter.n.01   matter/Cc..s
388 5  of      + of     ADP   IN  prep   4 - -          I-ARG2 -      -             of/Br
388 6  filling + fill   VERB  VBG pcomp  5 - fill_in.05 I-ARG2 B-V    complete.v.05 filling/P.o:1:g.|pg:012
388 7  in      + in     ADP   RP  prt    6 - -          I-ARG2 -      -             in/Ml.r.>
388 8  a       + a      DET   DT  det    9 - -          I-ARG2 B-ARG1 -             a/Md.<
388 9  form    - form   NOUN  NN  dobj   6 - -          I-ARG2 I-ARG1 form.n.08     form/Cc..s
388 10 .       - .      PUNCT .   punct  1 - -          -      -      -             -

# sent_i = 389
# sent = A holiday is nicer than sitting at a desk.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (a/Md.< holiday/Cc..s) (than/Br nicer/Ca (sitting/P.x:2:l.|pg:12 (at/T (a/Md.< desk/Cc..s)))))
# hyperedge builder = (389.2/Pd.sc:12:1h.|f--3s:12 (389.0/Md.< 389.1/Cc..s) (389.4/Br 389.3/Ca (389.5/P.x:2:l.|pg:12 (389.6/T (389.7/Md.< 389.8/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
389 0 A       + a       DET   DT  det   1 - -      B-ARG1 -      -             a/Md.<
389 1 holiday + holiday NOUN  NN  nsubj 2 - -      I-ARG1 -      vacation.n.01 holiday/Cc..s
389 2 is      + be      AUX   VBZ ROOT  2 - be.01  B-V    -      be.v.01       is/Pd.sc:12:1h.|f--3s:12
389 3 nicer   + nice    ADJ   JJR acomp 2 - -      B-ARG2 -      nice.a.01     nicer/Ca
389 4 than    + than    SCONJ IN  prep  3 - -      I-ARG2 -      -             than/Br
389 5 sitting + sit     VERB  VBG pcomp 4 - sit.01 I-ARG2 B-V    sit.v.01      sitting/P.x:2:l.|pg:12
389 6 at      + at      ADP   IN  prep  5 - -      I-ARG2 B-ARG2 -             at/T
389 7 a       + a       DET   DT  det   8 - -      I-ARG2 I-ARG2 -             a/Md.<
389 8 desk    - desk    NOUN  NN  pobj  6 - -      I-ARG2 I-ARG2 desk.n.01     desk/Cc..s
389 9 .       - .       PUNCT .   punct 2 - -      -      -      -             -

# sent_i = 390
# sent = Walking isn't as good for you as swimming.
# hyperedge = ((n't/Mn.> is/Pd.sc:12:1h.|f--3s:12) (walking/P.::.|pg:012) (as/Br (for/Br (as/M.< good/Ca) you/Ci) swimming/P.::.|pg:0123))
# hyperedge builder = ((390.2/Mn.> 390.1/Pd.sc:12:1h.|f--3s:12) (390.0/P.::.|pg:012) (390.7/Br (390.5/Br (390.3/M.< 390.4/Ca) 390.6/Ci) 390.8/P.::.|pg:0123))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
390 0 Walking  + walk VERB  VBG csubj  1 - walk.01 B-V B-ARG1     -   walk.v.01    walking/P.::.|pg:012
390 1 is       - be   AUX   VBZ ROOT   1 - be.01   -   B-V        -   be.v.01      is/Pd.sc:12:1h.|f--3s:12
390 2 n't      + not  PART  RB  neg    1 - -       -   B-ARGM-NEG -   not.r.01     n't/Mn.>
390 3 as       + as   ADV   RB  advmod 4 - -       -   B-ARG2     -   equally.r.01 as/M.<
390 4 good     + good ADJ   JJ  acomp  1 - -       -   I-ARG2     -   good.a.01    good/Ca
390 5 for      + for  ADP   IN  prep   4 - -       -   I-ARG2     -   -            for/Br
390 6 you      + you  PRON  PRP pobj   5 - -       -   I-ARG2     -   -            you/Ci
390 7 as       + as   SCONJ IN  prep   4 - -       -   I-ARG2     -   equally.r.01 as/Br
390 8 swimming - swim VERB  VBG pcomp  7 - swim.01 -   I-ARG2     B-V swim.v.01    swimming/P.::.|pg:0123
390 9 .        - .    PUNCT .   punct  1 - -       -   -          -   -            -

# sent_i = 391
# sent = Jake is thinking of selling his motor-bike.
# hyperedge = ((is/Mv.< (of/Ml.r.> thinking/Pd.sr:0-:0-.|pg:012)) jake/Cp..s.p (selling/P.-o:01:01.|pg:01234 jake/Cp..s.p ((+/Jc.rm.rp his/Mp jake/Cp..s.p) motor-bike/Cc..s)))
# hyperedge builder = ((391.1/Mv.< (391.3/Ml.r.> 391.2/Pd.sr:0-:0-.|pg:012)) 391.0/Cp..s.p (391.4/P.-o:01:01.|pg:01234 391.0/Cp..s.p ((+/Jc.rm.rp 391.5/Mp 391.0/Cp..s.p) 391.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
391 0 Jake       + Jake       PROPN NNP  nsubj 2 B-PERSON -        -   B-ARG0 B-ARG0 B-MAIN0 -               jake/Cp..s.p
391 1 is         + be         AUX   VBZ  aux   2 -        be.03    B-V -      -      -       -               is/Mv.<
391 2 thinking   + think      VERB  VBG  ROOT  2 -        think.01 -   B-V    -      -       entertain.v.02  thinking/Pd.sr:0-:0-.|pg:012
391 3 of         + of         ADP   IN   prt   2 -        -        -   B-ARG2 -      -       -               of/Ml.r.>
391 4 selling    + sell       VERB  VBG  ccomp 2 -        sell.01  -   I-ARG2 B-V    -       sell.v.01       selling/P.-o:01:01.|pg:01234
391 5 his        + his        PRON  PRP$ poss  6 -        -        -   I-ARG2 B-ARG1 B-REF0  -               his/Mp
391 6 motor-bike - motor-bike NOUN  NN   dobj  4 -        -        -   I-ARG2 I-ARG1 -       motorcycle.n.01 motor-bike/Cc..s
391 7 .          - .          PUNCT .    punct 2 -        -        -   -      -      -       -               -

# sent_i = 392
# sent = Sue insists on reading the letter.
# hyperedge = (insists/Pd.sx:01:01.|f--3s:01 sue/Cp..s (on/T (reading/P.-o:01:01.|pg:0123 sue/Cp..s (the/Md.< letter/Cc..s))))
# hyperedge builder = (392.1/Pd.sx:01:01.|f--3s:01 392.0/Cp..s (392.2/T (392.3/P.-o:01:01.|pg:0123 392.0/Cp..s (392.4/Md.< 392.5/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
392 0 Sue     + Sue    PROPN NNP nsubj 1 - -         B-ARG0 B-ARG0 -           sue/Cp..s
392 1 insists + insist VERB  VBZ ROOT  1 - insist.01 B-V    -      insist.v.01 insists/Pd.sx:01:01.|f--3s:01
392 2 on      + on     ADP   IN  prep  1 - -         B-ARG1 -      -           on/T
392 3 reading + read   VERB  VBG pcomp 2 - read.01   I-ARG1 B-V    read.v.01   reading/P.-o:01:01.|pg:0123
392 4 the     + the    DET   DT  det   5 - -         I-ARG1 B-ARG1 -           the/Md.<
392 5 letter  - letter NOUN  NN  dobj  3 - -         I-ARG1 I-ARG1 letter.n.01 letter/Cc..s
392 6 .       - .      PUNCT .   punct 1 - -         -      -      -           -

# sent_i = 393
# sent = Let's get on with addressing the envelopes.
# hyperedge = (let/Pd.r:1:1.-i:01 ((with/Ml.r.> (on/Ml.r.> get/P.sr:01:01.-i:01)) 's/Ci (addressing/P.-o:01:0g.|pg:0123 's/Ci (the/Md.< envelopes/Cc..p))))
# hyperedge builder = (393.0/Pd.r:1:1.-i:01 ((393.4/Ml.r.> (393.3/Ml.r.> 393.2/P.sr:01:01.-i:01)) 393.1/Ci (393.5/P.-o:01:0g.|pg:0123 393.1/Ci (393.6/Md.< 393.7/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
393 0 Let        - let      VERB  VB  ROOT  0 - let.01     B-V    -      -      let.v.01      let/Pd.r:1:1.-i:01
393 1 's         + us       PRON  PRP nsubj 2 - -          B-ARG1 B-ARG0 B-ARG0 -             's/Ci
393 2 get        + get      VERB  VB  ccomp 0 - get_on.21  I-ARG1 B-V    -      progress.v.01 get/P.sr:01:01.-i:01
393 3 on         + on       ADP   RP  prt   2 - -          I-ARG1 -      -      progress.v.01 on/Ml.r.>
393 4 with       + with     ADP   RP  prt   2 - -          I-ARG1 -      -      -             with/Ml.r.>
393 5 addressing + address  VERB  VBG xcomp 2 - address.01 I-ARG1 B-ARG1 B-V    address.v.03  addressing/P.-o:01:0g.|pg:0123
393 6 the        + the      DET   DT  det   7 - -          I-ARG1 I-ARG1 B-ARG1 -             the/Md.<
393 7 envelopes  - envelope NOUN  NNS dobj  5 - -          I-ARG1 I-ARG1 I-ARG1 envelope.n.01 envelopes/Cc..p
393 8 .          - .        PUNCT .   punct 0 - -          -      -      -      -             -

# sent_i = 394
# sent = People were complaining about having to walk so far.
# hyperedge = ((were/Mv.< complaining/Pd.sx:01:01.|pg:012) people/Cc..p (about/T (having/P.r:-:-.|pg ((to/Mi.< walk/P.-?:02:0l.-i:012) people/Cc..p (so/M.< far/M)))))
# hyperedge builder = ((394.1/Mv.< 394.2/Pd.sx:01:01.|pg:012) 394.0/Cc..p (394.3/T (394.4/P.r:-:-.|pg ((394.5/Mi.< 394.6/P.-?:02:0l.-i:012) 394.0/Cc..p (394.7/M.< 394.8/M)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
394 0 People      + People   NOUN  NNS nsubj  2 - -           -   B-ARG0 -   B-ARG0     people.n.01   people/Cc..p
394 1 were        + be       AUX   VBD aux    2 - be.03       B-V -      -   -          -             were/Mv.<
394 2 complaining + complain VERB  VBG ROOT   2 - complain.01 -   B-V    -   -          complain.v.01 complaining/Pd.sx:01:01.|pg:012
394 3 about       + about    ADP   IN  prep   2 - -           -   B-ARG1 -   -          -             about/T
394 4 having      + have     VERB  VBG pcomp  3 - have.02     -   I-ARG1 B-V B-ARGM-MOD -             having/P.r:-:-.|pg
394 5 to          + to       PART  TO  aux    6 - -           -   I-ARG1 -   -          -             to/Mi.<
394 6 walk        + walk     VERB  VB  xcomp  4 - walk.01     -   I-ARG1 -   B-V        walk.v.01     walk/P.-?:02:0l.-i:012
394 7 so          + so       ADV   RB  advmod 8 - -           -   I-ARG1 -   B-ARG2     -             so/M.<
394 8 far         - far      ADV   RB  advmod 6 - -           -   I-ARG1 -   I-ARG2     far.r.02      far/M
394 9 .           - .        PUNCT .   punct  2 - -           -   -      -   -          -             -

# sent_i = 395
# sent = I'd like to congratulate you on breaking the world record.
# hyperedge = (('d/Mm.< like/Pd.sr:01:01.-i:01) i/Ci ((to/Mi.< congratulate/P.-ox:012:01h.-i:012) i/Ci you/Ci (on/T (breaking/P.-o:01:01.|pg:01 you/Ci (the/Md.< (+/B.am world/Cc.<.s record/Cc..s))))))
# hyperedge builder = ((395.1/Mm.< 395.2/Pd.sr:01:01.-i:01) 395.0/Ci ((395.3/Mi.< 395.4/P.-ox:012:01h.-i:012) 395.0/Ci 395.5/Ci (395.6/T (395.7/P.-o:01:01.|pg:01 395.5/Ci (395.8/Md.< (+/B.am 395.9/Cc.<.s 395.10/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
395 0  I            - I            PRON  PRP nsubj    2  - -               -   B-ARG0     B-ARG0 -      -                 i/Ci
395 1  'd           + 'd           AUX   MD  aux      2  - -               B-V B-ARGM-MOD -      -      -                 'd/Mm.<
395 2  like         + like         VERB  VB  ROOT     2  - like.02         -   B-V        -      -      wish.v.02         like/Pd.sr:01:01.-i:01
395 3  to           + to           PART  TO  aux      4  - -               -   B-ARG1     -      -      -                 to/Mi.<
395 4  congratulate + congratulate VERB  VB  xcomp    2  - congratulate.01 -   I-ARG1     B-V    -      congratulate.v.02 congratulate/P.-ox:012:01h.-i:012
395 5  you          + you          PRON  PRP dobj     4  - -               -   I-ARG1     B-ARG1 B-ARG0 -                 you/Ci
395 6  on           + on           ADP   IN  prep     4  - -               -   I-ARG1     B-ARG2 -      -                 on/T
395 7  breaking     + break        VERB  VBG pcomp    6  - break.21        -   I-ARG1     I-ARG2 B-V    better.v.01       breaking/P.-o:01:01.|pg:01
395 8  the          + the          DET   DT  det      10 - -               -   I-ARG1     I-ARG2 B-ARG1 -                 the/Md.<
395 9  world        + world        NOUN  NN  compound 10 - -               -   I-ARG1     I-ARG2 I-ARG1 world_record.n.01 world/Cc.<.s
395 10 record       - record       NOUN  NN  dobj     7  - -               -   I-ARG1     I-ARG2 I-ARG1 world_record.n.01 record/Cc..s
395 11 .            - .            PUNCT .   punct    2  - -               -   -          -      -      -                 -

# sent_i = 396
# sent = The article accuses the government of concealing important information.
# hyperedge = (accuses/Pd.sox:012:01h.|f--3s:012 (the/Md.< article/Cc..s) (the/Md.< government/Cc..s) (of/T (concealing/P.-o:01:01.|pg:012 (the/Md.< government/Cc..s) (important/Ma.< information/Cc..s))))
# hyperedge builder = (396.2/Pd.sox:012:01h.|f--3s:012 (396.0/Md.< 396.1/Cc..s) (396.3/Md.< 396.4/Cc..s) (396.5/T (396.6/P.-o:01:01.|pg:012 (396.3/Md.< 396.4/Cc..s) (396.7/Ma.< 396.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
396 0 The         + the         DET   DT  det   1 - -          B-ARG0 -      -                the/Md.<
396 1 article     + article     NOUN  NN  nsubj 2 - -          I-ARG0 -      article.n.01     article/Cc..s
396 2 accuses     + accuse      VERB  VBZ ROOT  2 - accuse.01  B-V    -      accuse.v.01      accuses/Pd.sox:012:01h.|f--3s:012
396 3 the         + the         DET   DT  det   4 - -          B-ARG1 B-ARG0 -                the/Md.<
396 4 government  + government  NOUN  NN  dobj  2 - -          I-ARG1 I-ARG0 government.n.01  government/Cc..s
396 5 of          + of          ADP   IN  prep  2 - -          B-ARG2 -      -                of/T
396 6 concealing  + conceal     VERB  VBG pcomp 5 - conceal.01 I-ARG2 B-V    hide.v.01        concealing/P.-o:01:01.|pg:012
396 7 important   + important   ADJ   JJ  amod  8 - -          I-ARG2 B-ARG1 important.a.01   important/Ma.<
396 8 information - information NOUN  NN  dobj  6 - -          I-ARG2 I-ARG1 information.n.01 information/Cc..s
396 9 .           - .           PUNCT .   punct 2 - -          -      -      -                -

# sent_i = 397
# sent = She's keen on riding.
# hyperedge = ('s/Pd.sc:12:1h.|f--3s:12 she/Ci (on/Br keen/Ca riding/P.::.|pg:01))
# hyperedge builder = (397.1/Pd.sc:12:1h.|f--3s:12 397.0/Ci (397.3/Br 397.2/Ca 397.4/P.::.|pg:01))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
397 0 She    - she  PRON  PRP nsubj 1 - -       B-ARG1 -   -          she/Ci
397 1 's     + be   AUX   VBZ ROOT  1 - be.01   B-V    -   be.v.01    's/Pd.sc:12:1h.|f--3s:12
397 2 keen   + keen ADJ   JJ  acomp 1 - -       B-ARG2 -   eager.a.01 keen/Ca
397 3 on     + on   ADP   IN  prep  2 - -       I-ARG2 -   -          on/Br
397 4 riding - ride VERB  VBG pcomp 3 - ride.01 I-ARG2 B-V ride.v.01  riding/P.::.|pg:01
397 5 .      - .    PUNCT .   punct 1 - -       -      -   -          -

# sent_i = 398
# sent = What's wrong with borrowing a little money?
# hyperedge = ('s/P?.sc:12:1h.|f--3s:12 what/Cw (with/Br wrong/Ca (borrowing/P.o:1:1.|pg:0123 (a/Md.< (little/Ma.< money/Cc..s)))))
# hyperedge builder = (398.1/P?.sc:12:1h.|f--3s:12 398.0/Cw (398.3/Br 398.2/Ca (398.4/P.o:1:1.|pg:0123 (398.5/Md.< (398.6/Ma.< 398.7/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
398 0 What      - what   PRON  WP  nsubj 1 - -         B-ARG1 -      -           what/Cw
398 1 's        + be     AUX   VBZ ROOT  1 - be.01     B-V    -      be.v.01     's/P?.sc:12:1h.|f--3s:12
398 2 wrong     + wrong  ADJ   JJ  acomp 1 - -         B-ARG2 -      wrong.a.02  wrong/Ca
398 3 with      + with   ADP   IN  prep  2 - -         I-ARG2 -      -           with/Br
398 4 borrowing + borrow VERB  VBG pcomp 3 - borrow.01 I-ARG2 B-V    borrow.v.01 borrowing/P.o:1:1.|pg:0123
398 5 a         + a      DET   DT  det   7 - -         I-ARG2 B-ARG1 -           a/Md.<
398 6 little    + little ADJ   JJ  amod  7 - -         I-ARG2 I-ARG1 little.a.02 little/Ma.<
398 7 money     - money  NOUN  NN  dobj  4 - -         I-ARG2 I-ARG1 money.n.01  money/Cc..s
398 8 ?         - ?      PUNCT .   punct 1 - -         -      -      -           -

# sent_i = 399
# sent = I'm nervous of saying the wrong thing.
# hyperedge = ('m/Pd.sc:12:1h.|f:12 i/Ci (of/Br nervous/Ca (saying/P.-o:01:01.|pg:0123 i/Ci (the/Md.< (wrong/Ma.< thing/Cc..s)))))
# hyperedge builder = (399.1/Pd.sc:12:1h.|f:12 399.0/Ci (399.3/Br 399.2/Ca (399.4/P.-o:01:01.|pg:0123 399.0/Ci (399.5/Md.< (399.6/Ma.< 399.7/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
399 0 I       - I       PRON  PRP nsubj 1 - -      B-ARG1 B-ARG0 -             i/Ci
399 1 'm      + be      VERB  VBP ROOT  1 - be.01  B-V    -      be.v.01       'm/Pd.sc:12:1h.|f:12
399 2 nervous + nervous ADJ   JJ  acomp 1 - -      B-ARG2 -      nervous.s.01  nervous/Ca
399 3 of      + of      ADP   IN  prep  2 - -      I-ARG2 -      -             of/Br
399 4 saying  + say     VERB  VBG pcomp 3 - say.01 I-ARG2 B-V    state.v.01    saying/P.-o:01:01.|pg:0123
399 5 the     + the     DET   DT  det   7 - -      I-ARG2 B-ARG1 -             the/Md.<
399 6 wrong   + wrong   ADJ   JJ  amod  7 - -      I-ARG2 I-ARG1 improper.s.03 wrong/Ma.<
399 7 thing   - thing   NOUN  NN  dobj  4 - -      I-ARG2 I-ARG1 thing.n.07    thing/Cc..s
399 8 .       - .       PUNCT .   punct 1 - -      -      -      -             -

# sent_i = 400
# sent = The people voted for joining the European Community.
# hyperedge = (voted/Pd.sx:01:01.<f:0123 (the/Md.< people/Cc..p) (for/T (joining/P.o:1:1.|pg:0123 (the/Md.<..o (+/B.am..o european/Cp.<.s.o community/Cp..s.o)))))
# hyperedge builder = (400.2/Pd.sx:01:01.<f:0123 (400.0/Md.< 400.1/Cc..p) (400.3/T (400.4/P.o:1:1.|pg:0123 (400.5/Md.<..o (+/B.am..o 400.6/Cp.<.s.o 400.7/Cp..s.o)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
400 0 The       + the       DET   DT  det      1 -     -       B-ARG0 -      -                   the/Md.<
400 1 people    + people    NOUN  NNS nsubj    2 -     -       I-ARG0 -      people.n.01         people/Cc..p
400 2 voted     + vote      VERB  VBD ROOT     2 -     vote.01 B-V    -      vote.v.01           voted/Pd.sx:01:01.<f:0123
400 3 for       + for       ADP   IN  prep     2 -     -       B-ARG1 -      -                   for/T
400 4 joining   + join      VERB  VBG pcomp    3 -     join.01 I-ARG1 B-V    join.v.01           joining/P.o:1:1.|pg:0123
400 5 the       + the       DET   DT  det      7 B-ORG -       I-ARG1 B-ARG1 -                   the/Md.<..o
400 6 European  + European  PROPN NNP compound 7 I-ORG -       I-ARG1 I-ARG1 european_union.n.01 european/Cp.<.s.o
400 7 Community - Community PROPN NNP dobj     4 I-ORG -       I-ARG1 I-ARG1 european_union.n.01 community/Cp..s.o
400 8 .         - .         PUNCT .   punct    2 -     -       -      -      -                   -

# sent_i = 401
# sent = The people voted to join the European Community.
# hyperedge = (voted/Pd.sr:01:01.<f:0123 (the/Md.< people/Cc..p) ((to/Mi.< join/P.-o:01:01.-i:0123) (the/Md.< people/Cc..p) (the/Md.<..o (+/B.am..o european/Cp.<.s.o community/Cp..s.o))))
# hyperedge builder = (401.2/Pd.sr:01:01.<f:0123 (401.0/Md.< 401.1/Cc..p) ((401.3/Mi.< 401.4/P.-o:01:01.-i:0123) (401.0/Md.< 401.1/Cc..p) (401.5/Md.<..o (+/B.am..o 401.6/Cp.<.s.o 401.7/Cp..s.o))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
401 0 The       + the       DET   DT  det      1 -     -       B-ARG0 B-ARG0 -                   the/Md.<
401 1 people    + people    NOUN  NNS nsubj    2 -     -       I-ARG0 I-ARG0 people.n.01         people/Cc..p
401 2 voted     + vote      VERB  VBD ROOT     2 -     vote.01 B-V    -      vote.v.01           voted/Pd.sr:01:01.<f:0123
401 3 to        + to        PART  TO  aux      4 -     -       B-ARG1 -      -                   to/Mi.<
401 4 join      + join      VERB  VB  xcomp    2 -     join.01 I-ARG1 B-V    join.v.01           join/P.-o:01:01.-i:0123
401 5 the       + the       DET   DT  det      7 B-ORG -       I-ARG1 B-ARG1 -                   the/Md.<..o
401 6 European  + European  PROPN NNP compound 7 I-ORG -       I-ARG1 I-ARG1 european_union.n.01 european/Cp.<.s.o
401 7 Community - Community PROPN NNP dobj     4 I-ORG -       I-ARG1 I-ARG1 european_union.n.01 community/Cp..s.o
401 8 .         - .         PUNCT .   punct    2 -     -       -      -      -                   -

# sent_i = 402
# sent = I look forward to seeing you soon.
# hyperedge = ((to/Ml.r.> (forward/Ml.r.> look/Pd.sr:0-:0-.|f:01)) i/Ci (seeing/P.-o?:01t:01t.|pg:012 i/Ci you/Ci soon/M))
# hyperedge builder = ((402.3/Ml.r.> (402.2/Ml.r.> 402.1/Pd.sr:0-:0-.|f:01)) 402.0/Ci (402.4/P.-o?:01t:01t.|pg:012 402.0/Ci 402.5/Ci 402.6/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
402 0 I       + I       PRON  PRP nsubj  1 - -               B-ARG0 B-ARG0     -                 i/Ci
402 1 look    + look    VERB  VBP ROOT   1 - look_forward.03 B-V    -          look_forward.v.01 look/Pd.sr:0-:0-.|f:01
402 2 forward + forward ADV   RB  prt    1 - -               -      -          look_forward.v.01 forward/Ml.r.>
402 3 to      + to      ADP   RP  prt    1 - -               B-ARG1 -          -                 to/Ml.r.>
402 4 seeing  + see     VERB  VBG xcomp  1 - see.01          I-ARG1 B-V        meet.v.01         seeing/P.-o?:01t:01t.|pg:012
402 5 you     + you     PRON  PRP dobj   4 - -               I-ARG1 B-ARG1     -                 you/Ci
402 6 soon    - soon    ADV   RB  advmod 4 - -               I-ARG1 B-ARGM-TMP soon.r.01         soon/M
402 7 .       - .       PUNCT .   punct  1 - -               -      -          -                 -

# sent_i = 403
# sent = He succeeded in doing it well.
# hyperedge = (succeeded/Pd.sx:01:01.<f:01 he/Ci (in/T (doing/P.-o?:01m:01m.|pg:01234 he/Ci it/Ci well/M)))
# hyperedge builder = (403.1/Pd.sx:01:01.<f:01 403.0/Ci (403.2/T (403.3/P.-o?:01m:01m.|pg:01234 403.0/Ci 403.4/Ci 403.5/M)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
403 0 He        + he      PRON  PRP nsubj  1 - -          B-ARG0 B-ARG0     -            he/Ci
403 1 succeeded + succeed VERB  VBD ROOT   1 - succeed.01 B-V    -          succeed.v.01 succeeded/Pd.sx:01:01.<f:01
403 2 in        + in      ADP   IN  prep   1 - -          B-ARG1 -          -            in/T
403 3 doing     + do      VERB  VBG pcomp  2 - do.02      I-ARG1 B-V        do.v.03      doing/P.-o?:01m:01m.|pg:01234
403 4 it        + it      PRON  PRP dobj   3 - -          I-ARG1 B-ARG1     -            it/Ci
403 5 well      - well    ADV   RB  advmod 3 - -          I-ARG1 B-ARGM-MNR well.r.01    well/M
403 6 .         - .       PUNCT .   punct  1 - -          -      -          -            -

# sent_i = 404
# sent = We were grateful for having Tom in our team.
# hyperedge = (were/Pd.sc:12:1h.<f:12 we/Ci (for/Br grateful/Ca (having/P.-ox:01l:01l.|pg:01 we/Ci tom/Cp..s.p (in/Tl ((+/Jc.rm.rr our/Mp we/Ci) team/Cc..s)))))
# hyperedge builder = (404.1/Pd.sc:12:1h.<f:12 404.0/Ci (404.3/Br 404.2/Ca (404.4/P.-ox:01l:01l.|pg:01 404.0/Ci 404.5/Cp..s.p (404.6/Tl ((+/Jc.rm.rr 404.7/Mp 404.0/Ci) 404.8/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
404 0 We       + we       PRON  PRP  nsubj 1 -        -       B-ARG1 B-ARG0     B-MAIN0 -             we/Ci
404 1 were     + be       AUX   VBD  ROOT  1 -        be.01   B-V    -          -       be.v.01       were/Pd.sc:12:1h.<f:12
404 2 grateful + grateful ADJ   JJ   acomp 1 -        -       B-ARG2 -          -       grateful.a.01 grateful/Ca
404 3 for      + for      ADP   IN   prep  2 -        -       I-ARG2 -          -       -             for/Br
404 4 having   + have     VERB  VBG  pcomp 3 -        have.03 I-ARG2 B-V        -       have.v.01     having/P.-ox:01l:01l.|pg:01
404 5 Tom      + Tom      PROPN NNP  dobj  4 B-PERSON -       I-ARG2 B-ARG1     -       -             tom/Cp..s.p
404 6 in       + in       ADP   IN   prep  4 -        -       I-ARG2 B-ARGM-LOC -       -             in/Tl
404 7 our      + our      PRON  PRP$ poss  8 -        -       I-ARG2 I-ARGM-LOC B-REF0  -             our/Mp
404 8 team     - team     NOUN  NN   pobj  6 -        -       I-ARG2 I-ARGM-LOC -       team.n.01     team/Cc..s
404 9 .        - .        PUNCT .    punct 1 -        -       -      -          -       -             -

# sent_i = 405
# sent = I noticed Jeff's success in getting the price reduced.
# hyperedge = (noticed/Pd.so:01:10.<f:01 i/Ci (in/Br ('s/Bp jeff/Cp..s.p success/Cc..s) (getting/P.r:1:1.|pg:01 (reduced/P.-p:01:01.<pf:01234m jeff/Cp..s.p (the/Md.< price/Cc..s)))))
# hyperedge builder = (405.1/Pd.so:01:10.<f:01 405.0/Ci (405.5/Br (405.3/Bp 405.2/Cp..s.p 405.4/Cc..s) (405.6/P.r:1:1.|pg:01 (405.9/P.-p:01:01.<pf:01234m 405.2/Cp..s.p (405.7/Md.< 405.8/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
405 0  I       + I       PRON  PRP nsubj     1 -        -         B-ARG0 -      -      -            i/Ci
405 1  noticed + notice  VERB  VBD ROOT      1 -        notice.01 B-V    -      -      notice.v.02  noticed/Pd.so:01:10.<f:01
405 2  Jeff    - Jeff    PROPN NNP poss      4 B-PERSON -         B-ARG1 -      B-ARG0 -            jeff/Cp..s.p
405 3  's      + 's      PART  POS case      2 -        -         I-ARG1 -      -      -            's/Bp
405 4  success + success NOUN  NN  dobj      1 -        -         I-ARG1 -      -      success.n.02 success/Cc..s
405 5  in      + in      ADP   IN  prep      4 -        -         I-ARG1 -      -      -            in/Br
405 6  getting + get     VERB  VBG pcomp     5 -        get.04    I-ARG1 B-V    -      make.v.02    getting/P.r:1:1.|pg:01
405 7  the     + the     DET   DT  det       8 -        -         I-ARG1 B-ARG1 B-ARG1 -            the/Md.<
405 8  price   + price   NOUN  NN  nsubjpass 9 -        -         I-ARG1 I-ARG1 I-ARG1 price.n.02   price/Cc..s
405 9  reduced - reduce  VERB  VBN ccomp     6 -        reduce.01 I-ARG1 I-ARG1 B-V    reduce.v.01  reduced/P.-p:01:01.<pf:01234m
405 10 .       - .       PUNCT .   punct     1 -        -         -      -      -      -            -

# sent_i = 406
# sent = I like the idea of living in a caravan.
# hyperedge = (like/Pd.so:01:01.|f:01 i/Ci (of/Br (the/Md.< idea/Cc..s) (living/P.x:l:l.|pg:01 (in/Tl (a/Md.< caravan/Cc..s)))))
# hyperedge builder = (406.1/Pd.so:01:01.|f:01 406.0/Ci (406.4/Br (406.2/Md.< 406.3/Cc..s) (406.5/P.x:l:l.|pg:01 (406.6/Tl (406.7/Md.< 406.8/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
406 0 I       + I       PRON  PRP nsubj 1 - -       B-ARG0 -          -             i/Ci
406 1 like    + like    VERB  VBP ROOT  1 - like.01 B-V    -          like.v.02     like/Pd.so:01:01.|f:01
406 2 the     + the     DET   DT  det   3 - -       B-ARG1 -          -             the/Md.<
406 3 idea    + idea    NOUN  NN  dobj  1 - -       I-ARG1 -          idea.n.01     idea/Cc..s
406 4 of      + of      ADP   IN  prep  3 - -       I-ARG1 -          -             of/Br
406 5 living  + live    VERB  VBG pcomp 4 - live.01 I-ARG1 B-V        populate.v.01 living/P.x:l:l.|pg:01
406 6 in      + in      ADP   IN  prep  5 - -       I-ARG1 B-ARGM-LOC -             in/Tl
406 7 a       + a       DET   DT  det   8 - -       I-ARG1 I-ARGM-LOC -             a/Md.<
406 8 caravan - caravan NOUN  NN  pobj  6 - -       I-ARG1 I-ARGM-LOC van.n.04      caravan/Cc..s
406 9 .       - .       PUNCT .   punct 1 - -       -      -          -             -

# sent_i = 407
# sent = I still feel tired in spite of having slept eight hours.
# hyperedge = (feel/Pd.s?cx:0t1r:1t1r.|f:012 i/Ci still/M tired/Ca (in/T (of/Br spite/Cc..s ((having/Mv.< slept/P.-x:0t:0t.<pf:012) i/Ci (eight/M#.<..t hours/Cc..p.t)))))
# hyperedge builder = (407.2/Pd.s?cx:0t1r:1t1r.|f:012 407.0/Ci 407.1/M 407.3/Ca (407.4/T (407.6/Br 407.5/Cc..s ((407.7/Mv.< 407.8/P.-x:0t:0t.<pf:012) 407.0/Ci (407.9/M#.<..t 407.10/Cc..p.t)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
407 0  I      + I     PRON  PRP nsubj    2  -      -        B-ARG0     -   B-ARG0     -          i/Ci
407 1  still  + still ADV   RB  advmod   2  -      -        B-ARGM-TMP -   -          -          still/M
407 2  feel   + feel  VERB  VBP ROOT     2  -      feel.01  B-V        -   -          feel.v.04  feel/Pd.s?cx:0t1r:1t1r.|f:012
407 3  tired  + tired ADJ   JJ  acomp    2  -      -        B-ARG1     -   -          tired.a.01 tired/Ca
407 4  in     + in    ADP   IN  prep     2  -      -        B-ARGM-ADV -   -          -          in/T
407 5  spite  + spite NOUN  NN  pobj     4  -      -        I-ARGM-ADV -   -          -          spite/Cc..s
407 6  of     + of    ADP   IN  prep     5  -      -        I-ARGM-ADV -   -          -          of/Br
407 7  having + have  AUX   VBG aux      8  -      have.01  I-ARGM-ADV B-V -          -          having/Mv.<
407 8  slept  + sleep VERB  VBN pcomp    6  -      sleep.01 I-ARGM-ADV -   B-V        sleep.v.01 slept/P.-x:0t:0t.<pf:012
407 9  eight  + eight NUM   CD  nummod   10 B-TIME -        I-ARGM-ADV -   B-ARGM-TMP eight.s.01 eight/M#.<..t
407 10 hours  - hour  NOUN  NNS npadvmod 8  I-TIME -        I-ARGM-ADV -   I-ARGM-TMP hour.n.01  hours/Cc..p.t
407 11 .      - .     PUNCT .   punct    2  -      -        -          -   -          -          -

# sent_i = 408
# sent = Despite your reminding me, I forgot.
# hyperedge = (forgot/Pd.xs:r0:r0.<f:01 (despite/T (reminding/P.so:02:0g.|pg:012 your/Ci (+/Jc.rm.rr me/Ci i/Ci))) i/Ci)
# hyperedge builder = (408.6/Pd.xs:r0:r0.<f:01 (408.0/T (408.2/P.so:02:0g.|pg:012 408.1/Ci (+/Jc.rm.rr 408.3/Ci 408.5/Ci))) 408.5/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
408 0 Despite   + despite SCONJ IN   prep  6 - -         -      B-ARGM-ADV -       -           despite/T
408 1 your      + your    PRON  PRP$ nsubj 2 - -         B-ARG0 I-ARGM-ADV -       -           your/Ci
408 2 reminding + remind  VERB  VBG  pcomp 0 - remind.01 B-V    I-ARGM-ADV -       remind.v.01 reminding/P.so:02:0g.|pg:012
408 3 me        - I       PRON  PRP  dobj  2 - -         B-ARG2 I-ARGM-ADV B-REF0  -           me/Ci
408 4 ,         + ,       PUNCT ,    punct 6 - -         -      -          -       -           -
408 5 I         + I       PRON  PRP  nsubj 6 - -         -      B-ARG0     B-MAIN0 -           i/Ci
408 6 forgot    - forget  VERB  VBD  ROOT  6 - forget.01 -      B-V        -       forget.v.02 forgot/Pd.xs:r0:r0.<f:01
408 7 .         - .       PUNCT .    punct 6 - -         -      -          -       -           -

# sent_i = 409
# sent = How about coming round this evening?
# hyperedge = ((how/Mw.< about/T) ((round/Ml.r.> coming/P.x:t:t.|pg:1234) (this/Md.<..t evening/Cc..s.t)))
# hyperedge builder = ((409.0/Mw.< 409.1/T) ((409.3/Ml.r.> 409.2/P.x:t:t.|pg:1234) (409.4/Md.<..t 409.5/Cc..s.t)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
409 0 How     + how     ADV   WRB advmod   1 -      -       -          -            how/Mw.<
409 1 about   + about   ADP   IN  ROOT     1 -      -       -          -            about/T
409 2 coming  + come    VERB  VBG pcomp    1 -      come.01 B-V        drop_by.v.01 coming/P.x:t:t.|pg:1234
409 3 round   + round   ADP   IN  prt      2 -      -       B-ARGM-DIR drop_by.v.01 round/Ml.r.>
409 4 this    + this    DET   DT  det      5 B-TIME -       B-ARGM-TMP -            this/Md.<..t
409 5 evening - evening NOUN  NN  npadvmod 2 I-TIME -       I-ARGM-TMP evening.n.01 evening/Cc..s.t
409 6 ?       - ?       PUNCT .   punct    1 -      -       -          -            -

# sent_i = 410
# sent = Nancy likes her new job, but the driving makes her tired.
# hyperedge = (but/J (likes/Pd.so:01:01.|f--3s:01 nancy/Cp..s.p ((+/Jc.rm.rp her/Mp nancy/Cp..s.p) (new/Ma.< job/Cc..s))) (makes/Pd.sr:01:0h.|f--3s:01 (the/Md.< driving/Cc..s) (tired/M (+/Jc.rm.rp her/Ci nancy/Cp..s.p))))
# hyperedge builder = (410.6/J (410.1/Pd.so:01:01.|f--3s:01 410.0/Cp..s.p ((+/Jc.rm.rp 410.2/Mp 410.0/Cp..s.p) (410.3/Ma.< 410.4/Cc..s))) (410.9/Pd.sr:01:0h.|f--3s:01 (410.7/Md.< 410.8/Cc..s) (410.11/M (+/Jc.rm.rp 410.10/Ci 410.0/Cp..s.p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
410 0  Nancy   + Nancy   PROPN NNP  nsubj 1  B-PERSON -       B-ARG0 -      B-MAIN0 -               nancy/Cp..s.p
410 1  likes   + like    VERB  VBZ  ROOT  1  -        like.01 B-V    -      -       like.v.02       likes/Pd.so:01:01.|f--3s:01
410 2  her     + her     PRON  PRP$ poss  4  -        -       B-ARG1 -      B-REF0  -               her/Mp
410 3  new     + new     ADJ   JJ   amod  4  -        -       I-ARG1 -      -       new.a.01        new/Ma.<
410 4  job     - job     NOUN  NN   dobj  1  -        -       I-ARG1 -      -       occupation.n.01 job/Cc..s
410 5  ,       + ,       PUNCT ,    punct 1  -        -       -      -      -       -               -
410 6  but     + but     CCONJ CC   cc    1  -        -       -      -      -       -               but/J
410 7  the     + the     DET   DT   det   8  -        -       -      B-ARG0 -       -               the/Md.<
410 8  driving + driving NOUN  NN   nsubj 9  -        -       -      I-ARG0 -       driving.n.02    driving/Cc..s
410 9  makes   + make    VERB  VBZ  conj  1  -        make.02 -      B-V    -       make.v.02       makes/Pd.sr:01:0h.|f--3s:01
410 10 her     + she     PRON  PRP  nsubj 11 -        -       -      B-ARG1 B-REF0  -               her/Ci
410 11 tired   - tired   ADJ   JJ   ccomp 9  -        -       -      I-ARG1 -       tired.a.01      tired/M
410 12 .       - .       PUNCT .    punct 9  -        -       -      -      -       -               -

# sent_i = 411
# sent = This constant arguing gets on my nerves.
# hyperedge = ((on/Ml.r.> gets/Pd.so:0-:0-.|f--3s:01) (this/Md.< (constant/Ma.< arguing/Cc..s)) (my/Mp nerves/Cc..p))
# hyperedge builder = ((411.4/Ml.r.> 411.3/Pd.so:0-:0-.|f--3s:01) (411.0/Md.< (411.1/Ma.< 411.2/Cc..s)) (411.5/Mp 411.6/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
411 0 This     + this     DET   DT   det   2 - -      B-ARG0 -                this/Md.<
411 1 constant + constant ADJ   JJ   amod  2 - -      I-ARG0 changeless.s.02  constant/Ma.<
411 2 arguing  + arguing  NOUN  NN   nsubj 3 - -      I-ARG0 controversy.n.01 arguing/Cc..s
411 3 gets     + get      VERB  VBZ  ROOT  3 - get.04 B-V    madden.v.02      gets/Pd.so:0-:0-.|f--3s:01
411 4 on       + on       ADP   IN   prt   3 - -      B-ARG1 madden.v.02      on/Ml.r.>
411 5 my       + my       PRON  PRP$ poss  6 - -      I-ARG1 madden.v.02      my/Mp
411 6 nerves   - nerve    NOUN  NNS  dobj  3 - -      I-ARG1 madden.v.02      nerves/Cc..p
411 7 .        - .        PUNCT .    punct 3 - -      -      -                -

# sent_i = 412
# sent = No parking.
# hyperedge = (no/Md.< parking/Cc..s)
# hyperedge builder = (412.0/Md.< 412.1/Cc..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset synset atoms
412 0 No      + no      DET   DT det   1 - - no.r.03      no/Md.<
412 1 parking - parking NOUN  NN ROOT  1 - - parking.n.02 parking/Cc..s
412 2 .       - .       PUNCT .  punct 1 - - -            -

# sent_i = 413
# sent = I've got a bit of shopping to do.
# hyperedge = (('ve/Mv.< got/Pd.sr:01:0h.<pf:01) i/Ci ((to/Mi.< do/P.-o:01:01.-i:01234) i/Ci (of/Br (a/Md.< bit/Cc..s) shopping/Cc..s)))
# hyperedge builder = ((413.1/Mv.< 413.2/Pd.sr:01:0h.<pf:01) 413.0/Ci ((413.7/Mi.< 413.8/P.-o:01:01.-i:01234) 413.0/Ci (413.5/Br (413.3/Md.< 413.4/Cc..s) 413.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
413 0 I        - I        PRON  PRP nsubj 2 - -       -   B-ARG0 B-ARG0 -             i/Ci
413 1 've      + have     AUX   VB  aux   2 - have.01 B-V -      -      -             've/Mv.<
413 2 got      + get      VERB  VBN ROOT  2 - get.06  -   B-V    -      get.v.01      got/Pd.sr:01:0h.<pf:01
413 3 a        + a        DET   DT  det   4 - -       -   B-ARG1 B-ARG1 a_bit.r.01    a/Md.<
413 4 bit      + bit      NOUN  NN  dobj  8 - -       -   I-ARG1 I-ARG1 a_bit.r.01    bit/Cc..s
413 5 of       + of       ADP   IN  prep  4 - -       -   I-ARG1 I-ARG1 -             of/Br
413 6 shopping + shopping NOUN  NN  pobj  5 - -       -   I-ARG1 I-ARG1 shopping.n.01 shopping/Cc..s
413 7 to       + to       PART  TO  aux   8 - -       -   I-ARG1 -      -             to/Mi.<
413 8 do       - do       VERB  VB  xcomp 2 - do.02   -   I-ARG1 B-V    perform.v.01  do/P.-o:01:01.-i:01234
413 9 .        - .        PUNCT .   punct 2 - -       -   -      -      -             -

# sent_i = 414
# sent = Playing ball games is not allowed.
# hyperedge = ((is/Mv.< (not/Mn.< allowed/Pd.p:1:1.<pf:01)) (playing/P.o:1:1.|pg:0123 (+/B.am ball/Cc.<.s games/Cc..p)))
# hyperedge builder = ((414.3/Mv.< (414.4/Mn.< 414.5/Pd.p:1:1.<pf:01)) (414.0/P.o:1:1.|pg:0123 (+/B.am 414.1/Cc.<.s 414.2/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
414 0 Playing + play  VERB  VBG csubjpass 5 - play.01  B-V    -   B-ARG1     play.v.01      playing/P.o:1:1.|pg:0123
414 1 ball    + ball  NOUN  NN  compound  2 - -        B-ARG1 -   I-ARG1     ball_game.n.01 ball/Cc.<.s
414 2 games   + game  NOUN  NNS dobj      0 - -        I-ARG1 -   I-ARG1     ball_game.n.01 games/Cc..p
414 3 is      + be    AUX   VBZ auxpass   5 - be.03    -      B-V -          -              is/Mv.<
414 4 not     + not   PART  RB  neg       5 - -        -      -   B-ARGM-NEG not.r.01       not/Mn.<
414 5 allowed - allow VERB  VBN ROOT      5 - allow.01 -      -   B-V        allow.v.10     allowed/Pd.p:1:1.<pf:01
414 6 .       - .     PUNCT .   punct     5 - -        -      -   -          -              -

# sent_i = 415
# sent = The playing of ball games is prohibited.
# hyperedge = ((is/Mv.< prohibited/Pd.p:1:1.<pf:0123) (of/Br (the/Md.< playing/Cc..s) (+/B.am ball/Cc.<.s games/Cc..p)))
# hyperedge builder = ((415.5/Mv.< 415.6/Pd.p:1:1.<pf:0123) (415.2/Br (415.0/Md.< 415.1/Cc..s) (+/B.am 415.3/Cc.<.s 415.4/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
415 0 The        + the      DET   DT  det       1 - -           -   B-ARG1 -              the/Md.<
415 1 playing    + playing  NOUN  NN  nsubjpass 6 - -           -   I-ARG1 playing.n.02   playing/Cc..s
415 2 of         + of       ADP   IN  prep      1 - -           -   I-ARG1 -              of/Br
415 3 ball       + ball     NOUN  NN  compound  4 - -           -   I-ARG1 ball_game.n.01 ball/Cc.<.s
415 4 games      + game     NOUN  NNS pobj      2 - -           -   I-ARG1 ball_game.n.01 games/Cc..p
415 5 is         + be       AUX   VBZ auxpass   6 - be.03       B-V -      -              is/Mv.<
415 6 prohibited - prohibit VERB  VBN ROOT      6 - prohibit.01 -   B-V    forbid.v.01    prohibited/Pd.p:1:1.<pf:0123
415 7 .          - .        PUNCT .   punct     6 - -           -   -      -              -

# sent_i = 416
# sent = Everyone just stood there talking.
# hyperedge = (stood/Pd.s??x:1r2h:1rlh.<f:012 everyone/Ci..s just/M there/M (talking/P.-:0:0.|pg:012 everyone/Ci..s))
# hyperedge builder = (416.2/Pd.s??x:1r2h:1rlh.<f:012 416.0/Ci..s 416.1/M 416.3/M (416.4/P.-:0:0.|pg:012 416.0/Ci..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
416 0 Everyone + everyone PRON  NN  nsubj  2 - -        B-ARG1     B-ARG0 -           everyone/Ci..s
416 1 just     + just     ADV   RB  advmod 2 - -        B-ARGM-ADV -      merely.r.01 just/M
416 2 stood    + stand    VERB  VBD ROOT   2 - stand.01 B-V        -      stand.v.01  stood/Pd.s??x:1r2h:1rlh.<f:012
416 3 there    + there    ADV   RB  advmod 2 - -        B-ARG2     -      there.r.01  there/M
416 4 talking  - talk     VERB  VBG advcl  2 - talk.01  B-ARGM-PRD B-V    talk.v.01   talking/P.-:0:0.|pg:012
416 5 .        - .        PUNCT .   punct  2 - -        -          -      -           -

# sent_i = 417
# sent = We saw a policeman chasing someone.
# hyperedge = (saw/Pd.sr:01:01.<f:012 we/Ci (chasing/P.so:01:01.|pg:01 (a/Md.< policeman/Cc..s) someone/Ci..s))
# hyperedge builder = (417.1/Pd.sr:01:01.<f:012 417.0/Ci (417.4/P.so:01:01.|pg:01 (417.2/Md.< 417.3/Cc..s) 417.5/Ci..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
417 0 We        + we        PRON  PRP nsubj 1 - -        B-ARG0 -      -              we/Ci
417 1 saw       + see       VERB  VBD ROOT  1 - see.01   B-V    -      see.v.01       saw/Pd.sr:01:01.<f:012
417 2 a         + a         DET   DT  det   3 - -        B-ARG1 B-ARG0 -              a/Md.<
417 3 policeman + policeman NOUN  NN  nsubj 4 - -        I-ARG1 I-ARG0 policeman.n.01 policeman/Cc..s
417 4 chasing   + chase     VERB  VBG ccomp 1 - chase.01 I-ARG1 B-V    chase.v.01     chasing/P.so:01:01.|pg:01
417 5 someone   - someone   PRON  NN  dobj  4 - -        I-ARG1 B-ARG1 person.n.01    someone/Ci..s
417 6 .         - .         PUNCT .   punct 1 - -        -      -      -              -

# sent_i = 418
# sent = Cut above the right eye, the boxer was unable to continue.
# hyperedge = (was/Pd.xsc:112:11h.<f:12 (cut/P.x-:41:g1.<pf:01234 (above/T (the/Md.< (right/Ma.< eye/Cc..s))) (the/Md.< boxer/Cc..s)) (the/Md.< boxer/Cc..s) (+/Br.am unable/Ca ((to/Mi.< continue/P.-:0:0.-i:01) (the/Md.< boxer/Cc..s))))
# hyperedge builder = (418.8/Pd.xsc:112:11h.<f:12 (418.0/P.x-:41:g1.<pf:01234 (418.1/T (418.2/Md.< (418.3/Ma.< 418.4/Cc..s))) (418.6/Md.< 418.7/Cc..s)) (418.6/Md.< 418.7/Cc..s) (+/Br.am 418.9/Ca ((418.10/Mi.< 418.11/P.-:0:0.-i:01) (418.6/Md.< 418.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
418 0  Cut      + Cut      VERB  VBN advcl 8  - cut.01      B-V    B-R-ARG1 -      cut.v.04      cut/P.x-:41:g1.<pf:01234
418 1  above    + above    ADP   IN  prep  0  - -           B-ARG4 I-R-ARG1 -      above.r.02    above/T
418 2  the      + the      DET   DT  det   4  - -           I-ARG4 I-R-ARG1 -      -             the/Md.<
418 3  right    + right    ADJ   JJ  amod  4  - -           I-ARG4 I-R-ARG1 -      right.a.01    right/Ma.<
418 4  eye      - eye      NOUN  NN  pobj  1  - -           I-ARG4 I-R-ARG1 -      eye.n.01      eye/Cc..s
418 5  ,        + ,        PUNCT ,   punct 8  - -           -      -        -      -             -
418 6  the      + the      DET   DT  det   7  - -           B-ARG1 B-ARG1   B-ARG0 -             the/Md.<
418 7  boxer    + boxer    NOUN  NN  nsubj 8  - -           I-ARG1 I-ARG1   I-ARG0 boxer.n.01    boxer/Cc..s
418 8  was      + be       AUX   VBD ROOT  8  - be.01       -      B-V      -      be.v.01       was/Pd.xsc:112:11h.<f:12
418 9  unable   + unable   ADJ   JJ  acomp 8  - -           -      B-ARG2   -      unable.a.01   unable/Ca
418 10 to       + to       PART  TO  aux   11 - -           -      I-ARG2   -      -             to/Mi.<
418 11 continue - continue VERB  VB  xcomp 9  - continue.01 -      I-ARG2   B-V    continue.v.01 continue/P.-:0:0.-i:01
418 12 .        - .        PUNCT .   punct 8  - -           -      -        -      -             -

# sent_i = 419
# sent = The lights having gone out, we couldn't see a thing.
# hyperedge = ((could/Mm.< (n't/Mn.< see/Pd.xso:c01:c01.-i:012)) ((having/Mv.< (out/Ml.r.> gone/P.s:1:1.<pf:1)) (the/Md.< lights/Cc..p)) we/Ci (a/Md.< thing/Cc..s))
# hyperedge builder = ((419.7/Mm.< (419.8/Mn.< 419.9/Pd.xso:c01:c01.-i:012)) ((419.2/Mv.< (419.4/Ml.r.> 419.3/P.s:1:1.<pf:1)) (419.0/Md.< 419.1/Cc..p)) 419.6/Ci (419.10/Md.< 419.11/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
419 0  The    + the   DET   DT  det   1  - -         -   B-ARG1 -   B-ARGM-CAU -           the/Md.<
419 1  lights + light NOUN  NNS nsubj 3  - -         -   I-ARG1 -   I-ARGM-CAU light.n.02  lights/Cc..p
419 2  having + have  AUX   VBG aux   3  - have.01   B-V -      -   I-ARGM-CAU -           having/Mv.<
419 3  gone   + go    VERB  VBN advcl 9  - go_out.18 -   B-V    -   I-ARGM-CAU go_out.v.04 gone/P.s:1:1.<pf:1
419 4  out    - out   ADP   RP  prt   3  - -         -   -      -   I-ARGM-CAU go_out.v.04 out/Ml.r.>
419 5  ,      + ,     PUNCT ,   punct 9  - -         -   -      -   -          -           -
419 6  we     + we    PRON  PRP nsubj 9  - -         -   -      -   B-ARG0     -           we/Ci
419 7  could  - could AUX   MD  aux   9  - -         -   -      B-V B-ARGM-MOD -           could/Mm.<
419 8  n't    + not   PART  RB  neg   9  - -         -   -      -   B-ARGM-NEG not.r.01    n't/Mn.<
419 9  see    + see   VERB  VB  ROOT  9  - see.01    -   -      -   B-V        see.v.01    see/Pd.xso:c01:c01.-i:012
419 10 a      + a     DET   DT  det   11 - -         -   -      -   B-ARG1     -           a/Md.<
419 11 thing  - thing NOUN  NN  dobj  9  - -         -   -      -   I-ARG1     thing.n.08  thing/Cc..s
419 12 .      - .     PUNCT .   punct 9  - -         -   -      -   -          -           -

# sent_i = 420
# sent = Boiling water turns to steam.
# hyperedge = (turns/Pd.sx:12:1h.|f--3s:0123 (boiling/Ma.< water/Cc..s) (to/T steam/Cc..s))
# hyperedge builder = (420.2/Pd.sx:12:1h.|f--3s:0123 (420.0/Ma.< 420.1/Cc..s) (420.3/T 420.4/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
420 0 Boiling + boiling VERB  VBG amod  1 - boil.01 B-V    B-ARG1 boil.v.01   boiling/Ma.<
420 1 water   + water   NOUN  NN  nsubj 2 - -       B-ARG1 I-ARG1 water.n.01  water/Cc..s
420 2 turns   + turn    VERB  VBZ ROOT  2 - turn.02 -      B-V    become.v.02 turns/Pd.sx:12:1h.|f--3s:0123
420 3 to      + to      PART  TO  prep  2 - -       -      B-ARG2 -           to/T
420 4 steam   - steam   NOUN  NN  pobj  3 - -       -      I-ARG2 steam.n.01  steam/Cc..s
420 5 .       - .       PUNCT .   punct 2 - -       -      -      -           -

# sent_i = 421
# sent = The experiment must be done under controlled conditions.
# hyperedge = ((must/Mm.< (be/Mv.< done/Pd.px:1m:1m.<pf:01234)) (the/Md.< experiment/Cc..s) (under/T (controlled/Ma.< conditions/Cc..p)))
# hyperedge builder = ((421.2/Mm.< (421.3/Mv.< 421.4/Pd.px:1m:1m.<pf:01234)) (421.0/Md.< 421.1/Cc..s) (421.5/T (421.6/Ma.< 421.7/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
421 0 The        + the        DET   DT  det       1 - -          -   -   B-ARG1     -      -                      the/Md.<
421 1 experiment + experiment NOUN  NN  nsubjpass 4 - -          -   -   I-ARG1     -      experiment.n.01        experiment/Cc..s
421 2 must       + must       AUX   MD  aux       4 - -          B-V -   B-ARGM-MOD -      -                      must/Mm.<
421 3 be         + be         AUX   VB  auxpass   4 - be.03      -   B-V -          -      -                      be/Mv.<
421 4 done       + do         VERB  VBN ROOT      4 - do.02      -   -   B-V        -      make.v.01              done/Pd.px:1m:1m.<pf:01234
421 5 under      + under      ADP   IN  prep      4 - -          -   -   B-ARGM-MNR -      -                      under/T
421 6 controlled + control    VERB  VBN amod      7 - control.01 -   -   I-ARGM-MNR B-V    control_condition.n.01 controlled/Ma.<
421 7 conditions - condition  NOUN  NNS pobj      5 - -          -   -   I-ARGM-MNR B-ARG1 control_condition.n.01 conditions/Cc..p
421 8 .          - .          PUNCT .   punct     4 - -          -   -   -          -      -                      -

# sent_i = 422
# sent = The whole family stood waving in the road.
# hyperedge = (stood/Pd.sr:1h:1h.<f:012 (the/Md.< (whole/Ma.< family/Cc..s)) (waving/P.-x:0l:0l.|pg:012 (the/Md.< (whole/Ma.< family/Cc..s)) (in/Tl (the/Md.< road/Cc..s))))
# hyperedge builder = (422.3/Pd.sr:1h:1h.<f:012 (422.0/Md.< (422.1/Ma.< 422.2/Cc..s)) (422.4/P.-x:0l:0l.|pg:012 (422.0/Md.< (422.1/Ma.< 422.2/Cc..s)) (422.5/Tl (422.6/Md.< 422.7/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
422 0 The    + the    DET   DT  det   2 - -        B-ARG1     B-ARG0     -           the/Md.<
422 1 whole  + whole  ADJ   JJ  amod  2 - -        I-ARG1     I-ARG0     whole.a.01  whole/Ma.<
422 2 family + family NOUN  NN  nsubj 3 - -        I-ARG1     I-ARG0     family.n.02 family/Cc..s
422 3 stood  + stand  VERB  VBD ROOT  3 - stand.01 B-V        -          stand.v.01  stood/Pd.sr:1h:1h.<f:012
422 4 waving + wave   VERB  VBG xcomp 3 - wave.01  B-ARGM-PRD B-V        beckon.v.01 waving/P.-x:0l:0l.|pg:012
422 5 in     + in     ADP   IN  prep  4 - -        I-ARGM-PRD B-ARGM-LOC -           in/Tl
422 6 the    + the    DET   DT  det   7 - -        I-ARGM-PRD I-ARGM-LOC -           the/Md.<
422 7 road   - road   NOUN  NN  pobj  5 - -        I-ARGM-PRD I-ARGM-LOC road.n.01   road/Cc..s
422 8 .      - .      PUNCT .   punct 3 - -        -          -          -           -

# sent_i = 423
# sent = Come cycling with us.
# hyperedge = (come/Pd.r:h:h.-i:1234 (cycling/P.x:o:o.|pg:0 (with/T us/Ci)))
# hyperedge builder = (423.0/Pd.r:h:h.-i:1234 (423.1/P.x:o:o.|pg:0 (423.2/T 423.3/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
423 0 Come    + come  VERB  VB  ROOT  0 - come.01  B-V        -          come.v.01    come/Pd.r:h:h.-i:1234
423 1 cycling + cycle VERB  VBG xcomp 0 - cycle.01 B-ARGM-PRD B-V        bicycle.v.01 cycling/P.x:o:o.|pg:0
423 2 with    + with  ADP   IN  prep  1 - -        I-ARGM-PRD B-ARGM-COM -            with/T
423 3 us      - we    PRON  PRP pobj  2 - -        I-ARGM-PRD I-ARGM-COM -            us/Ci
423 4 .       - .     PUNCT .   punct 0 - -        -          -          -            -

# sent_i = 424
# sent = Mac goes jogging every morning.
# hyperedge = (goes/Pd.srx:01t:01t.|f--3s:01 mac/Cp..s.p (jogging/P.--:0t:1t.|pg:01 mac/Cp..s.p (every/Md.<..t morning/Cc..s.t)) (every/Md.<..t morning/Cc..s.t))
# hyperedge builder = (424.1/Pd.srx:01t:01t.|f--3s:01 424.0/Cp..s.p (424.2/P.--:0t:1t.|pg:01 424.0/Cp..s.p (424.3/Md.<..t 424.4/Cc..s.t)) (424.3/Md.<..t 424.4/Cc..s.t))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
424 0 Mac     + Mac     PROPN NNP nsubj    1 B-PERSON -      B-ARG0     B-ARG0     -            mac/Cp..s.p
424 1 goes    + go      VERB  VBZ ROOT     1 -        go.05  B-V        -          travel.v.01  goes/Pd.srx:01t:01t.|f--3s:01
424 2 jogging + jog     VERB  VBG xcomp    1 -        jog.01 B-ARG1     B-V        jog.v.03     jogging/P.--:0t:1t.|pg:01
424 3 every   + every   DET   DT  det      4 B-TIME   -      B-ARGM-TMP B-ARGM-TMP every.s.01   every/Md.<..t
424 4 morning - morning NOUN  NN  npadvmod 1 I-TIME   -      I-ARGM-TMP I-ARGM-TMP morning.n.01 morning/Cc..s.t
424 5 .       - .       PUNCT .   punct    1 -        -      -          -          -            -

# sent_i = 425
# sent = I usually do the washing at the weekend.
# hyperedge = (do/Pd.s?ox:0r1t:0r1t.|f:01234 i/Ci usually/M (the/Md.< washing/Cc..s) (at/Tt (the/Md.<..d weekend/Cc..s.d)))
# hyperedge builder = (425.2/Pd.s?ox:0r1t:0r1t.|f:01234 425.0/Ci 425.1/M (425.3/Md.< 425.4/Cc..s) (425.5/Tt (425.6/Md.<..d 425.7/Cc..s.d)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
425 0 I       + I       PRON  PRP nsubj  2 -      -     B-ARG0     -             i/Ci
425 1 usually + usually ADV   RB  advmod 2 -      -     B-ARGM-ADV normally.r.01 usually/M
425 2 do      + do      VERB  VBP ROOT   2 -      do.02 B-V        perform.v.01  do/Pd.s?ox:0r1t:0r1t.|f:01234
425 3 the     + the     DET   DT  det    4 -      -     B-ARG1     -             the/Md.<
425 4 washing + washing NOUN  NN  dobj   2 -      -     I-ARG1     wash.n.02     washing/Cc..s
425 5 at      + at      ADP   IN  prep   2 -      -     B-ARGM-TMP -             at/Tt
425 6 the     + the     DET   DT  det    7 B-DATE -     I-ARGM-TMP -             the/Md.<..d
425 7 weekend - weekend NOUN  NN  pobj   5 I-DATE -     I-ARGM-TMP weekend.n.01  weekend/Cc..s.d
425 8 .       - .       PUNCT .   punct  2 -      -     -          -             -

# sent_i = 426
# sent = Have you done the ironing yet?
# hyperedge = ((have/Mv.< done/P?.so?:01t:01t.<pf:01234) you/Ci (the/Md.< ironing/Cc..s) yet/M)
# hyperedge builder = ((426.0/Mv.< 426.2/P?.so?:01t:01t.<pf:01234) 426.1/Ci (426.3/Md.< 426.4/Cc..s) 426.5/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
426 0 Have    + have    AUX   VBP aux    2 - have.01 B-V -          -            have/Mv.<
426 1 you     + you     PRON  PRP nsubj  2 - -       -   B-ARG0     -            you/Ci
426 2 done    + do      VERB  VBN ROOT   2 - do.02   -   B-V        perform.v.01 done/P?.so?:01t:01t.<pf:01234
426 3 the     + the     DET   DT  det    4 - -       -   B-ARG1     -            the/Md.<
426 4 ironing + ironing NOUN  NN  dobj   2 - -       -   I-ARG1     ironing.n.02 ironing/Cc..s
426 5 yet     - yet     ADV   RB  advmod 2 - -       -   B-ARGM-TMP yet.r.01     yet/M
426 6 ?       - ?       PUNCT .   punct  2 - -       -   -          -            -

# sent_i = 427
# sent = I once did some surfing in California.
# hyperedge = (did/Pd.s?ox:0t1l:0t1l.<f:01234 i/Ci once/M (some/Md.< surfing/Cc..s) (in/Tl california/Cp..s.g))
# hyperedge builder = (427.2/Pd.s?ox:0t1l:0t1l.<f:01234 427.0/Ci 427.1/M (427.3/Md.< 427.4/Cc..s) (427.5/Tl 427.6/Cp..s.g))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
427 0 I          + I          PRON  PRP nsubj  2 -     -     B-ARG0     -               i/Ci
427 1 once       + once       ADV   RB  advmod 2 -     -     B-ARGM-TMP once.r.01       once/M
427 2 did        + do         VERB  VBD ROOT   2 -     do.02 B-V        perform.v.01    did/Pd.s?ox:0t1l:0t1l.<f:01234
427 3 some       + some       DET   DT  det    4 -     -     B-ARG1     some.s.02       some/Md.<
427 4 surfing    + surfing    NOUN  NN  dobj   2 -     -     I-ARG1     surfing.n.01    surfing/Cc..s
427 5 in         + in         ADP   IN  prep   2 -     -     B-ARGM-LOC -               in/Tl
427 6 California - California PROPN NNP pobj   5 B-GPE -     I-ARGM-LOC california.n.01 california/Cp..s.g
427 7 .          - .          PUNCT .   punct  2 -     -     -          -               -

# sent_i = 428
# sent = I'm afraid we've got a lot of tidying up to do.
# hyperedge = ('m/Pd.sc:12:1h.|f:12 i/Ci (+/Br.am afraid/Ca (('ve/Mv.< got/P.sr:01:0h.<pf:01) we/Ci ((to/Mi.< do/P.-o:01:01.-i:01234) we/Ci (of/Br (a/Md.< lot/Cc..s) (up/Ml.r.> tidying/Cc..s))))))
# hyperedge builder = (428.1/Pd.sc:12:1h.|f:12 428.0/Ci (+/Br.am 428.2/Ca ((428.4/Mv.< 428.5/P.sr:01:0h.<pf:01) 428.3/Ci ((428.11/Mi.< 428.12/P.-o:01:01.-i:01234) 428.3/Ci (428.8/Br (428.6/Md.< 428.7/Cc..s) (428.10/Ml.r.> 428.9/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
428 0  I       - I       PRON  PRP nsubj 1  - -       B-ARG1 -   -      -      -            i/Ci
428 1  'm      + be      VERB  VBP ROOT  1  - be.01   B-V    -   -      -      be.v.01      'm/Pd.sc:12:1h.|f:12
428 2  afraid  + afraid  ADJ   JJ  acomp 1  - -       B-ARG2 -   -      -      afraid.s.02  afraid/Ca
428 3  we      - we      PRON  PRP nsubj 5  - -       I-ARG2 -   B-ARG0 B-ARG0 -            we/Ci
428 4  've     + have    AUX   VB  aux   5  - have.01 I-ARG2 B-V -      -      -            've/Mv.<
428 5  got     + get     VERB  VBN ccomp 2  - get.06  I-ARG2 -   B-V    -      get.v.01     got/P.sr:01:0h.<pf:01
428 6  a       + a       DET   DT  det   7  - -       I-ARG2 -   B-ARG1 B-ARG1 -            a/Md.<
428 7  lot     + lot     NOUN  NN  dobj  12 - -       I-ARG2 -   I-ARG1 I-ARG1 batch.n.02   lot/Cc..s
428 8  of      + of      ADP   IN  prep  7  - -       I-ARG2 -   I-ARG1 I-ARG1 -            of/Br
428 9  tidying + tidying NOUN  NN  pobj  8  - -       I-ARG2 -   I-ARG1 I-ARG1 tidy.v.01    tidying/Cc..s
428 10 up      + up      ADP   RP  prt   9  - -       I-ARG2 -   I-ARG1 I-ARG1 tidy.v.01    up/Ml.r.>
428 11 to      + to      PART  TO  aux   12 - -       I-ARG2 -   I-ARG1 -      -            to/Mi.<
428 12 do      - do      VERB  VB  xcomp 5  - do.02   I-ARG2 -   I-ARG1 B-V    perform.v.01 do/P.-o:01:01.-i:01234
428 13 .       - .       PUNCT .   punct 1  - -       -      -   -      -      -            -

# sent_i = 429
# sent = I can't do sewing.
# hyperedge = ((ca/Mm.< (n't/Mn.< do/Pd.so:01:01.-i:01234)) i/Ci sewing/Cc..s)
# hyperedge builder = ((429.1/Mm.< (429.2/Mn.< 429.3/Pd.so:01:01.-i:01234)) 429.0/Ci 429.4/Cc..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
429 0 I      + I      PRON  PRP nsubj 3 - -     -   B-ARG0     -            i/Ci
429 1 ca     - can    AUX   MD  aux   3 - -     B-V B-ARGM-MOD -            ca/Mm.<
429 2 n't    + not    PART  RB  neg   3 - -     -   B-ARGM-NEG not.r.01     n't/Mn.<
429 3 do     + do     VERB  VB  ROOT  3 - do.02 -   B-V        perform.v.01 do/Pd.so:01:01.-i:01234
429 4 sewing - sewing NOUN  NN  dobj  3 - -     -   B-ARG1     sewing.n.01  sewing/Cc..s
429 5 .      - .      PUNCT .   punct 3 - -     -   -          -            -

# sent_i = 430
# sent = Mike hurt his hand playing badminton.
# hyperedge = (hurt/Pd.sox:01r:01r.<f:0123 mike/Cp..s.p ((+/Jc.rm.rp his/Mp mike/Cp..s.p) hand/Cc..s) (playing/P.-o:01:01.|pg:0123 mike/Cp..s.p badminton/Cc..s))
# hyperedge builder = (430.1/Pd.sox:01r:01r.<f:0123 430.0/Cp..s.p ((+/Jc.rm.rp 430.2/Mp 430.0/Cp..s.p) 430.3/Cc..s) (430.4/P.-o:01:01.|pg:0123 430.0/Cp..s.p 430.5/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
430 0 Mike      + Mike      PROPN NNP  nsubj 1 B-PERSON -       B-ARG0     B-ARG0 B-MAIN0 -              mike/Cp..s.p
430 1 hurt      + hurt      VERB  VBD  ROOT  1 -        hurt.01 B-V        -      -       hurt.v.02      hurt/Pd.sox:01r:01r.<f:0123
430 2 his       + his       PRON  PRP$ poss  3 -        -       B-ARG1     -      B-REF0  -              his/Mp
430 3 hand      + hand      NOUN  NN   dobj  1 -        -       I-ARG1     -      -       hand.n.01      hand/Cc..s
430 4 playing   + play      VERB  VBG  advcl 1 -        play.01 B-ARGM-ADV B-V    -       play.v.01      playing/P.-o:01:01.|pg:0123
430 5 badminton - badminton NOUN  NN   dobj  4 -        -       I-ARGM-ADV B-ARG1 -       badminton.n.01 badminton/Cc..s
430 6 .         - .         PUNCT .    punct 1 -        -       -          -      -       -              -

# sent_i = 431
# sent = Taking a note from her purse, she slammed it down on the counter.
# hyperedge = (slammed/Pd.xso?x:r01d2:r01dd.<f:012 (taking/P.ox-:120:1d0.|pg:0123 (a/Md.< note/Cc..s) (from/T ((+/Jc.rm.rr her/Mp she/Ci) purse/Cc..s)) she/Ci) she/Ci (+/Jc.rm.rc it/Ci (a/Md.< note/Cc..s)) down/M (on/T (the/Md.< counter/Cc..s)))
# hyperedge builder = (431.8/Pd.xso?x:r01d2:r01dd.<f:012 (431.0/P.ox-:120:1d0.|pg:0123 (431.1/Md.< 431.2/Cc..s) (431.3/T ((+/Jc.rm.rr 431.4/Mp 431.7/Ci) 431.5/Cc..s)) 431.7/Ci) 431.7/Ci (+/Jc.rm.rc 431.9/Ci (431.1/Md.< 431.2/Cc..s)) 431.10/M (431.11/T (431.12/Md.< 431.13/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 coref2 synset atoms
431 0  Taking  + take    VERB  VBG  advcl  8  - take.01 B-V    B-ARGM-ADV -       -       take.v.04    taking/P.ox-:120:1d0.|pg:0123
431 1  a       + a       DET   DT   det    2  - -       B-ARG1 I-ARGM-ADV -       B-MAIN1 -            a/Md.<
431 2  note    + note    NOUN  NN   dobj   0  - -       I-ARG1 I-ARGM-ADV -       I-MAIN1 note.n.02    note/Cc..s
431 3  from    + from    ADP   IN   prep   0  - -       B-ARG2 I-ARGM-ADV -       -       -            from/T
431 4  her     + her     PRON  PRP$ poss   5  - -       I-ARG2 I-ARGM-ADV B-REF0  -       -            her/Mp
431 5  purse   - purse   NOUN  NN   pobj   3  - -       I-ARG2 I-ARGM-ADV -       -       bag.n.04     purse/Cc..s
431 6  ,       + ,       PUNCT ,    punct  8  - -       -      -          -       -       -            -
431 7  she     + she     PRON  PRP  nsubj  8  - -       B-ARG0 B-ARG0     B-MAIN0 -       -            she/Ci
431 8  slammed + slam    VERB  VBD  ROOT   8  - slam.01 -      B-V        -       -       slam.v.04    slammed/Pd.xso?x:r01d2:r01dd.<f:012
431 9  it      + it      PRON  PRP  dobj   8  - -       -      B-ARG1     -       B-REF1  -            it/Ci
431 10 down    + down    ADP   RP   advmod 8  - -       -      B-ARGM-DIR -       -       down.r.01    down/M
431 11 on      + on      ADP   IN   prep   8  - -       -      B-ARG2     -       -       -            on/T
431 12 the     + the     DET   DT   det    13 - -       -      I-ARG2     -       -       -            the/Md.<
431 13 counter - counter NOUN  NN   pobj   11 - -       -      I-ARG2     -       -       counter.n.01 counter/Cc..s
431 14 .       - .       PUNCT .    punct  8  - -       -      -          -       -       -            -

# sent_i = 432
# sent = Having filled his glass, Max took a long drink.
# hyperedge = (took/Pd.xso:r0k:!!!.<f ((having/Mv.< filled/P.o-:10:g0.<pf:012) ((+/Jc.rm.rp his/Mp max/Cp..s.p) glass/Cc..s) max/Cp..s.p) max/Cp..s.p (a/Md.< (long/Ma.< drink/Cc..s)))
# hyperedge builder = (432.6/Pd.xso:r0k:!!!.<f ((432.0/Mv.< 432.1/P.o-:10:g0.<pf:012) ((+/Jc.rm.rp 432.2/Mp 432.5/Cp..s.p) 432.3/Cc..s) 432.5/Cp..s.p) 432.5/Cp..s.p (432.7/Md.< (432.8/Ma.< 432.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
432 0  Having + have  AUX   VBG  aux   1 -        have.01  B-V -      -          B-ARGM-ADV -       -            having/Mv.<
432 1  filled + fill  VERB  VBN  advcl 6 -        fill.01  -   B-V    -          I-ARGM-ADV -       fill.v.01    filled/P.o-:10:g0.<pf:012
432 2  his    + his   PRON  PRP$ poss  3 -        -        -   B-ARG1 -          I-ARGM-ADV B-REF0  -            his/Mp
432 3  glass  - glass NOUN  NN   dobj  1 -        -        -   I-ARG1 -          I-ARGM-ADV -       glass.n.02   glass/Cc..s
432 4  ,      + ,     PUNCT ,    punct 6 -        -        -   -      -          -          -       -            -
432 5  Max    + Max   PROPN NNP  nsubj 6 B-PERSON -        -   B-ARG0 -          B-ARG0     B-MAIN0 -            max/Cp..s.p
432 6  took   + take  VERB  VBD  ROOT  6 -        take.LV  -   -      B-V        B-ARGM-LVB -       consume.v.02 took/Pd.xso:r0k:!!!.<f
432 7  a      + a     DET   DT   det   9 -        -        -   -      -          -          -       -            a/Md.<
432 8  long   + long  ADJ   JJ   amod  9 -        -        -   -      -          B-ARGM-TMP -       long.a.01    long/Ma.<
432 9  drink  - drink NOUN  NN   dobj  6 -        drink.01 -   -      B-ARGM-PRR B-V        -       drink.n.01   drink/Cc..s
432 10 .      - .     PUNCT .    punct 6 -        -        -   -      -          -          -       -            -

# sent_i = 433
# sent = Filling his glass, Max took a long drink.
# hyperedge = (took/Pd.xso:r0k:!!!.<f (filling/P.o-:10:g0.|pg:012 ((+/Jc.rm.rp his/Mp max/Cp..s.p) glass/Cc..s) max/Cp..s.p) max/Cp..s.p (a/Md.< (long/Ma.< drink/Cc..s)))
# hyperedge builder = (433.5/Pd.xso:r0k:!!!.<f (433.0/P.o-:10:g0.|pg:012 ((+/Jc.rm.rp 433.1/Mp 433.4/Cp..s.p) 433.2/Cc..s) 433.4/Cp..s.p) 433.4/Cp..s.p (433.6/Md.< (433.7/Ma.< 433.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
433 0 Filling + fill  VERB  VBG  advcl 5 -        fill.01  B-V    -          B-ARGM-ADV -       fill.v.01    filling/P.o-:10:g0.|pg:012
433 1 his     + his   PRON  PRP$ poss  2 -        -        B-ARG1 -          I-ARGM-ADV B-REF0  -            his/Mp
433 2 glass   - glass NOUN  NN   dobj  0 -        -        I-ARG1 -          I-ARGM-ADV -       glass.n.02   glass/Cc..s
433 3 ,       + ,     PUNCT ,    punct 5 -        -        -      -          -          -       -            -
433 4 Max     + Max   PROPN NNP  nsubj 5 B-PERSON -        B-ARG0 B-ARG0     B-ARG0     B-MAIN0 -            max/Cp..s.p
433 5 took    + take  VERB  VBD  ROOT  5 -        take.LV  -      B-V        B-ARGM-LVB -       consume.v.02 took/Pd.xso:r0k:!!!.<f
433 6 a       + a     DET   DT   det   8 -        -        -      -          -          -       -            a/Md.<
433 7 long    + long  ADJ   JJ   amod  8 -        -        -      -          B-ARGM-TMP -       long.a.01    long/Ma.<
433 8 drink   - drink NOUN  NN   dobj  5 -        drink.01 -      B-ARGM-PRR B-V        -       drink.n.01   drink/Cc..s
433 9 .       - .     PUNCT .    punct 5 -        -        -      -          -          -       -            -

# sent_i = 434
# sent = They left the restaurant, having spent two hours over lunch.
# hyperedge = (left/Pd.sox:01h:0dh.<f:012 they/Ci (the/Md.< restaurant/Cc..s) ((having/Mv.< spent/P.-ox:012:0qg.<pf:012) they/Ci (two/M#.<..t hours/Cc..p.t) (over/T lunch/Cc..s)))
# hyperedge builder = (434.1/Pd.sox:01h:0dh.<f:012 434.0/Ci (434.2/Md.< 434.3/Cc..s) ((434.5/Mv.< 434.6/P.-ox:012:0qg.<pf:012) 434.0/Ci (434.7/M#.<..t 434.8/Cc..p.t) (434.9/T 434.10/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
434 0  They       + they       PRON  PRP nsubj  1 -      -        B-ARG0     -   B-ARG0 -               they/Ci
434 1  left       + leave      VERB  VBD ROOT   1 -      leave.11 B-V        -   -      leave.v.01      left/Pd.sox:01h:0dh.<f:012
434 2  the        + the        DET   DT  det    3 -      -        B-ARG1     -   -      -               the/Md.<
434 3  restaurant - restaurant NOUN  NN  dobj   1 -      -        I-ARG1     -   -      restaurant.n.01 restaurant/Cc..s
434 4  ,          + ,          PUNCT ,   punct  1 -      -        -          -   -      -               -
434 5  having     + have       AUX   VBG aux    6 -      have.01  B-ARGM-PRD B-V -      -               having/Mv.<
434 6  spent      + spend      VERB  VBN advcl  1 -      spend.02 I-ARGM-PRD -   B-V    spend.v.01      spent/P.-ox:012:0qg.<pf:012
434 7  two        + two        NUM   CD  nummod 8 B-TIME -        I-ARGM-PRD -   B-ARG1 two.s.01        two/M#.<..t
434 8  hours      + hour       NOUN  NNS dobj   6 I-TIME -        I-ARGM-PRD -   I-ARG1 hour.n.01       hours/Cc..p.t
434 9  over       + over       ADP   IN  prep   6 -      -        I-ARGM-PRD -   B-ARG2 over.r.03       over/T
434 10 lunch      - lunch      NOUN  NN  pobj   9 -      -        I-ARGM-PRD -   I-ARG2 lunch.n.01      lunch/Cc..s
434 11 .          - .          PUNCT .   punct  1 -      -        -          -   -      -               -

# sent_i = 435
# sent = You should wear gloves when using an electric saw.
# hyperedge = ((should/Mm.< wear/Pd.sox:01t:01t.-i:01) you/Ci gloves/Cc..p (using/P.-?o:0t1:0t1.|pg:012 you/Ci when/Mw (an/Md.< (electric/Ma.< saw/Cc..s))))
# hyperedge builder = ((435.1/Mm.< 435.2/Pd.sox:01t:01t.-i:01) 435.0/Ci 435.3/Cc..p (435.5/P.-?o:0t1:0t1.|pg:012 435.0/Ci 435.4/Mw (435.6/Md.< (435.7/Ma.< 435.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
435 0 You      + you      PRON  PRP nsubj  2 - -       -   B-ARG0     B-ARG0     -              you/Ci
435 1 should   + should   AUX   MD  aux    2 - -       B-V B-ARGM-MOD -          -              should/Mm.<
435 2 wear     + wear     VERB  VB  ROOT   2 - wear.01 -   B-V        -          wear.v.01      wear/Pd.sox:01t:01t.-i:01
435 3 gloves   + glove    NOUN  NNS dobj   2 - -       -   B-ARG1     -          glove.n.02     gloves/Cc..p
435 4 when     + when     ADV   WRB advmod 5 - -       -   B-ARGM-TMP B-ARGM-TMP -              when/Mw
435 5 using    + use      VERB  VBG advcl  2 - use.01  -   I-ARGM-TMP B-V        use.v.01       using/P.-?o:0t1:0t1.|pg:012
435 6 an       + an       DET   DT  det    8 - -       -   I-ARGM-TMP B-ARG1     -              an/Md.<
435 7 electric + electric ADJ   JJ  amod   8 - -       -   I-ARGM-TMP I-ARG1     electric.a.01  electric/Ma.<
435 8 saw      - saw      NOUN  NN  dobj   5 - -       -   I-ARGM-TMP I-ARG1     power_saw.n.01 saw/Cc..s
435 9 .        - .        PUNCT .   punct  2 - -       -   -          -          -              -

# sent_i = 436
# sent = Although expecting the news, I was greatly shocked by it.
# hyperedge = ((was/Mv.< shocked/Pd.xp?a:r1e0:r1e0.<pf:012) (although/T (expecting/P.o-:10:10.|pg:01 (the/Md.< news/Cc..s) i/Ci)) i/Ci greatly/M (by/T (+/Jc.rm.rc it/Ci (the/Md.< news/Cc..s))))
# hyperedge builder = ((436.6/Mv.< 436.8/Pd.xp?a:r1e0:r1e0.<pf:012) (436.0/T (436.1/P.o-:10:10.|pg:01 (436.2/Md.< 436.3/Cc..s) 436.5/Ci)) 436.5/Ci 436.7/M (436.9/T (+/Jc.rm.rc 436.10/Ci (436.2/Md.< 436.3/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
436 0  Although  + although SCONJ IN  mark      1 - -         -      -   B-ARGM-ADV -       -            although/T
436 1  expecting + expect   VERB  VBG advcl     8 - expect.01 B-V    -   I-ARGM-ADV -       expect.v.01  expecting/P.o-:10:10.|pg:01
436 2  the       + the      DET   DT  det       3 - -         B-ARG1 -   I-ARGM-ADV B-MAIN0 -            the/Md.<
436 3  news      - news     NOUN  NN  dobj      1 - -         I-ARG1 -   I-ARGM-ADV I-MAIN0 news.n.01    news/Cc..s
436 4  ,         + ,        PUNCT ,   punct     8 - -         -      -   -          -       -            -
436 5  I         + I        PRON  PRP nsubjpass 8 - -         B-ARG0 -   B-ARG1     -       -            i/Ci
436 6  was       + be       AUX   VBD auxpass   8 - be.03     -      B-V -          -       be.v.01      was/Mv.<
436 7  greatly   + greatly  ADV   RB  advmod    8 - -         -      -   B-ARGM-EXT -       greatly.r.01 greatly/M
436 8  shocked   + shock    VERB  VBN ROOT      8 - shock.01  -      -   B-V        -       shock.v.01   shocked/Pd.xp?a:r1e0:r1e0.<pf:012
436 9  by        + by       ADP   IN  agent     8 - -         -      -   B-ARG0     -       -            by/T
436 10 it        - it       PRON  PRP pobj      9 - -         -      -   I-ARG0     B-REF0  -            it/Ci
436 11 .         - .        PUNCT .   punct     8 - -         -      -   -          -       -            -

# sent_i = 437
# sent = Not feeling very well, James decided to lie down.
# hyperedge = (decided/Pd.xsr:i01:i01.<f:0123 ((not/Mn.< feeling/P.?-:10:11.|pg:012) (very/M.< well/M) james/Cp..s.p) james/Cp..s.p ((to/Mi.< (down/Ml.r.> lie/P.-:1:0.-i:12)) james/Cp..s.p))
# hyperedge builder = (437.6/Pd.xsr:i01:i01.<f:0123 ((437.0/Mn.< 437.1/P.?-:10:11.|pg:012) (437.2/M.< 437.3/M) 437.5/Cp..s.p) 437.5/Cp..s.p ((437.7/Mi.< (437.9/Ml.r.> 437.8/P.-:1:0.-i:12)) 437.5/Cp..s.p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
437 0  Not     + not    PART  RB  neg    1 -        -           B-ARGM-NEG B-ARGM-PRP -      -             not/Mn.<
437 1  feeling + feel   VERB  VBG advcl  6 -        feel.01     B-V        I-ARGM-PRP -      feel.v.04     feeling/P.?-:10:11.|pg:012
437 2  very    + very   ADV   RB  advmod 3 -        -           B-ARG1     I-ARGM-PRP -      very.r.01     very/M.<
437 3  well    - well   ADV   RB  advmod 1 -        -           I-ARG1     I-ARGM-PRP -      well.r.01     well/M
437 4  ,       + ,      PUNCT ,   punct  6 -        -           -          -          -      -             -
437 5  James   + James  PROPN NNP nsubj  6 B-PERSON -           B-ARG0     B-ARG0     B-ARG1 -             james/Cp..s.p
437 6  decided + decide VERB  VBD ROOT   6 -        decide.01   -          B-V        -      decide.v.01   decided/Pd.xsr:i01:i01.<f:0123
437 7  to      + to     PART  TO  aux    8 -        -           -          B-ARG1     -      -             to/Mi.<
437 8  lie     + lie    VERB  VB  xcomp  6 -        lie_down.09 -          I-ARG1     B-V    lie_down.v.01 lie/P.-:1:0.-i:12
437 9  down    - down   ADP   RP  prt    8 -        -           -          I-ARG1     -      lie_down.v.01 down/Ml.r.>
437 10 .       - .      PUNCT .   punct  6 -        -           -          -          -      -             -

# sent_i = 438
# sent = Having lost my passport, I have to apply for a new one.
# hyperedge = (have/Pd.xsr:h--:!--.|f ((having/Mv.< lost/P.o-:10:10.<pf:0123) ((+/Jc.rm.rr my/Mp i/Ci) passport/Cc..s) i/Ci) i/Ci ((to/Mi.< apply/P.-x:01:01.-i:012) i/Ci (for/T (+/Jc.rm.?c (a/Md.< (new/Ma.< one/C#)) ((+/Jc.rm.rr my/Mp i/Ci) passport/Cc..s)))))
# hyperedge builder = (438.6/Pd.xsr:h--:!--.|f ((438.0/Mv.< 438.1/P.o-:10:10.<pf:0123) ((+/Jc.rm.rr 438.2/Mp 438.5/Ci) 438.3/Cc..s) 438.5/Ci) 438.5/Ci ((438.7/Mi.< 438.8/P.-x:01:01.-i:012) 438.5/Ci (438.9/T (+/Jc.rm.?c (438.10/Md.< (438.11/Ma.< 438.12/C#)) ((+/Jc.rm.rr 438.2/Mp 438.5/Ci) 438.3/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 coref2 synset atoms
438 0  Having   + have     AUX   VBG  aux   1  - have.01  B-V -      B-ARGM-PRD -          -       -       -             having/Mv.<
438 1  lost     + lose     VERB  VBN  advcl 6  - lose.02  -   B-V    I-ARGM-PRD -          -       -       lose.v.01     lost/P.o-:10:10.<pf:0123
438 2  my       + my       PRON  PRP$ poss  3  - -        -   B-ARG1 I-ARGM-PRD -          B-REF0  B-MAIN1 -             my/Mp
438 3  passport - passport NOUN  NN   dobj  1  - -        -   I-ARG1 I-ARGM-PRD -          -       I-MAIN1 passport.n.02 passport/Cc..s
438 4  ,        + ,        PUNCT ,    punct 6  - -        -   -      -          -          -       -       -             -
438 5  I        + I        PRON  PRP  nsubj 6  - -        -   B-ARG0 -          B-ARG0     B-MAIN0 -       -             i/Ci
438 6  have     + have     VERB  VBP  ROOT  6  - have.02  -   -      B-V        B-ARGM-MOD -       -       -             have/Pd.xsr:h--:!--.|f
438 7  to       + to       PART  TO   aux   8  - -        -   -      -          -          -       -       -             to/Mi.<
438 8  apply    + apply    VERB  VB   xcomp 6  - apply.01 -   -      -          B-V        -       -       apply.v.03    apply/P.-x:01:01.-i:012
438 9  for      + for      ADP   IN   prep  8  - -        -   -      -          B-ARG1     -       -       -             for/T
438 10 a        + a        DET   DT   det   12 - -        -   -      -          I-ARG1     -       B-REF1  -             a/Md.<
438 11 new      + new      ADJ   JJ   amod  12 - -        -   -      -          I-ARG1     -       I-REF1  new.a.01      new/Ma.<
438 12 one      - one      NUM   CD   pobj  9  - -        -   -      -          I-ARG1     -       I-REF1  one.n.02      one/C#
438 13 .        - .        PUNCT .    punct 6  - -        -   -      -          -          -       -       -             -

# sent_i = 439
# sent = He died at thirty, struck down by a rare disease.
# hyperedge = (died/Pd.sxx:1th:1th.<f:12 he/Ci (at/Tt thirty/C#...d) ((down/Ml.r.> struck/P.-a:10:10.<f:012) he/Ci (by/T (a/Md.< (rare/Ma.< disease/Cc..s)))))
# hyperedge builder = (439.1/Pd.sxx:1th:1th.<f:12 439.0/Ci (439.2/Tt 439.3/C#...d) ((439.6/Ml.r.> 439.5/P.-a:10:10.<f:012) 439.0/Ci (439.7/T (439.8/Md.< (439.9/Ma.< 439.10/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
439 0  He      + he      PRON  PRP nsubj 1  -      -              B-ARG1     B-ARG1 -                he/Ci
439 1  died    + die     VERB  VBD ROOT  1  -      die.01         B-V        -      die.v.01         died/Pd.sxx:1th:1th.<f:12
439 2  at      + at      ADP   IN  prep  1  -      -              B-ARGM-TMP -      -                at/Tt
439 3  thirty  - thirty  NUM   CD  pobj  2  B-DATE -              I-ARGM-TMP -      thirty.s.01      thirty/C#...d
439 4  ,       + ,       PUNCT ,   punct 1  -      -              -          -      -                -
439 5  struck  + strike  VERB  VBD advcl 1  -      strike_down.08 B-ARGM-PRD B-V    strike_down.v.02 struck/P.-a:10:10.<f:012
439 6  down    + down    ADP   RP  prt   5  -      -              I-ARGM-PRD -      strike_down.v.02 down/Ml.r.>
439 7  by      + by      ADP   IN  agent 5  -      -              I-ARGM-PRD B-ARG0 -                by/T
439 8  a       + a       DET   DT  det   10 -      -              I-ARGM-PRD I-ARG0 -                a/Md.<
439 9  rare    + rare    ADJ   JJ  amod  10 -      -              I-ARGM-PRD I-ARG0 rare.s.01        rare/Ma.<
439 10 disease - disease NOUN  NN  pobj  7  -      -              I-ARGM-PRD I-ARG0 disease.n.01     disease/Cc..s
439 11 .       - .       PUNCT .   punct 1  -      -              -          -      -                -

# sent_i = 440
# sent = With prices going up so fast, we can't afford luxuries.
# hyperedge = ((ca/Mm.< (n't/Mn.< afford/Pd.xso:c01:c01.-i:01)) (with/T ((up/Ml.r.> going/P.s?:1m:1m.|pg:1234) prices/Cc..p (so/M.< fast/M))) we/Ci luxuries/Cc..p)
# hyperedge builder = ((440.8/Mm.< (440.9/Mn.< 440.10/Pd.xso:c01:c01.-i:01)) (440.0/T ((440.3/Ml.r.> 440.2/P.s?:1m:1m.|pg:1234) 440.1/Cc..p (440.4/M.< 440.5/M))) 440.7/Ci 440.11/Cc..p)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
440 0  With     + with   ADP   IN  mark   2  - -         -          -   B-ARGM-CAU -           with/T
440 1  prices   + price  NOUN  NNS nsubj  2  - -         B-ARG1     -   I-ARGM-CAU price.n.02  prices/Cc..p
440 2  going    + go     VERB  VBG advcl  10 - go.01     B-V        -   I-ARGM-CAU rise.v.02   going/P.s?:1m:1m.|pg:1234
440 3  up       + up     ADP   RP  prt    2  - -         B-ARGM-DIR -   I-ARGM-CAU rise.v.02   up/Ml.r.>
440 4  so       + so     ADV   RB  advmod 5  - -         B-ARGM-MNR -   I-ARGM-CAU so.r.01     so/M.<
440 5  fast     - fast   ADV   RB  advmod 2  - -         I-ARGM-MNR -   I-ARGM-CAU fast.r.01   fast/M
440 6  ,        + ,      PUNCT ,   punct  10 - -         -          -   -          -           -
440 7  we       + we     PRON  PRP nsubj  10 - -         -          -   B-ARG0     -           we/Ci
440 8  ca       - can    AUX   MD  aux    10 - -         -          B-V B-ARGM-MOD -           ca/Mm.<
440 9  n't      + not    PART  RB  neg    10 - -         -          -   B-ARGM-NEG not.r.01    n't/Mn.<
440 10 afford   + afford VERB  VB  ROOT   10 - afford.01 -          -   B-V        afford.v.01 afford/Pd.xso:c01:c01.-i:01
440 11 luxuries - luxury NOUN  NNS dobj   10 - -         -          -   B-ARG1     luxury.n.01 luxuries/Cc..p
440 12 .        - .      PUNCT .   punct  10 - -         -          -   -          -           -

# sent_i = 441
# sent = The film star made a dramatic entrance, attracting everyone's attention.
# hyperedge = (made/Pd.sox:01r:0gr.<f:01 (the/Md.< (+/B.am film/Cc.<.s star/Cc..s)) (a/Md.< (dramatic/Ma.< entrance/Cc..s)) (attracting/P.-o:01:01.|pg:0123 (the/Md.< (+/B.am film/Cc.<.s star/Cc..s)) ('s/Bp everyone/Mp..s attention/Cc..s)))
# hyperedge builder = (441.3/Pd.sox:01r:0gr.<f:01 (441.0/Md.< (+/B.am 441.1/Cc.<.s 441.2/Cc..s)) (441.4/Md.< (441.5/Ma.< 441.6/Cc..s)) (441.8/P.-o:01:01.|pg:0123 (441.0/Md.< (+/B.am 441.1/Cc.<.s 441.2/Cc..s)) (441.10/Bp 441.9/Mp..s 441.11/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
441 0  The        + the       DET   DT  det      2  - -          B-ARG0     B-ARG0 -              the/Md.<
441 1  film       + film      NOUN  NN  compound 2  - -          I-ARG0     I-ARG0 film_star.n.01 film/Cc.<.s
441 2  star       + star      NOUN  NN  nsubj    3  - -          I-ARG0     I-ARG0 film_star.n.01 star/Cc..s
441 3  made       + make      VERB  VBD ROOT     3  - make.18    B-V        -      make.v.16      made/Pd.sox:01r:0gr.<f:01
441 4  a          + a         DET   DT  det      6  - -          B-ARG1     -      -              a/Md.<
441 5  dramatic   + dramatic  ADJ   JJ  amod     6  - -          I-ARG1     -      dramatic.a.01  dramatic/Ma.<
441 6  entrance   - entrance  NOUN  NN  dobj     3  - -          I-ARG1     -      entrance.n.03  entrance/Cc..s
441 7  ,          + ,         PUNCT ,   punct    3  - -          -          -      -              -
441 8  attracting + attract   VERB  VBG advcl    3  - attract.01 B-ARGM-ADV B-V    attract.v.01   attracting/P.-o:01:01.|pg:0123
441 9  everyone   - everyone  PRON  NN  poss     11 - -          I-ARGM-ADV B-ARG1 -              everyone/Mp..s
441 10 's         + 's        PART  POS case     9  - -          I-ARGM-ADV I-ARG1 -              's/Bp
441 11 attention  - attention NOUN  NN  dobj     8  - -          I-ARGM-ADV I-ARG1 attention.n.01 attention/Cc..s
441 12 .          - .         PUNCT .   punct    3  - -          -          -      -              -

# sent_i = 442
# sent = All being well, we should be home about six.
# hyperedge = ((should/Mm.< be/Pd.xs?x:r12t:r1ht.-i:12) (being/P.s?:12:1h.|pg:12 all/Cd well/M) we/Ci home/M (about/M.<..t six/C#...t))
# hyperedge builder = ((442.5/Mm.< 442.6/Pd.xs?x:r12t:r1ht.-i:12) (442.1/P.s?:12:1h.|pg:12 442.0/Cd 442.2/M) 442.4/Ci 442.7/M (442.8/M.<..t 442.9/C#...t))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
442 0  All    + all    DET   DT  nsubj    1 -      -     B-ARG1 -   B-ARGM-ADV all.a.01           all/Cd
442 1  being  + be     VERB  VBG advcl    6 -      be.01 B-V    -   I-ARGM-ADV be.v.01            being/P.s?:12:1h.|pg:12
442 2  well   - well   ADV   RB  advmod   1 -      -     B-ARG2 -   I-ARGM-ADV well.r.01          well/M
442 3  ,      + ,      PUNCT ,   punct    6 -      -     -      -   -          -                  -
442 4  we     + we     PRON  PRP nsubj    6 -      -     -      -   B-ARG1     -                  we/Ci
442 5  should + should AUX   MD  aux      6 -      -     -      B-V B-ARGM-MOD -                  should/Mm.<
442 6  be     + be     VERB  VB  ROOT     6 -      be.01 -      -   B-V        be.v.01            be/Pd.xs?x:r12t:r1ht.-i:12
442 7  home   + home   ADV   RB  advmod   6 -      -     -      -   B-ARG2     home.r.01          home/M
442 8  about  + about  ADV   RB  advmod   9 B-TIME -     -      -   B-ARGM-TMP approximately.r.01 about/M.<..t
442 9  six    - six    NUM   CD  npadvmod 6 I-TIME -     -      -   I-ARGM-TMP six.s.01           six/C#...t
442 10 .      - .      PUNCT .   punct    6 -      -     -      -   -          -                  -

# sent_i = 443
# sent = Taken daily, vitamin pills can improve your health.
# hyperedge = ((can/Mm.< improve/Pd.xso:r01:r01.-i:01) (taken/P.?-:t1:t1.<pf:0123 daily/M...d (+/B.am vitamin/Cc.<.s pills/Cc..p)) (+/B.am vitamin/Cc.<.s pills/Cc..p) (your/Mp health/Cc..s))
# hyperedge builder = ((443.5/Mm.< 443.6/Pd.xso:r01:r01.-i:01) (443.0/P.?-:t1:t1.<pf:0123 443.1/M...d (+/B.am 443.3/Cc.<.s 443.4/Cc..p)) (+/B.am 443.3/Cc.<.s 443.4/Cc..p) (443.7/Mp 443.8/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
443 0 Taken   + take    VERB  VBN  advcl    6 -      take.01    B-V        -   B-ARGM-ADV consume.v.02      taken/P.?-:t1:t1.<pf:0123
443 1 daily   - daily   ADV   RB   advmod   0 B-DATE -          B-ARGM-TMP -   I-ARGM-ADV daily.r.01        daily/M...d
443 2 ,       + ,       PUNCT ,    punct    6 -      -          -          -   -          -                 -
443 3 vitamin + vitamin NOUN  NN   compound 4 -      -          B-ARG1     -   B-ARG0     vitamin_pill.n.01 vitamin/Cc.<.s
443 4 pills   + pill    NOUN  NNS  nsubj    6 -      -          I-ARG1     -   I-ARG0     vitamin_pill.n.01 pills/Cc..p
443 5 can     + can     AUX   MD   aux      6 -      -          -          B-V B-ARGM-MOD -                 can/Mm.<
443 6 improve + improve VERB  VB   ROOT     6 -      improve.01 -          -   B-V        better.v.02       improve/Pd.xso:r01:r01.-i:01
443 7 your    + your    PRON  PRP$ poss     8 -      -          -          -   B-ARG1     -                 your/Mp
443 8 health  - health  NOUN  NN   dobj     6 -      -          -          -   I-ARG1     health.n.01       health/Cc..s
443 9 .       - .       PUNCT .    punct    6 -      -          -          -   -          -                 -

# sent_i = 444
# sent = Strictly speaking, you can't come in here unless you're a club member.
# hyperedge = ((ca/Mm.< (n't/Mn.< (in/Ml.r.> come/Pd.xs?x:r1lr:r1lr.-i:1234))) (speaking/P.?:m:m.|pg:0123 strictly/M) you/Ci here/M (unless/T ('re/P.sc:12:1h.|f:12 you/Ci (a/Md.< (+/B.am club/Cc.<.s member/Cc..s)))))
# hyperedge builder = ((444.4/Mm.< (444.5/Mn.< (444.7/Ml.r.> 444.6/Pd.xs?x:r1lr:r1lr.-i:1234))) (444.1/P.?:m:m.|pg:0123 444.0/M) 444.3/Ci 444.8/M (444.9/T (444.11/P.sc:12:1h.|f:12 444.10/Ci (444.12/Md.< (+/B.am 444.13/Cc.<.s 444.14/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
444 0  Strictly + strictly ADV   RB  advmod   1  - -        B-ARGM-MNR -   B-ARGM-ADV -      -       strictly.r.01    strictly/M
444 1  speaking - speak    VERB  VBG advcl    6  - speak.01 B-V        -   I-ARGM-ADV -      -       talk.v.02        speaking/P.?:m:m.|pg:0123
444 2  ,        + ,        PUNCT ,   punct    6  - -        -          -   -          -      -       -                -
444 3  you      + you      PRON  PRP nsubj    6  - -        -          -   B-ARG1     -      B-MAIN0 -                you/Ci
444 4  ca       - can      AUX   MD  aux      6  - -        -          B-V B-ARGM-MOD -      -       -                ca/Mm.<
444 5  n't      + not      PART  RB  neg      6  - -        -          -   B-ARGM-NEG -      -       not.r.01         n't/Mn.<
444 6  come     + come     VERB  VB  ROOT     6  - come.01  -          -   B-V        -      -       arrive.v.01      come/Pd.xs?x:r1lr:r1lr.-i:1234
444 7  in       + in       ADP   RP  prt      6  - -        -          -   -          -      -       -                in/Ml.r.>
444 8  here     + here     ADV   RB  advmod   6  - -        -          -   B-ARGM-LOC -      -       here.r.01        here/M
444 9  unless   + unless   SCONJ IN  mark     11 - -        -          -   B-ARGM-ADV -      -       -                unless/T
444 10 you      - you      PRON  PRP nsubj    11 - -        -          -   I-ARGM-ADV B-ARG1 B-REF0  -                you/Ci
444 11 're      + be       VERB  VBP advcl    6  - be.01    -          -   I-ARGM-ADV B-V    -       be.v.01          're/P.sc:12:1h.|f:12
444 12 a        + a        DET   DT  det      14 - -        -          -   I-ARGM-ADV B-ARG2 -       -                a/Md.<
444 13 club     + club     NOUN  NN  compound 14 - -        -          -   I-ARGM-ADV I-ARG2 -       club_member.n.01 club/Cc.<.s
444 14 member   - member   NOUN  NN  attr     11 - -        -          -   I-ARGM-ADV I-ARG2 -       club_member.n.01 member/Cc..s
444 15 .        - .        PUNCT .   punct    6  - -        -          -   -          -      -       -                -

# sent_i = 445
# sent = Talking of computers, ours broke down yesterday.
# hyperedge = ((down/Ml.r.> broke/Pd.xsx:r1t:r1t.<f:01) (talking/P.x:1:1.|pg:012 (of/T computers/Cc..p)) (+/Jc.rm.cc ours/Cc..p computers/Cc..p) yesterday/Cc..s.d)
# hyperedge builder = ((445.6/Ml.r.> 445.5/Pd.xsx:r1t:r1t.<f:01) (445.0/P.x:1:1.|pg:012 (445.1/T 445.2/Cc..p)) (+/Jc.rm.cc 445.4/Cc..p 445.2/Cc..p) 445.7/Cc..s.d)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
445 0 Talking   + talk      VERB  VBG advcl    5 -      talk.01       B-V    B-ARGM-ADV -       talk_of.v.01   talking/P.x:1:1.|pg:012
445 1 of        + of        ADP   IN  prep     0 -      -             B-ARG1 I-ARGM-ADV -       talk_of.v.01   of/T
445 2 computers - computer  NOUN  NNS pobj     1 -      -             I-ARG1 I-ARGM-ADV B-MAIN0 computer.n.01  computers/Cc..p
445 3 ,         + ,         PUNCT ,   punct    5 -      -             -      -          -       -              -
445 4 ours      + our       NOUN  NNS nsubj    5 -      -             -      B-ARG1     B-REF0  -              ours/Cc..p
445 5 broke     + break     VERB  VBD ROOT     5 -      break_down.12 -      B-V        -       fail.v.04      broke/Pd.xsx:r1t:r1t.<f:01
445 6 down      + down      ADP   RP  prt      5 -      -             -      -          -       fali.v.04      down/Ml.r.>
445 7 yesterday - yesterday NOUN  NN  npadvmod 5 B-DATE -             -      B-ARGM-TMP -       yesterday.n.01 yesterday/Cc..s.d
445 8 .         - .         PUNCT .   punct    5 -      -             -      -          -       -              -

# sent_i = 446
# sent = I saw two men cutting down a tree.
# hyperedge = (saw/Pd.sr:01:01.<f:012 i/Ci ((down/Ml.r.> cutting/P.so:01:01.|pg:01234) (two/M#.<..c men/Cc..p) (a/Md.< tree/Cc..s)))
# hyperedge builder = (446.1/Pd.sr:01:01.<f:012 446.0/Ci ((446.5/Ml.r.> 446.4/P.so:01:01.|pg:01234) (446.2/M#.<..c 446.3/Cc..p) (446.6/Md.< 446.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
446 0 I       + I    PRON  PRP nsubj  1 -          -      B-ARG0 -          -          i/Ci
446 1 saw     + see  VERB  VBD ROOT   1 -          see.01 B-V    -          see.v.01   saw/Pd.sr:01:01.<f:012
446 2 two     + two  NUM   CD  nummod 3 B-CARDINAL -      B-ARG1 B-ARG0     two.s.01   two/M#.<..c
446 3 men     + man  NOUN  NNS nsubj  4 -          -      I-ARG1 I-ARG0     man.n.01   men/Cc..p
446 4 cutting + cut  VERB  VBG ccomp  1 -          cut.01 I-ARG1 B-V        slash.v.01 cutting/P.so:01:01.|pg:01234
446 5 down    + down ADP   RP  prt    4 -          -      I-ARG1 B-ARGM-DIR slash.v.01 down/Ml.r.>
446 6 a       + a    DET   DT  det    7 -          -      I-ARG1 B-ARG1     -          a/Md.<
446 7 tree    - tree NOUN  NN  dobj   4 -          -      I-ARG1 I-ARG1     tree.n.01  tree/Cc..s
446 8 .       - .    PUNCT .   punct  1 -          -      -      -          -          -

# sent_i = 447
# sent = We heard you arguing with your brother.
# hyperedge = (heard/Pd.sr:01:01.<f:012 we/Ci (arguing/P.sx:01:0o.|pg:012 you/Ci (with/T ((+/Jc.rm.rr your/Mp you/Ci) brother/Cc..s))))
# hyperedge builder = (447.1/Pd.sr:01:01.<f:012 447.0/Ci (447.3/P.sx:01:0o.|pg:012 447.2/Ci (447.4/T ((+/Jc.rm.rr 447.5/Mp 447.2/Ci) 447.6/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
447 0 We      + we      PRON  PRP  nsubj 1 - -        B-ARG0 -      -       -            we/Ci
447 1 heard   + hear    VERB  VBD  ROOT  1 - hear.01  B-V    -      -       hear.v.01    heard/Pd.sr:01:01.<f:012
447 2 you     + you     PRON  PRP  nsubj 3 - -        B-ARG1 B-ARG0 B-MAIN0 -            you/Ci
447 3 arguing + argue   VERB  VBG  ccomp 1 - argue.02 I-ARG1 B-V    -       argue.v.02   arguing/P.sx:01:0o.|pg:012
447 4 with    + with    ADP   IN   prep  3 - -        I-ARG1 B-ARG1 -       -            with/T
447 5 your    + your    PRON  PRP$ poss  6 - -        I-ARG1 I-ARG1 B-REF0  -            your/Mp
447 6 brother - brother NOUN  NN   pobj  4 - -        I-ARG1 I-ARG1 -       brother.n.01 brother/Cc..s
447 7 .       - .       PUNCT .    punct 1 - -        -      -      -       -            -

# sent_i = 448
# sent = The trainer had the players running round the field.
# hyperedge = (had/Pd.sr:01:01.<f:01 (the/Md.< trainer/Cc..s) (running/P.sx:0d:1d.|pg:012 (the/Md.< players/Cc..p) (round/T (the/Md.< field/Cc..s))))
# hyperedge builder = (448.2/Pd.sr:01:01.<f:01 (448.0/Md.< 448.1/Cc..s) (448.5/P.sx:0d:1d.|pg:012 (448.3/Md.< 448.4/Cc..p) (448.6/T (448.7/Md.< 448.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
448 0 The     + the     DET   DT  det   1 - -       B-ARG0 -          -                  the/Md.<
448 1 trainer + trainer NOUN  NN  nsubj 2 - -       I-ARG0 -          trainer.n.01       trainer/Cc..s
448 2 had     + have    VERB  VBD ROOT  2 - have.04 B-V    -          get.v.03           had/Pd.sr:01:01.<f:01
448 3 the     + the     DET   DT  det   4 - -       B-ARG1 B-ARG0     -                  the/Md.<
448 4 players + player  NOUN  NNS nsubj 5 - -       I-ARG1 I-ARG0     player.n.01        players/Cc..p
448 5 running + run     VERB  VBG ccomp 2 - run.02  I-ARG1 B-V        run.v.01           running/P.sx:0d:1d.|pg:012
448 6 round   + round   ADP   IN  prep  5 - -       I-ARG1 B-ARGM-DIR round.r.01         round/T
448 7 the     + the     DET   DT  det   8 - -       I-ARG1 I-ARGM-DIR -                  the/Md.<
448 8 field   - field   NOUN  NN  pobj  6 - -       I-ARG1 I-ARGM-DIR playing_field.n.02 field/Cc..s
448 9 .       - .       PUNCT .   punct 2 - -       -      -          -                  -

# sent_i = 449
# sent = They caught a student cheating in the exam.
# hyperedge = (caught/Pd.so:01:01.<f:012 they/Ci (+/Jr.ma (a/Md.< student/Cc..s) (cheating/P.-x:01:01.|pg:01 (a/Md.< student/Cc..s) (in/T (the/Md.< exam/Cc..s)))))
# hyperedge builder = (449.1/Pd.so:01:01.<f:012 449.0/Ci (+/Jr.ma (449.2/Md.< 449.3/Cc..s) (449.4/P.-x:01:01.|pg:01 (449.2/Md.< 449.3/Cc..s) (449.5/T (449.6/Md.< 449.7/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
449 0 They     + they    PRON  PRP nsubj 1 - -        B-ARG0 -      -                they/Ci
449 1 caught   + catch   VERB  VBD ROOT  1 - catch.02 B-V    -      catch.v.01       caught/Pd.so:01:01.<f:012
449 2 a        + a       DET   DT  det   3 - -        B-ARG1 B-ARG0 -                a/Md.<
449 3 student  + student NOUN  NN  dobj  1 - -        I-ARG1 I-ARG0 student.n.01     student/Cc..s
449 4 cheating + cheat   VERB  VBG acl   3 - cheat.02 I-ARG1 B-V    cheat.v.03       cheating/P.-x:01:01.|pg:01
449 5 in       + in      ADP   IN  prep  4 - -        I-ARG1 B-ARG1 -                in/T
449 6 the      + the     DET   DT  det   7 - -        I-ARG1 I-ARG1 -                the/Md.<
449 7 exam     - exam    NOUN  NN  pobj  5 - -        I-ARG1 I-ARG1 examination.n.02 exam/Cc..s
449 8 .        - .       PUNCT .   punct 1 - -        -      -      -                -

# sent_i = 450
# sent = The company wasted millions of pounds investing in out-of-date technology.
# hyperedge = (wasted/Pd.sor:012:01m.<f:012 (the/Md.< company/Cc..s) (of/Br...$ millions/Cc..p.$ pounds/Cc..p.$) (investing/P.--x:012:01g.|pg:012 (the/Md.< company/Cc..s) (of/Br...$ millions/Cc..p.$ pounds/Cc..p.$) (in/T (out-of-date/M.< technology/Cc..s))))
# hyperedge builder = (450.2/Pd.sor:012:01m.<f:012 (450.0/Md.< 450.1/Cc..s) (450.4/Br...$ 450.3/Cc..p.$ 450.5/Cc..p.$) (450.6/P.--x:012:01g.|pg:012 (450.0/Md.< 450.1/Cc..s) (450.4/Br...$ 450.3/Cc..p.$ 450.5/Cc..p.$) (450.7/T (450.8/M.< 450.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
450 0  The         + the         DET   DT  det   1 -       -         B-ARG0 B-ARG0 -                  the/Md.<
450 1  company     + company     NOUN  NN  nsubj 2 -       -         I-ARG0 I-ARG0 company.n.01       company/Cc..s
450 2  wasted      + waste       VERB  VBD ROOT  2 -       waste.01  B-V    -      waste.v.02         wasted/Pd.sor:012:01m.<f:012
450 3  millions    + million     NOUN  NNS dobj  2 B-MONEY -         B-ARG1 B-ARG1 million.n.01       millions/Cc..p.$
450 4  of          + of          ADP   IN  prep  3 I-MONEY -         I-ARG1 I-ARG1 -                  of/Br...$
450 5  pounds      + pound       NOUN  NNS pobj  4 I-MONEY -         I-ARG1 I-ARG1 british_pound.n.01 pounds/Cc..p.$
450 6  investing   + invest      VERB  VBG xcomp 2 -       invest.01 B-ARG2 B-V    invest.v.01        investing/P.--x:012:01g.|pg:012
450 7  in          + in          ADP   RP  prep  6 -       -         I-ARG2 B-ARG2 -                  in/T
450 8  out-of-date + out-of-date ADV   RB  nmod  9 -       -         I-ARG2 I-ARG2 outdated.s.01      out-of-date/M.<
450 9  technology  - technology  NOUN  NN  pobj  7 -       -         I-ARG2 I-ARG2 technology.n.01    technology/Cc..s
450 10 .           - .           PUNCT .   punct 2 -       -         -      -      -                  -

# sent_i = 451
# sent = Pamela wanted the carpet to be cleaned.
# hyperedge = (wanted/Pd.sr:01:01.<f:01234 pamela/Cp..s.p ((to/Mi.< (be/Mv.< cleaned/P.p:1:1.<pf:012)) (the/Md.< carpet/Cc..s)))
# hyperedge builder = (451.1/Pd.sr:01:01.<f:01234 451.0/Cp..s.p ((451.4/Mi.< (451.5/Mv.< 451.6/P.p:1:1.<pf:012)) (451.2/Md.< 451.3/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
451 0 Pamela  + Pamela PROPN NNP nsubj     1 B-PERSON -        B-ARG0 -   -      -           pamela/Cp..s.p
451 1 wanted  + want   VERB  VBD ROOT      1 -        want.01  B-V    -   -      desire.v.01 wanted/Pd.sr:01:01.<f:01234
451 2 the     + the    DET   DT  det       3 -        -        B-ARG1 -   B-ARG1 -           the/Md.<
451 3 carpet  + carpet NOUN  NN  nsubjpass 6 -        -        I-ARG1 -   I-ARG1 rug.n.01    carpet/Cc..s
451 4 to      + to     PART  TO  aux       6 -        -        I-ARG1 -   -      -           to/Mi.<
451 5 be      + be     AUX   VB  auxpass   6 -        be.03    I-ARG1 B-V -      -           be/Mv.<
451 6 cleaned - clean  VERB  VBN ccomp     1 -        clean.01 I-ARG1 -   B-V    clean.v.01  cleaned/P.p:1:1.<pf:012
451 7 .       - .      PUNCT .   punct     1 -        -        -      -   -      -           -

# sent_i = 452
# sent = Pamela wanted the carpet cleaned.
# hyperedge = (wanted/Pd.sr:01:01.<f:01234 pamela/Cp..s.p (cleaned/P.s:1:1.<pf:012 (the/Md.< carpet/Cc..s)))
# hyperedge builder = (452.1/Pd.sr:01:01.<f:01234 452.0/Cp..s.p (452.4/P.s:1:1.<pf:012 (452.2/Md.< 452.3/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
452 0 Pamela  + Pamela PROPN NNP nsubj 1 B-PERSON -        B-ARG0 -      -           pamela/Cp..s.p
452 1 wanted  + want   VERB  VBD ROOT  1 -        want.01  B-V    -      desire.v.01 wanted/Pd.sr:01:01.<f:01234
452 2 the     + the    DET   DT  det   3 -        -        B-ARG1 B-ARG1 -           the/Md.<
452 3 carpet  + carpet NOUN  NN  nsubj 4 -        -        I-ARG1 I-ARG1 rug.n.01    carpet/Cc..s
452 4 cleaned - clean  VERB  VBN ccomp 1 -        clean.01 I-ARG1 B-V    clean.v.01  cleaned/P.s:1:1.<pf:012
452 5 .       - .      PUNCT .   punct 1 -        -        -      -      -           -

# sent_i = 453
# sent = We prefer the lights to be turned down.
# hyperedge = (prefer/Pd.sr:01:01.|f:012 we/Ci ((to/Mi.< (be/Mv.< (down/Ml.r.> turned/P.p:1:1.<pf:01m))) (the/Md.< lights/Cc..p)))
# hyperedge builder = (453.1/Pd.sr:01:01.|f:012 453.0/Ci ((453.4/Mi.< (453.5/Mv.< (453.7/Ml.r.> 453.6/P.p:1:1.<pf:01m))) (453.2/Md.< 453.3/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
453 0 We     + we     PRON  PRP nsubj     1 - -         B-ARG0 -   -      -              we/Ci
453 1 prefer + prefer VERB  VBP ROOT      1 - prefer.01 B-V    -   -      prefer.v.01    prefer/Pd.sr:01:01.|f:012
453 2 the    + the    DET   DT  det       3 - -         B-ARG1 -   B-ARG1 -              the/Md.<
453 3 lights + light  NOUN  NNS nsubjpass 6 - -         I-ARG1 -   I-ARG1 light.n.02     lights/Cc..p
453 4 to     + to     PART  TO  aux       6 - -         I-ARG1 -   -      -              to/Mi.<
453 5 be     + be     AUX   VB  auxpass   6 - be.03     I-ARG1 B-V -      -              be/Mv.<
453 6 turned + turn   VERB  VBN ccomp     1 - turn.01   I-ARG1 -   B-V    turn_down.v.05 turned/P.p:1:1.<pf:01m
453 7 down   - down   ADP   RP  prt       6 - -         I-ARG1 -   -      turn_down.v.05 down/Ml.r.>
453 8 .      - .      PUNCT .   punct     1 - -         -      -   -      -              -

# sent_i = 454
# sent = We prefer the lights turned down.
# hyperedge = (prefer/Pd.sr:01:01.|f:012 we/Ci ((down/Ml.r.> turned/P.s:1:1.<f:01m) (the/Md.< lights/Cc..p)))
# hyperedge builder = (454.1/Pd.sr:01:01.|f:012 454.0/Ci ((454.5/Ml.r.> 454.4/P.s:1:1.<f:01m) (454.2/Md.< 454.3/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
454 0 We     + we     PRON  PRP nsubj 1 - -         B-ARG0 -      -              we/Ci
454 1 prefer + prefer VERB  VBP ROOT  1 - prefer.01 B-V    -      prefer.v.01    prefer/Pd.sr:01:01.|f:012
454 2 the    + the    DET   DT  det   3 - -         B-ARG1 B-ARG1 -              the/Md.<
454 3 lights + light  NOUN  NNS nsubj 4 - -         I-ARG1 I-ARG1 light.n.02     lights/Cc..p
454 4 turned + turn   VERB  VBD ccomp 1 - turn.01   I-ARG1 B-V    turn_down.v.05 turned/P.s:1:1.<f:01m
454 5 down   - down   ADP   RP  prt   4 - -         I-ARG1 -      turn_down.v.05 down/Ml.r.>
454 6 .      - .      PUNCT .   punct 1 - -         -      -      -              -

# sent_i = 455
# sent = Either my sister or the neighbours are looking after the dog.
# hyperedge = ((are/Mv.< (after/Ml.r.> looking/Pd.so:01:01.|pg:01)) (either/J (or/J (my/Mp sister/Cc..s) (the/Md.< neighbours/Cc..p))) (the/Md.< dog/Cc..s))
# hyperedge builder = ((455.6/Mv.< (455.8/Ml.r.> 455.7/Pd.so:01:01.|pg:01)) (455.0/J (455.3/J (455.1/Mp 455.2/Cc..s) (455.4/Md.< 455.5/Cc..p))) (455.9/Md.< 455.10/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
455 0  Either     + either    CCONJ CC   preconj 2  - -             -   B-ARG0 -               either/J
455 1  my         + my        PRON  PRP$ poss    2  - -             -   I-ARG0 -               my/Mp
455 2  sister     + sister    NOUN  NN   nsubj   7  - -             -   I-ARG0 sister.n.01     sister/Cc..s
455 3  or         + or        CCONJ CC   cc      2  - -             -   I-ARG0 -               or/J
455 4  the        + the       DET   DT   det     5  - -             -   I-ARG0 -               the/Md.<
455 5  neighbours + neighbour NOUN  NNS  conj    2  - -             -   I-ARG0 neighbor.n.01   neighbours/Cc..p
455 6  are        + be        AUX   VBP  aux     7  - be.03         B-V -      -               are/Mv.<
455 7  looking    + look      VERB  VBG  ROOT    7  - look_after.07 -   B-V    look_after.v.01 looking/Pd.so:01:01.|pg:01
455 8  after      + after     ADP   IN   prt     7  - -             -   -      look_after.v.01 after/Ml.r.>
455 9  the        + the       DET   DT   det     10 - -             -   B-ARG1 -               the/Md.<
455 10 dog        - dog       NOUN  NN   dobj    7  - -             -   I-ARG1 dog.n.01        dog/Cc..s
455 11 .          - .         PUNCT .    punct   7  - -             -   -      -               -

# sent_i = 456
# sent = Bread and butter was all we had.
# hyperedge = (was/Pd.sc:12:1h.<f:12 (and/J bread/Cc..s butter/Cc..s) (+/Jr.ma (+/Jc.rm.?c all/Cd (and/J bread/Cc..s butter/Cc..s)) (had/P.-s:10:10.<f:01 (+/Jc.rm.?c all/Cd (and/J bread/Cc..s butter/Cc..s)) we/Ci)))
# hyperedge builder = (456.3/Pd.sc:12:1h.<f:12 (456.1/J 456.0/Cc..s 456.2/Cc..s) (+/Jr.ma (+/Jc.rm.?c 456.4/Cd (456.1/J 456.0/Cc..s 456.2/Cc..s)) (456.6/P.-s:10:10.<f:01 (+/Jc.rm.?c 456.4/Cd (456.1/J 456.0/Cc..s 456.2/Cc..s)) 456.5/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
456 0 Bread  + bread  NOUN  NN  nsubj 3 - -       B-ARG1 -      B-MAIN0 bread.n.01  bread/Cc..s
456 1 and    + and    CCONJ CC  cc    0 - -       I-ARG1 -      I-MAIN0 -           and/J
456 2 butter + butter NOUN  NN  conj  0 - -       I-ARG1 -      I-MAIN0 butter.n.01 butter/Cc..s
456 3 was    + be     AUX   VBD ROOT  3 - be.01   B-V    -      -       be.v.01     was/Pd.sc:12:1h.<f:12
456 4 all    + all    DET   DT  attr  3 - -       B-ARG2 B-ARG1 B-REF0  all.a.01    all/Cd
456 5 we     + we     PRON  PRP nsubj 6 - -       I-ARG2 B-ARG0 -       -           we/Ci
456 6 had    - have   VERB  VBD relcl 4 - have.03 I-ARG2 B-V    -       have.v.01   had/P.-s:10:10.<f:01
456 7 .      - .      PUNCT .   punct 3 - -       -      -      -       -           -

# sent_i = 457
# sent = The Rose and Crown is that old pub by the river.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (and/J...f (the/Md.<..f rose/Cp..s.f) crown/Cp..s.f) (by/Br (that/Md.< (old/Ma.< pub/Cc..s)) (the/Md.< river/Cc..s)))
# hyperedge builder = (457.4/Pd.sc:12:1h.|f--3s:12 (457.2/J...f (457.0/Md.<..f 457.1/Cp..s.f) 457.3/Cp..s.f) (457.8/Br (457.5/Md.< (457.6/Ma.< 457.7/Cc..s)) (457.9/Md.< 457.10/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
457 0  The   + the   DET   DT  det   1  B-FAC -     B-ARG1 -                 the/Md.<..f
457 1  Rose  + Rose  PROPN NNP nsubj 4  I-FAC -     I-ARG1 -                 rose/Cp..s.f
457 2  and   + and   CCONJ CC  cc    1  I-FAC -     I-ARG1 -                 and/J...f
457 3  Crown + Crown PROPN NNP conj  1  I-FAC -     I-ARG1 -                 crown/Cp..s.f
457 4  is    + be    AUX   VBZ ROOT  4  -     be.01 B-V    be.v.01           is/Pd.sc:12:1h.|f--3s:12
457 5  that  + that  DET   DT  det   7  -     -     B-ARG2 -                 that/Md.<
457 6  old   + old   ADJ   JJ  amod  7  -     -     I-ARG2 old.a.02          old/Ma.<
457 7  pub   + pub   NOUN  NN  attr  4  -     -     I-ARG2 public_house.n.01 pub/Cc..s
457 8  by    + by    ADP   IN  prep  7  -     -     I-ARG2 -                 by/Br
457 9  the   + the   DET   DT  det   10 -     -     I-ARG2 -                 the/Md.<
457 10 river - river NOUN  NN  pobj  8  -     -     I-ARG2 river.n.01        river/Cc..s
457 11 .     - .     PUNCT .   punct 4  -     -     -      -                 -

# sent_i = 458
# sent = George, together with some of his friends, is buying a race-horse.
# hyperedge = ((is/Mv.< buying/Pd.s-o:0o1:0o1.|pg:01234) ((together/M.< with/Br) george/Cp..s.p (of/Br some/Cd ((+/Jc.rm.rp his/Mp george/Cp..s.p) friends/Cc..p))) ((together/M.< with/Br) (of/Br some/Cd ((+/Jc.rm.rp his/Mp george/Cp..s.p) friends/Cc..p))) (a/Md.< race-horse/Cc..s))
# hyperedge builder = ((458.9/Mv.< 458.10/Pd.s-o:0o1:0o1.|pg:01234) ((458.2/M.< 458.3/Br) 458.0/Cp..s.p (458.5/Br 458.4/Cd ((+/Jc.rm.rp 458.6/Mp 458.0/Cp..s.p) 458.7/Cc..p))) ((458.2/M.< 458.3/Br) (458.5/Br 458.4/Cd ((+/Jc.rm.rp 458.6/Mp 458.0/Cp..s.p) 458.7/Cc..p))) (458.11/Md.< 458.12/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
458 0  George     - George     PROPN NNP  nsubj  10 B-PERSON -      -   B-ARG0     B-MAIN0 -              george/Cp..s.p
458 1  ,          + ,          PUNCT ,    punct  0  -        -      -   -          -       -              -
458 2  together   + together   ADV   RB   advmod 3  -        -      -   B-ARGM-COM -       together.r.05  together/M.<
458 3  with       + with       ADP   IN   prep   0  -        -      -   I-ARGM-COM -       -              with/Br
458 4  some       + some       DET   DT   pobj   3  -        -      -   I-ARGM-COM -       some.a.01      some/Cd
458 5  of         + of         ADP   IN   prep   4  -        -      -   I-ARGM-COM -       -              of/Br
458 6  his        + his        PRON  PRP$ poss   7  -        -      -   I-ARGM-COM B-REF0  -              his/Mp
458 7  friends    - friend     NOUN  NNS  pobj   5  -        -      -   I-ARGM-COM -       friend.n.01    friends/Cc..p
458 8  ,          + ,          PUNCT ,    punct  10 -        -      -   -          -       -              -
458 9  is         + be         AUX   VBZ  aux    10 -        be.03  B-V -          -       -              is/Mv.<
458 10 buying     + buy        VERB  VBG  ROOT   10 -        buy.01 -   B-V        -       buy.v.01       buying/Pd.s-o:0o1:0o1.|pg:01234
458 11 a          + a          DET   DT   det    12 -        -      -   B-ARG1     -       -              a/Md.<
458 12 race-horse - race-horse NOUN  NN   dobj   10 -        -      -   I-ARG1     -       racehorse.n.01 race-horse/Cc..s
458 13 .          - .          PUNCT .    punct  10 -        -      -   -          -       -              -

# sent_i = 459
# sent = George, my neighbour, often goes to the races.
# hyperedge = (goes/Pd.s?x:0t4:1tg.|f--3s:0134 (+/Ba.ma.c george/Cp..s.p (+/Jc.rm.cp (my/Mp neighbour/Cc..s) george/Cp..s.p)) often/M (to/T (the/Md.< races/Cc..p)))
# hyperedge builder = (459.6/Pd.s?x:0t4:1tg.|f--3s:0134 (+/Ba.ma.c 459.0/Cp..s.p (+/Jc.rm.cp (459.2/Mp 459.3/Cc..s) 459.0/Cp..s.p)) 459.5/M (459.7/T (459.8/Md.< 459.9/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 coref1 synset atoms
459 0  George    - George    PROPN NNP  nsubj  6 B-PERSON -     B-ARG0     B-MAIN0 -               george/Cp..s.p
459 1  ,         + ,         PUNCT ,    punct  0 -        -     I-ARG0     -       -               -
459 2  my        + my        PRON  PRP$ poss   3 -        -     I-ARG0     B-REF0  -               my/Mp
459 3  neighbour - neighbour NOUN  NN   appos  0 -        -     I-ARG0     I-REF0  neighbor.n.01   neighbour/Cc..s
459 4  ,         + ,         PUNCT ,    punct  6 -        -     -          -       -               -
459 5  often     + often     ADV   RB   advmod 6 -        -     B-ARGM-TMP -       frequently.r.01 often/M
459 6  goes      + go        VERB  VBZ  ROOT   6 -        go.02 B-V        -       attend.v.01     goes/Pd.s?x:0t4:1tg.|f--3s:0134
459 7  to        + to        ADP   IN   prep   6 -        -     B-ARG4     -       attend.v.01     to/T
459 8  the       + the       DET   DT   det    9 -        -     I-ARG4     -       -               the/Md.<
459 9  races     - race      NOUN  NNS  pobj   7 -        -     I-ARG4     -       race.n.02       races/Cc..p
459 10 .         - .         PUNCT .    punct  6 -        -     -          -       -               -

# sent_i = 460
# sent = The house between the two bungalows is empty.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (between/Br (the/Md.< house/Cc..s) (the/Md.< (two/M#.<..c bungalows/Cc..p))) empty/Ca)
# hyperedge builder = (460.6/Pd.sc:12:1h.|f--3s:12 (460.2/Br (460.0/Md.< 460.1/Cc..s) (460.3/Md.< (460.4/M#.<..c 460.5/Cc..p))) 460.7/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
460 0 The       + the      DET   DT  det    1 -          -     B-ARG1 -             the/Md.<
460 1 house     + house    NOUN  NN  nsubj  6 -          -     I-ARG1 house.n.01    house/Cc..s
460 2 between   + between  ADP   IN  prep   1 -          -     I-ARG1 between.r.02  between/Br
460 3 the       + the      DET   DT  det    5 -          -     I-ARG1 -             the/Md.<
460 4 two       + two      NUM   CD  nummod 5 B-CARDINAL -     I-ARG1 two.s.01      two/M#.<..c
460 5 bungalows + bungalow NOUN  NNS pobj   2 -          -     I-ARG1 bungalow.n.01 bungalows/Cc..p
460 6 is        + be       AUX   VBZ ROOT   6 -          be.01 B-V    be.v.01       is/Pd.sc:12:1h.|f--3s:12
460 7 empty     - empty    ADJ   JJ  acomp  6 -          -     B-ARG2 empty.a.01    empty/Ca
460 8 .         - .        PUNCT .   punct  6 -          -     -      -             -

# sent_i = 461
# sent = Through the trees is the quickest way.
# hyperedge = (is/Pd.xc:12:1h.|f--3s:12 (through/T (the/Md.< trees/Cc..p)) (the/Md.< (quickest/Ms.< way/Cc..s)))
# hyperedge builder = (461.3/Pd.xc:12:1h.|f--3s:12 (461.0/T (461.1/Md.< 461.2/Cc..p)) (461.4/Md.< (461.5/Ms.< 461.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
461 0 Through  + through ADP   IN  prep  3 - -     B-ARG1 through.s.02 through/T
461 1 the      + the     DET   DT  det   2 - -     I-ARG1 -            the/Md.<
461 2 trees    + tree    NOUN  NNS pobj  0 - -     I-ARG1 tree.n.01    trees/Cc..p
461 3 is       + be      AUX   VBZ ROOT  3 - be.01 B-V    be.v.01      is/Pd.xc:12:1h.|f--3s:12
461 4 the      + the     DET   DT  det   6 - -     B-ARG2 -            the/Md.<
461 5 quickest + quick   ADJ   JJS amod  6 - -     I-ARG2 quick.s.01   quickest/Ms.<
461 6 way      - way     NOUN  NN  attr  3 - -     I-ARG2 way.n.07     way/Cc..s
461 7 .        - .       PUNCT .   punct 3 - -     -      -            -

# sent_i = 462
# sent = A great attraction are the antique shops in the old part of the town.
# hyperedge = (are/Pd.sc:12:1h.|f:12 (a/Md.< (great/Ma.< attraction/Cc..s)) (in/Br (the/Md.< (+/B.am antique/Cc.<.s shops/Cc..p)) (of/Br (the/Md.< (old/Ma.< part/Cc..s)) (the/Md.< town/Cc..s))))
# hyperedge builder = (462.3/Pd.sc:12:1h.|f:12 (462.0/Md.< (462.1/Ma.< 462.2/Cc..s)) (462.7/Br (462.4/Md.< (+/B.am 462.5/Cc.<.s 462.6/Cc..p)) (462.11/Br (462.8/Md.< (462.9/Ma.< 462.10/Cc..s)) (462.12/Md.< 462.13/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
462 0  A          + a          DET   DT  det      2  - -     B-ARG1 -               a/Md.<
462 1  great      + great      ADJ   JJ  amod     2  - -     I-ARG1 great.s.02      great/Ma.<
462 2  attraction + attraction NOUN  NN  nsubj    3  - -     I-ARG1 attraction.n.02 attraction/Cc..s
462 3  are        + be         AUX   VBP ROOT     3  - be.01 B-V    be.v.01         are/Pd.sc:12:1h.|f:12
462 4  the        + the        DET   DT  det      6  - -     B-ARG2 -               the/Md.<
462 5  antique    + antique    NOUN  NN  compound 6  - -     I-ARG2 antique.s.01    antique/Cc.<.s
462 6  shops      + shop       NOUN  NNS attr     3  - -     I-ARG2 shop.n.01       shops/Cc..p
462 7  in         + in         ADP   IN  prep     6  - -     I-ARG2 -               in/Br
462 8  the        + the        DET   DT  det      10 - -     I-ARG2 -               the/Md.<
462 9  old        + old        ADJ   JJ  amod     10 - -     I-ARG2 old.a.02        old/Ma.<
462 10 part       + part       NOUN  NN  pobj     7  - -     I-ARG2 part.n.01       part/Cc..s
462 11 of         + of         ADP   IN  prep     10 - -     I-ARG2 -               of/Br
462 12 the        + the        DET   DT  det      13 - -     I-ARG2 -               the/Md.<
462 13 town       - town       NOUN  NN  pobj     11 - -     I-ARG2 town.n.01       town/Cc..s
462 14 .          - .          PUNCT .   punct    3  - -     -      -               -

# sent_i = 463
# sent = One of these letters is for you.
# hyperedge = (is/Pd.sx:12:1h.|f--3s:12 (of/Br one/C#...c (these/Md.< letters/Cc..p)) (for/T you/Ci))
# hyperedge builder = (463.4/Pd.sx:12:1h.|f--3s:12 (463.1/Br 463.0/C#...c (463.2/Md.< 463.3/Cc..p)) (463.5/T 463.6/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
463 0 One     + one    NUM   CD  nsubj 4 B-CARDINAL -     B-ARG1 one.n.01    one/C#...c
463 1 of      + of     ADP   IN  prep  0 -          -     I-ARG1 -           of/Br
463 2 these   + these  DET   DT  det   3 -          -     I-ARG1 -           these/Md.<
463 3 letters + letter NOUN  NNS pobj  1 -          -     I-ARG1 letter.n.01 letters/Cc..p
463 4 is      + be     AUX   VBZ ROOT  4 -          be.01 B-V    be.v.01     is/Pd.sx:12:1h.|f--3s:12
463 5 for     + for    ADP   IN  prep  4 -          -     B-ARG2 -           for/T
463 6 you     - you    PRON  PRP pobj  5 -          -     I-ARG2 -           you/Ci
463 7 .       - .      PUNCT .   punct 4 -          -     -      -           -

# sent_i = 464
# sent = A large number of letters were received.
# hyperedge = ((were/Mv.< received/Pd.p:1:1.<pf:01234) (of/Br (a/Md.< (large/Ma.< number/Cc..s)) letters/Cc..p))
# hyperedge builder = ((464.5/Mv.< 464.6/Pd.p:1:1.<pf:01234) (464.3/Br (464.0/Md.< (464.1/Ma.< 464.2/Cc..s)) 464.4/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
464 0 A        + a       DET   DT  det       2 - -          -   B-ARG1 -              a/Md.<
464 1 large    + large   ADJ   JJ  amod      2 - -          -   I-ARG1 battalion.n.02 large/Ma.<
464 2 number   + number  NOUN  NN  nsubjpass 6 - -          -   I-ARG1 battalion.n.02 number/Cc..s
464 3 of       + of      ADP   IN  prep      2 - -          -   I-ARG1 -              of/Br
464 4 letters  + letter  NOUN  NNS pobj      3 - -          -   I-ARG1 letter.n.01    letters/Cc..p
464 5 were     + be      AUX   VBD auxpass   6 - be.03      B-V -      -              were/Mv.<
464 6 received - receive VERB  VBN ROOT      6 - receive.01 -   B-V    receive.v.01   received/Pd.p:1:1.<pf:01234
464 7 .        - .       PUNCT .   punct     6 - -          -   -      -              -

# sent_i = 465
# sent = The majority of people have complained.
# hyperedge = ((have/Mv.< complained/Pd.s:0:0.<pf:012) (of/Br (the/Md.< majority/Cc..s) people/Cc..p))
# hyperedge builder = ((465.4/Mv.< 465.5/Pd.s:0:0.<pf:012) (465.2/Br (465.0/Md.< 465.1/Cc..s) 465.3/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
465 0 The        + the      DET   DT  det   1 - -           -   B-ARG0 -             the/Md.<
465 1 majority   + majority NOUN  NN  nsubj 5 - -           -   I-ARG0 majority.n.01 majority/Cc..s
465 2 of         + of       ADP   IN  prep  1 - -           -   I-ARG0 -             of/Br
465 3 people     + people   NOUN  NNS pobj  2 - -           -   I-ARG0 people.n.01   people/Cc..p
465 4 have       + have     AUX   VBP aux   5 - have.01     B-V -      -             have/Mv.<
465 5 complained - complain VERB  VBN ROOT  5 - complain.01 -   B-V    complain.v.01 complained/Pd.s:0:0.<pf:012
465 6 .          - .        PUNCT .   punct 5 - -           -   -      -             -

# sent_i = 466
# sent = A lot of people have complained.
# hyperedge = ((have/Mv.< complained/Pd.s:0:0.<pf:012) (of/Br (a/Md.< lot/Cc..s) people/Cc..p))
# hyperedge builder = ((466.4/Mv.< 466.5/Pd.s:0:0.<pf:012) (466.2/Br (466.0/Md.< 466.1/Cc..s) 466.3/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
466 0 A          + a        DET   DT  det   1 - -           -   B-ARG0 -             a/Md.<
466 1 lot        + lot      NOUN  NN  nsubj 5 - -           -   I-ARG0 batch.n.02    lot/Cc..s
466 2 of         + of       ADP   IN  prep  1 - -           -   I-ARG0 -             of/Br
466 3 people     + people   NOUN  NNS pobj  2 - -           -   I-ARG0 people.n.01   people/Cc..p
466 4 have       + have     AUX   VBP aux   5 - have.01     B-V -      -             have/Mv.<
466 5 complained - complain VERB  VBN ROOT  5 - complain.01 -   B-V    complain.v.01 complained/Pd.s:0:0.<pf:012
466 6 .          - .        PUNCT .   punct 5 - -           -   -      -             -

# sent_i = 467
# sent = The number of letters we receive is increasing.
# hyperedge = ((is/Mv.< increasing/Pd.s:1:1.|pg:01234) (+/Jr.ma (of/Br (the/Md.< number/Cc..s) letters/Cc..p) (receive/P.-s:10:10.|f:01234 (of/Br (the/Md.< number/Cc..s) letters/Cc..p) we/Ci)))
# hyperedge builder = ((467.6/Mv.< 467.7/Pd.s:1:1.|pg:01234) (+/Jr.ma (467.2/Br (467.0/Md.< 467.1/Cc..s) 467.3/Cc..p) (467.5/P.-s:10:10.|f:01234 (467.2/Br (467.0/Md.< 467.1/Cc..s) 467.3/Cc..p) 467.4/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
467 0 The        + the      DET   DT  det   1 - -           B-ARG1 -   B-ARG1 -             the/Md.<
467 1 number     + number   NOUN  NN  nsubj 7 - -           I-ARG1 -   I-ARG1 number.n.01   number/Cc..s
467 2 of         + of       ADP   IN  prep  1 - -           I-ARG1 -   I-ARG1 -             of/Br
467 3 letters    + letter   NOUN  NNS pobj  2 - -           I-ARG1 -   I-ARG1 letter.n.01   letters/Cc..p
467 4 we         + we       PRON  PRP nsubj 5 - -           B-ARG0 -   I-ARG1 -             we/Ci
467 5 receive    + receive  VERB  VBP relcl 1 - receive.01  B-V    -   I-ARG1 receive.v.01  receive/P.-s:10:10.|f:01234
467 6 is         + be       AUX   VBZ aux   7 - be.03       -      B-V -      -             is/Mv.<
467 7 increasing - increase VERB  VBG ROOT  7 - increase.01 -      -   B-V    increase.v.01 increasing/Pd.s:1:1.|pg:01234
467 8 .          - .        PUNCT .   punct 7 - -           -      -   -      -             -

# sent_i = 468
# sent = Every pupil has to take a test.
# hyperedge = (has/Pd.sr:--:--.|f--3s (every/Md.< pupil/Cc..s) ((to/Mi.< take/P.-o:1k:!!.-i) (every/Md.< pupil/Cc..s) (a/Md.< test/Cc..s)))
# hyperedge builder = (468.2/Pd.sr:--:--.|f--3s (468.0/Md.< 468.1/Cc..s) ((468.3/Mi.< 468.4/P.-o:1k:!!.-i) (468.0/Md.< 468.1/Cc..s) (468.5/Md.< 468.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
468 0 Every + every DET   DT  det   1 - -       -   -          B-ARG1     every.s.01   every/Md.<
468 1 pupil + pupil NOUN  NN  nsubj 2 - -       -   -          I-ARG1     student.n.01 pupil/Cc..s
468 2 has   + have  VERB  VBZ ROOT  2 - have.02 B-V -          B-ARGM-MOD -            has/Pd.sr:--:--.|f--3s
468 3 to    + to    PART  TO  aux   4 - -       -   -          -          -            to/Mi.<
468 4 take  + take  VERB  VB  xcomp 2 - take.LV -   B-V        B-ARGM-LVB take.v.15    take/P.-o:1k:!!.-i
468 5 a     + a     DET   DT  det   6 - -       -   -          -          -            a/Md.<
468 6 test  - test  NOUN  NN  dobj  4 - test.01 -   B-ARGM-PRR B-V        test.n.02    test/Cc..s
468 7 .     - .     PUNCT .   punct 2 - -       -   -          -          -            -

# sent_i = 469
# sent = Someone was waiting at the door.
# hyperedge = ((was/Mv.< waiting/Pd.sx:1l:1l.|pg:12m) someone/Ci..s (at/Tl (the/Md.< door/Cc..s)))
# hyperedge builder = ((469.1/Mv.< 469.2/Pd.sx:1l:1l.|pg:12m) 469.0/Ci..s (469.3/Tl (469.4/Md.< 469.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
469 0 Someone + someone PRON  NN  nsubj 2 - -       -   B-ARG1     person.n.01  someone/Ci..s
469 1 was     + be      AUX   VBD aux   2 - be.03   B-V -          -            was/Mv.<
469 2 waiting + wait    VERB  VBG ROOT  2 - wait.01 -   B-V        wait.v.01    waiting/Pd.sx:1l:1l.|pg:12m
469 3 at      + at      ADP   IN  prep  2 - -       -   B-ARGM-LOC -            at/Tl
469 4 the     + the     DET   DT  det   5 - -       -   I-ARGM-LOC -            the/Md.<
469 5 door    - door    NOUN  NN  pobj  3 - -       -   I-ARGM-LOC doorway.n.01 door/Cc..s
469 6 .       - .       PUNCT .   punct 2 - -       -   -          -            -

# sent_i = 470
# sent = Nothing ever happens in this place.
# hyperedge = (happens/Pd.s?x:1tl:1tl.|f--3s:12 nothing/Ci..s ever/M (in/Tl (this/Md.< place/Cc..s)))
# hyperedge builder = (470.2/Pd.s?x:1tl:1tl.|f--3s:12 470.0/Ci..s 470.1/M (470.3/Tl (470.4/Md.< 470.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
470 0 Nothing + nothing PRON  NN  nsubj  2 - -         B-ARG1     nothing.n.01 nothing/Ci..s
470 1 ever    + ever    ADV   RB  advmod 2 - -         B-ARGM-TMP ever.r.01    ever/M
470 2 happens + happen  VERB  VBZ ROOT   2 - happen.01 B-V        happen.v.01  happens/Pd.s?x:1tl:1tl.|f--3s:12
470 3 in      + in      ADP   IN  prep   2 - -         B-ARGM-LOC -            in/Tl
470 4 this    + this    DET   DT  det    5 - -         I-ARGM-LOC -            this/Md.<
470 5 place   - place   NOUN  NN  pobj   3 - -         I-ARGM-LOC place.n.02   place/Cc..s
470 6 .       - .       PUNCT .   punct  2 - -         -          -            -

# sent_i = 471
# sent = All the pupils have to take a test.
# hyperedge = (have/Pd.sr:--:--.|f (all/M.< (the/Md.< pupils/Cc..p)) ((to/Mi.< take/P.-o:1k:!!.-i) (all/M.< (the/Md.< pupils/Cc..p)) (a/Md.< test/Cc..s)))
# hyperedge builder = (471.3/Pd.sr:--:--.|f (471.0/M.< (471.1/Md.< 471.2/Cc..p)) ((471.4/Mi.< 471.5/P.-o:1k:!!.-i) (471.0/M.< (471.1/Md.< 471.2/Cc..p)) (471.6/Md.< 471.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
471 0 All    + all   DET   PDT predet 2 - -       -   -          B-ARG1     all.a.01     all/M.<
471 1 the    + the   DET   DT  det    2 - -       -   -          I-ARG1     -            the/Md.<
471 2 pupils + pupil NOUN  NNS nsubj  3 - -       -   -          I-ARG1     student.n.01 pupils/Cc..p
471 3 have   + have  VERB  VBP ROOT   3 - have.02 B-V -          B-ARGM-MOD -            have/Pd.sr:--:--.|f
471 4 to     + to    PART  TO  aux    5 - -       -   -          -          -            to/Mi.<
471 5 take   + take  VERB  VB  xcomp  3 - take.LV -   B-V        B-ARGM-LVB take.v.15    take/P.-o:1k:!!.-i
471 6 a      + a     DET   DT  det    7 - -       -   -          -          -            a/Md.<
471 7 test   - test  NOUN  NN  dobj   5 - test.01 -   B-ARGM-PRR B-V        test.n.02    test/Cc..s
471 8 .      - .     PUNCT .   punct  3 - -       -   -          -          -            -

# sent_i = 472
# sent = Some people were waiting at the door.
# hyperedge = ((were/Mv.< waiting/Pd.sx:1l:1l.|pg:12m) (some/Md.< people/Cc..p) (at/Tl (the/Md.< door/Cc..s)))
# hyperedge builder = ((472.2/Mv.< 472.3/Pd.sx:1l:1l.|pg:12m) (472.0/Md.< 472.1/Cc..p) (472.4/Tl (472.5/Md.< 472.6/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
472 0 Some    + some   DET   DT  det   1 - -       -   B-ARG1     some.a.01    some/Md.<
472 1 people  + people NOUN  NNS nsubj 3 - -       -   I-ARG1     people.n.01  people/Cc..p
472 2 were    + be     AUX   VBD aux   3 - be.03   B-V -          -            were/Mv.<
472 3 waiting + wait   VERB  VBG ROOT  3 - wait.01 -   B-V        wait.v.01    waiting/Pd.sx:1l:1l.|pg:12m
472 4 at      + at     ADP   IN  prep  3 - -       -   B-ARGM-LOC -            at/Tl
472 5 the     + the    DET   DT  det   6 - -       -   I-ARGM-LOC -            the/Md.<
472 6 door    - door   NOUN  NN  pobj  4 - -       -   I-ARGM-LOC doorway.n.01 door/Cc..s
472 7 .       - .      PUNCT .   punct 3 - -       -   -          -            -

# sent_i = 473
# sent = I felt I could afford a bigger car, and the one I'd got was on its last legs, really.
# hyperedge = (and/J (felt/Pd.sr:01:01.<f:012 i/Ci ((could/Mm.< afford/P.so:01:01.-i:01) i/Ci (a/Md.< (bigger/Mc.< car/Cc..s)))) (was/Pd.sx?:12s:1hs.<f:12 (+/Jr.ma (the/Md.< one/Cc..s) (('d/Mm.< got/P.-s:10:10.<pf:01) (the/Md.< one/Cc..s) i/Ci)) (on/T ((+/Jc.rm.rc its/Mp (the/Md.< one/Cc..s)) (last/Ma.< legs/Cc..p))) really/M))
# hyperedge builder = (473.9/J (473.1/Pd.sr:01:01.<f:012 473.0/Ci ((473.3/Mm.< 473.4/P.so:01:01.-i:01) 473.2/Ci (473.5/Md.< (473.6/Mc.< 473.7/Cc..s)))) (473.15/Pd.sx?:12s:1hs.<f:12 (+/Jr.ma (473.10/Md.< 473.11/Cc..s) ((473.13/Mm.< 473.14/P.-s:10:10.<pf:01) (473.10/Md.< 473.11/Cc..s) 473.12/Ci)) (473.16/T ((+/Jc.rm.rc 473.17/Mp (473.10/Md.< 473.11/Cc..s)) (473.18/Ma.< 473.19/Cc..p))) 473.21/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 coref2 synset atoms
473 0  I      + I      PRON  PRP  nsubj  1  - -         B-ARG0 -   -          -   -      -          B-MAIN0 -       -             i/Ci
473 1  felt   + feel   VERB  VBD  ROOT   1  - feel.02   B-V    -   -          -   -      -          -       -       find.v.05     felt/Pd.sr:01:01.<f:012
473 2  I      + I      PRON  PRP  nsubj  4  - -         B-ARG1 -   B-ARG0     -   -      -          B-REF0  -       -             i/Ci
473 3  could  + could  AUX   MD   aux    4  - -         I-ARG1 B-V B-ARGM-MOD -   -      -          -       -       -             could/Mm.<
473 4  afford + afford VERB  VB   ccomp  1  - afford.01 I-ARG1 -   B-V        -   -      -          -       -       afford.v.01   afford/P.so:01:01.-i:01
473 5  a      + a      DET   DT   det    7  - -         I-ARG1 -   B-ARG1     -   -      -          -       -       -             a/Md.<
473 6  bigger + big    ADJ   JJR  amod   7  - -         I-ARG1 -   I-ARG1     -   -      -          -       -       large.a.01    bigger/Mc.<
473 7  car    - car    NOUN  NN   dobj   4  - -         I-ARG1 -   I-ARG1     -   -      -          -       -       car.n.01      car/Cc..s
473 8  ,      + ,      PUNCT ,    punct  1  - -         -      -   -          -   -      -          -       -       -             -
473 9  and    + and    CCONJ CC   cc     1  - -         -      -   -          -   -      -          -       -       -             and/J
473 10 the    + the    DET   DT   det    11 - -         -      -   -          -   B-ARG1 B-ARG1     -       B-MAIN1 -             the/Md.<
473 11 one    + one    NOUN  NN   nsubj  15 - -         -      -   -          -   I-ARG1 I-ARG1     -       I-MAIN1 one.n.02      one/Cc..s
473 12 I      - I      PRON  PRP  nsubj  14 - -         -      -   -          -   B-ARG0 I-ARG1     B-REF0  -       -             i/Ci
473 13 'd     + 'd     AUX   MD   aux    14 - -         -      -   -          B-V -      I-ARG1     -       -       -             'd/Mm.<
473 14 got    + get    VERB  VBN  relcl  11 - get.02    -      -   -          -   B-V    I-ARG1     -       -       get.v.01      got/P.-s:10:10.<pf:01
473 15 was    + be     VERB  VBD  conj   1  - be.01     -      -   -          -   -      B-V        -       -       be.v.01       was/Pd.sx?:12s:1hs.<f:12
473 16 on     + on     ADP   IN   prep   15 - -         -      -   -          -   -      B-ARG2     -       -       fail.v.04     on/T
473 17 its    + its    PRON  PRP$ poss   19 - -         -      -   -          -   -      I-ARG2     -       B-REF1  fail.v.04     its/Mp
473 18 last   + last   ADJ   JJ   amod   19 - -         -      -   -          -   -      I-ARG2     -       -       fail.v.04     last/Ma.<
473 19 legs   - leg    NOUN  NNS  pobj   16 - -         -      -   -          -   -      I-ARG2     -       -       fail.v.04     legs/Cc..p
473 20 ,      + ,      PUNCT ,    punct  15 - -         -      -   -          -   -      -          -       -       -             -
473 21 really - really ADV   RB   advmod 15 - -         -      -   -          -   -      B-ARGM-DIS -       -       in_truth.r.01 really/M
473 22 .      - .      PUNCT .    punct  15 - -         -      -   -          -   -      -          -       -       -             -

# sent_i = 474
# sent = And what other stamps do you like besides Polish ones?
# hyperedge = (and/J ((do/Mv.< like/P?.osx:101:101.-i:01) (what/Mw.< (other/Ma.< stamps/Cc..p)) you/Ci (besides/T (polish/Ma.<..n ones/Cc..p))))
# hyperedge builder = (474.0/J ((474.4/Mv.< 474.6/P?.osx:101:101.-i:01) (474.1/Mw.< (474.2/Ma.< 474.3/Cc..p)) 474.5/Ci (474.7/T (474.8/Ma.<..n 474.9/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
474 0  And     + and     CCONJ CC  cc    6 -      -       -   -        -            and/J
474 1  what    + what    DET   WDT det   3 -      -       -   B-ARG1   -            what/Mw.<
474 2  other   + other   ADJ   JJ  amod  3 -      -       -   I-ARG1   other.a.01   other/Ma.<
474 3  stamps  + stamp   NOUN  NNS dobj  6 -      -       -   I-ARG1   postage.n.02 stamps/Cc..p
474 4  do      + do      AUX   VBP aux   6 -      do.01   B-V -        -            do/Mv.<
474 5  you     + you     PRON  PRP nsubj 6 -      -       -   B-ARG0   -            you/Ci
474 6  like    + like    VERB  VB  ROOT  6 -      like.01 -   B-V      like.v.03    like/P?.osx:101:101.-i:01
474 7  besides + besides SCONJ IN  prep  6 -      -       -   B-C-ARG1 -            besides/T
474 8  Polish  + polish  ADJ   JJ  amod  9 B-NORP -       -   I-C-ARG1 polish.a.01  polish/Ma.<..n
474 9  ones    - one     NOUN  NNS pobj  7 -      -       -   I-C-ARG1 one.n.02     ones/Cc..p
474 10 ?       - ?       PUNCT .   punct 6 -      -       -   -        -            -

# sent_i = 475
# sent = Sure enough, the police car stopped us.
# hyperedge = (stopped/Pd.?so:s01:s01.<f:012 (sure/M.< enough/M) (the/Md.< (+/B.am police/Cc.<.s car/Cc..s)) us/Ci)
# hyperedge builder = (475.6/Pd.?so:s01:s01.<f:012 (475.0/M.< 475.1/M) (475.3/Md.< (+/B.am 475.4/Cc.<.s 475.5/Cc..s)) 475.7/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
475 0 Sure    + sure   ADV   RB  advmod   1 - -       B-ARGM-DIS sure_enough.r.01 sure/M.<
475 1 enough  - enough ADV   RB  advmod   6 - -       I-ARGM-DIS sure_enough.r.01 enough/M
475 2 ,       + ,      PUNCT ,   punct    6 - -       -          -                -
475 3 the     + the    DET   DT  det      5 - -       B-ARG0     -                the/Md.<
475 4 police  + police NOUN  NN  compound 5 - -       I-ARG0     cruiser.n.01     police/Cc.<.s
475 5 car     + car    NOUN  NN  nsubj    6 - -       I-ARG0     cruiser.n.01     car/Cc..s
475 6 stopped + stop   VERB  VBD ROOT     6 - stop.01 B-V        stop.v.05        stopped/Pd.?so:s01:s01.<f:012
475 7 us      - we     PRON  PRP dobj     6 - -       B-ARG1     -                us/Ci
475 8 .       - .      PUNCT .   punct    6 - -       -          -                -

# sent_i = 476
# sent = We've just booked our tickets.
# hyperedge = (('ve/Mv.< booked/Pd.s?o:0r1:0r1.<pf:012345) we/Ci just/M ((+/Jc.rm.rr our/Mp we/Ci) tickets/Cc..p))
# hyperedge builder = ((476.1/Mv.< 476.3/Pd.s?o:0r1:0r1.<pf:012345) 476.0/Ci 476.2/M ((+/Jc.rm.rr 476.4/Mp 476.0/Ci) 476.5/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
476 0 We      - we     PRON  PRP  nsubj  3 - -       -   B-ARG0     B-MAIN0 -            we/Ci
476 1 've     + have   AUX   VB   aux    3 - have.01 B-V -          -       -            've/Mv.<
476 2 just    + just   ADV   RB   advmod 3 - -       -   B-ARGM-ADV -       just.r.03    just/M
476 3 booked  + book   VERB  VBN  ROOT   3 - book.03 -   B-V        -       reserve.v.04 booked/Pd.s?o:0r1:0r1.<pf:012345
476 4 our     + our    PRON  PRP$ poss   5 - -       -   B-ARG1     B-REF0  -            our/Mp
476 5 tickets - ticket NOUN  NNS  dobj   3 - -       -   I-ARG1     -       ticket.n.01  tickets/Cc..p
476 6 .       - .      PUNCT .    punct  3 - -       -   -          -       -            -

# sent_i = 477
# sent = It doesn't often rain in the Sahara.
# hyperedge = ((does/Mv.< (n't/Mn.< rain/Pd.s?x:-tl:-tl.-i:012)) it/Ci often/M (in/Tl (the/Md.< sahara/Cp..s.l)))
# hyperedge builder = ((477.1/Mv.< (477.2/Mn.< 477.4/Pd.s?x:-tl:-tl.-i:012)) 477.0/Ci 477.3/M (477.5/Tl (477.6/Md.< 477.7/Cp..s.l)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
477 0 It     + it     PRON  PRP nsubj  4 -     -       -   -          -               it/Ci
477 1 does   - do     AUX   VBZ aux    4 -     do.01   B-V -          -               does/Mv.<
477 2 n't    + not    PART  RB  neg    4 -     -       -   B-ARGM-NEG not.r.01        n't/Mn.<
477 3 often  + often  ADV   RB  advmod 4 -     -       -   B-ARGM-TMP frequently.r.01 often/M
477 4 rain   + rain   VERB  VB  ROOT   4 -     rain.01 -   B-V        rain.v.01       rain/Pd.s?x:-tl:-tl.-i:012
477 5 in     + in     ADP   IN  prep   4 -     -       -   B-ARGM-LOC -               in/Tl
477 6 the    + the    DET   DT  det    7 -     -       -   I-ARGM-LOC -               the/Md.<
477 7 Sahara - Sahara PROPN NNP pobj   5 B-LOC -       -   I-ARGM-LOC sahara.n.01     sahara/Cp..s.l
477 8 .      - .      PUNCT .   punct  4 -     -       -   -          -               -

# sent_i = 478
# sent = The news will be soon out of date.
# hyperedge = ((will/Mm.< be/Pd.s?x:1t2:1th.-i:12) (the/Md.< news/Cc..s) soon/M ((:/J out/T of/T) date/Cc..s))
# hyperedge builder = ((478.2/Mm.< 478.3/Pd.s?x:1t2:1th.-i:12) (478.0/Md.< 478.1/Cc..s) 478.4/M ((:/J 478.5/T 478.6/T) 478.7/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
478 0 The  + the  DET   DT det    1 - -     -   B-ARG1     -             the/Md.<
478 1 news + news NOUN  NN nsubj  3 - -     -   I-ARG1     news.n.01     news/Cc..s
478 2 will + will AUX   MD aux    3 - -     B-V B-ARGM-MOD -             will/Mm.<
478 3 be   + be   VERB  VB ROOT   3 - be.01 -   B-V        be.v.01       be/Pd.s?x:1t2:1th.-i:12
478 4 soon + soon ADV   RB advmod 3 - -     -   B-ARGM-TMP soon.r.01     soon/M
478 5 out  + out  SCONJ IN prep   3 - -     -   B-ARG2     outdated.s.01 out/T
478 6 of   + of   ADP   IN prep   5 - -     -   I-ARG2     outdated.s.01 of/T
478 7 date - date NOUN  NN pobj   6 - -     -   I-ARG2     outdated.s.01 date/Cc..s
478 8 .    - .    PUNCT .  punct  3 - -     -   -          -             -

# sent_i = 479
# sent = You were probably right.
# hyperedge = (were/Pd.s?c:1r2:1rh.<f:12 you/Ci probably/M right/Ca)
# hyperedge builder = (479.1/Pd.s?c:1r2:1rh.<f:12 479.0/Ci 479.2/M 479.3/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
479 0 You      + you      PRON  PRP nsubj  1 - -     B-ARG1     -             you/Ci
479 1 were     + be       AUX   VBD ROOT   1 - be.01 B-V        be.v.01       were/Pd.s?c:1r2:1rh.<f:12
479 2 probably + probably ADV   RB  advmod 1 - -     B-ARGM-ADV probably.r.01 probably/M
479 3 right    - right    ADJ   JJ  acomp  1 - -     B-ARG2     right.a.05    right/Ca
479 4 .        - .        PUNCT .   punct  1 - -     -          -             -

# sent_i = 480
# sent = I always get the worst jobs.
# hyperedge = (get/Pd.s?o:0t1:0t1.|f:01234 i/Ci always/M (the/Md.< (worst/Ms.< jobs/Cc..p)))
# hyperedge builder = (480.2/Pd.s?o:0t1:0t1.|f:01234 480.0/Ci 480.1/M (480.3/Md.< (480.4/Ms.< 480.5/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
480 0 I      + I      PRON  PRP nsubj  2 - -      B-ARG0     -           i/Ci
480 1 always + always ADV   RB  advmod 2 - -      B-ARGM-TMP always.r.01 always/M
480 2 get    + get    VERB  VBP ROOT   2 - get.01 B-V        get.v.01    get/Pd.s?o:0t1:0t1.|f:01234
480 3 the    + the    DET   DT  det    5 - -      B-ARG1     -           the/Md.<
480 4 worst  + bad    ADJ   JJS amod   5 - -      I-ARG1     bad.a.01    worst/Ms.<
480 5 jobs   - job    NOUN  NNS dobj   2 - -      I-ARG1     job.n.02    jobs/Cc..p
480 6 .      - .      PUNCT .   punct  2 - -      -          -           -

# sent_i = 481
# sent = The bus doesn't usually stop here.
# hyperedge = ((does/Mv.< (n't/Mn.< stop/Pd.s??:1rl:1rl.-i:012)) (the/Md.< bus/Cc..s) usually/M here/M)
# hyperedge builder = ((481.2/Mv.< (481.3/Mn.< 481.5/Pd.s??:1rl:1rl.-i:012)) (481.0/Md.< 481.1/Cc..s) 481.4/M 481.6/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
481 0 The     + the     DET   DT  det    1 - -       -   B-ARG1     -             the/Md.<
481 1 bus     + bus     NOUN  NN  nsubj  5 - -       -   I-ARG1     bus.n.01      bus/Cc..s
481 2 does    - do      AUX   VBZ aux    5 - do.01   B-V -          -             does/Mv.<
481 3 n't     + not     PART  RB  neg    5 - -       -   B-ARGM-NEG not.r.01      n't/Mn.<
481 4 usually + usually ADV   RB  advmod 5 - -       -   B-ARGM-ADV normally.r.01 usually/M
481 5 stop    + stop    VERB  VB  ROOT   5 - stop.01 -   B-V        stop.v.01     stop/Pd.s??:1rl:1rl.-i:012
481 6 here    - here    ADV   RB  advmod 5 - -       -   B-ARGM-LOC here.r.01     here/M
481 7 .       - .       PUNCT .   punct  5 - -       -   -          -             -

# sent_i = 482
# sent = I hadn't had a drink for days.
# hyperedge = ((had/Mv.< (n't/Mn.< had/Pd.sox:0kt:!!!.<pf)) i/Ci (a/Md.< drink/Cc..s) (for/T days/Cc..p.d))
# hyperedge builder = ((482.1/Mv.< (482.2/Mn.< 482.3/Pd.sox:0kt:!!!.<pf)) 482.0/Ci (482.4/Md.< 482.5/Cc..s) (482.6/T 482.7/Cc..p.d))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
482 0 I     + I     PRON  PRP nsubj 3 -      -        -   -          B-ARG0     -            i/Ci
482 1 had   - have  AUX   VBD aux   3 -      have.LV  B-V -          -          -            had/Mv.<
482 2 n't   + not   PART  RB  neg   3 -      -        -   -          B-ARGM-NEG not.r.01     n't/Mn.<
482 3 had   + have  VERB  VBN ROOT  3 -      have.LV  -   B-V        B-ARGM-LVB consume.v.02 had/Pd.sox:0kt:!!!.<pf
482 4 a     + a     DET   DT  det   5 -      -        -   -          -          -            a/Md.<
482 5 drink + drink NOUN  NN  dobj  3 -      drink.01 -   B-ARGM-PRR B-V        drink.n.01   drink/Cc..s
482 6 for   + for   ADP   IN  prep  3 -      -        -   -          B-ARGM-TMP -            for/T
482 7 days  - day   NOUN  NNS pobj  6 B-DATE -        -   -          I-ARGM-TMP day.n.01     days/Cc..p.d
482 8 .     - .     PUNCT .   punct 3 -      -        -   -          -          -            -

# sent_i = 483
# sent = There was a police car in front of us.
# hyperedge = (was/Pd.ecx:-1l:-1l.<f:1 there/Me (a/Md.< (+/B.am police/Cc.<.s car/Cc..s)) (in/Tl (of/Br front/Cc..s us/Ci)))
# hyperedge builder = (483.1/Pd.ecx:-1l:-1l.<f:1 483.0/Me (483.2/Md.< (+/B.am 483.3/Cc.<.s 483.4/Cc..s)) (483.5/Tl (483.7/Br 483.6/Cc..s 483.8/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
483 0 There  + there  PRON  EX  expl     1 - -     -          -            there/Me
483 1 was    + be     AUX   VBD ROOT     1 - be.02 B-V        be.v.01      was/Pd.ecx:-1l:-1l.<f:1
483 2 a      + a      DET   DT  det      4 - -     B-ARG1     -            a/Md.<
483 3 police + police NOUN  NN  compound 4 - -     I-ARG1     cruiser.n.01 police/Cc.<.s
483 4 car    + car    NOUN  NN  attr     1 - -     I-ARG1     cruiser.n.01 car/Cc..s
483 5 in     + in     ADP   IN  prep     1 - -     B-ARGM-LOC ahead.r.01   in/Tl
483 6 front  + front  NOUN  NN  pobj     5 - -     I-ARGM-LOC ahead.r.01   front/Cc..s
483 7 of     + of     ADP   IN  prep     6 - -     I-ARGM-LOC -            of/Br
483 8 us     - we     PRON  PRP pobj     7 - -     I-ARGM-LOC -            us/Ci
483 9 .      - .      PUNCT .   punct    1 - -     -          -            -

# sent_i = 484
# sent = Barbara doesn't work at the town hall any more.
# hyperedge = ((does/Mv.< (n't/Mn.< work/Pd.sx?:0lt:0lt.-i:012345)) barbara/Cp..s.p (at/Tl (the/Md.< (+/B.am town/Cc.<.s hall/Cc..s))) (any/M.< more/M=))
# hyperedge builder = ((484.1/Mv.< (484.2/Mn.< 484.3/Pd.sx?:0lt:0lt.-i:012345)) 484.0/Cp..s.p (484.4/Tl (484.5/Md.< (+/B.am 484.6/Cc.<.s 484.7/Cc..s))) (484.8/M.< 484.9/M=))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
484 0  Barbara + Barbara PROPN NNP nsubj    3 B-PERSON -       -   B-ARG0     -              barbara/Cp..s.p
484 1  does    - do      AUX   VBZ aux      3 -        do.01   B-V -          -              does/Mv.<
484 2  n't     + not     PART  RB  neg      3 -        -       -   B-ARGM-NEG not.r.01       n't/Mn.<
484 3  work    + work    VERB  VB  ROOT     3 -        work.01 -   B-V        work.v.02      work/Pd.sx?:0lt:0lt.-i:012345
484 4  at      + at      ADP   IN  prep     3 -        -       -   B-ARGM-LOC -              at/Tl
484 5  the     + the     DET   DT  det      7 -        -       -   I-ARGM-LOC -              the/Md.<
484 6  town    + town    NOUN  NN  compound 7 -        -       -   I-ARGM-LOC town_hall.n.01 town/Cc.<.s
484 7  hall    + hall    NOUN  NN  pobj     4 -        -       -   I-ARGM-LOC town_hall.n.01 hall/Cc..s
484 8  any     + any     DET   DT  advmod   9 -        -       -   B-ARGM-TMP anymore.r.01   any/M.<
484 9  more    - more    ADV   RBR advmod   3 -        -       -   I-ARGM-TMP anymore.r.01   more/M=
484 10 .       - .       PUNCT .   punct    3 -        -       -   -          -              -

# sent_i = 485
# sent = Steve didn't react quickly enough.
# hyperedge = ((did/Mv.< (n't/Mn.< react/Pd.s?:0m:1m.-i:012)) steve/Cp..s.p (quickly/M.< enough/M))
# hyperedge builder = ((485.1/Mv.< (485.2/Mn.< 485.3/Pd.s?:0m:1m.-i:012)) 485.0/Cp..s.p (485.4/M.< 485.5/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
485 0 Steve   + Steve   PROPN NNP nsubj  3 B-PERSON -        -   B-ARG0     -             steve/Cp..s.p
485 1 did     - do      AUX   VBD aux    3 -        do.01    B-V -          -             did/Mv.<
485 2 n't     + not     PART  RB  neg    3 -        -        -   B-ARGM-NEG not.r.01      n't/Mn.<
485 3 react   + react   VERB  VB  ROOT   3 -        react.01 -   B-V        react.v.01    react/Pd.s?:0m:1m.-i:012
485 4 quickly + quickly ADV   RB  advmod 5 -        -        -   B-ARGM-MNR promptly.r.01 quickly/M.<
485 5 enough  - enough  ADV   RB  advmod 3 -        -        -   I-ARGM-MNR enough.r.01   enough/M
485 6 .       - .       PUNCT .   punct  3 -        -        -   -          -             -

# sent_i = 486
# sent = It's very cold.
# hyperedge = ('s/Pd.sc:12:1h.|f--3s:12 it/Ci (very/M.< cold/Ca))
# hyperedge builder = (486.1/Pd.sc:12:1h.|f--3s:12 486.0/Ci (486.2/M.< 486.3/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
486 0 It   - it   PRON  PRP nsubj  1 - -     B-ARG1 -         it/Ci
486 1 's   + be   AUX   VBZ ROOT   1 - be.01 B-V    be.v.01   's/Pd.sc:12:1h.|f--3s:12
486 2 very + very ADV   RB  advmod 3 - -     B-ARG2 very.r.01 very/M.<
486 3 cold - cold ADJ   JJ  acomp  1 - -     I-ARG2 cold.a.01 cold/Ca
486 4 .    - .    PUNCT .   punct  1 - -     -      -         -

# sent_i = 487
# sent = You're absolutely right.
# hyperedge = ('re/Pd.sc:12:1h.|f:12 you/Ci (absolutely/M.< right/Ca))
# hyperedge builder = (487.1/Pd.sc:12:1h.|f:12 487.0/Ci (487.2/M.< 487.3/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
487 0 You        - you        PRON  PRP nsubj  1 - -     B-ARG1 -               you/Ci
487 1 're        + be         VERB  VBP ROOT   1 - be.01 B-V    be.v.01         're/Pd.sc:12:1h.|f:12
487 2 absolutely + absolutely ADV   RB  advmod 3 - -     B-ARG2 absolutely.r.01 absolutely/M.<
487 3 right      - right      ADJ   JJ  acomp  1 - -     I-ARG2 right.a.05      right/Ca
487 4 .          - .          PUNCT .   punct  1 - -     -      -               -

# sent_i = 488
# sent = It wasn't at all interesting.
# hyperedge = ((n't/Mn.> was/Pd.s?c:1e2:1eh.<f:12) it/Ci (at/M.< all/M) interesting/Ca)
# hyperedge builder = ((488.2/Mn.> 488.1/Pd.s?c:1e2:1eh.<f:12) 488.0/Ci (488.3/M.< 488.4/M) 488.5/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
488 0 It          + it          PRON  PRP nsubj  1 - -     B-ARG1     -                it/Ci
488 1 was         - be          AUX   VBD ROOT   1 - be.01 B-V        be.v.01          was/Pd.s?c:1e2:1eh.<f:12
488 2 n't         + not         PART  RB  neg    1 - -     B-ARGM-NEG not.r.01         n't/Mn.>
488 3 at          + at          ADP   IN  advmod 4 - -     B-ARGM-EXT at_all.r.01      at/M.<
488 4 all         + all         ADV   RB  advmod 1 - -     I-ARGM-EXT at_all.r.01      all/M
488 5 interesting - interesting ADJ   JJ  acomp  1 - -     B-ARG2     interesting.a.01 interesting/Ca
488 6 .           - .           PUNCT .   punct  1 - -     -          -                -

# sent_i = 489
# sent = I come here quite often.
# hyperedge = (come/Pd.s??:14t:1gt.|f:1234 i/Ci here/M (quite/M.< often/M))
# hyperedge builder = (489.1/Pd.s??:14t:1gt.|f:1234 489.0/Ci 489.2/M (489.3/M.< 489.4/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
489 0 I     + I     PRON  PRP nsubj  1 - -       B-ARG1     -               i/Ci
489 1 come  + come  VERB  VBP ROOT   1 - come.01 B-V        arrive.v.01     come/Pd.s??:14t:1gt.|f:1234
489 2 here  + here  ADV   RB  advmod 1 - -       B-ARG4     here.r.01       here/M
489 3 quite + quite ADV   RB  advmod 4 - -       B-ARGM-TMP quite.r.01      quite/M.<
489 4 often - often ADV   RB  advmod 1 - -       I-ARGM-TMP frequently.r.01 often/M
489 5 .     - .     PUNCT .   punct  1 - -       -          -               -

# sent_i = 490
# sent = I saw her fairly recently.
# hyperedge = (saw/Pd.so?:01t:01t.<f:012 i/Ci her/Ci (fairly/M.< recently/M))
# hyperedge builder = (490.1/Pd.so?:01t:01t.<f:012 490.0/Ci 490.2/Ci (490.3/M.< 490.4/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
490 0 I        + I        PRON  PRP nsubj  1 - -      B-ARG0     -               i/Ci
490 1 saw      + see      VERB  VBD ROOT   1 - see.01 B-V        meet.v.01       saw/Pd.so?:01t:01t.<f:012
490 2 her      + she      PRON  PRP dobj   1 - -      B-ARG1     -               her/Ci
490 3 fairly   + fairly   ADV   RB  advmod 4 - -      B-ARGM-TMP reasonably.r.01 fairly/M.<
490 4 recently - recently ADV   RB  advmod 1 - -      I-ARGM-TMP recently.r.01   recently/M
490 5 .        - .        PUNCT .   punct  1 - -      -          -               -

# sent_i = 491
# sent = We're a bit busy today.
# hyperedge = ('re/Pd.scx:12t:1ht.|f:12 we/Ci (+/B.am (a/Md.< bit/Cc.<.s) busy/Ca) today/Cc..s.d)
# hyperedge builder = (491.1/Pd.scx:12t:1ht.|f:12 491.0/Ci (+/B.am (491.2/Md.< 491.3/Cc.<.s) 491.4/Ca) 491.5/Cc..s.d)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
491 0 We    - we    PRON  PRP nsubj    1 -      -     B-ARG1     -          we/Ci
491 1 're   + be    VERB  VBP ROOT     1 -      be.01 B-V        be.v.01    're/Pd.scx:12t:1ht.|f:12
491 2 a     + a     DET   DT  det      3 -      -     B-ARG2     a_bit.r.01 a/Md.<
491 3 bit   + bit   NOUN  NN  npadvmod 4 -      -     I-ARG2     a_bit.r.01 bit/Cc.<.s
491 4 busy  + busy  ADJ   JJ  acomp    1 -      -     I-ARG2     busy.a.01  busy/Ca
491 5 today - today NOUN  NN  npadvmod 1 B-DATE -     B-ARGM-TMP today.n.02 today/Cc..s.d
491 6 .     - .     PUNCT .   punct    1 -      -     -          -          -

# sent_i = 492
# sent = The offices are right in the centre of town.
# hyperedge = (are/Pd.sx:12:1h.|f:12 (the/Md.< offices/Cc..p) ((right/M.< in/T) (of/Br (the/Md.< centre/Cc..s) town/Cc..s)))
# hyperedge builder = (492.2/Pd.sx:12:1h.|f:12 (492.0/Md.< 492.1/Cc..p) ((492.3/M.< 492.4/T) (492.7/Br (492.5/Md.< 492.6/Cc..s) 492.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
492 0 The     + the    DET   DT  det    1 - -     B-ARG1 -           the/Md.<
492 1 offices + office NOUN  NNS nsubj  2 - -     I-ARG1 office.n.01 offices/Cc..p
492 2 are     + be     AUX   VBP ROOT   2 - be.01 B-V    be.v.03     are/Pd.sx:12:1h.|f:12
492 3 right   + right  ADV   RB  advmod 4 - -     B-ARG2 right.r.01  right/M.<
492 4 in      + in     ADP   IN  prep   2 - -     I-ARG2 -           in/T
492 5 the     + the    DET   DT  det    6 - -     I-ARG2 -           the/Md.<
492 6 centre  + centre NOUN  NN  pobj   4 - -     I-ARG2 center.n.01 centre/Cc..s
492 7 of      + of     ADP   IN  prep   6 - -     I-ARG2 -           of/Br
492 8 town    - town   NOUN  NN  pobj   7 - -     I-ARG2 town.n.01   town/Cc..s
492 9 .       - .      PUNCT .   punct  2 - -     -      -           -

# sent_i = 493
# sent = I'm not very up to date, I'm afraid.
# hyperedge = ('m/Pd.rsc:-12:-1h.|f:12 ((not/Mn.> 'm/P.sx:12:1h.|f:12) i/Ci ((:/J (very/M.< up/T) to/T) date/Cc..s)) i/Ci afraid/Ca)
# hyperedge builder = (493.9/Pd.rsc:-12:-1h.|f:12 ((493.2/Mn.> 493.1/P.sx:12:1h.|f:12) 493.0/Ci ((:/J (493.3/M.< 493.4/T) 493.5/T) 493.6/Cc..s)) 493.8/Ci 493.10/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
493 0  I      - I      PRON  PRP nsubj  1 - -     B-ARG1     -      B-MAIN0 -               i/Ci
493 1  'm     + be     VERB  VBP ccomp  9 - be.01 B-V        -      -       be.v.01         'm/P.sx:12:1h.|f:12
493 2  not    + not    PART  RB  neg    1 - -     B-ARGM-NEG -      -       not.r.01        not/Mn.>
493 3  very   + very   ADV   RB  advmod 4 - -     B-ARG2     -      -       very.r.01       very/M.<
493 4  up     + up     ADP   IN  prep   1 - -     I-ARG2     -      -       up-to-date.s.02 up/T
493 5  to     + to     ADP   IN  prep   4 - -     I-ARG2     -      -       up-to-date.s.02 to/T
493 6  date   - date   NOUN  NN  pobj   5 - -     I-ARG2     -      -       up-to-date.s.02 date/Cc..s
493 7  ,      + ,      PUNCT ,   punct  9 - -     -          -      -       -               -
493 8  I      - I      PRON  PRP nsubj  9 - -     -          B-ARG1 B-REF0  -               i/Ci
493 9  'm     + be     VERB  VBP ROOT   9 - be.01 -          B-V    -       be.v.01         'm/Pd.rsc:-12:-1h.|f:12
493 10 afraid - afraid ADJ   JJ  acomp  9 - -     -          B-ARG2 -       afraid.s.02     afraid/Ca
493 11 .      - .      PUNCT .   punct  9 - -     -          -      -       -               -

# sent_i = 494
# sent = There are two reasons.
# hyperedge = (are/Pd.ec:-1:-1.|f:1 there/Me (two/M#.<..c reasons/Cc..p))
# hyperedge builder = (494.1/Pd.ec:-1:-1.|f:1 494.0/Me (494.2/M#.<..c 494.3/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
494 0 There   + there  PRON  EX  expl   1 -          -     -      -           there/Me
494 1 are     + be     AUX   VBP ROOT   1 -          be.02 B-V    be.v.01     are/Pd.ec:-1:-1.|f:1
494 2 two     + two    NUM   CD  nummod 3 B-CARDINAL -     B-ARG1 two.s.01    two/M#.<..c
494 3 reasons - reason NOUN  NNS attr   1 -          -     I-ARG1 reason.n.01 reasons/Cc..p
494 4 .       - .      PUNCT .   punct  1 -          -     -      -           -

# sent_i = 495
# sent = Firstly, I'm not interested, and secondly, I haven't got the time.
# hyperedge = (and/J ((not/Mn.> 'm/Pd.?sc:s12:s1h.|f:12) firstly/M...# i/Ci interested/Ca) ((have/Mv.< (n't/Mn.< got/Pd.?so:s01:s01.<pf:01)) secondly/M...# i/Ci (the/Md.< time/Cc..s)))
# hyperedge builder = (495.7/J ((495.4/Mn.> 495.3/Pd.?sc:s12:s1h.|f:12) 495.0/M...# 495.2/Ci 495.5/Ca) ((495.11/Mv.< (495.12/Mn.< 495.13/Pd.?so:s01:s01.<pf:01)) 495.8/M...# 495.10/Ci (495.14/Md.< 495.15/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
495 0  Firstly    - firstly    ADV   RB  advmod 3  B-ORDINAL -       B-ARGM-DIS -   -          -       first.r.01      firstly/M...#
495 1  ,          + ,          PUNCT ,   punct  3  -         -       -          -   -          -       -               -
495 2  I          - I          PRON  PRP nsubj  3  -         -       B-ARG1     -   -          B-MAIN0 -               i/Ci
495 3  'm         + be         VERB  VBP ROOT   3  -         be.01   B-V        -   -          -       be.v.01         'm/Pd.?sc:s12:s1h.|f:12
495 4  not        + not        PART  RB  neg    3  -         -       B-ARGM-NEG -   -          -       not.r.01        not/Mn.>
495 5  interested - interested ADJ   JJ  acomp  3  -         -       B-ARG2     -   -          -       interested.a.01 interested/Ca
495 6  ,          + ,          PUNCT ,   punct  3  -         -       -          -   -          -       -               -
495 7  and        + and        CCONJ CC  cc     3  -         -       -          -   -          -       -               and/J
495 8  secondly   - secondly   ADV   RB  advmod 13 B-ORDINAL -       -          -   B-ARGM-DIS -       second.r.01     secondly/M...#
495 9  ,          + ,          PUNCT ,   punct  13 -         -       -          -   -          -       -               -
495 10 I          + I          PRON  PRP nsubj  13 -         -       -          -   B-ARG0     B-REF0  -               i/Ci
495 11 have       - have       AUX   VBP aux    13 -         have.01 -          B-V -          -       -               have/Mv.<
495 12 n't        + not        PART  RB  neg    13 -         -       -          -   B-ARGM-NEG -       not.r.01        n't/Mn.<
495 13 got        + get        VERB  VBN conj   3  -         get.02  -          -   B-V        -       get.v.01        got/Pd.?so:s01:s01.<pf:01
495 14 the        + the        DET   DT  det    15 -         -       -          -   B-ARG1     -       -               the/Md.<
495 15 time       - time       NOUN  NN  dobj   13 -         -       -          -   I-ARG1     -       time.n.02       time/Cc..s
495 16 .          - .          PUNCT .   punct  13 -         -       -          -   -          -       -               -

# sent_i = 496
# sent = In conclusion, I'd like to say a few words about future prospects.
# hyperedge = (('d/Mm.< like/Pd.xsr:s01:s01.-i:01) (in/T conclusion/Cc..s) i/Ci ((to/Mi.< say/P.-o-:013:01r.-i:0123) i/Ci (about/Br ((a/M.< few/Ma.<) words/Cc..p) (future/Ma.< prospects/Cc..p)) (about/Br (future/Ma.< prospects/Cc..p))))
# hyperedge builder = ((496.4/Mm.< 496.5/Pd.xsr:s01:s01.-i:01) (496.0/T 496.1/Cc..s) 496.3/Ci ((496.6/Mi.< 496.7/P.-o-:013:01r.-i:0123) 496.3/Ci (496.11/Br ((496.8/M.< 496.9/Ma.<) 496.10/Cc..p) (496.12/Ma.< 496.13/Cc..p)) (496.11/Br (496.12/Ma.< 496.13/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
496 0  In         + in         ADP   IN  prep     5  - -       -   B-ARGM-DIS -      last.r.02     in/T
496 1  conclusion - conclusion NOUN  NN  pobj     0  - -       -   I-ARGM-DIS -      last.r.02     conclusion/Cc..s
496 2  ,          + ,          PUNCT ,   punct    5  - -       -   -          -      -             -
496 3  I          - I          PRON  PRP nsubj    5  - -       -   B-ARG0     B-ARG0 -             i/Ci
496 4  'd         + 'd         AUX   MD  aux      5  - -       B-V B-ARGM-MOD -      -             'd/Mm.<
496 5  like       + like       VERB  VB  ROOT     5  - like.02 -   B-V        -      wish.v.02     like/Pd.xsr:s01:s01.-i:01
496 6  to         + to         PART  TO  aux      7  - -       -   B-ARG1     -      -             to/Mi.<
496 7  say        + say        VERB  VB  xcomp    5  - say.01  -   I-ARG1     B-V    state.v.01    say/P.-o-:013:01r.-i:0123
496 8  a          + a          DET   DT  quantmod 9  - -       -   I-ARG1     B-ARG1 -             a/M.<
496 9  few        + few        ADJ   JJ  amod     10 - -       -   I-ARG1     I-ARG1 few.a.01      few/Ma.<
496 10 words      + word       NOUN  NNS dobj     7  - -       -   I-ARG1     I-ARG1 word.n.02     words/Cc..p
496 11 about      + about      ADP   IN  prep     10 - -       -   I-ARG1     B-ARG3 -             about/Br
496 12 future     + future     ADJ   JJ  amod     13 - -       -   I-ARG1     I-ARG3 future.a.01   future/Ma.<
496 13 prospects  - prospect   NOUN  NNS pobj     11 - -       -   I-ARG1     I-ARG3 prospect.n.01 prospects/Cc..p
496 14 .          - .          PUNCT .   punct    5  - -       -   -          -      -             -

# sent_i = 497
# sent = The matter is under consideration.
# hyperedge = (is/Pd.sx:12:1h.|f--3s:12 (the/Md.< matter/Cc..s) (under/T consideration/Cc..s))
# hyperedge builder = (497.2/Pd.sx:12:1h.|f--3s:12 (497.0/Md.< 497.1/Cc..s) (497.3/T 497.4/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
497 0 The           + the           DET   DT  det   1 - -     B-ARG1 -                  the/Md.<
497 1 matter        + matter        NOUN  NN  nsubj 2 - -     I-ARG1 matter.n.01        matter/Cc..s
497 2 is            + be            AUX   VBZ ROOT  2 - be.01 B-V    be.v.01            is/Pd.sx:12:1h.|f--3s:12
497 3 under         + under         ADP   IN  prep  2 - -     B-ARG2 -                  under/T
497 4 consideration - consideration NOUN  NN  pobj  3 - -     I-ARG2 consideration.n.01 consideration/Cc..s
497 5 .             - .             PUNCT .   punct 2 - -     -      -                  -

# sent_i = 498
# sent = In other words, they're thinking about it.
# hyperedge = (('re/Mv.< thinking/Pd.xsx:s02:s0h.|pg:012) (in/T (other/Ma.< words/Cc..p)) they/Ci (about/T it/Ci))
# hyperedge builder = ((498.5/Mv.< 498.6/Pd.xsx:s02:s0h.|pg:012) (498.0/T (498.1/Ma.< 498.2/Cc..p)) 498.4/Ci (498.7/T 498.8/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
498 0 In       + in    ADP   IN  prep  6 - -        -   B-ARGM-DIS in_other_words.r.01 in/T
498 1 other    + other ADJ   JJ  amod  2 - -        -   I-ARGM-DIS in_other_words.r.01 other/Ma.<
498 2 words    - word  NOUN  NNS pobj  0 - -        -   I-ARGM-DIS in_other_words.r.01 words/Cc..p
498 3 ,        + ,     PUNCT ,   punct 6 - -        -   -          -                   -
498 4 they     - they  PRON  PRP nsubj 6 - -        -   B-ARG0     -                   they/Ci
498 5 're      + be    AUX   VBP aux   6 - be.03    B-V -          -                   're/Mv.<
498 6 thinking + think VERB  VBG ROOT  6 - think.01 -   B-V        entertain.v.02      thinking/Pd.xsx:s02:s0h.|pg:012
498 7 about    + about ADP   IN  prep  6 - -        -   B-ARG2     entertain.v.02      about/T
498 8 it       - it    PRON  PRP pobj  7 - -        -   I-ARG2     -                   it/Ci
498 9 .        - .     PUNCT .   punct 6 - -        -   -          -                   -

# sent_i = 499
# sent = I'll see you tomorrow then.
# hyperedge = (('ll/Mm.< see/Pd.sox?:01tt:01tt.-i:012) i/Ci you/Ci tomorrow/Cc..s.d then/M)
# hyperedge builder = ((499.1/Mm.< 499.2/Pd.sox?:01tt:01tt.-i:012) 499.0/Ci 499.3/Ci 499.4/Cc..s.d 499.5/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
499 0 I        - I        PRON  PRP nsubj    2 -      -      -   B-ARG0     -             i/Ci
499 1 'll      + will     AUX   MD  aux      2 -      -      B-V B-ARGM-MOD -             'll/Mm.<
499 2 see      + see      VERB  VB  ROOT     2 -      see.01 -   B-V        meet.v.01     see/Pd.sox?:01tt:01tt.-i:012
499 3 you      + you      PRON  PRP dobj     2 -      -      -   B-ARG1     -             you/Ci
499 4 tomorrow + tomorrow NOUN  NN  npadvmod 2 B-DATE -      -   B-ARGM-TMP tomorrow.n.01 tomorrow/Cc..s.d
499 5 then     - then     ADV   RB  advmod   2 -      -      -   B-ARGM-TMP then.r.02     then/M
499 6 .        - .        PUNCT .   punct    2 -      -      -   -          -             -

# sent_i = 500
# sent = Or rather on Monday.
# hyperedge = (or/J ((rather/M.< on/T) monday/Cp..s.d))
# hyperedge builder = (500.0/J ((500.1/M.< 500.2/T) 500.3/Cp..s.d))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset synset atoms
500 0 Or     + or     CCONJ CC  cc     2 -      - -           or/J
500 1 rather + rather ADV   RB  advmod 2 -      - rather.r.01 rather/M.<
500 2 on     + on     ADP   IN  ROOT   2 -      - -           on/T
500 3 Monday - Monday PROPN NNP pobj   2 B-DATE - monday.n.01 monday/Cp..s.d
500 4 .      - .      PUNCT .   punct  2 -      - -           -

# sent_i = 501
# sent = We've got lots of things we could sell.
# hyperedge = (('ve/Mv.< got/Pd.so:01:01.<f:01) we/Ci (of/Br lots/Cc..p (+/Jr.ma things/Cc..p ((could/Mm.< sell/P.-s:10:10.-i:01234) things/Cc..p we/Ci))))
# hyperedge builder = ((501.1/Mv.< 501.2/Pd.so:01:01.<f:01) 501.0/Ci (501.4/Br 501.3/Cc..p (+/Jr.ma 501.5/Cc..p ((501.7/Mm.< 501.8/P.-s:10:10.-i:01234) 501.5/Cc..p 501.6/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
501 0 We     - we    PRON  PRP nsubj 2 - -       -   B-ARG0 -   -          B-MAIN0 -          we/Ci
501 1 've    + have  AUX   VB  aux   2 - have.01 B-V -      -   -          -       -          've/Mv.<
501 2 got    + get   VERB  VBD ROOT  2 - get.02  -   B-V    -   -          -       get.v.01   got/Pd.so:01:01.<f:01
501 3 lots   + lot   NOUN  NNS dobj  2 - -       -   B-ARG1 -   -          -       batch.n.02 lots/Cc..p
501 4 of     + of    ADP   IN  prep  3 - -       -   I-ARG1 -   -          -       -          of/Br
501 5 things + thing NOUN  NNS pobj  4 - -       -   I-ARG1 -   B-ARG1     -       thing.n.08 things/Cc..p
501 6 we     + we    PRON  PRP nsubj 8 - -       -   I-ARG1 -   B-ARG0     B-REF0  -          we/Ci
501 7 could  + could AUX   MD  aux   8 - -       -   I-ARG1 B-V B-ARGM-MOD -       -          could/Mm.<
501 8 sell   - sell  VERB  VB  relcl 5 - sell.01 -   I-ARG1 -   B-V        -       sell.v.01  sell/P.-s:10:10.-i:01234
501 9 .      - .     PUNCT .   punct 2 - -       -   -      -   -          -       -          -

# sent_i = 502
# sent = There's the car, for example.
# hyperedge = ('s/Pd.ecx:-1s:-1s.|f--3s:1 there/Me (the/Md.< car/Cc..s) (for/T example/Cc..s))
# hyperedge builder = (502.1/Pd.ecx:-1s:-1s.|f--3s:1 502.0/Me (502.2/Md.< 502.3/Cc..s) (502.5/T 502.6/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
502 0 There   - there   PRON  EX  expl  1 - -     -          -                there/Me
502 1 's      + be      AUX   VBZ ROOT  1 - be.02 B-V        be.v.01          's/Pd.ecx:-1s:-1s.|f--3s:1
502 2 the     + the     DET   DT  det   3 - -     B-ARG1     -                the/Md.<
502 3 car     - car     NOUN  NN  attr  1 - -     I-ARG1     car.n.01         car/Cc..s
502 4 ,       + ,       PUNCT ,   punct 1 - -     -          -                -
502 5 for     + for     ADP   IN  prep  1 - -     B-ARGM-DIS for_example.r.01 for/T
502 6 example - example NOUN  NN  pobj  5 - -     I-ARGM-DIS for_example.r.01 example/Cc..s
502 7 .       - .       PUNCT .   punct 1 - -     -          -                -

# sent_i = 503
# sent = I think I'll have the sausages.
# hyperedge = (think/Pd.sr:01:01.|f:012 i/Ci (('ll/Mm.< have/P.so:01:01.-i:01) i/Ci (the/Md.< sausages/Cc..p)))
# hyperedge builder = (503.1/Pd.sr:01:01.|f:012 503.0/Ci ((503.3/Mm.< 503.4/P.so:01:01.-i:01) 503.2/Ci (503.5/Md.< 503.6/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
503 0 I        + I       PRON  PRP nsubj 1 - -        B-ARG0 -   -          B-MAIN0 -            i/Ci
503 1 think    + think   VERB  VBP ROOT  1 - think.01 B-V    -   -          -       think.v.02   think/Pd.sr:01:01.|f:012
503 2 I        - I       PRON  PRP nsubj 4 - -        B-ARG1 -   B-ARG0     B-REF0  -            i/Ci
503 3 'll      + will    AUX   MD  aux   4 - -        I-ARG1 B-V B-ARGM-MOD -       -            'll/Mm.<
503 4 have     + have    VERB  VB  ccomp 1 - have.03  I-ARG1 -   B-V        -       consume.v.02 have/P.so:01:01.-i:01
503 5 the      + the     DET   DT  det   6 - -        I-ARG1 -   B-ARG1     -       -            the/Md.<
503 6 sausages - sausage NOUN  NNS dobj  4 - -        I-ARG1 -   I-ARG1     -       sausage.n.01 sausages/Cc..p
503 7 .        - .       PUNCT .   punct 1 - -        -      -   -          -       -            -

# sent_i = 504
# sent = Talking of sausages, did you know there's a barbecue on Saturday?
# hyperedge = ((did/Mv.< know/P?.xsr:r01:r01.-i:012) (talking/P.x:1:1.|pg:012 (of/T sausages/Cc..p)) you/Ci ('s/P.ecx:-1t:-1t.|f--3s:1 there/Me (a/Md.< barbecue/Cc..s) (on/Tt saturday/Cp..s.d)))
# hyperedge builder = ((504.4/Mv.< 504.6/P?.xsr:r01:r01.-i:012) (504.0/P.x:1:1.|pg:012 (504.1/T 504.2/Cc..p)) 504.5/Ci (504.8/P.ecx:-1t:-1t.|f--3s:1 504.7/Me (504.9/Md.< 504.10/Cc..s) (504.11/Tt 504.12/Cp..s.d)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
504 0  Talking  + talk     VERB  VBG advcl 6  -      talk.01 B-V    -   B-ARGM-ADV -          talk_of.v.01  talking/P.x:1:1.|pg:012
504 1  of       + of       ADP   IN  prep  0  -      -       B-ARG1 -   I-ARGM-ADV -          talk_of.v.01  of/T
504 2  sausages - sausage  NOUN  NNS pobj  1  -      -       I-ARG1 -   I-ARGM-ADV -          sausage.n.01  sausages/Cc..p
504 3  ,        + ,        PUNCT ,   punct 6  -      -       -      -   -          -          -             -
504 4  did      + do       AUX   VBD aux   6  -      do.01   -      B-V -          -          -             did/Mv.<
504 5  you      + you      PRON  PRP nsubj 6  -      -       -      -   B-ARG0     -          -             you/Ci
504 6  know     + know     VERB  VB  ROOT  6  -      know.01 -      -   B-V        -          know.v.01     know/P?.xsr:r01:r01.-i:012
504 7  there    - there    PRON  EX  expl  8  -      -       -      -   B-ARG1     -          -             there/Me
504 8  's       + be       AUX   VBZ ccomp 6  -      be.02   -      -   I-ARG1     B-V        be.v.01       's/P.ecx:-1t:-1t.|f--3s:1
504 9  a        + a        DET   DT  det   10 -      -       -      -   I-ARG1     B-ARG1     -             a/Md.<
504 10 barbecue + barbecue NOUN  NN  attr  8  -      -       -      -   I-ARG1     I-ARG1     barbecue.n.02 barbecue/Cc..s
504 11 on       + on       ADP   IN  prep  8  -      -       -      -   I-ARG1     B-ARGM-TMP -             on/Tt
504 12 Saturday - Saturday PROPN NNP pobj  11 B-DATE -       -      -   I-ARG1     I-ARGM-TMP saturday.n.01 saturday/Cp..s.d
504 13 ?        - ?        PUNCT .   punct 6  -      -       -      -   -          -          -             -

# sent_i = 505
# sent = I had a lovely lunch.
# hyperedge = (had/Pd.so:0k:!!.<f i/Ci (a/Md.< (lovely/Ma.< lunch/Cc..s)))
# hyperedge builder = (505.1/Pd.so:0k:!!.<f 505.0/Ci (505.2/Md.< (505.3/Ma.< 505.4/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
505 0 I      + I      PRON  PRP nsubj 1 - -        -          B-ARG0     -            i/Ci
505 1 had    + have   VERB  VBD ROOT  1 - have.LV  B-V        B-ARGM-LVB consume.v.02 had/Pd.so:0k:!!.<f
505 2 a      + a      DET   DT  det   4 - -        -          -          -            a/Md.<
505 3 lovely + lovely ADJ   JJ  amod  4 - -        -          -          lovely.s.01  lovely/Ma.<
505 4 lunch  - lunch  NOUN  NN  dobj  1 - lunch.01 B-ARGM-PRR B-V        lunch.n.01   lunch/Cc..s
505 5 .      - .      PUNCT .   punct 1 - -        -          -          -            -

# sent_i = 506
# sent = Good.
# hyperedge = good/M
# hyperedge builder = 506.0/M
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset synset atoms
506 0 Good - good ADJ   JJ ROOT  0 - - good.a.01 good/M
506 1 .    - .    PUNCT .  punct 0 - - -         -

# sent_i = 507
# sent = By the way, where did you put that file?
# hyperedge = ((did/Mv.< put/P?.x?so:s201:sg01.-i:012) (by/T (the/Md.< way/Cc..s)) where/Mw you/Ci (that/Md.< file/Cc..s))
# hyperedge builder = ((507.5/Mv.< 507.7/P?.x?so:s201:sg01.-i:012) (507.0/T (507.1/Md.< 507.2/Cc..s)) 507.4/Mw 507.6/Ci (507.8/Md.< 507.9/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
507 0  By    + by    ADP   IN  prep   7 - -      -   B-ARGM-DIS by_the_way.r.01 by/T
507 1  the   + the   DET   DT  det    2 - -      -   I-ARGM-DIS by_the_way.r.01 the/Md.<
507 2  way   - way   NOUN  NN  pobj   0 - -      -   I-ARGM-DIS by_the_way.r.01 way/Cc..s
507 3  ,     + ,     PUNCT ,   punct  7 - -      -   -          -               -
507 4  where + where ADV   WRB advmod 7 - -      -   B-ARG2     -               where/Mw
507 5  did   + do    AUX   VBD aux    7 - do.01  B-V -          -               did/Mv.<
507 6  you   + you   PRON  PRP nsubj  7 - -      -   B-ARG0     -               you/Ci
507 7  put   + put   VERB  VB  ROOT   7 - put.01 -   B-V        put.v.01        put/P?.x?so:s201:sg01.-i:012
507 8  that  + that  DET   DT  det    9 - -      -   B-ARG1     -               that/Md.<
507 9  file  - file  NOUN  NN  dobj   7 - -      -   I-ARG1     file.n.01       file/Cc..s
507 10 ?     - ?     PUNCT .   punct  7 - -      -   -          -               -

# sent_i = 508
# sent = I think I'd better be going.
# hyperedge = (think/Pd.sr:01:01.|f:012 i/Ci (('d/Mm.< (be/Mv.< going/P.s?:0r:1r.|pg:0134)) i/Ci better/M))
# hyperedge builder = (508.1/Pd.sr:01:01.|f:012 508.0/Ci ((508.3/Mm.< (508.5/Mv.< 508.6/P.s?:0r:1r.|pg:0134)) 508.2/Ci 508.4/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
508 0 I      + I      PRON  PRP nsubj  1 - -        B-ARG0 -      -   -          B-MAIN0 -           i/Ci
508 1 think  + think  VERB  VBP ROOT   1 - think.01 B-V    -      -   -          -       think.v.02  think/Pd.sr:01:01.|f:012
508 2 I      - I      PRON  PRP nsubj  6 - -        B-ARG1 B-ARG0 -   B-ARG0     B-REF0  -           i/Ci
508 3 'd     + have   AUX   MD  aux    6 - have.07  I-ARG1 B-V    -   B-ARGM-MOD -       -           'd/Mm.<
508 4 better + better ADV   RB  advmod 6 - -        I-ARG1 B-ARG1 -   B-ARGM-ADV -       better.s.03 better/M
508 5 be     + be     AUX   VB  aux    6 - be.03    I-ARG1 B-ARG2 B-V -          -       -           be/Mv.<
508 6 going  - go     VERB  VBG ccomp  1 - go.02    I-ARG1 I-ARG2 -   B-V        -       go.v.03     going/P.s?:0r:1r.|pg:0134
508 7 .      - .      PUNCT .   punct  1 - -        -      -      -   -          -       -           -

# sent_i = 509
# sent = It's past midnight, after all.
# hyperedge = ('s/Pd.sc?:12s:1hs.|f--3s:12 it/Ci (past/Ma.< midnight/Cc..s) (after/M.< all/M))
# hyperedge builder = (509.1/Pd.sc?:12s:1hs.|f--3s:12 509.0/Ci (509.2/Ma.< 509.3/Cc..s) (509.5/M.< 509.6/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
509 0 It       - it       PRON  PRP nsubj  1 - -     B-ARG1     -              it/Ci
509 1 's       + be       AUX   VBZ ROOT   1 - be.01 B-V        be.v.01        's/Pd.sc?:12s:1hs.|f--3s:12
509 2 past     + past     ADJ   JJ  amod   3 - -     B-ARG2     by.r.01        past/Ma.<
509 3 midnight - midnight NOUN  NN  attr   1 - -     I-ARG2     midnight.n.01  midnight/Cc..s
509 4 ,        + ,        PUNCT ,   punct  1 - -     -          -              -
509 5 after    + after    ADV   RB  advmod 6 - -     B-ARGM-DIS after_all.r.01 after/M.<
509 6 all      - all      ADV   RB  advmod 1 - -     I-ARGM-DIS after_all.r.01 all/M
509 7 .        - .        PUNCT .   punct  1 - -     -          -              -

# sent_i = 510
# sent = I don't know whether we did the right thing.
# hyperedge = ((do/Mv.< (n't/Mn.< know/Pd.sr:01:01.-i:012)) i/Ci (whether/T (did/P.so:01:01.<f:01234 we/Ci (the/Md.< (right/Ma.< thing/Cc..s)))))
# hyperedge builder = ((510.1/Mv.< (510.2/Mn.< 510.3/Pd.sr:01:01.-i:012)) 510.0/Ci (510.4/T (510.6/P.so:01:01.<f:01234 510.5/Ci (510.7/Md.< (510.8/Ma.< 510.9/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
510 0  I       + I       PRON  PRP nsubj 3 - -       -   B-ARG0     -      -          i/Ci
510 1  do      - do      AUX   VBP aux   3 - do.01   B-V -          -      -          do/Mv.<
510 2  n't     + not     PART  RB  neg   3 - -       -   B-ARGM-NEG -      not.r.01   n't/Mn.<
510 3  know    + know    VERB  VB  ROOT  3 - know.01 -   B-V        -      know.v.01  know/Pd.sr:01:01.-i:012
510 4  whether + whether SCONJ IN  mark  6 - -       -   B-ARG1     -      -          whether/T
510 5  we      + we      PRON  PRP nsubj 6 - -       -   I-ARG1     B-ARG0 -          we/Ci
510 6  did     + do      VERB  VBD ccomp 3 - do.02   -   I-ARG1     B-V    do.v.03    did/P.so:01:01.<f:01234
510 7  the     + the     DET   DT  det   9 - -       -   I-ARG1     B-ARG1 -          the/Md.<
510 8  right   + right   ADJ   JJ  amod  9 - -       -   I-ARG1     I-ARG1 right.a.04 right/Ma.<
510 9  thing   - thing   NOUN  NN  dobj  6 - -       -   I-ARG1     I-ARG1 thing.n.02 thing/Cc..s
510 10 .       - .       PUNCT .   punct 3 - -       -   -          -      -          -

# sent_i = 511
# sent = Anyway, it doesn't matter now.
# hyperedge = ((does/Mv.< (n't/Mn.< matter/Pd.js?:s1t:s1t.-i:12)) anyway/C it/Ci now/M)
# hyperedge builder = ((511.3/Mv.< (511.4/Mn.< 511.5/Pd.js?:s1t:s1t.-i:12)) 511.0/C 511.2/Ci 511.6/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
511 0 Anyway - anyway INTJ  UH  intj   5 - -         -   B-ARGM-DIS anyhow.r.01 anyway/C
511 1 ,      + ,      PUNCT ,   punct  5 - -         -   -          -           -
511 2 it     + it     PRON  PRP nsubj  5 - -         -   B-ARG1     -           it/Ci
511 3 does   - do     AUX   VBZ aux    5 - do.01     B-V -          -           does/Mv.<
511 4 n't    + not    PART  RB  neg    5 - -         -   B-ARGM-NEG not.r.01    n't/Mn.<
511 5 matter + matter VERB  VB  ROOT   5 - matter.01 -   B-V        count.v.02  matter/Pd.js?:s1t:s1t.-i:12
511 6 now    - now    ADV   RB  advmod 5 - -         -   B-ARGM-TMP now.r.04    now/M
511 7 .      - .      PUNCT .   punct  5 - -         -   -          -           -

# sent_i = 512
# sent = The government sold the telephone service to private investors.
# hyperedge = (sold/Pd.soi:012:01g.<f:01234 (the/Md.< government/Cc..s) (the/Md.< (+/B.am telephone/Cc.<.s service/Cc..s)) (to/T (private/Ma.< investors/Cc..p)))
# hyperedge builder = (512.2/Pd.soi:012:01g.<f:01234 (512.0/Md.< 512.1/Cc..s) (512.3/Md.< (+/B.am 512.4/Cc.<.s 512.5/Cc..s)) (512.6/T (512.7/Ma.< 512.8/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
512 0 The        + the        DET   DT  det      1 - -       B-ARG0 -                      the/Md.<
512 1 government + government NOUN  NN  nsubj    2 - -       I-ARG0 government.n.01        government/Cc..s
512 2 sold       + sell       VERB  VBD ROOT     2 - sell.01 B-V    sell.v.01              sold/Pd.soi:012:01g.<f:01234
512 3 the        + the        DET   DT  det      5 - -       B-ARG1 -                      the/Md.<
512 4 telephone  + telephone  NOUN  NN  compound 5 - -       I-ARG1 telephone_company.n.01 telephone/Cc.<.s
512 5 service    + service    NOUN  NN  dobj     2 - -       I-ARG1 telephone_company.n.01 service/Cc..s
512 6 to         + to         ADP   IN  dative   2 - -       B-ARG2 -                      to/T
512 7 private    + private    ADJ   JJ  amod     8 - -       I-ARG2 private.a.01           private/Ma.<
512 8 investors  - investor   NOUN  NNS pobj     6 - -       I-ARG2 investor.n.01          investors/Cc..p
512 9 .          - .          PUNCT .   punct    2 - -       -      -                      -

# sent_i = 513
# sent = Gas and electricity were privatized in the same way.
# hyperedge = ((were/Mv.< privatized/Pd.px:1m:1m.<pf:01) (and/J gas/Cc..s electricity/Cc..s) (in/T (the/Md.< (same/Ma.< way/Cc..s))))
# hyperedge builder = ((513.3/Mv.< 513.4/Pd.px:1m:1m.<pf:01) (513.1/J 513.0/Cc..s 513.2/Cc..s) (513.5/T (513.6/Md.< (513.7/Ma.< 513.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
513 0 Gas         + gas         NOUN  NN  nsubjpass 4 - -            -   B-ARG1     gasoline.n.01    gas/Cc..s
513 1 and         + and         CCONJ CC  cc        0 - -            -   I-ARG1     -                and/J
513 2 electricity + electricity NOUN  NN  conj      0 - -            -   I-ARG1     electricity.n.02 electricity/Cc..s
513 3 were        + be          AUX   VBD auxpass   4 - be.03        B-V -          -                were/Mv.<
513 4 privatized  + privatize   VERB  VBN ROOT      4 - privatize.01 -   B-V        privatize.v.01   privatized/Pd.px:1m:1m.<pf:01
513 5 in          + in          ADP   IN  prep      4 - -            -   B-ARGM-MNR -                in/T
513 6 the         + the         DET   DT  det       8 - -            -   I-ARGM-MNR -                the/Md.<
513 7 same        + same        ADJ   JJ  amod      8 - -            -   I-ARGM-MNR same.a.02        same/Ma.<
513 8 way         - way         NOUN  NN  pobj      5 - -            -   I-ARGM-MNR manner.n.01      way/Cc..s
513 9 .           - .           PUNCT .   punct     4 - -            -   -          -                -

# sent_i = 514
# sent = I threw away my old briefcase.
# hyperedge = ((away/Ml.r.> threw/Pd.so:01:01.<f:01) i/Ci (my/Mp (old/Ma.< briefcase/Cc..s)))
# hyperedge builder = ((514.2/Ml.r.> 514.1/Pd.so:01:01.<f:01) 514.0/Ci (514.3/Mp (514.4/Ma.< 514.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
514 0 I         + I         PRON  PRP  nsubj 1 - -             B-ARG0 -              i/Ci
514 1 threw     + throw     VERB  VBD  ROOT  1 - throw_away.07 B-V    discard.v.01   threw/Pd.so:01:01.<f:01
514 2 away      + away      ADV   RB   prt   1 - -             -      discard.v.01   away/Ml.r.>
514 3 my        + my        PRON  PRP$ poss  5 - -             B-ARG1 -              my/Mp
514 4 old       + old       ADJ   JJ   amod  5 - -             I-ARG1 old.a.02       old/Ma.<
514 5 briefcase - briefcase NOUN  NN   dobj  1 - -             I-ARG1 briefcase.n.01 briefcase/Cc..s
514 6 .         - .         PUNCT .    punct 1 - -             -      -              -

# sent_i = 515
# sent = I was looking at the photo.
# hyperedge = ((was/Mv.< looking/Pd.sx:01:1g.|pg:012) i/Ci (at/T (the/Md.< photo/Cc..s)))
# hyperedge builder = ((515.1/Mv.< 515.2/Pd.sx:01:1g.|pg:012) 515.0/Ci (515.3/T (515.4/Md.< 515.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
515 0 I       + I     PRON  PRP nsubj 2 - -       -   B-ARG0 -               i/Ci
515 1 was     + be    AUX   VBD aux   2 - be.03   B-V -      -               was/Mv.<
515 2 looking + look  VERB  VBG ROOT  2 - look.01 -   B-V    look.v.01       looking/Pd.sx:01:1g.|pg:012
515 3 at      + at    ADP   IN  prep  2 - -       -   B-ARG1 -               at/T
515 4 the     + the   DET   DT  det   5 - -       -   I-ARG1 -               the/Md.<
515 5 photo   - photo NOUN  NN  pobj  3 - -       -   I-ARG1 photograph.n.01 photo/Cc..s
515 6 .       - .     PUNCT .   punct 2 - -       -   -      -               -

# sent_i = 516
# sent = The man admitted to the crime.
# hyperedge = (admitted/Pd.sx:01:01.<f:012 (the/Md.< man/Cc..s) (to/T (the/Md.< crime/Cc..s)))
# hyperedge builder = (516.2/Pd.sx:01:01.<f:012 (516.0/Md.< 516.1/Cc..s) (516.3/T (516.4/Md.< 516.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
516 0 The      + the   DET   DT  det   1 - -        B-ARG0 -          the/Md.<
516 1 man      + man   NOUN  NN  nsubj 2 - -        I-ARG0 man.n.01   man/Cc..s
516 2 admitted + admit VERB  VBD ROOT  2 - admit.01 B-V    admit.v.01 admitted/Pd.sx:01:01.<f:012
516 3 to       + to    ADP   IN  prep  2 - -        B-ARG1 -          to/T
516 4 the      + the   DET   DT  det   5 - -        I-ARG1 -          the/Md.<
516 5 crime    - crime NOUN  NN  pobj  3 - -        I-ARG1 crime.n.01 crime/Cc..s
516 6 .        - .     PUNCT .   punct 2 - -        -      -          -

# sent_i = 517
# sent = The man confessed to the crime.
# hyperedge = (confessed/Pd.sx:01:01.<f:012 (the/Md.< man/Cc..s) (to/T (the/Md.< crime/Cc..s)))
# hyperedge builder = (517.2/Pd.sx:01:01.<f:012 (517.0/Md.< 517.1/Cc..s) (517.3/T (517.4/Md.< 517.5/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
517 0 The       + the     DET   DT  det   1 - -          B-ARG0 -            the/Md.<
517 1 man       + man     NOUN  NN  nsubj 2 - -          I-ARG0 man.n.01     man/Cc..s
517 2 confessed + confess VERB  VBD ROOT  2 - confess.01 B-V    confess.v.01 confessed/Pd.sx:01:01.<f:012
517 3 to        + to      ADP   IN  prep  2 - -          B-ARG1 -            to/T
517 4 the       + the     DET   DT  det   5 - -          I-ARG1 -            the/Md.<
517 5 crime     - crime   NOUN  NN  pobj  3 - -          I-ARG1 crime.n.01   crime/Cc..s
517 6 .         - .       PUNCT .   punct 2 - -          -      -            -

# sent_i = 518
# sent = It all amounts to quite a lot of money.
# hyperedge = ((to/Ml.r.> amounts/Pd.so:1-:1-.|f--3s:12) (+/Ba.ma.n it/Ci all/Cd) (of/Br (quite/M.< (a/Md.< lot/Cc..s)) money/Cc..s))
# hyperedge builder = ((518.3/Ml.r.> 518.2/Pd.so:1-:1-.|f--3s:12) (+/Ba.ma.n 518.0/Ci 518.1/Cd) (518.7/Br (518.4/M.< (518.5/Md.< 518.6/Cc..s)) 518.8/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
518 0 It      + it     PRON  PRP nsubj  2 - -         B-ARG1 -          it/Ci
518 1 all     + all    DET   DT  appos  0 - -         I-ARG1 all.a.01   all/Cd
518 2 amounts + amount VERB  VBZ ROOT   2 - amount.01 B-V    total.v.01 amounts/Pd.so:1-:1-.|f--3s:12
518 3 to      + to     ADP   IN  prt    2 - -         B-ARG2 -          to/Ml.r.>
518 4 quite   + quite  DET   PDT predet 6 - -         I-ARG2 quite.r.01 quite/M.<
518 5 a       + a      DET   DT  det    6 - -         I-ARG2 -          a/Md.<
518 6 lot     + lot    NOUN  NN  dobj   2 - -         I-ARG2 batch.n.02 lot/Cc..s
518 7 of      + of     ADP   IN  prep   6 - -         I-ARG2 -          of/Br
518 8 money   - money  NOUN  NN  pobj   7 - -         I-ARG2 money.n.01 money/Cc..s
518 9 .       - .      PUNCT .   punct  2 - -         -      -          -

# sent_i = 519
# sent = It all comes to quite a lot of money.
# hyperedge = ((to/Ml.r.> comes/Pd.so:12:0g.|f--3s:12) (+/Ba.ma.n it/Ci all/Cd) (of/Br (quite/M.< (a/Md.< lot/Cc..s)) money/Cc..s))
# hyperedge builder = ((519.3/Ml.r.> 519.2/Pd.so:12:0g.|f--3s:12) (+/Ba.ma.n 519.0/Ci 519.1/Cd) (519.7/Br (519.4/M.< (519.5/Md.< 519.6/Cc..s)) 519.8/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
519 0 It    + it    PRON  PRP nsubj  2 - -       B-ARG1 -          it/Ci
519 1 all   + all   DET   DT  appos  0 - -       I-ARG1 -          all/Cd
519 2 comes + come  VERB  VBZ ROOT   2 - come.16 B-V    total.v.01 comes/Pd.so:12:0g.|f--3s:12
519 3 to    + to    ADP   IN  prt    2 - -       -      -          to/Ml.r.>
519 4 quite + quite DET   PDT predet 6 - -       B-ARG2 quite.r.01 quite/M.<
519 5 a     + a     DET   DT  det    6 - -       I-ARG2 -          a/Md.<
519 6 lot   + lot   NOUN  NN  dobj   2 - -       I-ARG2 batch.n.02 lot/Cc..s
519 7 of    + of    ADP   IN  prep   6 - -       I-ARG2 -          of/Br
519 8 money - money NOUN  NN  pobj   7 - -       I-ARG2 money.n.01 money/Cc..s
519 9 .     - .     PUNCT .   punct  2 - -       -      -          -

# sent_i = 520
# sent = We apologize for the delay.
# hyperedge = (apologize/Pd.sx:01:0c.|f:0123 we/Ci (for/T (the/Md.< delay/Cc..s)))
# hyperedge builder = (520.1/Pd.sx:01:0c.|f:0123 520.0/Ci (520.2/T (520.3/Md.< 520.4/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
520 0 We        + we        PRON  PRP nsubj 1 - -            B-ARG0 -              we/Ci
520 1 apologize + apologize VERB  VBP ROOT  1 - apologize.01 B-V    apologize.v.01 apologize/Pd.sx:01:0c.|f:0123
520 2 for       + for       ADP   IN  prep  1 - -            B-ARG1 -              for/T
520 3 the       + the       DET   DT  det   4 - -            I-ARG1 -              the/Md.<
520 4 delay     - delay     NOUN  NN  pobj  2 - -            I-ARG1 delay.n.01     delay/Cc..s
520 5 .         - .         PUNCT .   punct 1 - -            -      -              -

# sent_i = 521
# sent = We arrived at Ipswich ten minutes late.
# hyperedge = (arrived/Pd.sx?:14t:1lt.<f:1234 we/Ci (at/T ipswich/Cp..s.g) (late/M (ten/M#.<..t minutes/Cc.<.p.t)))
# hyperedge builder = (521.1/Pd.sx?:14t:1lt.<f:1234 521.0/Ci (521.2/T 521.3/Cp..s.g) (521.6/M (521.4/M#.<..t 521.5/Cc.<.p.t)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
521 0 We      + we      PRON  PRP nsubj    1 -      -         B-ARG1     -           we/Ci
521 1 arrived + arrive  VERB  VBD ROOT     1 -      arrive.01 B-V        arrive.v.01 arrived/Pd.sx?:14t:1lt.<f:1234
521 2 at      + at      ADP   IN  prep     1 -      -         B-ARG4     -           at/T
521 3 Ipswich + Ipswich PROPN NNP pobj     2 B-GPE  -         I-ARG4     -           ipswich/Cp..s.g
521 4 ten     + ten     NUM   CD  nummod   5 B-TIME -         B-ARGM-TMP ten.s.01    ten/M#.<..t
521 5 minutes + minute  NOUN  NNS npadvmod 6 I-TIME -         I-ARGM-TMP minute.n.01 minutes/Cc.<.p.t
521 6 late    - late    ADV   RB  advmod   1 -      -         I-ARGM-TMP late.r.01   late/M
521 7 .       - .       PUNCT .   punct    1 -      -         -          -           -

# sent_i = 522
# sent = We arrived in Ipswich ten minutes late.
# hyperedge = (arrived/Pd.sx?:14t:1lt.<f:1234 we/Ci (in/T ipswich/Cp..s.g) (late/M (ten/M#.<..t minutes/Cc.<.p.t)))
# hyperedge builder = (522.1/Pd.sx?:14t:1lt.<f:1234 522.0/Ci (522.2/T 522.3/Cp..s.g) (522.6/M (522.4/M#.<..t 522.5/Cc.<.p.t)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
522 0 We      + we      PRON  PRP nsubj    1 -      -         B-ARG1     -           we/Ci
522 1 arrived + arrive  VERB  VBD ROOT     1 -      arrive.01 B-V        arrive.v.01 arrived/Pd.sx?:14t:1lt.<f:1234
522 2 in      + in      ADP   IN  prep     1 -      -         B-ARG4     -           in/T
522 3 Ipswich + Ipswich PROPN NNP pobj     2 B-GPE  -         I-ARG4     -           ipswich/Cp..s.g
522 4 ten     + ten     NUM   CD  nummod   5 B-TIME -         B-ARGM-TMP ten.s.01    ten/M#.<..t
522 5 minutes + minute  NOUN  NNS npadvmod 6 I-TIME -         I-ARGM-TMP minute.n.01 minutes/Cc.<.p.t
522 6 late    - late    ADV   RB  advmod   1 -      -         I-ARGM-TMP late.r.01   late/M
522 7 .       - .       PUNCT .   punct    1 -      -         -          -           -

# sent_i = 523
# sent = That's no way to behave to your friends.
# hyperedge = ('s/Pd.sc:12:1h.|f--3s:12 that/Cd (+/Jr.ma (no/Md.< way/Cc..s) ((to/Mi.< behave/P.-x:11:h1.-i:01) (no/Md.< way/Cc..s) (to/T (your/Mp friends/Cc..p)))))
# hyperedge builder = (523.1/Pd.sc:12:1h.|f--3s:12 523.0/Cd (+/Jr.ma (523.2/Md.< 523.3/Cc..s) ((523.4/Mi.< 523.5/P.-x:11:h1.-i:01) (523.2/Md.< 523.3/Cc..s) (523.6/T (523.7/Mp 523.8/Cc..p)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
523 0 That    - that   DET   DT   nsubj 1 - -         B-ARG1 -        -           that/Cd
523 1 's      + be     AUX   VBZ  ROOT  1 - be.01     B-V    -        be.v.01     's/Pd.sc:12:1h.|f--3s:12
523 2 no      + no     DET   DT   det   3 - -         B-ARG2 B-ARG1   no.a.01     no/Md.<
523 3 way     + way    NOUN  NN   attr  1 - -         I-ARG2 I-ARG1   way.n.10    way/Cc..s
523 4 to      + to     PART  TO   aux   5 - -         I-ARG2 -        -           to/Mi.<
523 5 behave  + behave VERB  VB   relcl 3 - behave.01 I-ARG2 B-V      act.v.02    behave/P.-x:11:h1.-i:01
523 6 to      + to     ADP   IN   prep  5 - -         I-ARG2 B-C-ARG1 -           to/T
523 7 your    + your   PRON  PRP$ poss  8 - -         I-ARG2 I-C-ARG1 -           your/Mp
523 8 friends - friend NOUN  NNS  pobj  6 - -         I-ARG2 I-C-ARG1 friend.n.01 friends/Cc..p
523 9 .       - .      PUNCT .    punct 1 - -         -      -        -           -

# sent_i = 524
# sent = That's no way to behave towards your friends.
# hyperedge = ('s/Pd.sc:12:1h.|f--3s:12 that/Cd (+/Jr.ma (no/Md.< way/Cc..s) ((to/Mi.< behave/P.-x:11:h1.-i:01) (no/Md.< way/Cc..s) (towards/T (your/Mp friends/Cc..p)))))
# hyperedge builder = (524.1/Pd.sc:12:1h.|f--3s:12 524.0/Cd (+/Jr.ma (524.2/Md.< 524.3/Cc..s) ((524.4/Mi.< 524.5/P.-x:11:h1.-i:01) (524.2/Md.< 524.3/Cc..s) (524.6/T (524.7/Mp 524.8/Cc..p)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
524 0 That    - that    DET   DT   nsubj 1 - -         B-ARG1 -        -           that/Cd
524 1 's      + be      AUX   VBZ  ROOT  1 - be.01     B-V    -        be.v.01     's/Pd.sc:12:1h.|f--3s:12
524 2 no      + no      DET   DT   det   3 - -         B-ARG2 B-ARG1   no.a.01     no/Md.<
524 3 way     + way     NOUN  NN   attr  1 - -         I-ARG2 I-ARG1   way.n.10    way/Cc..s
524 4 to      + to      PART  TO   aux   5 - -         I-ARG2 -        -           to/Mi.<
524 5 behave  + behave  VERB  VB   relcl 3 - behave.01 I-ARG2 B-V      act.v.02    behave/P.-x:11:h1.-i:01
524 6 towards + towards ADP   IN   prep  5 - -         I-ARG2 B-C-ARG1 -           towards/T
524 7 your    + your    PRON  PRP$ poss  8 - -         I-ARG2 I-C-ARG1 -           your/Mp
524 8 friends - friend  NOUN  NNS  pobj  6 - -         I-ARG2 I-C-ARG1 friend.n.01 friends/Cc..p
524 9 .       - .       PUNCT .    punct 1 - -         -      -        -           -

# sent_i = 525
# sent = I don't believe in eating meat.
# hyperedge = ((do/Mv.< (n't/Mn.< (in/Ml.r.> believe/Pd.sr:01:01.-i:012))) i/Ci (eating/P.o:1:1.|pg:01 meat/Cc..s))
# hyperedge builder = ((525.1/Mv.< (525.2/Mn.< (525.4/Ml.r.> 525.3/Pd.sr:01:01.-i:012))) 525.0/Ci (525.5/P.o:1:1.|pg:01 525.6/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
525 0 I       + I       PRON  PRP nsubj 3 - -          -   B-ARG0     -      -               i/Ci
525 1 do      - do      AUX   VBP aux   3 - do.01      B-V -          -      -               do/Mv.<
525 2 n't     + not     PART  RB  neg   3 - -          -   B-ARGM-NEG -      not.r.01        n't/Mn.<
525 3 believe + believe VERB  VB  ROOT  3 - believe.01 -   B-V        -      believe_in.v.01 believe/Pd.sr:01:01.-i:012
525 4 in      + in      ADP   IN  prt   3 - -          -   -          -      believe_in.v.01 in/Ml.r.>
525 5 eating  + eat     VERB  VBG xcomp 3 - eat.01     -   B-ARG1     B-V    eat.v.01        eating/P.o:1:1.|pg:01
525 6 meat    - meat    NOUN  NN  dobj  5 - -          -   I-ARG1     B-ARG1 meat.n.01       meat/Cc..s
525 7 .       - .       PUNCT .   punct 3 - -          -   -          -      -               -

# sent_i = 526
# sent = Brown doesn't go with grey.
# hyperedge = ((does/Mv.< (n't/Mn.< (with/Ml.r.> go/Pd.so:12:1o.-i:12))) brown/Cc..s grey/Cc..s)
# hyperedge builder = ((526.1/Mv.< (526.2/Mn.< (526.4/Ml.r.> 526.3/Pd.so:12:1o.-i:12))) 526.0/Cc..s 526.5/Cc..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
526 0 Brown + Brown NOUN  NN  nsubj 3 - -     -   B-ARG1     brown.s.01 brown/Cc..s
526 1 does  - do    AUX   VBZ aux   3 - do.01 B-V -          -          does/Mv.<
526 2 n't   + not   PART  RB  neg   3 - -     -   B-ARGM-NEG not.r.01   n't/Mn.<
526 3 go    + go    VERB  VB  ROOT  3 - go.22 -   B-V        blend.v.02 go/Pd.so:12:1o.-i:12
526 4 with  + with  ADP   IN  prt   3 - -     -   -          -          with/Ml.r.>
526 5 grey  - grey  NOUN  NN  dobj  3 - -     -   B-ARG2     grey.s.01  grey/Cc..s
526 6 .     - .     PUNCT .   punct 3 - -     -   -          -          -

# sent_i = 527
# sent = I objected to being kept waiting.
# hyperedge = (objected/Pd.sx:01:01.<f:01 i/Ci (to/T ((being/Mv.< kept/P.-r:12:1h.<pf:012) i/Ci (waiting/P.-:1:1.|pg:12m i/Ci))))
# hyperedge builder = (527.1/Pd.sx:01:01.<f:01 527.0/Ci (527.2/T ((527.3/Mv.< 527.4/P.-r:12:1h.<pf:012) 527.0/Ci (527.5/P.-:1:1.|pg:12m 527.0/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
527 0 I        + I      PRON  PRP nsubj   1 - -         B-ARG0 -   B-ARG1 B-ARG1 -           i/Ci
527 1 objected + object VERB  VBD ROOT    1 - object.01 B-V    -   -      -      object.v.01 objected/Pd.sx:01:01.<f:01
527 2 to       + to     ADP   IN  prep    1 - -         B-ARG1 -   -      -      -           to/T
527 3 being    + be     AUX   VBG auxpass 4 - be.03     I-ARG1 B-V -      -      -           being/Mv.<
527 4 kept     + keep   VERB  VBN pcomp   2 - keep.02   I-ARG1 -   B-V    -      keep.v.01   kept/P.-r:12:1h.<pf:012
527 5 waiting  - wait   VERB  VBG xcomp   4 - wait.01   I-ARG1 -   B-ARG2 B-V    wait.v.01   waiting/P.-:1:1.|pg:12m
527 6 .        - .      PUNCT .   punct   1 - -         -      -   -      -      -           -

# sent_i = 528
# sent = An idea has just occurred to me.
# hyperedge = ((has/Mv.< occurred/Pd.s?x:1r2:1rg.<pf:12) (an/Md.< idea/Cc..s) just/M (to/T me/Ci))
# hyperedge builder = ((528.2/Mv.< 528.4/Pd.s?x:1r2:1rg.<pf:12) (528.0/Md.< 528.1/Cc..s) 528.3/M (528.5/T 528.6/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
528 0 An       + an    DET   DT  det    1 - -        -   B-ARG1     -          an/Md.<
528 1 idea     + idea  NOUN  NN  nsubj  4 - -        -   I-ARG1     idea.n.01  idea/Cc..s
528 2 has      + have  AUX   VBZ aux    4 - have.01  B-V -          -          has/Mv.<
528 3 just     + just  ADV   RB  advmod 4 - -        -   B-ARGM-ADV just.r.03  just/M
528 4 occurred + occur VERB  VBN ROOT   4 - occur.01 -   B-V        occur.v.02 occurred/Pd.s?x:1r2:1rg.<pf:12
528 5 to       + to    ADP   IN  prep   4 - -        -   B-ARG2     -          to/T
528 6 me       - I     PRON  PRP pobj   5 - -        -   I-ARG2     -          me/Ci
528 7 .        - .     PUNCT .   punct  4 - -        -   -          -          -

# sent_i = 529
# sent = A scientist has come up with an interesting new invention.
# hyperedge = ((has/Mv.< (with/Ml.r.> (up/Ml.r.> come/Pd.so:01:01.<pf:01))) (a/Md.< scientist/Cc..s) (an/Md.< (interesting/Ma.< (new/Ma.< invention/Cc..s))))
# hyperedge builder = ((529.2/Mv.< (529.5/Ml.r.> (529.4/Ml.r.> 529.3/Pd.so:01:01.<pf:01))) (529.0/Md.< 529.1/Cc..s) (529.6/Md.< (529.7/Ma.< (529.8/Ma.< 529.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
529 0  A           + a           DET   DT  det   1 - -          -   B-ARG0 -                a/Md.<
529 1  scientist   + scientist   NOUN  NN  nsubj 3 - -          -   I-ARG0 scientist.n.01   scientist/Cc..s
529 2  has         + have        AUX   VBZ aux   3 - have.01    B-V -      -                has/Mv.<
529 3  come        + come        VERB  VBN ROOT  3 - come_up.11 -   B-V    come_up.v.01     come/Pd.so:01:01.<pf:01
529 4  up          + up          ADP   RP  prt   3 - -          -   -      come_up.v.01     up/Ml.r.>
529 5  with        + with        ADP   IN  prt   3 - -          -   -      -                with/Ml.r.>
529 6  an          + an          DET   DT  det   9 - -          -   B-ARG1 -                an/Md.<
529 7  interesting + interesting ADJ   JJ  amod  9 - -          -   I-ARG1 interesting.a.01 interesting/Ma.<
529 8  new         + new         ADJ   JJ  amod  9 - -          -   I-ARG1 fresh.s.04       new/Ma.<
529 9  invention   - invention   NOUN  NN  dobj  3 - -          -   I-ARG1 invention.n.02   invention/Cc..s
529 10 .           - .           PUNCT .   punct 3 - -          -   -      -                -

# sent_i = 530
# sent = Ben has decided to go in for teaching.
# hyperedge = ((has/Mv.< decided/Pd.sr:01:01.<pf:0123) ben/Cp..s.p ((to/Mi.< (for/Ml.r.> (in/Ml.r.> go/P.-r:0-:0-.-i:012))) ben/Cp..s.p (teaching/P.-:0:0.|pg:012 ben/Cp..s.p)))
# hyperedge builder = ((530.1/Mv.< 530.2/Pd.sr:01:01.<pf:0123) 530.0/Cp..s.p ((530.3/Mi.< (530.6/Ml.r.> (530.5/Ml.r.> 530.4/P.-r:0-:0-.-i:012))) 530.0/Cp..s.p (530.7/P.-:0:0.|pg:012 530.0/Cp..s.p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
530 0 Ben      + Ben      PROPN NNP nsubj 2 B-PERSON -         -   B-ARG0 B-ARG0 B-ARG0 -             ben/Cp..s.p
530 1 has      + have     AUX   VBZ aux   2 -        have.01   B-V -      -      -      -             has/Mv.<
530 2 decided  + decide   VERB  VBN ROOT  2 -        decide.01 -   B-V    -      -      decide.v.01   decided/Pd.sr:01:01.<pf:0123
530 3 to       + to       PART  TO  aux   4 -        -         -   B-ARG1 -      -      -             to/Mi.<
530 4 go       + go       VERB  VB  xcomp 2 -        go.06     -   I-ARG1 B-V    -      try_for.v.01  go/P.-r:0-:0-.-i:012
530 5 in       + in       ADP   RP  prt   4 -        -         -   I-ARG1 B-ARG2 -      try_for.v.01  in/Ml.r.>
530 6 for      + for      ADP   IN  prt   4 -        -         -   I-ARG1 B-ARG1 -      try_for.v.01  for/Ml.r.>
530 7 teaching - teaching VERB  VBG xcomp 4 -        teach.01  -   I-ARG1 I-ARG1 B-V    teaching.n.01 teaching/P.-:0:0.|pg:012
530 8 .        - .        PUNCT .   punct 2 -        -         -   -      -      -      -             -

# sent_i = 531
# sent = You drive so fast I'll never keep up with you.
# hyperedge = (:/J (drive/Pd.s?:0m:0m.|f:01 you/Ci (so/M.< fast/M)) (('ll/Mm.< (never/Mn.< (with/Ml.r.> (up/Ml.r.> keep/P.so:0-:0-.-i:01)))) i/Ci you/Ci))
# hyperedge builder = (:/J (531.1/Pd.s?:0m:0m.|f:01 531.0/Ci (531.2/M.< 531.3/M)) ((531.5/Mm.< (531.6/Mn.< (531.9/Ml.r.> (531.8/Ml.r.> 531.7/P.so:0-:0-.-i:01)))) 531.4/Ci 531.10/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
531 0  You   + you   PRON  PRP nsubj  1 - -          B-ARG0     -   -          B-MAIN0 -            you/Ci
531 1  drive + drive VERB  VBP ROOT   1 - drive.01   B-V        -   -          -       drive.v.01   drive/Pd.s?:0m:0m.|f:01
531 2  so    + so    ADV   RB  advmod 3 - -          B-ARGM-MNR -   -          -       so.r.01      so/M.<
531 3  fast  + fast  ADV   RB  advmod 1 - -          I-ARGM-MNR -   -          -       fast.r.01    fast/M
531 4  I     - I     PRON  PRP nsubj  7 - -          -          -   B-ARG0     -       -            i/Ci
531 5  'll   + will  AUX   MD  aux    7 - -          -          B-V B-ARGM-MOD -       -            'll/Mm.<
531 6  never + never ADV   RB  neg    7 - -          -          -   B-ARGM-NEG -       never.r.01   never/Mn.<
531 7  keep  + keep  VERB  VB  conj   1 - keep_up.05 -          -   B-V        -       keep_up.v.01 keep/P.so:0-:0-.-i:01
531 8  up    + up    ADP   RP  prt    7 - -          -          -   -          -       keep_up.v.01 up/Ml.r.>
531 9  with  + with  ADP   IN  prt    7 - -          -          -   B-ARG1     -       -            with/Ml.r.>
531 10 you   - you   PRON  PRP dobj   7 - -          -          -   I-ARG1     B-REF0  -            you/Ci
531 11 .     - .     PUNCT .   punct  1 - -          -          -   -          -       -            -

# sent_i = 532
# sent = The car's run out of petrol.
# hyperedge = (('s/Mv.< (out/Ml.r.> run/Pd.sx:21:g1.<pf:12)) (the/Md.< car/Cc..s) (of/T petrol/Cc..s))
# hyperedge builder = ((532.2/Mv.< (532.4/Ml.r.> 532.3/Pd.sx:21:g1.<pf:12)) (532.0/Md.< 532.1/Cc..s) (532.5/T 532.6/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
532 0 The    + the    DET   DT  det   1 - -          -   B-ARG2 -             the/Md.<
532 1 car    - car    NOUN  NN  nsubj 3 - -          -   I-ARG2 car.n.01      car/Cc..s
532 2 's     + be     AUX   VBZ aux   3 - be.03      B-V -      -             's/Mv.<
532 3 run    + run    VERB  VBN ROOT  3 - run_out.05 -   B-V    run_out.v.01  run/Pd.sx:21:g1.<pf:12
532 4 out    + out    ADP   RP  prt   3 - -          -   -      run_out.v.01  out/Ml.r.>
532 5 of     + of     ADP   IN  prep  3 - -          -   B-ARG1 -             of/T
532 6 petrol - petrol NOUN  NN  pobj  5 - -          -   I-ARG1 gasoline.n.01 petrol/Cc..s
532 7 .      - .      PUNCT .   punct 3 - -          -   -      -             -

# sent_i = 533
# sent = If the doorbell rings, the dog barks.
# hyperedge = (barks/Pd.xs:r0:r0.|f--3s:012 (if/T (rings/P.s:1:1.|f--3s:012 (the/Md.< doorbell/Cc..s))) (the/Md.< dog/Cc..s))
# hyperedge builder = (533.7/Pd.xs:r0:r0.|f--3s:012 (533.0/T (533.3/P.s:1:1.|f--3s:012 (533.1/Md.< 533.2/Cc..s))) (533.5/Md.< 533.6/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
533 0 If       + if       SCONJ IN  mark  3 - -       -      B-ARGM-ADV -             if/T
533 1 the      + the      DET   DT  det   2 - -       B-ARG1 I-ARGM-ADV -             the/Md.<
533 2 doorbell + doorbell NOUN  NN  nsubj 3 - -       I-ARG1 I-ARGM-ADV doorbell.n.01 doorbell/Cc..s
533 3 rings    - ring     VERB  VBZ advcl 7 - ring.01 B-V    I-ARGM-ADV ring.v.01     rings/P.s:1:1.|f--3s:012
533 4 ,        + ,        PUNCT ,   punct 7 - -       -      -          -             -
533 5 the      + the      DET   DT  det   6 - -       -      B-ARG0     -             the/Md.<
533 6 dog      + dog      NOUN  NN  nsubj 7 - -       -      I-ARG0     dog.n.01      dog/Cc..s
533 7 barks    - bark     VERB  VBZ ROOT  7 - bark.01 -      B-V        bark.v.04     barks/Pd.xs:r0:r0.|f--3s:012
533 8 .        - .        PUNCT .   punct 7 - -       -      -          -             -

# sent_i = 534
# sent = If I reverse the car, it makes a funny noise.
# hyperedge = (makes/Pd.xso:r01:r0h.|f--3s:0123 (if/T (reverse/P.so:01:01.|f:012 i/Ci (the/Md.< car/Cc..s))) (+/Jc.rm.rc it/Ci (the/Md.< car/Cc..s)) (a/Md.< (funny/Ma.< noise/Cc..s)))
# hyperedge builder = (534.7/Pd.xso:r01:r0h.|f--3s:0123 (534.0/T (534.2/P.so:01:01.|f:012 534.1/Ci (534.3/Md.< 534.4/Cc..s))) (+/Jc.rm.rc 534.6/Ci (534.3/Md.< 534.4/Cc..s)) (534.8/Md.< (534.9/Ma.< 534.10/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
534 0  If      + if      SCONJ IN  mark  2  - -          -      B-ARGM-ADV -       -            if/T
534 1  I       + I       PRON  PRP nsubj 2  - -          B-ARG0 I-ARGM-ADV -       -            i/Ci
534 2  reverse + reverse VERB  VBP advcl 7  - reverse.01 B-V    I-ARGM-ADV -       back.v.04    reverse/P.so:01:01.|f:012
534 3  the     + the     DET   DT  det   4  - -          B-ARG1 I-ARGM-ADV B-MAIN0 -            the/Md.<
534 4  car     - car     NOUN  NN  dobj  2  - -          I-ARG1 I-ARGM-ADV I-MAIN0 car.n.01     car/Cc..s
534 5  ,       + ,       PUNCT ,   punct 7  - -          -      -          -       -            -
534 6  it      + it      PRON  PRP nsubj 7  - -          -      B-ARG0     B-REF0  -            it/Ci
534 7  makes   + make    VERB  VBZ ROOT  7  - make.01    -      B-V        -       cause.v.01   makes/Pd.xso:r01:r0h.|f--3s:0123
534 8  a       + a       DET   DT  det   10 - -          -      B-ARG1     -       -            a/Md.<
534 9  funny   + funny   ADJ   JJ  amod  10 - -          -      I-ARG1     -       curious.s.01 funny/Ma.<
534 10 noise   - noise   NOUN  NN  dobj  7  - -          -      I-ARG1     -       noise.n.01   noise/Cc..s
534 11 .       - .       PUNCT .   punct 7  - -          -      -          -       -            -

# sent_i = 535
# sent = When I reverse the car, it makes a funny noise.
# hyperedge = (makes/Pd.xso:t01:t0h.|f--3s:0123 (reverse/P.?so:t01:t01.|f:012 when/Mw i/Ci (the/Md.< car/Cc..s)) (+/Jc.rm.rc it/Ci (the/Md.< car/Cc..s)) (a/Md.< (funny/Ma.< noise/Cc..s)))
# hyperedge builder = (535.7/Pd.xso:t01:t0h.|f--3s:0123 (535.2/P.?so:t01:t01.|f:012 535.0/Mw 535.1/Ci (535.3/Md.< 535.4/Cc..s)) (+/Jc.rm.rc 535.6/Ci (535.3/Md.< 535.4/Cc..s)) (535.8/Md.< (535.9/Ma.< 535.10/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
535 0  When    + when    ADV   WRB advmod 2  - -          B-ARGM-TMP B-ARGM-TMP -       -               when/Mw
535 1  I       + I       PRON  PRP nsubj  2  - -          B-ARG0     I-ARGM-TMP -       -               i/Ci
535 2  reverse + reverse VERB  VBP advcl  7  - reverse.01 B-V        I-ARGM-TMP -       back.v.04       reverse/P.?so:t01:t01.|f:012
535 3  the     + the     DET   DT  det    4  - -          B-ARG1     I-ARGM-TMP B-MAIN0 -               the/Md.<
535 4  car     - car     NOUN  NN  dobj   2  - -          I-ARG1     I-ARGM-TMP I-MAIN0 car.n.01        car/Cc..s
535 5  ,       + ,       PUNCT ,   punct  7  - -          -          -          -       -               -
535 6  it      + it      PRON  PRP nsubj  7  - -          -          B-ARG0     B-REF0  -               it/Ci
535 7  makes   + make    VERB  VBZ ROOT   7  - make.01    -          B-V        -       make_noise.v.01 makes/Pd.xso:t01:t0h.|f--3s:0123
535 8  a       + a       DET   DT  det    10 - -          -          B-ARG1     -       make_noise.v.01 a/Md.<
535 9  funny   + funny   ADJ   JJ  amod   10 - -          -          I-ARG1     -       curious.s.01    funny/Ma.<
535 10 noise   - noise   NOUN  NN  dobj   7  - -          -          I-ARG1     -       make_noise.v.01 noise/Cc..s
535 11 .       - .       PUNCT .   punct  7  - -          -          -          -       -               -

# sent_i = 536
# sent = If the team win tomorrow, they get promotion to a higher league.
# hyperedge = (get/Pd.xso:r01:r01.|f:01234 (if/T (win/P.sx:0t:0t.|f:012345 (the/Md.< team/Cc..s) tomorrow/Cc..s.d)) (+/Jc.rm.rc they/Ci (the/Md.< team/Cc..s)) (to/Br promotion/Cc..s (a/Md.< (higher/Mc.< league/Cc..s))))
# hyperedge builder = (536.7/Pd.xso:r01:r01.|f:01234 (536.0/T (536.3/P.sx:0t:0t.|f:012345 (536.1/Md.< 536.2/Cc..s) 536.4/Cc..s.d)) (+/Jc.rm.rc 536.6/Ci (536.1/Md.< 536.2/Cc..s)) (536.9/Br 536.8/Cc..s (536.10/Md.< (536.11/Mc.< 536.12/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
536 0  If        + if        SCONJ IN  mark     3  -      -      -          B-ARGM-ADV -       -              if/T
536 1  the       + the       DET   DT  det      2  -      -      B-ARG0     I-ARGM-ADV B-MAIN0 -              the/Md.<
536 2  team      + team      NOUN  NN  nsubj    3  -      -      I-ARG0     I-ARGM-ADV I-MAIN0 team.n.01      team/Cc..s
536 3  win       + win       VERB  VBP advcl    7  -      win.01 B-V        I-ARGM-ADV -       win.v.01       win/P.sx:0t:0t.|f:012345
536 4  tomorrow  - tomorrow  NOUN  NN  npadvmod 3  B-DATE -      B-ARGM-TMP I-ARGM-ADV -       tomorrow.n.01  tomorrow/Cc..s.d
536 5  ,         + ,         PUNCT ,   punct    7  -      -      -          -          -       -              -
536 6  they      + they      PRON  PRP nsubj    7  -      -      -          B-ARG0     B-REF0  -              they/Ci
536 7  get       + get       VERB  VBP ROOT     7  -      get.01 -          B-V        -       get.v.01       get/Pd.xso:r01:r01.|f:01234
536 8  promotion + promotion NOUN  NN  dobj     7  -      -      -          B-ARG1     -       promotion.n.02 promotion/Cc..s
536 9  to        + to        ADP   IN  prep     8  -      -      -          I-ARG1     -       -              to/Br
536 10 a         + a         DET   DT  det      12 -      -      -          I-ARG1     -       -              a/Md.<
536 11 higher    + high      ADJ   JJR amod     12 -      -      -          I-ARG1     -       high.a.01      higher/Mc.<
536 12 league    - league    NOUN  NN  pobj     9  -      -      -          I-ARG1     -       league.n.01    league/Cc..s
536 13 .         - .         PUNCT .   punct    7  -      -      -          -          -       -              -

# sent_i = 537
# sent = If you're practicing on the drums, I'm going out.
# hyperedge = (('m/Mv.< (out/Ml.r.> going/Pd.xs:r0:r0.|pg:01)) (if/T (('re/Mv.< practicing/P.sx:01:01.|pg:012) you/Ci (on/T (the/Md.< drums/Cc..p)))) i/Ci)
# hyperedge builder = ((537.9/Mv.< (537.11/Ml.r.> 537.10/Pd.xs:r0:r0.|pg:01)) (537.0/T ((537.2/Mv.< 537.3/P.sx:01:01.|pg:012) 537.1/Ci (537.4/T (537.5/Md.< 537.6/Cc..p)))) 537.8/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
537 0  If         + if       SCONJ IN  mark  3  - -           -   -      -   B-ARGM-ADV -             if/T
537 1  you        - you      PRON  PRP nsubj 3  - -           -   B-ARG0 -   I-ARGM-ADV -             you/Ci
537 2  're        + be       AUX   VBP aux   3  - be.03       B-V -      -   I-ARGM-ADV -             're/Mv.<
537 3  practicing + practice VERB  VBG advcl 10 - practice.01 -   B-V    -   I-ARGM-ADV rehearse.v.01 practicing/P.sx:01:01.|pg:012
537 4  on         + on       ADP   IN  prep  3  - -           -   B-ARG1 -   I-ARGM-ADV -             on/T
537 5  the        + the      DET   DT  det   6  - -           -   I-ARG1 -   I-ARGM-ADV -             the/Md.<
537 6  drums      - drum     NOUN  NNS pobj  4  - -           -   I-ARG1 -   I-ARGM-ADV drum.n.01     drums/Cc..p
537 7  ,          + ,        PUNCT ,   punct 10 - -           -   -      -   -          -             -
537 8  I          - I        PRON  PRP nsubj 10 - -           -   -      -   B-ARG0     -             i/Ci
537 9  'm         + be       AUX   VBP aux   10 - be.03       -   -      B-V -          -             'm/Mv.<
537 10 going      + go       VERB  VBG ROOT  10 - go_out.17   -   -      -   B-V        go_out.v.02   going/Pd.xs:r0:r0.|pg:01
537 11 out        - out      ADP   RP  prt   10 - -           -   -      -   -          go_out.v.02   out/Ml.r.>
537 12 .          - .        PUNCT .   punct 10 - -           -   -      -   -          -             -

# sent_i = 538
# sent = If it rains, the reception will take place indoors.
# hyperedge = ((will/Mm.< take/Pd.xso?:r12l:r1hl.-i:12) (if/T (rains/P.s:-:-.|f--3s:012 it/Ci)) (the/Md.< reception/Cc..s) place/Cc..s indoors/M)
# hyperedge builder = ((538.6/Mm.< 538.7/Pd.xso?:r12l:r1hl.-i:12) (538.0/T (538.2/P.s:-:-.|f--3s:012 538.1/Ci)) (538.4/Md.< 538.5/Cc..s) 538.8/Cc..s 538.9/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
538 0  If        + if        SCONJ IN  mark   2 - -       -   -   B-ARGM-ADV -              if/T
538 1  it        + it        PRON  PRP nsubj  2 - -       -   -   I-ARGM-ADV -              it/Ci
538 2  rains     - rain      VERB  VBZ advcl  7 - rain.01 B-V -   I-ARGM-ADV rain.v.01      rains/P.s:-:-.|f--3s:012
538 3  ,         + ,         PUNCT ,   punct  7 - -       -   -   -          -              -
538 4  the       + the       DET   DT  det    5 - -       -   -   B-ARG1     -              the/Md.<
538 5  reception + reception NOUN  NN  nsubj  7 - -       -   -   I-ARG1     reception.n.02 reception/Cc..s
538 6  will      + will      AUX   MD  aux    7 - -       -   B-V B-ARGM-MOD -              will/Mm.<
538 7  take      + take      VERB  VB  ROOT   7 - take.14 -   -   B-V        happen.v.01    take/Pd.xso?:r12l:r1hl.-i:12
538 8  place     + place     NOUN  NN  dobj   7 - -       -   -   B-ARG2     happen.v.01    place/Cc..s
538 9  indoors   - indoors   ADV   RB  advmod 7 - -       -   -   B-ARGM-LOC inside.r.01    indoors/M
538 10 .         - .         PUNCT .   punct  7 - -       -   -   -          -              -

# sent_i = 539
# sent = If we're having ten people to dinner, we'll need more chairs.
# hyperedge = (('ll/Mm.< need/Pd.xso:r01:r01.-i:01) (if/T (('re/Mv.< having/P.so:01:01.|pg:01) we/Ci (to/Br (ten/M#.<..c people/Cc..p) dinner/Cc..s))) we/Ci (more/Mc.< chairs/Cc..p))
# hyperedge builder = ((539.10/Mm.< 539.11/Pd.xso:r01:r01.-i:01) (539.0/T ((539.2/Mv.< 539.3/P.so:01:01.|pg:01) 539.1/Ci (539.6/Br (539.4/M#.<..c 539.5/Cc..p) 539.7/Cc..s))) 539.9/Ci (539.12/Mc.< 539.13/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
539 0  If     + if     SCONJ IN  mark   3  -          -       -   -      -   B-ARGM-ADV -       -                if/T
539 1  we     - we     PRON  PRP nsubj  3  -          -       -   B-ARG0 -   I-ARGM-ADV B-MAIN0 -                we/Ci
539 2  're    + be     AUX   VBP aux    3  -          be.03   B-V -      -   I-ARGM-ADV -       -                're/Mv.<
539 3  having + have   VERB  VBG advcl  11 -          have.03 -   B-V    -   I-ARGM-ADV -       have.v.01        having/P.so:01:01.|pg:01
539 4  ten    + ten    NUM   CD  nummod 5  B-CARDINAL -       -   B-ARG1 -   I-ARGM-ADV -       ten.s.01         ten/M#.<..c
539 5  people + people NOUN  NNS dobj   3  -          -       -   I-ARG1 -   I-ARGM-ADV -       people.n.01      people/Cc..p
539 6  to     + to     ADP   IN  prep   5  -          -       -   I-ARG1 -   I-ARGM-ADV -       -                to/Br
539 7  dinner - dinner NOUN  NN  pobj   6  -          -       -   I-ARG1 -   I-ARGM-ADV -       dinner.n.02      dinner/Cc..s
539 8  ,      + ,      PUNCT ,   punct  11 -          -       -   -      -   -          -       -                -
539 9  we     - we     PRON  PRP nsubj  11 -          -       -   -      -   B-ARG0     B-REF0  -                we/Ci
539 10 'll    + will   AUX   MD  aux    11 -          -       -   -      B-V B-ARGM-MOD -       -                'll/Mm.<
539 11 need   + need   VERB  VB  ROOT   11 -          need.01 -   -      -   B-V        -       necessitate.v.01 need/Pd.xso:r01:r01.-i:01
539 12 more   + more   ADJ   JJR amod   13 -          -       -   -      -   B-ARG1     -       more.a.02        more/Mc.<
539 13 chairs - chair  NOUN  NNS dobj   11 -          -       -   -      -   I-ARG1     -       chair.n.01       chairs/Cc..p
539 14 .      - .      PUNCT .   punct  11 -          -       -   -      -   -          -       -                -

# sent_i = 540
# sent = If I've finished my work by ten, I'll probably watch a film on TV.
# hyperedge = (('ll/Mm.< watch/Pd.xs?ox:r0r1l:r0r1l.-i:01) (if/T (('ve/Mv.< finished/P.sox:01t:01t.<pf:012) i/Ci ((+/Jc.rm.rr my/Mp i/Ci) work/Cc..s) (by/Tt ten/C#...c))) i/Ci probably/M (a/Md.< film/Cc..s) (on/Tl tv/Cc..s))
# hyperedge builder = ((540.10/Mm.< 540.12/Pd.xs?ox:r0r1l:r0r1l.-i:01) (540.0/T ((540.2/Mv.< 540.3/P.sox:01t:01t.<pf:012) 540.1/Ci ((+/Jc.rm.rr 540.4/Mp 540.1/Ci) 540.5/Cc..s) (540.6/Tt 540.7/C#...c))) 540.9/Ci 540.11/M (540.13/Md.< 540.14/Cc..s) (540.15/Tl 540.16/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
540 0  If       + if       SCONJ IN   mark   3  -          -         -   -          -   B-ARGM-ADV -       -               if/T
540 1  I        - I        PRON  PRP  nsubj  3  -          -         -   B-ARG0     -   I-ARGM-ADV B-MAIN0 -               i/Ci
540 2  've      + have     AUX   VB   aux    3  -          have.01   B-V -          -   I-ARGM-ADV -       -               've/Mv.<
540 3  finished + finish   VERB  VBN  advcl  12 -          finish.01 -   B-V        -   I-ARGM-ADV -       complete.v.01   finished/P.sox:01t:01t.<pf:012
540 4  my       + my       PRON  PRP$ poss   5  -          -         -   B-ARG1     -   I-ARGM-ADV B-REF0  -               my/Mp
540 5  work     + work     NOUN  NN   dobj   3  -          -         -   I-ARG1     -   I-ARGM-ADV -       work.n.01       work/Cc..s
540 6  by       + by       ADP   IN   prep   3  -          -         -   B-ARGM-TMP -   I-ARGM-ADV -       -               by/Tt
540 7  ten      - ten      NUM   CD   pobj   6  B-CARDINAL -         -   I-ARGM-TMP -   I-ARGM-ADV -       ten.s.01        ten/C#...c
540 8  ,        + ,        PUNCT ,    punct  12 -          -         -   -          -   -          -       -               -
540 9  I        - I        PRON  PRP  nsubj  12 -          -         -   -          -   B-ARG0     B-REF0  -               i/Ci
540 10 'll      + will     AUX   MD   aux    12 -          -         -   -          B-V B-ARGM-MOD -       -               'll/Mm.<
540 11 probably + probably ADV   RB   advmod 12 -          -         -   -          -   B-ARGM-ADV -       probably.r.01   probably/M
540 12 watch    + watch    VERB  VB   ROOT   12 -          watch.01  -   -          -   B-V        -       watch.v.03      watch/Pd.xs?ox:r0r1l:r0r1l.-i:01
540 13 a        + a        DET   DT   det    14 -          -         -   -          -   B-ARG1     -       -               a/Md.<
540 14 film     + film     NOUN  NN   dobj   12 -          -         -   -          -   I-ARG1     -       movie.n.01      film/Cc..s
540 15 on       + on       ADP   IN   prep   12 -          -         -   -          -   B-ARGM-LOC -       -               on/Tl
540 16 TV       - tv       NOUN  NN   pobj   15 -          -         -   -          -   I-ARGM-LOC -       television.n.01 tv/Cc..s
540 17 .        - .        PUNCT .    punct  12 -          -         -   -          -   -          -       -               -

# sent_i = 541
# sent = If I had lots of money, I would travel round the world.
# hyperedge = ((would/Mm.< travel/Pd.xsx:r01:r1l.-i:0124) (if/T (had/P.so:01:01.<f:01 i/Ci (of/Br lots/Cc..p money/Cc..s))) i/Ci (round/T (the/Md.< world/Cc..s)))
# hyperedge builder = ((541.8/Mm.< 541.9/Pd.xsx:r01:r1l.-i:0124) (541.0/T (541.2/P.so:01:01.<f:01 541.1/Ci (541.4/Br 541.3/Cc..p 541.5/Cc..s))) 541.7/Ci (541.10/T (541.11/Md.< 541.12/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
541 0  If     + if     SCONJ IN  mark  2  - -         -      -   B-ARGM-ADV -       -           if/T
541 1  I      + I      PRON  PRP nsubj 2  - -         B-ARG0 -   I-ARGM-ADV B-MAIN0 -           i/Ci
541 2  had    + have   VERB  VBD advcl 9  - have.03   B-V    -   I-ARGM-ADV -       have.v.01   had/P.so:01:01.<f:01
541 3  lots   + lot    NOUN  NNS dobj  2  - -         B-ARG1 -   I-ARGM-ADV -       batch.n.02  lots/Cc..p
541 4  of     + of     ADP   IN  prep  3  - -         I-ARG1 -   I-ARGM-ADV -       -           of/Br
541 5  money  - money  NOUN  NN  pobj  4  - -         I-ARG1 -   I-ARGM-ADV -       money.n.01  money/Cc..s
541 6  ,      + ,      PUNCT ,   punct 9  - -         -      -   -          -       -           -
541 7  I      + I      PRON  PRP nsubj 9  - -         -      -   B-ARG0     B-REF0  -           i/Ci
541 8  would  + would  AUX   MD  aux   9  - -         -      B-V B-ARGM-MOD -       -           would/Mm.<
541 9  travel + travel VERB  VB  ROOT  9  - travel.01 -      -   B-V        -       travel.v.02 travel/Pd.xsx:r01:r1l.-i:0124
541 10 round  + round  ADP   IN  prep  9  - -         -      -   B-ARG1     -       round.r.01  round/T
541 11 the    + the    DET   DT  det   12 - -         -      -   I-ARG1     -       -           the/Md.<
541 12 world  - world  NOUN  NN  pobj  10 - -         -      -   I-ARG1     -       earth.n.01  world/Cc..s
541 13 .      - .      PUNCT .   punct 9  - -         -      -   -          -       -           -

# sent_i = 542
# sent = I'd tell you the answer if I knew what it was.
# hyperedge = (('d/Mm.< tell/Pd.siox:021r:0g1r.-i:012) i/Ci you/Ci (the/Md.< answer/Cc..s) (if/T (knew/P.sr:01:01.<f:012 i/Ci (was/P.cs:21:h1.<f:12 what/Cw (+/Jc.rm.rc it/Ci (the/Md.< answer/Cc..s))))))
# hyperedge builder = ((542.1/Mm.< 542.2/Pd.siox:021r:0g1r.-i:012) 542.0/Ci 542.3/Ci (542.4/Md.< 542.5/Cc..s) (542.6/T (542.8/P.sr:01:01.<f:012 542.7/Ci (542.11/P.cs:21:h1.<f:12 542.9/Cw (+/Jc.rm.rc 542.10/Ci (542.4/Md.< 542.5/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 coref2 synset atoms
542 0  I      - I      PRON  PRP nsubj  2  - -       -   B-ARG0     -      -      B-MAIN0 -       -             i/Ci
542 1  'd     + 'd     AUX   MD  aux    2  - -       B-V B-ARGM-MOD -      -      -       -       -             'd/Mm.<
542 2  tell   + tell   VERB  VB  ROOT   2  - tell.01 -   B-V        -      -      -       -       tell.v.02     tell/Pd.siox:021r:0g1r.-i:012
542 3  you    + you    PRON  PRP dative 2  - -       -   B-ARG2     -      -      -       -       -             you/Ci
542 4  the    + the    DET   DT  det    5  - -       -   B-ARG1     -      -      -       B-MAIN1 -             the/Md.<
542 5  answer + answer NOUN  NN  dobj   2  - -       -   I-ARG1     -      -      -       I-MAIN1 solution.n.02 answer/Cc..s
542 6  if     + if     SCONJ IN  mark   8  - -       -   B-ARGM-ADV -      -      -       -       -             if/T
542 7  I      + I      PRON  PRP nsubj  8  - -       -   I-ARGM-ADV B-ARG0 -      B-REF0  -       -             i/Ci
542 8  knew   + know   VERB  VBD advcl  2  - know.01 -   I-ARGM-ADV B-V    -      -       -       know.v.01     knew/P.sr:01:01.<f:012
542 9  what   + what   PRON  WP  attr   11 - -       -   I-ARGM-ADV B-ARG1 B-ARG2 -       -       -             what/Cw
542 10 it     + it     PRON  PRP nsubj  11 - -       -   I-ARGM-ADV I-ARG1 B-ARG1 -       B-REF1  -             it/Ci
542 11 was    - be     AUX   VBD ccomp  8  - be.01   -   I-ARGM-ADV I-ARG1 B-V    -       -       be.v.01       was/P.cs:21:h1.<f:12
542 12 .      - .      PUNCT .   punct  2  - -       -   -          -      -      -       -       -             -

# sent_i = 543
# sent = If the sun was shining, everything would be perfect.
# hyperedge = ((would/Mm.< be/Pd.xsc:r12:r1h.-i:12) (if/T ((was/Mv.< shining/P.s:1:1.|pg:012) (the/Md.< sun/Cc..s))) everything/Ci..s perfect/Ca)
# hyperedge builder = ((543.7/Mm.< 543.8/Pd.xsc:r12:r1h.-i:12) (543.0/T ((543.3/Mv.< 543.4/P.s:1:1.|pg:012) (543.1/Md.< 543.2/Cc..s))) 543.6/Ci..s 543.9/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
543 0  If         + if         SCONJ IN  mark  4 - -        -   -      -   B-ARGM-ADV -            if/T
543 1  the        + the        DET   DT  det   2 - -        -   B-ARG1 -   I-ARGM-ADV -            the/Md.<
543 2  sun        + sun        NOUN  NN  nsubj 4 - -        -   I-ARG1 -   I-ARGM-ADV sun.n.01     sun/Cc..s
543 3  was        + be         AUX   VBD aux   4 - be.03    B-V -      -   I-ARGM-ADV -            was/Mv.<
543 4  shining    - shine      VERB  VBG advcl 8 - shine.01 -   B-V    -   I-ARGM-ADV shine.v.02   shining/P.s:1:1.|pg:012
543 5  ,          + ,          PUNCT ,   punct 8 - -        -   -      -   -          -            -
543 6  everything + everything PRON  NN  nsubj 8 - -        -   -      -   B-ARG1     -            everything/Ci..s
543 7  would      + would      AUX   MD  aux   8 - -        -   -      B-V B-ARGM-MOD -            would/Mm.<
543 8  be         + be         VERB  VB  ROOT  8 - be.01    -   -      -   B-V        be.v.01      be/Pd.xsc:r12:r1h.-i:12
543 9  perfect    - perfect    ADJ   JJ  acomp 8 - -        -   -      -   B-ARG2     perfect.a.01 perfect/Ca
543 10 .          - .          PUNCT .   punct 8 - -        -   -      -   -          -            -

# sent_i = 544
# sent = If you wouldn't mind holding the line, I'll try to put you through.
# hyperedge = (('ll/Mm.< try/Pd.xsr:r01:r01.-i:01) (if/T ((would/Mm.< (n't/Mn.< mind/P.sr:01:1c.-i:01)) you/Ci (holding/P.-o:01:01.|pg:0123 you/Ci (the/Md.< line/Cc..s)))) i/Ci ((to/Mi.< (through/Ml.r.> put/P.-o:01:01.-i:012)) i/Ci you/Ci))
# hyperedge builder = ((544.10/Mm.< 544.11/Pd.xsr:r01:r01.-i:01) (544.0/T ((544.2/Mm.< (544.3/Mn.< 544.4/P.sr:01:1c.-i:01)) 544.1/Ci (544.5/P.-o:01:01.|pg:0123 544.1/Ci (544.6/Md.< 544.7/Cc..s)))) 544.9/Ci ((544.12/Mi.< (544.15/Ml.r.> 544.13/P.-o:01:01.-i:012)) 544.9/Ci 544.14/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 synset atoms
544 0  If      + if      SCONJ IN  mark  4  - -       -   -          -      -   B-ARGM-ADV -      -       -                if/T
544 1  you     + you     PRON  PRP nsubj 4  - -       -   B-ARG0     B-ARG0 -   I-ARGM-ADV -      B-MAIN0 -                you/Ci
544 2  would   - would   AUX   MD  aux   4  - -       B-V B-ARGM-MOD -      -   I-ARGM-ADV -      -       -                would/Mm.<
544 3  n't     + not     PART  RB  neg   4  - -       -   B-ARGM-NEG -      -   I-ARGM-ADV -      -       -                n't/Mn.<
544 4  mind    + mind    VERB  VB  advcl 11 - mind.01 -   B-V        -      -   I-ARGM-ADV -      -       mind.v.01        mind/P.sr:01:1c.-i:01
544 5  holding + hold    VERB  VBG xcomp 4  - hold.01 -   B-ARG1     B-V    -   I-ARGM-ADV -      -       hang_on.v.03     holding/P.-o:01:01.|pg:0123
544 6  the     + the     DET   DT  det   7  - -       -   I-ARG1     B-ARG1 -   I-ARGM-ADV -      -       hang_on.v.03     the/Md.<
544 7  line    - line    NOUN  NN  dobj  5  - -       -   I-ARG1     I-ARG1 -   I-ARGM-ADV -      -       hang_on.v.03     line/Cc..s
544 8  ,       + ,       PUNCT ,   punct 11 - -       -   -          -      -   -          -      -       -                -
544 9  I       - I       PRON  PRP nsubj 11 - -       -   -          -      -   B-ARG0     B-ARG0 -       -                i/Ci
544 10 'll     + will    AUX   MD  aux   11 - -       -   -          -      B-V B-ARGM-MOD -      -       -                'll/Mm.<
544 11 try     + try     VERB  VB  ROOT  11 - try.01  -   -          -      -   B-V        -      -       try.v.01         try/Pd.xsr:r01:r01.-i:01
544 12 to      + to      PART  TO  aux   13 - -       -   -          -      -   B-ARG1     -      -       -                to/Mi.<
544 13 put     + put     VERB  VB  xcomp 11 - put.03  -   -          -      -   I-ARG1     B-V    -       put_through.v.02 put/P.-o:01:01.-i:012
544 14 you     + you     PRON  PRP dobj  13 - -       -   -          -      -   I-ARG1     B-ARG1 B-REF0  -                you/Ci
544 15 through - through ADP   RP  prt   13 - -       -   -          -      -   I-ARG1     -      -       put_through.v.02 through/Ml.r.>
544 16 .       - .       PUNCT .   punct 11 - -       -   -          -      -   -          -      -       -                -

# sent_i = 545
# sent = If you'd just sign here, please.
# hyperedge = (if/T (('d/Mm.< sign/Pd.s??j:0rls:0rls.-i:012) you/Ci just/M here/M please/C))
# hyperedge builder = (545.0/T ((545.2/Mm.< 545.4/Pd.s??j:0rls:0rls.-i:012) 545.1/Ci 545.3/M 545.5/M 545.7/C))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
545 0 If     + if     SCONJ IN  mark   4 - -       -   -          -           if/T
545 1 you    - you    PRON  PRP nsubj  4 - -       -   B-ARG0     -           you/Ci
545 2 'd     + would  AUX   MD  aux    4 - -       B-V B-ARGM-MOD -           'd/Mm.<
545 3 just   + just   ADV   RB  advmod 4 - -       -   B-ARGM-ADV merely.r.01 just/M
545 4 sign   + sign   VERB  VB  ROOT   4 - sign.01 -   B-V        sign.v.01   sign/Pd.s??j:0rls:0rls.-i:012
545 5 here   - here   ADV   RB  advmod 4 - -       -   B-ARGM-LOC here.r.01   here/M
545 6 ,      + ,      PUNCT ,   punct  4 - -       -   -          -           -
545 7 please - please INTJ  UH  intj   4 - -       -   B-ARGM-DIS please.r.01 please/C
545 8 .      - .      PUNCT .   punct  4 - -       -   -          -           -

# sent_i = 546
# sent = If you'd like to see the exhibition, it would be nice to go together.
# hyperedge = ((would/Mm.< be/Pd.xscr:r-21:r-h1.-i:12) (if/T (('d/Mm.< like/P.sr:01:01.-i:01) you/Ci ((to/Mi.< see/P.-o:01:01.-i:012) you/Ci (the/Md.< exhibition/Cc..s)))) it/Ci nice/Ca ((to/Mi.< go/P.?:2:o.-i:12) together/M))
# hyperedge builder = ((546.10/Mm.< 546.11/Pd.xscr:r-21:r-h1.-i:12) (546.0/T ((546.2/Mm.< 546.3/P.sr:01:01.-i:01) 546.1/Ci ((546.4/Mi.< 546.5/P.-o:01:01.-i:012) 546.1/Ci (546.6/Md.< 546.7/Cc..s)))) 546.9/Ci 546.12/Ca ((546.13/Mi.< 546.14/P.?:2:o.-i:12) 546.15/M))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 synset atoms
546 0  If         + if         SCONJ IN  mark   3  - -       -   -          -      -   B-ARGM-ADV -      -               if/T
546 1  you        - you        PRON  PRP nsubj  3  - -       -   B-ARG0     B-ARG0 -   I-ARGM-ADV -      -               you/Ci
546 2  'd         + would      AUX   MD  aux    3  - -       B-V B-ARGM-MOD -      -   I-ARGM-ADV -      -               'd/Mm.<
546 3  like       + like       VERB  VB  advcl  11 - like.01 -   B-V        -      -   I-ARGM-ADV -      wish.v.02       like/P.sr:01:01.-i:01
546 4  to         + to         PART  TO  aux    5  - -       -   B-ARG1     -      -   I-ARGM-ADV -      -               to/Mi.<
546 5  see        + see        VERB  VB  xcomp  3  - see.01  -   I-ARG1     B-V    -   I-ARGM-ADV -      watch.v.03      see/P.-o:01:01.-i:012
546 6  the        + the        DET   DT  det    7  - -       -   I-ARG1     B-ARG1 -   I-ARGM-ADV -      -               the/Md.<
546 7  exhibition - exhibition NOUN  NN  dobj   5  - -       -   I-ARG1     I-ARG1 -   I-ARGM-ADV -      exhibition.n.02 exhibition/Cc..s
546 8  ,          + ,          PUNCT ,   punct  11 - -       -   -          -      -   -          -      -               -
546 9  it         + it         PRON  PRP nsubj  11 - -       -   -          -      -   -          -      -               it/Ci
546 10 would      + would      AUX   MD  aux    11 - -       -   -          -      B-V B-ARGM-MOD -      -               would/Mm.<
546 11 be         + be         VERB  VB  ROOT   11 - be.01   -   -          -      -   B-V        -      be.v.01         be/Pd.xscr:r-21:r-h1.-i:12
546 12 nice       + nice       ADJ   JJ  acomp  11 - -       -   -          -      -   B-ARG2     -      nice.a.01       nice/Ca
546 13 to         + to         PART  TO  aux    14 - -       -   -          -      -   B-ARG1     -      -               to/Mi.<
546 14 go         + go         VERB  VB  xcomp  11 - go.22   -   -          -      -   I-ARG1     B-V    travel.v.01     go/P.?:2:o.-i:12
546 15 together   - together   ADV   RB  advmod 14 - -       -   -          -      -   I-ARG1     B-ARG2 together.r.03   together/M
546 16 .          - .          PUNCT .   punct  11 - -       -   -          -      -   -          -      -               -

# sent_i = 547
# sent = If they posted the parcel yesterday, it won't get here before Friday.
# hyperedge = ((wo/Mm.< (n't/Mn.< get/Pd.xs?x:r12t:r1gt.-i:012)) (if/T (posted/P.sox:01t:01t.<f:0123 they/Ci (the/Md.< parcel/Cc..s) yesterday/Cc..s.d)) (+/Jc.rm.rc it/Ci (the/Md.< parcel/Cc..s)) here/M (before/Tt friday/Cp..s.d))
# hyperedge builder = ((547.8/Mm.< (547.9/Mn.< 547.10/Pd.xs?x:r12t:r1gt.-i:012)) (547.0/T (547.2/P.sox:01t:01t.<f:0123 547.1/Ci (547.3/Md.< 547.4/Cc..s) 547.5/Cc..s.d)) (+/Jc.rm.rc 547.7/Ci (547.3/Md.< 547.4/Cc..s)) 547.11/M (547.12/Tt 547.13/Cp..s.d))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
547 0  If        + if        SCONJ IN  mark     2  -      -       -          -   B-ARGM-ADV -       -              if/T
547 1  they      + they      PRON  PRP nsubj    2  -      -       B-ARG0     -   I-ARGM-ADV -       -              they/Ci
547 2  posted    + post      VERB  VBD advcl    10 -      post.04 B-V        -   I-ARGM-ADV -       mail.v.02      posted/P.sox:01t:01t.<f:0123
547 3  the       + the       DET   DT  det      4  -      -       B-ARG1     -   I-ARGM-ADV B-MAIN0 -              the/Md.<
547 4  parcel    + parcel    NOUN  NN  dobj     2  -      -       I-ARG1     -   I-ARGM-ADV I-MAIN0 package.n.02   parcel/Cc..s
547 5  yesterday - yesterday NOUN  NN  npadvmod 2  B-DATE -       B-ARGM-TMP -   I-ARGM-ADV -       yesterday.n.01 yesterday/Cc..s.d
547 6  ,         + ,         PUNCT ,   punct    10 -      -       -          -   -          -       -              -
547 7  it        + it        PRON  PRP nsubj    10 -      -       -          -   B-ARG1     B-REF0  -              it/Ci
547 8  wo        - will      AUX   MD  aux      10 -      -       -          B-V B-ARGM-MOD -       -              wo/Mm.<
547 9  n't       + not       PART  RB  neg      10 -      -       -          -   B-ARGM-NEG -       not.r.01       n't/Mn.<
547 10 get       + get       VERB  VB  ROOT     10 -      get.05  -          -   B-V        -       arrive.v.01    get/Pd.xs?x:r12t:r1gt.-i:012
547 11 here      + here      ADV   RB  advmod   10 -      -       -          -   B-ARG2     -       here.r.01      here/M
547 12 before    + before    ADP   IN  prep     10 -      -       -          -   B-ARGM-TMP -       earlier.r.01   before/Tt
547 13 Friday    - Friday    PROPN NNP pobj     12 B-DATE -       -          -   I-ARGM-TMP -       friday.n.01    friday/Cp..s.d
547 14 .         - .         PUNCT .   punct    10 -      -       -          -   -          -       -              -

# sent_i = 548
# sent = The man would have died if the ambulance hadn't arrived so quickly.
# hyperedge = ((would/Mm.< (have/Mv.< died/Pd.sx:1r:1r.<pf:12)) (the/Md.< man/Cc..s) (if/T ((had/Mv.< (n't/Mn.< arrived/P.s?:1m:1m.<pf:1234)) (the/Md.< ambulance/Cc..s) (so/M.< quickly/M))))
# hyperedge builder = ((548.2/Mm.< (548.3/Mv.< 548.4/Pd.sx:1r:1r.<pf:12)) (548.0/Md.< 548.1/Cc..s) (548.5/T ((548.8/Mv.< (548.9/Mn.< 548.10/P.s?:1m:1m.<pf:1234)) (548.6/Md.< 548.7/Cc..s) (548.11/M.< 548.12/M))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
548 0  The       + the       DET   DT  det    1  - -         -   -   B-ARG1     -   -          -              the/Md.<
548 1  man       + man       NOUN  NN  nsubj  4  - -         -   -   I-ARG1     -   -          man.n.01       man/Cc..s
548 2  would     + would     AUX   MD  aux    4  - -         B-V -   B-ARGM-MOD -   -          -              would/Mm.<
548 3  have      + have      AUX   VB  aux    4  - have.01   -   B-V -          -   -          -              have/Mv.<
548 4  died      + die       VERB  VBN ROOT   4  - die.01    -   -   B-V        -   -          die.v.01       died/Pd.sx:1r:1r.<pf:12
548 5  if        + if        SCONJ IN  mark   10 - -         -   -   B-ARGM-ADV -   -          -              if/T
548 6  the       + the       DET   DT  det    7  - -         -   -   I-ARGM-ADV -   B-ARG1     -              the/Md.<
548 7  ambulance + ambulance NOUN  NN  nsubj  10 - -         -   -   I-ARGM-ADV -   I-ARG1     ambulance.n.01 ambulance/Cc..s
548 8  had       - have      AUX   VBD aux    10 - have.01   -   -   I-ARGM-ADV B-V -          -              had/Mv.<
548 9  n't       + not       PART  RB  neg    10 - -         -   -   I-ARGM-ADV -   B-ARGM-NEG -              n't/Mn.<
548 10 arrived   + arrive    VERB  VBN advcl  4  - arrive.01 -   -   I-ARGM-ADV -   B-V        arrive.v.01    arrived/P.s?:1m:1m.<pf:1234
548 11 so        + so        ADV   RB  advmod 12 - -         -   -   I-ARGM-ADV -   B-ARGM-MNR so.r.01        so/M.<
548 12 quickly   - quickly   ADV   RB  advmod 10 - -         -   -   I-ARGM-ADV -   I-ARGM-MNR promptly.r.01  quickly/M
548 13 .         - .         PUNCT .   punct  4  - -         -   -   -          -   -          -              -

# sent_i = 549
# sent = If I'd phoned to renew the books, I wouldn't have had to pay a fine.
# hyperedge = ((would/Mm.< (n't/Mn.< (have/Mv.< had/Pd.xsr:r--:!--.<pf))) (if/T (('d/Mv.< phoned/P.sr:02:01.<pf:012) i/Ci ((to/Mi.< renew/P.-o:01:01.-i:01) i/Ci (the/Md.< books/Cc..p)))) i/Ci ((to/Mi.< pay/P.-o:01:0q.-i:0123) i/Ci (a/Md.< fine/Cc..s)))
# hyperedge builder = ((549.10/Mm.< (549.11/Mn.< (549.12/Mv.< 549.13/Pd.xsr:r--:!--.<pf))) (549.0/T ((549.2/Mv.< 549.3/P.sr:02:01.<pf:012) 549.1/Ci ((549.4/Mi.< 549.5/P.-o:01:01.-i:01) 549.1/Ci (549.6/Md.< 549.7/Cc..p)))) 549.9/Ci ((549.14/Mi.< 549.15/P.-o:01:0q.-i:0123) 549.9/Ci (549.16/Md.< 549.17/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 synset atoms
549 0  If     + if    SCONJ IN  mark  3  - -        -   -      -      -   B-ARGM-ADV -          -       -               if/T
549 1  I      - I     PRON  PRP nsubj 3  - -        -   B-ARG0 B-ARG0 -   I-ARGM-ADV -          B-MAIN0 -               i/Ci
549 2  'd     + have  AUX   VBD aux   3  - have.01  B-V -      -      -   I-ARGM-ADV -          -       -               'd/Mv.<
549 3  phoned + phone VERB  VBN advcl 13 - phone.01 -   B-V    -      -   I-ARGM-ADV -          -       call.v.03       phoned/P.sr:02:01.<pf:012
549 4  to     + to    PART  TO  aux   5  - -        -   B-ARG2 -      -   I-ARGM-ADV -          -       -               to/Mi.<
549 5  renew  + renew VERB  VB  xcomp 3  - renew.01 -   I-ARG2 B-V    -   I-ARGM-ADV -          -       regenerate.v.01 renew/P.-o:01:01.-i:01
549 6  the    + the   DET   DT  det   7  - -        -   I-ARG2 B-ARG1 -   I-ARGM-ADV -          -       -               the/Md.<
549 7  books  - book  NOUN  NNS dobj  5  - -        -   I-ARG2 I-ARG1 -   I-ARGM-ADV -          -       book.n.01       books/Cc..p
549 8  ,      + ,     PUNCT ,   punct 13 - -        -   -      -      -   -          -          -       -               -
549 9  I      + I     PRON  PRP nsubj 13 - -        -   -      -      -   -          B-ARG0     B-REF0  -               i/Ci
549 10 would  - would AUX   MD  aux   13 - -        -   -      -      -   B-ARGM-MOD -          -       -               would/Mm.<
549 11 n't    + not   PART  RB  neg   13 - -        -   -      -      -   B-ARGM-NEG -          -       -               n't/Mn.<
549 12 have   + have  AUX   VB  aux   13 - have.01  -   -      -      B-V -          -          -       -               have/Mv.<
549 13 had    + have  VERB  VBN ROOT  13 - have.02  -   -      -      -   B-V        B-ARGM-MOD -       -               had/Pd.xsr:r--:!--.<pf
549 14 to     + to    PART  TO  aux   15 - -        -   -      -      -   -          -          -       -               to/Mi.<
549 15 pay    + pay   VERB  VB  xcomp 13 - pay.01   -   -      -      -   -          B-V        -       pay.v.01        pay/P.-o:01:0q.-i:0123
549 16 a      + a     DET   DT  det   17 - -        -   -      -      -   -          B-ARG1     -       -               a/Md.<
549 17 fine   - fine  NOUN  NN  dobj  15 - -        -   -      -      -   -          I-ARG1     -       fine.n.01       fine/Cc..s
549 18 .      - .     PUNCT .   punct 13 - -        -   -      -      -   -          -          -       -               -

# sent_i = 550
# sent = If I'd written the address down, I could have saved myself some trouble.
# hyperedge = ((could/Mm.< (have/Mv.< saved/Pd.xsio:r0?1:r0?1.<pf:0123)) (if/T (('d/Mv.< (down/Ml.r.> written/P.so:01:01.<pf:01)) i/Ci (the/Md.< address/Cc..s))) i/Ci (+/Jc.rm.rr myself/Ci i/Ci) (some/Md.< trouble/Cc..s))
# hyperedge builder = ((550.9/Mm.< (550.10/Mv.< 550.11/Pd.xsio:r0?1:r0?1.<pf:0123)) (550.0/T ((550.2/Mv.< (550.6/Ml.r.> 550.3/P.so:01:01.<pf:01)) 550.1/Ci (550.4/Md.< 550.5/Cc..s))) 550.8/Ci (+/Jc.rm.rr 550.12/Ci 550.1/Ci) (550.13/Md.< 550.14/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
550 0  If      + if      SCONJ IN  mark   3  - -             -   -      -   B-ARGM-ADV -       -               if/T
550 1  I       - I       PRON  PRP nsubj  3  - -             -   B-ARG0 -   I-ARGM-ADV B-MAIN0 -               i/Ci
550 2  'd      + have    AUX   VBD aux    3  - have.01       B-V -      -   I-ARGM-ADV -       -               'd/Mv.<
550 3  written + write   VERB  VBN advcl  11 - write_down.03 -   B-V    -   I-ARGM-ADV -       write_down.v.01 written/P.so:01:01.<pf:01
550 4  the     + the     DET   DT  det    5  - -             -   B-ARG1 -   I-ARGM-ADV -       -               the/Md.<
550 5  address + address NOUN  NN  dobj   3  - -             -   I-ARG1 -   I-ARGM-ADV -       address.n.02    address/Cc..s
550 6  down    - down    ADP   RP  prt    3  - -             -   -      -   I-ARGM-ADV -       write_down.v.01 down/Ml.r.>
550 7  ,       + ,       PUNCT ,   punct  11 - -             -   -      -   -          -       -               -
550 8  I       + I       PRON  PRP nsubj  11 - -             -   -      -   B-ARG0     B-REF0  -               i/Ci
550 9  could   + could   AUX   MD  aux    11 - -             -   -      -   B-ARGM-MOD -       -               could/Mm.<
550 10 have    + have    AUX   VB  aux    11 - have.01       -   -      B-V -          -       -               have/Mv.<
550 11 saved   + save    VERB  VBN ROOT   11 - save.01       -   -      -   B-V        -       save.v.06       saved/Pd.xsio:r0?1:r0?1.<pf:0123
550 12 myself  + myself  PRON  PRP dative 11 - -             -   -      -   B-ARGM-REC B-REF0  -               myself/Ci
550 13 some    + some    DET   DT  det    14 - -             -   -      -   B-ARG1     -       some.a.01       some/Md.<
550 14 trouble - trouble NOUN  NN  dobj   11 - -             -   -      -   I-ARG1     -       trouble.n.04    trouble/Cc..s
550 15 .       - .       PUNCT .   punct  11 - -             -   -      -   -          -       -               -

# sent_i = 551
# sent = If he hadn't been evicted by his landlord, he wouldn't have been sleeping in the streets.
# hyperedge = ((would/Mm.< (n't/Mn.< (have/Mv.< (been/Mv.< sleeping/Pd.xsx:r0l:r0l.|pg:012)))) (if/T ((had/Mv.< (n't/Mn.< (been/Mv.< evicted/P.pa:10:10.<pf:012))) he/Ci (by/T ((+/Jc.rm.rr his/Mp he/Ci) landlord/Cc..s)))) he/Ci (in/Tl (the/Md.< streets/Cc..p)))
# hyperedge builder = ((551.11/Mm.< (551.12/Mn.< (551.13/Mv.< (551.14/Mv.< 551.15/Pd.xsx:r0l:r0l.|pg:012)))) (551.0/T ((551.2/Mv.< (551.3/Mn.< (551.4/Mv.< 551.5/P.pa:10:10.<pf:012))) 551.1/Ci (551.6/T ((+/Jc.rm.rr 551.7/Mp 551.1/Ci) 551.8/Cc..s)))) 551.10/Ci (551.16/Tl (551.17/Md.< 551.18/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 synset atoms
551 0  If       + if       SCONJ IN   mark      5  - -        -   -   -          -   -   B-ARGM-ADV -       -             if/T
551 1  he       + he       PRON  PRP  nsubjpass 5  - -        -   -   B-ARG1     -   -   I-ARGM-ADV B-MAIN0 -             he/Ci
551 2  had      - have     AUX   VBD  aux       5  - have.01  B-V -   -          -   -   I-ARGM-ADV -       -             had/Mv.<
551 3  n't      + not      PART  RB   neg       5  - -        -   -   B-ARGM-NEG -   -   I-ARGM-ADV -       not.r.01      n't/Mn.<
551 4  been     + be       AUX   VBN  auxpass   5  - be.03    -   B-V -          -   -   I-ARGM-ADV -       -             been/Mv.<
551 5  evicted  + evict    VERB  VBN  advcl     15 - evict.01 -   -   B-V        -   -   I-ARGM-ADV -       evict.v.02    evicted/P.pa:10:10.<pf:012
551 6  by       + by       ADP   IN   agent     5  - -        -   -   B-ARG0     -   -   I-ARGM-ADV -       -             by/T
551 7  his      + his      PRON  PRP$ poss      8  - -        -   -   I-ARG0     -   -   I-ARGM-ADV B-REF0  -             his/Mp
551 8  landlord - landlord NOUN  NN   pobj      6  - -        -   -   I-ARG0     -   -   I-ARGM-ADV -       landlord.n.01 landlord/Cc..s
551 9  ,        + ,        PUNCT ,    punct     15 - -        -   -   -          -   -   -          -       -             -
551 10 he       + he       PRON  PRP  nsubj     15 - -        -   -   -          -   -   B-ARG0     B-REF0  -             he/Ci
551 11 would    - would    AUX   MD   aux       15 - -        -   -   -          -   -   B-ARGM-MOD -       -             would/Mm.<
551 12 n't      + not      PART  RB   neg       15 - -        -   -   -          -   -   B-ARGM-NEG -       not.r.01      n't/Mn.<
551 13 have     + have     AUX   VB   aux       15 - have.01  -   -   -          B-V -   -          -       -             have/Mv.<
551 14 been     + be       AUX   VBN  aux       15 - be.03    -   -   -          -   B-V -          -       -             been/Mv.<
551 15 sleeping + sleep    VERB  VBG  ROOT      15 - sleep.01 -   -   -          -   -   B-V        -       sleep.v.01    sleeping/Pd.xsx:r0l:r0l.|pg:012
551 16 in       + in       ADP   IN   prep      15 - -        -   -   -          -   -   B-ARGM-LOC -       -             in/Tl
551 17 the      + the      DET   DT   det       18 - -        -   -   -          -   -   I-ARGM-LOC -       -             the/Md.<
551 18 streets  - street   NOUN  NNS  pobj      16 - -        -   -   -          -   -   I-ARGM-LOC -       street.n.03   streets/Cc..p
551 19 .        - .        PUNCT .    punct     15 - -        -   -   -          -   -   -          -       -             -

# sent_i = 552
# sent = If you hadn't woken me up in the middle of the night, I wouldn't feel so tired now.
# hyperedge = ((would/Mm.< (n't/Mn.< feel/Pd.xsc?:r01t:r11t.-i:012)) (if/T ((had/Mv.< (n't/Mn.< (up/Ml.r.> woken/P.sox:01t:01t.<pf:0123))) you/Ci (+/Jc.rm.rr me/Ci i/Ci) (in/Tt (of/Br...t (the/Md.<..t middle/Cc..s.t) (the/Md.<..t night/Cc..s.t))))) i/Ci (so/M.< tired/Ca) now/M)
# hyperedge builder = ((552.15/Mm.< (552.16/Mn.< 552.17/Pd.xsc?:r01t:r11t.-i:012)) (552.0/T ((552.2/Mv.< (552.3/Mn.< (552.6/Ml.r.> 552.4/P.sox:01t:01t.<pf:0123))) 552.1/Ci (+/Jc.rm.rr 552.5/Ci 552.14/Ci) (552.7/Tt (552.10/Br...t (552.8/Md.<..t 552.9/Cc..s.t) (552.11/Md.<..t 552.12/Cc..s.t))))) 552.14/Ci (552.18/M.< 552.19/Ca) 552.20/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
552 0  If     + if     SCONJ IN  mark   4  -      -          -   -          -   B-ARGM-ADV -       -           if/T
552 1  you    + you    PRON  PRP nsubj  4  -      -          -   B-ARG0     -   I-ARGM-ADV -       -           you/Ci
552 2  had    - have   AUX   VBD aux    4  -      have.01    B-V -          -   I-ARGM-ADV -       -           had/Mv.<
552 3  n't    + not    PART  RB  neg    4  -      -          -   B-ARGM-NEG -   I-ARGM-ADV -       -           n't/Mn.<
552 4  woken  + wake   VERB  VBN advcl  17 -      wake_up.02 -   B-V        -   I-ARGM-ADV -       awaken.v.01 woken/P.sox:01t:01t.<pf:0123
552 5  me     + I      PRON  PRP dobj   4  -      -          -   B-ARG1     -   I-ARGM-ADV B-REF0  -           me/Ci
552 6  up     + up     ADP   RP  prt    4  -      -          -   -          -   I-ARGM-ADV -       awaken.v.01 up/Ml.r.>
552 7  in     + in     ADP   IN  prep   4  -      -          -   B-ARGM-TMP -   I-ARGM-ADV -       -           in/Tt
552 8  the    + the    DET   DT  det    9  B-TIME -          -   I-ARGM-TMP -   I-ARGM-ADV -       -           the/Md.<..t
552 9  middle + middle NOUN  NN  pobj   7  I-TIME -          -   I-ARGM-TMP -   I-ARGM-ADV -       middle.n.04 middle/Cc..s.t
552 10 of     + of     ADP   IN  prep   9  I-TIME -          -   I-ARGM-TMP -   I-ARGM-ADV -       -           of/Br...t
552 11 the    + the    DET   DT  det    12 I-TIME -          -   I-ARGM-TMP -   I-ARGM-ADV -       -           the/Md.<..t
552 12 night  - night  NOUN  NN  pobj   10 I-TIME -          -   I-ARGM-TMP -   I-ARGM-ADV -       night.n.01  night/Cc..s.t
552 13 ,      + ,      PUNCT ,   punct  17 -      -          -   -          -   -          -       -           -
552 14 I      + I      PRON  PRP nsubj  17 -      -          -   -          -   B-ARG0     B-MAIN0 -           i/Ci
552 15 would  - would  AUX   MD  aux    17 -      -          -   -          B-V B-ARGM-MOD -       -           would/Mm.<
552 16 n't    + not    PART  RB  neg    17 -      -          -   -          -   B-ARGM-NEG -       -           n't/Mn.<
552 17 feel   + feel   VERB  VB  ROOT   17 -      feel.01    -   -          -   B-V        -       feel.v.04   feel/Pd.xsc?:r01t:r11t.-i:012
552 18 so     + so     ADV   RB  advmod 19 -      -          -   -          -   B-ARG1     -       so.r.01     so/M.<
552 19 tired  + tired  ADJ   JJ  acomp  17 -      -          -   -          -   I-ARG1     -       tired.a.01  tired/Ca
552 20 now    - now    ADV   RB  advmod 17 -      -          -   -          -   B-ARGM-TMP -       now.r.04    now/M
552 21 .      - .      PUNCT .   punct  17 -      -          -   -          -   -          -       -           -

# sent_i = 553
# sent = If you know London so well, you shouldn't have got lost.
# hyperedge = ((should/Mm.< (n't/Mn.< (have/Mv.< (got/Mv.< lost/Pd.xp:r1:r1.<pf:0123)))) (if/T (know/P.so?:01m:01m.|f:0123 you/Ci london/Cp..s.g (so/M.< well/M))) you/Ci)
# hyperedge builder = ((553.8/Mm.< (553.9/Mn.< (553.10/Mv.< (553.11/Mv.< 553.12/Pd.xp:r1:r1.<pf:0123)))) (553.0/T (553.2/P.so?:01m:01m.|f:0123 553.1/Ci 553.3/Cp..s.g (553.4/M.< 553.5/M))) 553.7/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
553 0  If     + if     SCONJ IN  mark      2  -     -       -          -   -   -   B-ARGM-ADV -       -           if/T
553 1  you    + you    PRON  PRP nsubj     2  -     -       B-ARG0     -   -   -   I-ARGM-ADV B-MAIN0 -           you/Ci
553 2  know   + know   VERB  VBP advcl     12 -     know.02 B-V        -   -   -   I-ARGM-ADV -       know.v.04   know/P.so?:01m:01m.|f:0123
553 3  London + London PROPN NNP dobj      2  B-GPE -       B-ARG1     -   -   -   I-ARGM-ADV -       london.n.01 london/Cp..s.g
553 4  so     + so     ADV   RB  advmod    5  -     -       B-ARGM-MNR -   -   -   I-ARGM-ADV -       so.r.01     so/M.<
553 5  well   - well   ADV   RB  advmod    2  -     -       I-ARGM-MNR -   -   -   I-ARGM-ADV -       well.r.01   well/M
553 6  ,      + ,      PUNCT ,   punct     12 -     -       -          -   -   -   -          -       -           -
553 7  you    + you    PRON  PRP nsubjpass 12 -     -       -          -   -   -   B-ARG1     B-REF0  -           you/Ci
553 8  should - should AUX   MD  aux       12 -     -       -          B-V -   -   B-ARGM-MOD -       -           should/Mm.<
553 9  n't    + not    PART  RB  neg       12 -     -       -          -   -   -   B-ARGM-NEG -       not.r.01    n't/Mn.<
553 10 have   + have   AUX   VB  aux       12 -     have.01 -          -   B-V -   -          -       -           have/Mv.<
553 11 got    + get    AUX   VBN auxpass   12 -     get.24  -          -   -   B-V -          -       become.v.01 got/Mv.<
553 12 lost   - lose   VERB  VBN ROOT      12 -     lose.02 -          -   -   -   B-V        -       lose.v.06   lost/Pd.xp:r1:r1.<pf:0123
553 13 .      - .      PUNCT .   punct     12 -     -       -          -   -   -   -          -       -           -

# sent_i = 554
# sent = Should we not succeed, the consequences would be disastrous.
# hyperedge = ((would/Mm.< be/Pd.xsc:r12:r1h.-i:12) ((should/Mm.< (not/Mn.< succeed/P.s:0:0.-i:01)) we/Ci) (the/Md.< consequences/Cc..p) disastrous/Ca)
# hyperedge builder = ((554.7/Mm.< 554.8/Pd.xsc:r12:r1h.-i:12) ((554.0/Mm.< (554.2/Mn.< 554.3/P.s:0:0.-i:01)) 554.1/Ci) (554.5/Md.< 554.6/Cc..p) 554.9/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
554 0  Should       + Should      AUX   MD  aux   3 - -          B-V B-ARGM-MOD -   B-ARGM-ADV -                should/Mm.<
554 1  we           + we          PRON  PRP nsubj 3 - -          -   B-ARG0     -   I-ARGM-ADV -                we/Ci
554 2  not          + not         PART  RB  neg   3 - -          -   B-ARGM-NEG -   I-ARGM-ADV not.r.01         not/Mn.<
554 3  succeed      - succeed     VERB  VB  advcl 8 - succeed.01 -   B-V        -   I-ARGM-ADV succeed.v.01     succeed/P.s:0:0.-i:01
554 4  ,            + ,           PUNCT ,   punct 8 - -          -   -          -   -          -                -
554 5  the          + the         DET   DT  det   6 - -          -   -          -   B-ARG1     -                the/Md.<
554 6  consequences + consequence NOUN  NNS nsubj 8 - -          -   -          -   I-ARG1     consequence.n.01 consequences/Cc..p
554 7  would        + would       AUX   MD  aux   8 - -          -   -          B-V B-ARGM-MOD -                would/Mm.<
554 8  be           + be          VERB  VB  ROOT  8 - be.01      -   -          -   B-V        be.v.01          be/Pd.xsc:r12:r1h.-i:12
554 9  disastrous   - disastrous  ADJ   JJ  acomp 8 - -          -   -          -   B-ARG2     black.s.06       disastrous/Ca
554 10 .            - .           PUNCT .   punct 8 - -          -   -          -   -          -                -

# sent_i = 555
# sent = Were the picture genuine, it would be worth thousands of pounds.
# hyperedge = ((would/Mm.< be/Pd.xsc:r12:r1h.-i:12) (were/P.sc:12:1h.<f:12 (the/Md.< picture/Cc..s) genuine/Ca) (+/Jc.rm.rc it/Ci (the/Md.< picture/Cc..s)) (+/B.ma worth/Ca (of/Br...q thousands/Cc.>.p.q pounds/Cc..p.q)))
# hyperedge builder = ((555.6/Mm.< 555.7/Pd.xsc:r12:r1h.-i:12) (555.0/P.sc:12:1h.<f:12 (555.1/Md.< 555.2/Cc..s) 555.3/Ca) (+/Jc.rm.rc 555.5/Ci (555.1/Md.< 555.2/Cc..s)) (+/B.ma 555.8/Ca (555.10/Br...q 555.9/Cc.>.p.q 555.11/Cc..p.q)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
555 0  Were      + be       VERB  VBD advcl    7  -          be.01 B-V    -   B-ARGM-ADV -       be.v.01            were/P.sc:12:1h.<f:12
555 1  the       + the      DET   DT  det      2  -          -     B-ARG1 -   I-ARGM-ADV B-MAIN0 -                  the/Md.<
555 2  picture   + picture  NOUN  NN  nsubj    0  -          -     I-ARG1 -   I-ARGM-ADV I-MAIN0 picture.n.01       picture/Cc..s
555 3  genuine   - genuine  ADJ   JJ  acomp    0  -          -     B-ARG2 -   I-ARGM-ADV -       genuine.a.01       genuine/Ca
555 4  ,         + ,        PUNCT ,   punct    7  -          -     -      -   -          -       -                  -
555 5  it        + it       PRON  PRP nsubj    7  -          -     -      -   B-ARG1     B-REF0  -                  it/Ci
555 6  would     + would    AUX   MD  aux      7  -          -     -      B-V B-ARGM-MOD -       -                  would/Mm.<
555 7  be        + be       VERB  VB  ROOT     7  -          be.01 -      -   B-V        -       be.v.01            be/Pd.xsc:r12:r1h.-i:12
555 8  worth     + worth    ADJ   JJ  acomp    7  -          -     -      -   B-ARG2     -       worth.s.02         worth/Ca
555 9  thousands + thousand NOUN  NNS npadvmod 8  B-QUANTITY -     -      -   I-ARG2     -       thousand.s.01      thousands/Cc.>.p.q
555 10 of        + of       ADP   IN  prep     9  I-QUANTITY -     -      -   I-ARG2     -       -                  of/Br...q
555 11 pounds    - pound    NOUN  NNS pobj     10 I-QUANTITY -     -      -   I-ARG2     -       british_pound.n.01 pounds/Cc..p.q
555 12 .         - .        PUNCT .   punct    7  -          -     -      -   -          -       -                  -

# sent_i = 556
# sent = Had the guests not complained, nothing would have been done.
# hyperedge = ((would/Mm.< (have/Mv.< (been/Mv.< done/Pd.xp:r1:r1.<pf:01234))) ((had/Mv.< (not/Mn.< complained/P.s:0:0.<pf:012)) (the/Md.< guests/Cc..p)) nothing/Ci..s)
# hyperedge builder = ((556.7/Mm.< (556.8/Mv.< (556.9/Mv.< 556.10/Pd.xp:r1:r1.<pf:01234))) ((556.0/Mv.< (556.3/Mn.< 556.4/P.s:0:0.<pf:012)) (556.1/Md.< 556.2/Cc..p)) 556.6/Ci..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
556 0  Had        + have     AUX   VBD aux       4  - have.01     B-V -          -   -   B-ARGM-ADV -             had/Mv.<
556 1  the        + the      DET   DT  det       2  - -           -   B-ARG0     -   -   I-ARGM-ADV -             the/Md.<
556 2  guests     + guest    NOUN  NNS nsubj     4  - -           -   I-ARG0     -   -   I-ARGM-ADV guest.n.01    guests/Cc..p
556 3  not        + not      PART  RB  neg       4  - -           -   B-ARGM-NEG -   -   I-ARGM-ADV not.r.01      not/Mn.<
556 4  complained - complain VERB  VBN advcl     10 - complain.01 -   B-V        -   -   I-ARGM-ADV complain.v.01 complained/P.s:0:0.<pf:012
556 5  ,          + ,        PUNCT ,   punct     10 - -           -   -          -   -   -          -             -
556 6  nothing    + nothing  PRON  NN  nsubjpass 10 - -           -   -          -   -   B-ARG1     nothing.n.01  nothing/Ci..s
556 7  would      + would    AUX   MD  aux       10 - -           -   -          -   -   B-ARGM-MOD -             would/Mm.<
556 8  have       + have     AUX   VB  aux       10 - have.01     -   -          B-V -   -          -             have/Mv.<
556 9  been       + be       AUX   VBN auxpass   10 - be.03       -   -          -   B-V -          -             been/Mv.<
556 10 done       - do       VERB  VBN ROOT      10 - do.02       -   -          -   -   B-V        do.v.03       done/Pd.xp:r1:r1.<pf:01234
556 11 .          - .        PUNCT .   punct     10 - -           -   -          -   -   -          -             -

# sent_i = 557
# sent = We're going to have a picnic unless it rains.
# hyperedge = (('re/Mv.< going/Pd.sr:--:--.|pg) we/Ci ((to/Mi.< have/P.-ox:0k-:!!-.-i) we/Ci (a/Md.< picnic/Cc..s) (unless/T (rains/P.s:-:-.|f--3s:012 it/Ci))))
# hyperedge builder = ((557.1/Mv.< 557.2/Pd.sr:--:--.|pg) 557.0/Ci ((557.3/Mi.< 557.4/P.-ox:0k-:!!-.-i) 557.0/Ci (557.5/Md.< 557.6/Cc..s) (557.7/T (557.9/P.s:-:-.|f--3s:012 557.8/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
557 0  We     - we     PRON  PRP nsubj 2 - -         -   -   -          B-ARG0     -   -              we/Ci
557 1  're    + be     AUX   VBP aux   2 - be.03     B-V -   -          -          -   -              're/Mv.<
557 2  going  + go     VERB  VBG ROOT  2 - go.04     -   B-V -          B-ARGM-MOD -   -              going/Pd.sr:--:--.|pg
557 3  to     + to     PART  TO  aux   4 - -         -   -   -          -          -   -              to/Mi.<
557 4  have   + have   VERB  VB  xcomp 2 - have.LV   -   -   B-V        B-ARGM-LVB -   hold.v.03      have/P.-ox:0k-:!!-.-i
557 5  a      + a      DET   DT  det   6 - -         -   -   -          -          -   -              a/Md.<
557 6  picnic + picnic NOUN  NN  dobj  4 - picnic.00 -   -   B-ARGM-PRR B-V        -   field_day.n.04 picnic/Cc..s
557 7  unless + unless SCONJ IN  mark  9 - -         -   -   -          -          -   -              unless/T
557 8  it     + it     PRON  PRP nsubj 9 - -         -   -   -          -          -   -              it/Ci
557 9  rains  - rain   VERB  VBZ advcl 4 - rain.01   -   -   -          -          B-V rain.v.01      rains/P.s:-:-.|f--3s:012
557 10 .      - .      PUNCT .   punct 2 - -         -   -   -          -          -   -              -

# sent_i = 558
# sent = We're going to have a picnic if it doesn't rain.
# hyperedge = (('re/Mv.< going/Pd.sr:--:--.|pg) we/Ci ((to/Mi.< have/P.-ox:0k-:!!-.-i) we/Ci (a/Md.< picnic/Cc..s) (if/T ((does/Mv.< (n't/Mn.< rain/P.s:-:-.-i:012)) it/Ci))))
# hyperedge builder = ((558.1/Mv.< 558.2/Pd.sr:--:--.|pg) 558.0/Ci ((558.3/Mi.< 558.4/P.-ox:0k-:!!-.-i) 558.0/Ci (558.5/Md.< 558.6/Cc..s) (558.7/T ((558.9/Mv.< (558.10/Mn.< 558.11/P.s:-:-.-i:012)) 558.8/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 synset atoms
558 0  We     - we     PRON  PRP nsubj 2  - -         -   -   -          B-ARG0     -   -          -              we/Ci
558 1  're    + be     AUX   VBP aux   2  - be.03     B-V -   -          -          -   -          -              're/Mv.<
558 2  going  + go     VERB  VBG ROOT  2  - go.04     -   B-V -          B-ARGM-MOD -   -          -              going/Pd.sr:--:--.|pg
558 3  to     + to     PART  TO  aux   4  - -         -   -   -          -          -   -          -              to/Mi.<
558 4  have   + have   VERB  VB  xcomp 2  - have.LV   -   -   B-V        B-ARGM-LVB -   -          hold.v.03      have/P.-ox:0k-:!!-.-i
558 5  a      + a      DET   DT  det   6  - -         -   -   -          -          -   -          -              a/Md.<
558 6  picnic + picnic NOUN  NN  dobj  4  - picnic.00 -   -   B-ARGM-PRR B-V        -   -          field_day.n.04 picnic/Cc..s
558 7  if     + if     SCONJ IN  mark  11 - -         -   -   -          -          -   -          -              if/T
558 8  it     + it     PRON  PRP nsubj 11 - -         -   -   -          -          -   -          -              it/Ci
558 9  does   - do     AUX   VBZ aux   11 - do.01     -   -   -          -          B-V -          -              does/Mv.<
558 10 n't    + not    PART  RB  neg   11 - -         -   -   -          -          -   B-ARGM-NEG not.r.01       n't/Mn.<
558 11 rain   - rain   VERB  VB  advcl 4  - rain.01   -   -   -          -          -   B-V        rain.v.01      rain/P.s:-:-.-i:012
558 12 .      - .      PUNCT .   punct 2  - -         -   -   -          -          -   -          -              -

# sent_i = 559
# sent = Unless you refund my money, I shall take legal action.
# hyperedge = ((shall/Mm.< take/Pd.xso:r0k:!!!.-i) (unless/T (refund/P.so:01:01.|f:0123 you/Ci ((+/Jc.rm.rr my/Mp i/Ci) money/Cc..s))) i/Ci (legal/Ma.< action/Cc..s))
# hyperedge builder = ((559.7/Mm.< 559.8/Pd.xso:r0k:!!!.-i) (559.0/T (559.2/P.so:01:01.|f:0123 559.1/Ci ((+/Jc.rm.rr 559.3/Mp 559.6/Ci) 559.4/Cc..s))) 559.6/Ci (559.9/Ma.< 559.10/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
559 0  Unless + unless SCONJ IN   mark  2  - -         -      -   -          B-ARGM-ADV -       -                 unless/T
559 1  you    + you    PRON  PRP  nsubj 2  - -         B-ARG0 -   -          I-ARGM-ADV -       -                 you/Ci
559 2  refund + refund VERB  VBP  advcl 8  - refund.01 B-V    -   -          I-ARGM-ADV -       refund.v.01       refund/P.so:01:01.|f:0123
559 3  my     + my     PRON  PRP$ poss  4  - -         B-ARG1 -   -          I-ARGM-ADV B-REF0  -                 my/Mp
559 4  money  - money  NOUN  NN   dobj  2  - -         I-ARG1 -   -          I-ARGM-ADV -       money.n.01        money/Cc..s
559 5  ,      + ,      PUNCT ,    punct 8  - -         -      -   -          -          -       -                 -
559 6  I      + I      PRON  PRP  nsubj 8  - -         -      -   -          B-ARG0     B-MAIN0 -                 i/Ci
559 7  shall  + shall  AUX   MD   aux   8  - -         -      B-V -          B-ARGM-MOD -       -                 shall/Mm.<
559 8  take   + take   VERB  VB   ROOT  8  - take.LV   -      -   B-V        B-ARGM-LVB -       take.v.01         take/Pd.xso:r0k:!!!.-i
559 9  legal  + legal  ADJ   JJ   amod  10 - -         -      -   -          -          -       legal_action.n.01 legal/Ma.<
559 10 action - action NOUN  NN   dobj  8  - act.02    -      -   B-ARGM-PRR B-V        -       legal_action.n.01 action/Cc..s
559 11 .      - .      PUNCT .    punct 8  - -         -      -   -          -          -       -                 -

# sent_i = 560
# sent = I took three novels on holiday in case I felt like doing some reading.
# hyperedge = (took/P.soxx:01tr:01tr.<f:0123 i/Ci (three/M#.<..c novels/Cc..p) (on/Tt holiday/Cc..s) ((case/M.>.s in/T) (felt/Pd.sx:01:01.<f:01 i/Ci (like/T (doing/P.-o:01:01.|pg:01234 i/Ci (some/Md.< reading/Cc..s))))))
# hyperedge builder = (560.1/P.soxx:01tr:01tr.<f:0123 560.0/Ci (560.2/M#.<..c 560.3/Cc..p) (560.4/Tt 560.5/Cc..s) ((560.7/M.>.s 560.6/T) (560.9/Pd.sx:01:01.<f:01 560.8/Ci (560.10/T (560.11/P.-o:01:01.|pg:01234 560.8/Ci (560.12/Md.< 560.13/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
560 0  I       + I       PRON  PRP nsubj    1  -          -       B-ARG0     -      -      B-MAIN0 -              i/Ci
560 1  took    + take    VERB  VBD ROOT     1  -          take.01 B-V        -      -      -       bring.v.01     took/P.soxx:01tr:01tr.<f:0123
560 2  three   + three   NUM   CD  nummod   3  B-CARDINAL -       B-ARG1     -      -      -       three.s.01     three/M#.<..c
560 3  novels  + novel   NOUN  NNS dobj     1  -          -       I-ARG1     -      -      -       novel.n.01     novels/Cc..p
560 4  on      + on      ADP   IN  prep     1  -          -       B-ARGM-TMP -      -      -       -              on/Tt
560 5  holiday + holiday NOUN  NN  pobj     4  -          -       I-ARGM-TMP -      -      -       vacation.n.01  holiday/Cc..s
560 6  in      + in      ADP   IN  mark     9  -          -       B-ARGM-ADV -      -      -       in_case.r.01   in/T
560 7  case    + case    NOUN  NN  npadvmod 6  -          -       I-ARGM-ADV -      -      -       in_case.r.01   case/M.>.s
560 8  I       + I       PRON  PRP nsubj    9  -          -       I-ARGM-ADV B-ARG0 B-ARG0 B-REF0  -              i/Ci
560 9  felt    + feel    VERB  VBD advcl    1  -          feel.06 I-ARGM-ADV B-V    -      -       feel_like.v.01 felt/Pd.sx:01:01.<f:01
560 10 like    + like    ADP   IN  prep     9  -          -       I-ARGM-ADV B-ARG1 -      -       feel_like.v.01 like/T
560 11 doing   + do      VERB  VBG pcomp    10 -          do.02   I-ARGM-ADV I-ARG1 B-V    -       perform.v.01   doing/P.-o:01:01.|pg:01234
560 12 some    + some    DET   DT  det      13 -          -       I-ARGM-ADV I-ARG1 B-ARG1 -       some.s.02      some/Md.<
560 13 reading - reading NOUN  NN  dobj     11 -          -       I-ARGM-ADV I-ARG1 I-ARG1 -       reading.n.01   reading/Cc..s
560 14 .       - .       PUNCT .   punct    9  -          -       -          -      -      -       -              -

# sent_i = 561
# sent = I wouldn't go on a camping holiday, even if you paid me.
# hyperedge = ((would/Mm.< (n't/Mn.< go/Pd.sxx:01r:11r.-i:0134)) i/Ci (on/T (a/Md.< (+/B.am camping/Cc.<.s holiday/Cc..s))) (if/T (paid/P.?so:-02:-0g.<f:0123 even/M you/Ci (+/Jc.rm.rr me/Ci i/Ci))))
# hyperedge builder = ((561.1/Mm.< (561.2/Mn.< 561.3/Pd.sxx:01r:11r.-i:0134)) 561.0/Ci (561.4/T (561.5/Md.< (+/B.am 561.6/Cc.<.s 561.7/Cc..s))) (561.10/T (561.12/P.?so:-02:-0g.<f:0123 561.9/M 561.11/Ci (+/Jc.rm.rr 561.13/Ci 561.0/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
561 0  I       + I       PRON  PRP nsubj    3  - -      -   B-ARG0     -      B-MAIN0 -             i/Ci
561 1  would   - would   AUX   MD  aux      3  - -      B-V B-ARGM-MOD -      -       -             would/Mm.<
561 2  n't     + not     PART  RB  neg      3  - -      -   B-ARGM-NEG -      -       not.r.01      n't/Mn.<
561 3  go      + go      VERB  VB  ROOT     3  - go.02  -   B-V        -      -       travel.v.01   go/Pd.sxx:01r:11r.-i:0134
561 4  on      + on      ADP   IN  prep     3  - -      -   B-ARG1     -      -       -             on/T
561 5  a       + a       DET   DT  det      7  - -      -   I-ARG1     -      -       -             a/Md.<
561 6  camping + camping NOUN  NN  compound 7  - -      -   I-ARG1     -      -       camping.n.01  camping/Cc.<.s
561 7  holiday - holiday NOUN  NN  pobj     4  - -      -   I-ARG1     -      -       vacation.n.01 holiday/Cc..s
561 8  ,       + ,       PUNCT ,   punct    3  - -      -   -          -      -       -             -
561 9  even    + even    ADV   RB  advmod   12 - -      -   B-ARGM-ADV -      -       even.r.02     even/M
561 10 if      + if      SCONJ IN  mark     12 - -      -   I-ARGM-ADV -      -       -             if/T
561 11 you     + you     PRON  PRP nsubj    12 - -      -   I-ARGM-ADV B-ARG0 -       -             you/Ci
561 12 paid    + pay     VERB  VBD advcl    3  - pay.01 -   I-ARGM-ADV B-V    -       pay.v.01      paid/P.?so:-02:-0g.<f:0123
561 13 me      - I       PRON  PRP dobj     12 - -      -   I-ARGM-ADV B-ARG2 B-REF0  -             me/Ci
561 14 .       - .       PUNCT .   punct    3  - -      -   -          -      -       -             -

# sent_i = 562
# sent = Whether it's summer or winter, our neighbour always wears a pullover.
# hyperedge = (wears/Pd.xs?o:r0t1:r0t1.|f--3s:01 (whether/T ('s/P.sc:12:1h.|f--3s:12 it/Ci (or/J summer/Cc..s.d winter/Cc..s.d))) (our/Mp neighbour/Cc..s) always/M (a/Md.< pullover/Cc..s))
# hyperedge builder = (562.10/Pd.xs?o:r0t1:r0t1.|f--3s:01 (562.0/T (562.2/P.sc:12:1h.|f--3s:12 562.1/Ci (562.4/J 562.3/Cc..s.d 562.5/Cc..s.d))) (562.7/Mp 562.8/Cc..s) 562.9/M (562.11/Md.< 562.12/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
562 0  Whether   + whether   SCONJ IN   mark   2  -      -       -      B-ARGM-ADV -             whether/T
562 1  it        - it        PRON  PRP  nsubj  2  -      -       B-ARG1 I-ARGM-ADV -             it/Ci
562 2  's        + be        VERB  VBZ  advcl  10 -      be.01   B-V    I-ARGM-ADV be.v.01       's/P.sc:12:1h.|f--3s:12
562 3  summer    + summer    NOUN  NN   attr   2  B-DATE -       B-ARG2 I-ARGM-ADV summer.n.01   summer/Cc..s.d
562 4  or        + or        CCONJ CC   cc     3  -      -       I-ARG2 I-ARGM-ADV -             or/J
562 5  winter    - winter    NOUN  NN   conj   3  B-DATE -       I-ARG2 I-ARGM-ADV winter.n.01   winter/Cc..s.d
562 6  ,         + ,         PUNCT ,    punct  10 -      -       -      -          -             -
562 7  our       + our       PRON  PRP$ poss   8  -      -       -      B-ARG0     -             our/Mp
562 8  neighbour + neighbour NOUN  NN   nsubj  10 -      -       -      I-ARG0     neighbor.n.01 neighbour/Cc..s
562 9  always    + always    ADV   RB   advmod 10 -      -       -      B-ARGM-TMP always.r.01   always/M
562 10 wears     + wear      VERB  VBZ  ROOT   10 -      wear.01 -      B-V        wear.v.01     wears/Pd.xs?o:r0t1:r0t1.|f--3s:01
562 11 a         + a         DET   DT   det    12 -      -       -      B-ARG1     -             a/Md.<
562 12 pullover  - pullover  NOUN  NN   dobj   10 -      -       -      I-ARG1     pullover.n.01 pullover/Cc..s
562 13 .         - .         PUNCT .    punct  10 -      -       -      -          -             -

# sent_i = 563
# sent = "I'll go and heat some milk" said Agnes.
# hyperedge = (said/Pd.rs:-0:-0.<f:0123 (and/J (('ll/Mm.< go/P.s:0:1.-i:0134) (+/Jc.rm.rp i/Ci agnes/Cp..s.p)) (heat/P.-o:01:01.-i:012 (+/Jc.rm.rp i/Ci agnes/Cp..s.p) (some/Md.< milk/Cc..s))) agnes/Cp..s.p)
# hyperedge builder = (563.9/Pd.rs:-0:-0.<f:0123 (563.4/J ((563.2/Mm.< 563.3/P.s:0:1.-i:0134) (+/Jc.rm.rp 563.1/Ci 563.10/Cp..s.p)) (563.5/P.-o:01:01.-i:012 (+/Jc.rm.rp 563.1/Ci 563.10/Cp..s.p) (563.6/Md.< 563.7/Cc..s))) 563.10/Cp..s.p)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
563 0  "     - "     PUNCT ``  punct 9 -        -       -   -          -          B-ARGM-DSP -       -          -
563 1  I     - I     PRON  PRP nsubj 3 -        -       -   B-ARG0     B-ARG0     I-ARGM-DSP B-REF0  -          i/Ci
563 2  'll   + will  AUX   MD  aux   3 -        -       B-V B-ARGM-MOD B-ARGM-MOD I-ARGM-DSP -       -          'll/Mm.<
563 3  go    + go    VERB  VB  ccomp 9 -        go.02   -   B-V        -          I-ARGM-DSP -       go.v.03    go/P.s:0:1.-i:0134
563 4  and   + and   CCONJ CC  cc    3 -        -       -   -          -          I-ARGM-DSP -       -          and/J
563 5  heat  + heat  VERB  VB  conj  3 -        heat.01 -   -          B-V        I-ARGM-DSP -       heat.v.01  heat/P.-o:01:01.-i:012
563 6  some  + some  DET   DT  det   7 -        -       -   -          B-ARG1     I-ARGM-DSP -       some.a.01  some/Md.<
563 7  milk  - milk  NOUN  NN  dobj  5 -        -       -   -          I-ARG1     I-ARGM-DSP -       milk.n.01  milk/Cc..s
563 8  "     + "     PUNCT ''  punct 9 -        -       -   -          -          I-ARGM-DSP -       -          -
563 9  said  + say   VERB  VBD ROOT  9 -        say.01  -   -          -          B-V        -       state.v.01 said/Pd.rs:-0:-0.<f:0123
563 10 Agnes - Agnes PROPN NNP nsubj 9 B-PERSON -       -   -          -          B-ARG0     B-MAIN0 -          agnes/Cp..s.p
563 11 .     - .     PUNCT .   punct 9 -        -       -   -          -          -          -       -          -

# sent_i = 564
# sent = Gould was the first to admit "We were simply beaten by a better side."
# hyperedge = (was/Pd.sc:12:1h.<f:12 gould/Cp..s.p (+/Jr.ma (the/Md.< first/M...#) ((to/Mi.< admit/P.-r:0?:0?.-i:012) (the/Md.< first/M...#) ((were/Mv.< beaten/P.p?a:1r0:1r0.<pf:012) we/Ci simply/M (by/T (a/Md.< (better/Mc.< side/Cc..s)))))))
# hyperedge builder = (564.1/Pd.sc:12:1h.<f:12 564.0/Cp..s.p (+/Jr.ma (564.2/Md.< 564.3/M...#) ((564.4/Mi.< 564.5/P.-r:0?:0?.-i:012) (564.2/Md.< 564.3/M...#) ((564.8/Mv.< 564.10/P.p?a:1r0:1r0.<pf:012) 564.7/Ci 564.9/M (564.11/T (564.12/Md.< (564.13/Mc.< 564.14/Cc..s)))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
564 0  Gould  + Gould  PROPN NNP nsubj     1  B-PERSON  -        B-ARG1 -          -   -          -           gould/Cp..s.p
564 1  was    + be     AUX   VBD ROOT      1  -         be.01    B-V    -          -   -          be.v.01     was/Pd.sc:12:1h.<f:12
564 2  the    + the    DET   DT  det       3  -         -        B-ARG2 B-ARG0     -   -          -           the/Md.<
564 3  first  + first  ADJ   JJ  attr      1  B-ORDINAL -        I-ARG2 I-ARG0     -   -          first.a.01  first/M...#
564 4  to     + to     PART  TO  aux       5  -         -        I-ARG2 -          -   -          -           to/Mi.<
564 5  admit  + admit  VERB  VB  relcl     3  -         admit.01 I-ARG2 B-V        -   -          admit.v.01  admit/P.-r:0?:0?.-i:012
564 6  "      - "      PUNCT ``  punct     5  -         -        I-ARG2 -          -   -          -           -
564 7  We     + we     PRON  PRP nsubjpass 10 -         -        I-ARG2 B-ARGM-DSP -   B-ARG1     -           we/Ci
564 8  were   + be     AUX   VBD auxpass   10 -         be.03    I-ARG2 I-ARGM-DSP B-V -          be.v.01     were/Mv.<
564 9  simply + simply ADV   RB  advmod    10 -         -        I-ARG2 I-ARGM-DSP -   B-ARGM-ADV simply.r.03 simply/M
564 10 beaten + beat   VERB  VBN ccomp     5  -         beat.03  I-ARG2 I-ARGM-DSP -   B-V        beat.v.01   beaten/P.p?a:1r0:1r0.<pf:012
564 11 by     + by     ADP   IN  agent     10 -         -        I-ARG2 I-ARGM-DSP -   B-ARG0     -           by/T
564 12 a      + a      DET   DT  det       14 -         -        I-ARG2 I-ARGM-DSP -   I-ARG0     -           a/Md.<
564 13 better + well   ADJ   JJR amod      14 -         -        I-ARG2 I-ARGM-DSP -   I-ARG0     good.s.13   better/Mc.<
564 14 side   - side   NOUN  NN  pobj      11 -         -        I-ARG2 I-ARGM-DSP -   I-ARG0     side.n.02   side/Cc..s
564 15 .      - .      PUNCT .   punct     1  -         -        -      -          -   -          -           -
564 16 "      - "      PUNCT ''  punct     1  -         -        -      -          -   -          -           -

# sent_i = 565
# sent = "Made me laugh more than any comedy I have seen in the West End this year" - Evening Standard
# hyperedge = ((+/B.am..o evening/Cc.<.s.o standard/Cc..s.o) (made/P.r:1:h.<f:0123 (laugh/P.sx:0e:0e.-i:0123 me/Ci ((more/M=.< than/T) (+/Jr.ma (any/Md.< comedy/Cc..s) ((have/Mv.< seen/P.-sxx:10lt:10lt.<pf:012) (any/Md.< comedy/Cc..s) (+/Jc.rm.rr i/Ci me/Ci) (in/Tl (the/Md.<..f (+/B.am..f west/Cp.<.s.f end/Cp..s.f))) (this/Md.<..d year/Cc..s.d)))))))
# hyperedge builder = ((+/B.am..o 565.19/Cc.<.s.o 565.20/Cc..s.o) (565.1/P.r:1:h.<f:0123 (565.3/P.sx:0e:0e.-i:0123 565.2/Ci ((565.4/M=.< 565.5/T) (+/Jr.ma (565.6/Md.< 565.7/Cc..s) ((565.9/Mv.< 565.10/P.-sxx:10lt:10lt.<pf:012) (565.6/Md.< 565.7/Cc..s) (+/Jc.rm.rr 565.8/Ci 565.2/Ci) (565.11/Tl (565.12/Md.<..f (+/B.am..f 565.13/Cp.<.s.f 565.14/Cp..s.f))) (565.15/Md.<..d 565.16/Cc..s.d)))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
565 0  "        - "        PUNCT ``   punct    20 -      -        -      -          -   -          -       -             -
565 1  Made     + make     VERB  VBD  ccomp    20 -      make.01  B-V    -          -   -          -       make.v.02     made/P.r:1:h.<f:0123
565 2  me       + I        PRON  PRP  nsubj    3  -      -        B-ARG1 B-ARG0     -   -          B-MAIN0 -             me/Ci
565 3  laugh    + laugh    VERB  VB   ccomp    1  -      laugh.01 I-ARG1 B-V        -   -          -       laugh.v.01    laugh/P.sx:0e:0e.-i:0123
565 4  more     + more     ADV   RBR  advmod   5  -      -        I-ARG1 B-ARGM-EXT -   -          -       more.r.02     more/M=.<
565 5  than     + than     SCONJ IN   prep     3  -      -        I-ARG1 I-ARGM-EXT -   -          -       -             than/T
565 6  any      + any      DET   DT   det      7  -      -        I-ARG1 I-ARGM-EXT -   B-ARG1     -       any.s.01      any/Md.<
565 7  comedy   + comedy   NOUN  NN   pobj     5  -      -        I-ARG1 I-ARGM-EXT -   I-ARG1     -       comedy.n.01   comedy/Cc..s
565 8  I        + I        PRON  PRP  nsubj    10 -      -        I-ARG1 I-ARGM-EXT -   B-ARG0     B-REF0  -             i/Ci
565 9  have     + have     AUX   VBP  aux      10 -      have.01  I-ARG1 I-ARGM-EXT B-V -          -       -             have/Mv.<
565 10 seen     + see      VERB  VBN  relcl    7  -      see.01   I-ARG1 I-ARGM-EXT -   B-V        -       watch.v.03    seen/P.-sxx:10lt:10lt.<pf:012
565 11 in       + in       ADP   IN   prep     10 -      -        I-ARG1 I-ARGM-EXT -   B-ARGM-LOC -       -             in/Tl
565 12 the      + the      DET   DT   det      14 B-FAC  -        I-ARG1 I-ARGM-EXT -   I-ARGM-LOC -       -             the/Md.<..f
565 13 West     + West     PROPN NNP  compound 14 I-FAC  -        I-ARG1 I-ARGM-EXT -   I-ARGM-LOC -       west_end.n.01 west/Cp.<.s.f
565 14 End      + End      PROPN NNP  pobj     11 I-FAC  -        I-ARG1 I-ARGM-EXT -   I-ARGM-LOC -       west_end.n.01 end/Cp..s.f
565 15 this     + this     DET   DT   det      16 B-DATE -        I-ARG1 I-ARGM-EXT -   B-ARGM-TMP -       -             this/Md.<..d
565 16 year     - year     NOUN  NN   npadvmod 10 I-DATE -        I-ARG1 I-ARGM-EXT -   I-ARGM-TMP -       year.n.01     year/Cc..s.d
565 17 "        + "        PUNCT ''   punct    20 -      -        -      -          -   -          -       -             -
565 18 -        + -        PUNCT HYPH punct    20 -      -        -      -          -   -          -       -             -
565 19 Evening  + evening  NOUN  NN   compound 20 B-ORG  -        -      -          -   -          -       -             evening/Cc.<.s.o
565 20 Standard - standard NOUN  NN   ROOT     20 I-ORG  -        -      -          -   -          -       -             standard/Cc..s.o

# sent_i = 566
# sent = Gould admitted that his team were beaten by a better side.
# hyperedge = (admitted/Pd.sr:01:01.<f:012 gould/Cp..s.p (that/T ((were/Mv.< beaten/P.pa:10:10.<pf:012) ((+/Jc.rm.rp his/Mp gould/Cp..s.p) team/Cc..s) (by/T (a/Md.< (better/Mc.< side/Cc..s))))))
# hyperedge builder = (566.1/Pd.sr:01:01.<f:012 566.0/Cp..s.p (566.2/T ((566.5/Mv.< 566.6/P.pa:10:10.<pf:012) ((+/Jc.rm.rp 566.3/Mp 566.0/Cp..s.p) 566.4/Cc..s) (566.7/T (566.8/Md.< (566.9/Mc.< 566.10/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
566 0  Gould    + Gould PROPN NNP  nsubj     1  B-PERSON -        B-ARG0 -   -      B-MAIN0 -          gould/Cp..s.p
566 1  admitted + admit VERB  VBD  ROOT      1  -        admit.01 B-V    -   -      -       admit.v.01 admitted/Pd.sr:01:01.<f:012
566 2  that     + that  SCONJ IN   mark      6  -        -        B-ARG1 -   -      -       -          that/T
566 3  his      + his   PRON  PRP$ poss      4  -        -        I-ARG1 -   B-ARG1 B-REF0  -          his/Mp
566 4  team     + team  NOUN  NN   nsubjpass 6  -        -        I-ARG1 -   I-ARG1 -       team.n.01  team/Cc..s
566 5  were     + be    AUX   VBD  auxpass   6  -        be.03    I-ARG1 B-V -      -       -          were/Mv.<
566 6  beaten   + beat  VERB  VBN  ccomp     1  -        beat.03  I-ARG1 -   B-V    -       beat.v.01  beaten/P.pa:10:10.<pf:012
566 7  by       + by    ADP   IN   agent     6  -        -        I-ARG1 -   B-ARG0 -       -          by/T
566 8  a        + a     DET   DT   det       10 -        -        I-ARG1 -   I-ARG0 -       -          a/Md.<
566 9  better   + well  ADJ   JJR  amod      10 -        -        I-ARG1 -   I-ARG0 -       good.s.13  better/Mc.<
566 10 side     - side  NOUN  NN   pobj      7  -        -        I-ARG1 -   I-ARG0 -       side.n.02  side/Cc..s
566 11 .        - .     PUNCT .    punct     1  -        -        -      -   -      -       -          -

# sent_i = 567
# sent = Tom says that his feet hurt.
# hyperedge = (says/Pd.sr:01:01.|f--3s:0123 tom/Cp..s.p (that/T (hurt/P.s:1:0.<pf:1 ((+/Jc.rm.rp his/Mp tom/Cp..s.p) feet/Cc..p))))
# hyperedge builder = (567.1/Pd.sr:01:01.|f--3s:0123 567.0/Cp..s.p (567.2/T (567.5/P.s:1:0.<pf:1 ((+/Jc.rm.rp 567.3/Mp 567.0/Cp..s.p) 567.4/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
567 0 Tom  + Tom  PROPN NNP  nsubj 1 B-PERSON -       B-ARG0 -      B-MAIN0 -          tom/Cp..s.p
567 1 says + say  VERB  VBZ  ROOT  1 -        say.01  B-V    -      -       state.v.01 says/Pd.sr:01:01.|f--3s:0123
567 2 that + that SCONJ IN   mark  5 -        -       B-ARG1 -      -       -          that/T
567 3 his  + his  PRON  PRP$ poss  4 -        -       I-ARG1 B-ARG1 B-REF0  -          his/Mp
567 4 feet + foot NOUN  NNS  nsubj 5 -        -       I-ARG1 I-ARG1 -       foot.n.01  feet/Cc..p
567 5 hurt - hurt VERB  VBN  ccomp 1 -        hurt.02 I-ARG1 B-V    -       ache.v.03  hurt/P.s:1:0.<pf:1
567 6 .    - .    PUNCT .    punct 1 -        -       -      -      -       -          -

# sent_i = 568
# sent = Tom says his feet hurt.
# hyperedge = (says/Pd.sr:01:01.|f--3s:0123 tom/Cp..s.p (hurt/P.s:1:0.<pf:1 ((+/Jc.rm.rp his/Mp tom/Cp..s.p) feet/Cc..p)))
# hyperedge builder = (568.1/Pd.sr:01:01.|f--3s:0123 568.0/Cp..s.p (568.4/P.s:1:0.<pf:1 ((+/Jc.rm.rp 568.2/Mp 568.0/Cp..s.p) 568.3/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
568 0 Tom  + Tom  PROPN NNP  nsubj 1 B-PERSON -       B-ARG0 -      B-MAIN0 -          tom/Cp..s.p
568 1 says + say  VERB  VBZ  ROOT  1 -        say.01  B-V    -      -       state.v.01 says/Pd.sr:01:01.|f--3s:0123
568 2 his  + his  PRON  PRP$ poss  3 -        -       B-ARG1 B-ARG1 B-REF0  -          his/Mp
568 3 feet + foot NOUN  NNS  nsubj 4 -        -       I-ARG1 I-ARG1 -       foot.n.01  feet/Cc..p
568 4 hurt - hurt VERB  VBN  ccomp 1 -        hurt.02 I-ARG1 B-V    -       ache.v.03  hurt/P.s:1:0.<pf:1
568 5 .    - .    PUNCT .    punct 1 -        -       -      -      -       -          -

# sent_i = 569
# sent = Gould admitted having lost to a better side.
# hyperedge = (admitted/Pd.sr:01:01.<f:012 gould/Cp..s.p ((having/Mv.< lost/P.-x:02:0g.<pf:012) gould/Cp..s.p (to/T (a/Md.< (better/Mc.< side/Cc..s)))))
# hyperedge builder = (569.1/Pd.sr:01:01.<f:012 569.0/Cp..s.p ((569.2/Mv.< 569.3/P.-x:02:0g.<pf:012) 569.0/Cp..s.p (569.4/T (569.5/Md.< (569.6/Mc.< 569.7/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
569 0 Gould    + Gould PROPN NNP nsubj 1 B-PERSON -        B-ARG0 -   B-ARG0 -          gould/Cp..s.p
569 1 admitted + admit VERB  VBD ROOT  1 -        admit.01 B-V    -   -      admit.v.01 admitted/Pd.sr:01:01.<f:012
569 2 having   + have  AUX   VBG aux   3 -        have.01  B-ARG1 B-V -      -          having/Mv.<
569 3 lost     + lose  VERB  VBN xcomp 1 -        lose.03  I-ARG1 -   B-V    lose.v.02  lost/P.-x:02:0g.<pf:012
569 4 to       + to    ADP   IN  prep  3 -        -        I-ARG1 -   B-ARG2 -          to/T
569 5 a        + a     DET   DT  det   7 -        -        I-ARG1 -   I-ARG2 -          a/Md.<
569 6 better   + well  ADJ   JJR amod  7 -        -        I-ARG1 -   I-ARG2 good.s.13  better/Mc.<
569 7 side     - side  NOUN  NN  pobj  4 -        -        I-ARG1 -   I-ARG2 side.n.02  side/Cc..s
569 8 .        - .     PUNCT .   punct 1 -        -        -      -   -      -          -

# sent_i = 570
# sent = They declared the result to be invalid.
# hyperedge = (declared/Pd.sr:01:01.<f:0123 they/Ci ((to/Mi.< be/P.sc:12:1h.-i:12) (the/Md.< result/Cc..s) invalid/Ca))
# hyperedge builder = (570.1/Pd.sr:01:01.<f:0123 570.0/Ci ((570.4/Mi.< 570.5/P.sc:12:1h.-i:12) (570.2/Md.< 570.3/Cc..s) 570.6/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
570 0 They     + they    PRON  PRP nsubj 1 - -          B-ARG0 -      -            they/Ci
570 1 declared + declare VERB  VBD ROOT  1 - declare.01 B-V    -      declare.v.04 declared/Pd.sr:01:01.<f:0123
570 2 the      + the     DET   DT  det   3 - -          B-ARG1 B-ARG1 -            the/Md.<
570 3 result   + result  NOUN  NN  nsubj 5 - -          I-ARG1 I-ARG1 result.n.03  result/Cc..s
570 4 to       + to      PART  TO  aux   5 - -          I-ARG1 -      -            to/Mi.<
570 5 be       + be      VERB  VB  ccomp 1 - be.01      I-ARG1 B-V    be.v.01      be/P.sc:12:1h.-i:12
570 6 invalid  - invalid ADJ   JJ  acomp 5 - -          I-ARG1 B-ARG2 invalid.a.01 invalid/Ca
570 7 .        - .       PUNCT .   punct 1 - -          -      -      -            -

# sent_i = 571
# sent = There will be no trains on Christmas Day, British Rail announced yesterday.
# hyperedge = (announced/Pd.rsx:10t:10t.<f:0123 ((will/Mm.< be/P.ecx:-1t:-1t.-i:1) there/Me (no/Md.< trains/Cc..p) (on/Tt (+/B.am..d christmas/Cp.<.s.d day/Cp..s.d))) (+/B.am..o british/Cp.<.s.o rail/Cp..s.o) yesterday/Cc..s.d)
# hyperedge builder = (571.11/Pd.rsx:10t:10t.<f:0123 ((571.1/Mm.< 571.2/P.ecx:-1t:-1t.-i:1) 571.0/Me (571.3/Md.< 571.4/Cc..p) (571.5/Tt (+/B.am..d 571.6/Cp.<.s.d 571.7/Cp..s.d))) (+/B.am..o 571.9/Cp.<.s.o 571.10/Cp..s.o) 571.12/Cc..s.d)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
571 0  There     + there     PRON  EX  expl     2  -      -           -   -          B-ARG1     -              there/Me
571 1  will      + will      AUX   MD  aux      2  -      -           B-V B-ARGM-MOD I-ARG1     -              will/Mm.<
571 2  be        + be        VERB  VB  ccomp    11 -      be.02       -   B-V        I-ARG1     be.v.01        be/P.ecx:-1t:-1t.-i:1
571 3  no        + no        DET   DT  det      4  -      -           -   B-ARG1     I-ARG1     no.a.01        no/Md.<
571 4  trains    + train     NOUN  NNS attr     2  -      -           -   I-ARG1     I-ARG1     train.n.01     trains/Cc..p
571 5  on        + on        ADP   IN  prep     2  -      -           -   B-ARGM-TMP I-ARG1     -              on/Tt
571 6  Christmas + Christmas PROPN NNP compound 7  B-DATE -           -   I-ARGM-TMP I-ARG1     christmas.n.02 christmas/Cp.<.s.d
571 7  Day       - Day       PROPN NNP pobj     5  I-DATE -           -   I-ARGM-TMP I-ARG1     christmas.n.02 day/Cp..s.d
571 8  ,         + ,         PUNCT ,   punct    11 -      -           -   -          -          -              -
571 9  British   + British   PROPN NNP compound 10 B-ORG  -           -   -          B-ARG0     -              british/Cp.<.s.o
571 10 Rail      + Rail      PROPN NNP nsubj    11 I-ORG  -           -   -          I-ARG0     -              rail/Cp..s.o
571 11 announced + announce  VERB  VBD ROOT     11 -      announce.01 -   -          B-V        announce.v.01  announced/Pd.rsx:10t:10t.<f:0123
571 12 yesterday - yesterday NOUN  NN  npadvmod 11 B-DATE -           -   -          B-ARGM-TMP yesterday.n.01 yesterday/Cc..s.d
571 13 .         - .         PUNCT .   punct    11 -      -           -   -          -          -              -

# sent_i = 572
# sent = We all wondered what was going on.
# hyperedge = (wondered/Pd.sr:01:10.<f:01 (+/Ba.ma.n we/Ci all/Cd) ((was/Mv.< (on/Ml.r.> going/P.s:1:0.|pg:1)) what/Cw))
# hyperedge builder = (572.2/Pd.sr:01:10.<f:01 (+/Ba.ma.n 572.0/Ci 572.1/Cd) ((572.4/Mv.< (572.6/Ml.r.> 572.5/P.s:1:0.|pg:1)) 572.3/Cw))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
572 0 We       + we     PRON  PRP nsubj 2 - -         B-ARG0 -   -      -           we/Ci
572 1 all      + all    DET   DT  appos 0 - -         I-ARG0 -   -      all.a.01    all/Cd
572 2 wondered + wonder VERB  VBD ROOT  2 - wonder.01 B-V    -   -      wonder.v.01 wondered/Pd.sr:01:10.<f:01
572 3 what     + what   PRON  WP  nsubj 5 - -         B-ARG1 -   B-ARG1 -           what/Cw
572 4 was      + be     AUX   VBD aux   5 - be.03     I-ARG1 B-V -      -           was/Mv.<
572 5 going    + go     VERB  VBG ccomp 2 - go_on.15  I-ARG1 -   B-V    happen.v.01 going/P.s:1:0.|pg:1
572 6 on       - on     ADP   RP  prt   5 - -         I-ARG1 -   -      happen.v.01 on/Ml.r.>
572 7 .        - .      PUNCT .   punct 2 - -         -      -   -      -           -

# sent_i = 573
# sent = But Brian believes watching the kids grow up and learn new things is the biggest joy a dad can experience.
# hyperedge = (but/J (believes/Pd.sr:01:01.|f--3s:012 brian/Cp..s.p (is/P.sc:12:1h.|f--3s:12 (watching/P.r:1:1.|pg:01 (and/J ((up/Ml.r.> grow/P.s:1:0.-i:1) (the/Md.< kids/Cc..p)) (learn/P.-o:01:01.-i:012 (the/Md.< kids/Cc..p) (new/Ma.< things/Cc..p)))) (+/Jr.ma (the/Md.< (biggest/Ms.< joy/Cc..s)) ((can/Mm.< experience/P.-s:10:c1.-i:01) (the/Md.< (biggest/Ms.< joy/Cc..s)) (a/Md.< dad/Cc..s))))))
# hyperedge builder = (573.0/J (573.2/Pd.sr:01:01.|f--3s:012 573.1/Cp..s.p (573.12/P.sc:12:1h.|f--3s:12 (573.3/P.r:1:1.|pg:01 (573.8/J ((573.7/Ml.r.> 573.6/P.s:1:0.-i:1) (573.4/Md.< 573.5/Cc..p)) (573.9/P.-o:01:01.-i:012 (573.4/Md.< 573.5/Cc..p) (573.10/Ma.< 573.11/Cc..p)))) (+/Jr.ma (573.13/Md.< (573.14/Ms.< 573.15/Cc..s)) ((573.18/Mm.< 573.19/P.-s:10:c1.-i:01) (573.13/Md.< (573.14/Ms.< 573.15/Cc..s)) (573.16/Md.< 573.17/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 srl7 synset atoms
573 0  But        + but        CCONJ CC  cc    2  -        -             B-ARGM-DIS -      -      -      -      -   -          -               but/J
573 1  Brian      + Brian      PROPN NNP nsubj 2  B-PERSON -             B-ARG0     -      -      -      -      -   -          -               brian/Cp..s.p
573 2  believes   + believe    VERB  VBZ ROOT  2  -        believe.01    B-V        -      -      -      -      -   -          think.v.01      believes/Pd.sr:01:01.|f--3s:012
573 3  watching   + watch      VERB  VBG csubj 12 -        watch.01      B-ARG1     B-V    -      -      B-ARG1 -   -          watch.v.04      watching/P.r:1:1.|pg:01
573 4  the        + the        DET   DT  det   5  -        -             I-ARG1     B-ARG1 B-ARG1 B-ARG0 I-ARG1 -   -          -               the/Md.<
573 5  kids       + kid        NOUN  NNS nsubj 6  -        -             I-ARG1     I-ARG1 I-ARG1 I-ARG0 I-ARG1 -   -          child.n.01      kids/Cc..p
573 6  grow       + grow       VERB  VB  ccomp 3  -        grow_up.04    I-ARG1     I-ARG1 B-V    -      I-ARG1 -   -          grow_up.v.01    grow/P.s:1:0.-i:1
573 7  up         + up         ADP   RP  prt   6  -        -             I-ARG1     I-ARG1 -      -      I-ARG1 -   -          grow_up.v.01    up/Ml.r.>
573 8  and        + and        CCONJ CC  cc    6  -        -             I-ARG1     I-ARG1 -      -      I-ARG1 -   -          -               and/J
573 9  learn      + learn      VERB  VB  conj  6  -        learn.01      I-ARG1     I-ARG1 -      B-V    I-ARG1 -   -          learn.v.01      learn/P.-o:01:01.-i:012
573 10 new        + new        ADJ   JJ  amod  11 -        -             I-ARG1     I-ARG1 -      B-ARG1 I-ARG1 -   -          new.s.11        new/Ma.<
573 11 things     + thing      NOUN  NNS dobj  9  -        -             I-ARG1     I-ARG1 -      I-ARG1 I-ARG1 -   -          thing.n.08      things/Cc..p
573 12 is         + be         AUX   VBZ ccomp 2  -        be.01         I-ARG1     -      -      -      B-V    -   -          be.v.01         is/P.sc:12:1h.|f--3s:12
573 13 the        + the        DET   DT  det   15 -        -             I-ARG1     -      -      -      B-ARG2 -   B-ARG1     -               the/Md.<
573 14 biggest    + big        ADJ   JJS amod  15 -        -             I-ARG1     -      -      -      I-ARG2 -   I-ARG1     big.s.02        biggest/Ms.<
573 15 joy        + joy        NOUN  NN  attr  12 -        -             I-ARG1     -      -      -      I-ARG2 -   I-ARG1     joy.n.01        joy/Cc..s
573 16 a          + a          DET   DT  det   17 -        -             I-ARG1     -      -      -      I-ARG2 -   B-ARG0     -               a/Md.<
573 17 dad        + dad        NOUN  NN  nsubj 19 -        -             I-ARG1     -      -      -      I-ARG2 -   I-ARG0     dad.n.01        dad/Cc..s
573 18 can        + can        AUX   MD  aux   19 -        -             I-ARG1     -      -      -      I-ARG2 B-V B-ARGM-MOD -               can/Mm.<
573 19 experience - experience VERB  VB  relcl 15 -        experience.01 I-ARG1     -      -      -      I-ARG2 -   B-V        experience.v.03 experience/P.-s:10:c1.-i:01
573 20 .          - .          PUNCT .   punct 2  -        -             -          -      -      -      -      -   -          -               -

# sent_i = 574
# sent = "Some people think it's a woman's job, but I don't think that's relevant any more."
# hyperedge = (but/J (think/Pd.sr:01:01.|f:012 (some/Md.< people/Cc..p) ('s/P.sc:12:1h.|f--3s:12 it/Ci ('s/Bp (a/Md.< woman/Cc..s) job/Cc..s))) ((do/Mv.< (n't/Mn.< think/Pd.sr:01:01.-i:012)) i/Ci ('s/P.sc?:12t:1ht.|f--3s:12 that/Cd relevant/Ca (any/M.< more/M=))))
# hyperedge builder = (574.11/J (574.3/Pd.sr:01:01.|f:012 (574.1/Md.< 574.2/Cc..p) (574.5/P.sc:12:1h.|f--3s:12 574.4/Ci (574.8/Bp (574.6/Md.< 574.7/Cc..s) 574.9/Cc..s))) ((574.13/Mv.< (574.14/Mn.< 574.15/Pd.sr:01:01.-i:012)) 574.12/Ci (574.17/P.sc?:12t:1ht.|f--3s:12 574.16/Cd 574.18/Ca (574.19/M.< 574.20/M=))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
574 0  "        - "        PUNCT ``  punct  3  - -        -      -      -   -          -          -             -
574 1  Some     + some     DET   DT  det    2  - -        B-ARG0 -      -   -          -          some.a.01     some/Md.<
574 2  people   + people   NOUN  NNS nsubj  3  - -        I-ARG0 -      -   -          -          people.n.01   people/Cc..p
574 3  think    + think    VERB  VBP ROOT   3  - think.01 B-V    -      -   -          -          think.v.01    think/Pd.sr:01:01.|f:012
574 4  it       - it       PRON  PRP nsubj  5  - -        B-ARG1 B-ARG1 -   -          -          -             it/Ci
574 5  's       + be       AUX   VBZ ccomp  3  - be.01    I-ARG1 B-V    -   -          -          be.v.01       's/P.sc:12:1h.|f--3s:12
574 6  a        + a        DET   DT  det    7  - -        I-ARG1 B-ARG2 -   -          -          -             a/Md.<
574 7  woman    - woman    NOUN  NN  poss   9  - -        I-ARG1 I-ARG2 -   -          -          woman.n.01    woman/Cc..s
574 8  's       + 's       PART  POS case   7  - -        I-ARG1 I-ARG2 -   -          -          -             's/Bp
574 9  job      - job      NOUN  NN  attr   5  - -        I-ARG1 I-ARG2 -   -          -          job.n.02      job/Cc..s
574 10 ,        + ,        PUNCT ,   punct  3  - -        -      -      -   -          -          -             -
574 11 but      + but      CCONJ CC  cc     3  - -        -      -      -   -          -          -             but/J
574 12 I        + I        PRON  PRP nsubj  15 - -        -      -      -   B-ARG0     -          -             i/Ci
574 13 do       - do       AUX   VBP aux    15 - do.01    -      -      B-V -          -          -             do/Mv.<
574 14 n't      + not      PART  RB  neg    15 - -        -      -      -   B-ARGM-NEG -          not.r.01      n't/Mn.<
574 15 think    + think    VERB  VB  conj   3  - think.01 -      -      -   B-V        -          think.v.01    think/Pd.sr:01:01.-i:012
574 16 that     - that     DET   DT  nsubj  17 - -        -      -      -   B-ARG1     B-ARG1     -             that/Cd
574 17 's       + be       AUX   VBZ ccomp  15 - be.01    -      -      -   I-ARG1     B-V        be.v.01       's/P.sc?:12t:1ht.|f--3s:12
574 18 relevant + relevant ADJ   JJ  acomp  17 - -        -      -      -   I-ARG1     B-ARG2     relevant.a.01 relevant/Ca
574 19 any      + any      DET   DT  advmod 20 - -        -      -      -   I-ARG1     B-ARGM-TMP anymore.r.01  any/M.<
574 20 more     - more     ADV   RBR advmod 17 - -        -      -      -   I-ARG1     I-ARGM-TMP anymore.r.01  more/M=
574 21 .        - .        PUNCT .   punct  15 - -        -      -      -   -          -          -             -
574 22 "        - "        PUNCT ''  punct  15 - -        -      -      -   -          -          -             -

# sent_i = 575
# sent = No one told me you were leaving.
# hyperedge = (told/Pd.sor:021:0g1.<f:012 (no/Md.< one/Cc..s) me/Ci ((were/Mv.< leaving/P.s:0:0.|pg:012) you/Ci))
# hyperedge builder = (575.2/Pd.sor:021:0g1.<f:012 (575.0/Md.< 575.1/Cc..s) 575.3/Ci ((575.5/Mv.< 575.6/P.s:0:0.|pg:012) 575.4/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
575 0 No      + no    DET   DT  det   1 - -        B-ARG0 -   -      no.a.01    no/Md.<
575 1 one     + one   NOUN  NN  nsubj 2 - -        I-ARG0 -   -      one.n.02   one/Cc..s
575 2 told    + tell  VERB  VBD ROOT  2 - tell.01  B-V    -   -      tell.v.02  told/Pd.sor:021:0g1.<f:012
575 3 me      + I     PRON  PRP dobj  2 - -        B-ARG2 -   -      -          me/Ci
575 4 you     + you   PRON  PRP nsubj 6 - -        B-ARG1 -   B-ARG0 -          you/Ci
575 5 were    + be    AUX   VBD aux   6 - be.03    I-ARG1 B-V -      -          were/Mv.<
575 6 leaving - leave VERB  VBG ccomp 2 - leave.11 I-ARG1 -   B-V    leave.v.01 leaving/P.s:0:0.|pg:012
575 7 .       - .     PUNCT .   punct 2 - -        -      -   -      -          -

# sent_i = 576
# sent = "What time is it?" he asked.
# hyperedge = (asked/Pd.rs:?0:?0.<f:0123 (is/P?.cs:21:h1.|f--3s:12 (what/Md.< time/Cc..s) it/Ci) he/Ci)
# hyperedge builder = (576.8/Pd.rs:?0:?0.<f:0123 (576.3/P?.cs:21:h1.|f--3s:12 (576.1/Md.< 576.2/Cc..s) 576.4/Ci) 576.7/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
576 0 "     - "    PUNCT ``  punct 8 - -      -      -          -               -
576 1 What  + what PRON  WP  det   2 - -      B-ARG2 B-ARGM-DSP -               what/Md.<
576 2 time  + time NOUN  NN  attr  3 - -      I-ARG2 I-ARGM-DSP clock_time.n.01 time/Cc..s
576 3 is    + be   AUX   VBZ ccomp 8 - be.01  B-V    I-ARGM-DSP be.v.01         is/P?.cs:21:h1.|f--3s:12
576 4 it    - it   PRON  PRP nsubj 3 - -      B-ARG1 I-ARGM-DSP -               it/Ci
576 5 ?     - ?    PUNCT .   punct 3 - -      -      I-ARGM-DSP -               -
576 6 "     + "    PUNCT ''  punct 8 - -      -      -          -               -
576 7 he    + he   PRON  PRP nsubj 8 - -      -      B-ARG0     -               he/Ci
576 8 asked - ask  VERB  VBD ROOT  8 - ask.01 -      B-V        ask.v.01        asked/Pd.rs:?0:?0.<f:0123
576 9 .     - .    PUNCT .   punct 8 - -      -      -          -               -

# sent_i = 577
# sent = He asked what time it was.
# hyperedge = (asked/Pd.sr:01:01.<f:0123 he/Ci (was/P.cs:21:h1.<f:12 (what/Md.< time/Cc..s) it/Ci))
# hyperedge builder = (577.1/Pd.sr:01:01.<f:0123 577.0/Ci (577.5/P.cs:21:h1.<f:12 (577.2/Md.< 577.3/Cc..s) 577.4/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
577 0 He    + he   PRON  PRP nsubj 1 - -      B-ARG0 -      -               he/Ci
577 1 asked + ask  VERB  VBD ROOT  1 - ask.01 B-V    -      ask.v.01        asked/Pd.sr:01:01.<f:0123
577 2 what  + what PRON  WP  det   3 - -      B-ARG1 B-ARG2 -               what/Md.<
577 3 time  + time NOUN  NN  attr  5 - -      I-ARG1 I-ARG2 clock_time.n.01 time/Cc..s
577 4 it    + it   PRON  PRP nsubj 5 - -      I-ARG1 B-ARG1 -               it/Ci
577 5 was   - be   AUX   VBD ccomp 1 - be.01  I-ARG1 B-V    be.v.01         was/P.cs:21:h1.<f:12
577 6 .     - .    PUNCT .   punct 1 - -      -      -      -               -

# sent_i = 578
# sent = "The time is..." he said.
# hyperedge = (said/Pd.rs:10:10.<f:0123 (is/P.s:1:1.|f--3s:12 (the/Md.< time/Cc..s)) he/Ci)
# hyperedge builder = (578.7/Pd.rs:10:10.<f:0123 (578.3/P.s:1:1.|f--3s:12 (578.1/Md.< 578.2/Cc..s)) 578.6/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
578 0 "    - "    PUNCT ``  punct 7 - -      -      -      -               -
578 1 The  + the  DET   DT  det   2 - -      B-ARG1 B-ARG1 -               the/Md.<
578 2 time + time NOUN  NN  nsubj 3 - -      I-ARG1 I-ARG1 clock_time.n.01 time/Cc..s
578 3 is   - be   AUX   VBZ ccomp 7 - be.01  B-V    I-ARG1 be.v.01         is/P.s:1:1.|f--3s:12
578 4 ...  - ...  PUNCT :   punct 7 - -      -      -      -               -
578 5 "    + "    PUNCT ''  punct 7 - -      -      -      -               -
578 6 he   + he   PRON  PRP nsubj 7 - -      -      B-ARG0 -               he/Ci
578 7 said - say  VERB  VBD ROOT  7 - say.01 -      B-V    state.v.01      said/Pd.rs:10:10.<f:0123
578 8 .    - .    PUNCT .   punct 7 - -      -      -      -               -

# sent_i = 579
# sent = He said what time it was.
# hyperedge = (said/Pd.sr:01:01.<f:0123 he/Ci (was/P.cs:21:h1.<f:12 (what/Md.< time/Cc..s) it/Ci))
# hyperedge builder = (579.1/Pd.sr:01:01.<f:0123 579.0/Ci (579.5/P.cs:21:h1.<f:12 (579.2/Md.< 579.3/Cc..s) 579.4/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
579 0 He   + he   PRON  PRP nsubj 1 - -      B-ARG0 -      -               he/Ci
579 1 said + say  VERB  VBD ROOT  1 - say.01 B-V    -      state.v.01      said/Pd.sr:01:01.<f:0123
579 2 what + what PRON  WP  det   3 - -      B-ARG1 B-ARG2 -               what/Md.<
579 3 time + time NOUN  NN  attr  5 - -      I-ARG1 I-ARG2 clock_time.n.01 time/Cc..s
579 4 it   + it   PRON  PRP nsubj 5 - -      I-ARG1 B-ARG1 -               it/Ci
579 5 was  - be   AUX   VBD ccomp 1 - be.01  I-ARG1 B-V    be.v.01         was/P.cs:21:h1.<f:12
579 6 .    - .    PUNCT .   punct 1 - -      -      -      -               -

# sent_i = 580
# sent = "Robert is part of consortium", mrs Johnson said to her.
# hyperedge = (said/Pd.rsx:?02:?0g.<f:0123 (is/P.sc:12:1h.|f--3s:12 robert/Cp..s.p (of/Br part/Cc..s consortium/Cc..s)) (+/B.am mrs/Cp.<.s johnson/Cp..s.p) (to/T her/Ci))
# hyperedge builder = (580.10/Pd.rsx:?02:?0g.<f:0123 (580.2/P.sc:12:1h.|f--3s:12 580.1/Cp..s.p (580.4/Br 580.3/Cc..s 580.5/Cc..s)) (+/B.am 580.8/Cp.<.s 580.9/Cp..s.p) (580.11/T 580.12/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
580 0  "          - "          PUNCT ``  punct    10 -        -      -      -          -               -
580 1  Robert     + Robert     PROPN NNP nsubj    2  B-PERSON -      B-ARG1 B-ARGM-DSP -               robert/Cp..s.p
580 2  is         + be         AUX   VBZ ccomp    10 -        be.01  B-V    I-ARGM-DSP be.v.01         is/P.sc:12:1h.|f--3s:12
580 3  part       + part       NOUN  NN  attr     2  -        -      B-ARG2 I-ARGM-DSP part.n.01       part/Cc..s
580 4  of         + of         ADP   IN  prep     3  -        -      I-ARG2 I-ARGM-DSP -               of/Br
580 5  consortium - consortium NOUN  NN  pobj     4  -        -      I-ARG2 I-ARGM-DSP consortium.n.01 consortium/Cc..s
580 6  "          - "          PUNCT ''  punct    10 -        -      -      -          -               -
580 7  ,          + ,          PUNCT ,   punct    10 -        -      -      -          -               -
580 8  mrs        + mrs        PROPN NNP compound 9  -        -      -      B-ARG0     mrs.n.01        mrs/Cp.<.s
580 9  Johnson    + Johnson    PROPN NNP nsubj    10 B-PERSON -      -      I-ARG0     -               johnson/Cp..s.p
580 10 said       + say        VERB  VBD ROOT     10 -        say.01 -      B-V        state.v.01      said/Pd.rsx:?02:?0g.<f:0123
580 11 to         + to         ADP   IN  prep     10 -        -      -      B-ARG2     -               to/T
580 12 her        - she        PRON  PRP pobj     11 -        -      -      I-ARG2     -               her/Ci
580 13 .          - .          PUNCT .   punct    10 -        -      -      -          -               -

# sent_i = 581
# sent = Mrs Johnson told her that Robert was part of a consortium.
# hyperedge = (told/Pd.sor:021:0g1.<f:012 (+/B.am mrs/Cp.<.s johnson/Cp..s.p) her/Ci (that/T (was/P.sc:12:1h.<f:12 robert/Cp..s.p (of/Br part/Cc..s (a/Md.< consortium/Cc..s)))))
# hyperedge builder = (581.2/Pd.sor:021:0g1.<f:012 (+/B.am 581.0/Cp.<.s 581.1/Cp..s.p) 581.3/Ci (581.4/T (581.6/P.sc:12:1h.<f:12 581.5/Cp..s.p (581.8/Br 581.7/Cc..s (581.9/Md.< 581.10/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
581 0  Mrs        + Mrs        PROPN NNP compound 1  -        -       B-ARG0 -      mrs.n.01        mrs/Cp.<.s
581 1  Johnson    + Johnson    PROPN NNP nsubj    2  B-PERSON -       I-ARG0 -      -               johnson/Cp..s.p
581 2  told       + tell       VERB  VBD ROOT     2  -        tell.01 B-V    -      tell.v.02       told/Pd.sor:021:0g1.<f:012
581 3  her        + she        PRON  PRP dobj     2  -        -       B-ARG2 -      -               her/Ci
581 4  that       + that       SCONJ IN  mark     6  -        -       B-ARG1 -      -               that/T
581 5  Robert     + Robert     PROPN NNP nsubj    6  B-PERSON -       I-ARG1 B-ARG1 -               robert/Cp..s.p
581 6  was        + be         AUX   VBD ccomp    2  -        be.01   I-ARG1 B-V    be.v.01         was/P.sc:12:1h.<f:12
581 7  part       + part       NOUN  NN  attr     6  -        -       I-ARG1 B-ARG2 part.n.01       part/Cc..s
581 8  of         + of         ADP   IN  prep     7  -        -       I-ARG1 I-ARG2 -               of/Br
581 9  a          + a          DET   DT  det      10 -        -       I-ARG1 I-ARG2 -               a/Md.<
581 10 consortium - consortium NOUN  NN  pobj     8  -        -       I-ARG1 I-ARG2 consortium.n.01 consortium/Cc..s
581 11 .          - .          PUNCT .   punct    2  -        -       -      -      -               -

# sent_i = 582
# sent = He said, "I'm just leaving for the airport."
# hyperedge = (said/Pd.sr:0?:0?.<f:0123 he/Ci (('m/Mv.< leaving/P.s?x:0r2:0rg.|pg:012) (+/Jc.rm.rr i/Ci he/Ci) just/M (for/T (the/Md.< airport/Cc..s))))
# hyperedge builder = (582.1/Pd.sr:0?:0?.<f:0123 582.0/Ci ((582.5/Mv.< 582.7/P.s?x:0r2:0rg.|pg:012) (+/Jc.rm.rr 582.4/Ci 582.0/Ci) 582.6/M (582.8/T (582.9/Md.< 582.10/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
582 0  He      + he      PRON  PRP nsubj  1  - -        B-ARG0     -   -          B-MAIN0 -            he/Ci
582 1  said    - say     VERB  VBD ROOT   1  - say.01   B-V        -   -          -       state.v.01   said/Pd.sr:0?:0?.<f:0123
582 2  ,       + ,       PUNCT ,   punct  1  - -        -          -   -          -       -            -
582 3  "       - "       PUNCT ``  punct  1  - -        -          -   -          -       -            -
582 4  I       - I       PRON  PRP nsubj  7  - -        B-ARGM-DSP -   B-ARG0     B-REF0  -            i/Ci
582 5  'm      + be      AUX   VBP aux    7  - be.03    I-ARGM-DSP B-V -          -       -            'm/Mv.<
582 6  just    + just    ADV   RB  advmod 7  - -        I-ARGM-DSP -   B-ARGM-ADV -       just.r.06    just/M
582 7  leaving + leave   VERB  VBG ccomp  1  - leave.11 I-ARGM-DSP -   B-V        -       leave.v.01   leaving/P.s?x:0r2:0rg.|pg:012
582 8  for     + for     ADP   IN  prep   7  - -        I-ARGM-DSP -   B-ARG2     -       -            for/T
582 9  the     + the     DET   DT  det    10 - -        I-ARGM-DSP -   I-ARG2     -       -            the/Md.<
582 10 airport - airport NOUN  NN  pobj   8  - -        I-ARGM-DSP -   I-ARG2     -       airport.n.01 airport/Cc..s
582 11 .       - .       PUNCT .   punct  1  - -        -          -   -          -       -            -
582 12 "       - "       PUNCT ''  punct  1  - -        -          -   -          -       -            -

# sent_i = 583
# sent = He said that he was just leaving for the airport.
# hyperedge = (said/Pd.sr:01:01.<f:0123 he/Ci (that/T ((was/Mv.< leaving/P.s?x:0t2:0tg.|pg:012) he/Ci just/M (for/T (the/Md.< airport/Cc..s)))))
# hyperedge builder = (583.1/Pd.sr:01:01.<f:0123 583.0/Ci (583.2/T ((583.4/Mv.< 583.6/P.s?x:0t2:0tg.|pg:012) 583.3/Ci 583.5/M (583.7/T (583.8/Md.< 583.9/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
583 0  He      + he      PRON  PRP nsubj  1 - -        B-ARG0 -   -          B-MAIN0 -            he/Ci
583 1  said    + say     VERB  VBD ROOT   1 - say.01   B-V    -   -          -       state.v.01   said/Pd.sr:01:01.<f:0123
583 2  that    + that    SCONJ IN  mark   6 - -        B-ARG1 -   -          -       -            that/T
583 3  he      + he      PRON  PRP nsubj  6 - -        I-ARG1 -   B-ARG0     B-REF0  -            he/Ci
583 4  was     + be      AUX   VBD aux    6 - be.03    I-ARG1 B-V -          -       -            was/Mv.<
583 5  just    + just    ADV   RB  advmod 6 - -        I-ARG1 -   B-ARGM-TMP -       just.r.06    just/M
583 6  leaving + leave   VERB  VBG ccomp  1 - leave.11 I-ARG1 -   B-V        -       leave.v.01   leaving/P.s?x:0t2:0tg.|pg:012
583 7  for     + for     ADP   IN  prep   6 - -        I-ARG1 -   B-ARG2     -       -            for/T
583 8  the     + the     DET   DT  det    9 - -        I-ARG1 -   I-ARG2     -       -            the/Md.<
583 9  airport - airport NOUN  NN  pobj   7 - -        I-ARG1 -   I-ARG2     -       airport.n.01 airport/Cc..s
583 10 .       - .       PUNCT .   punct  1 - -        -      -   -          -       -            -

# sent_i = 584
# sent = She said, "We've lived here fifteen years and we've never met him."
# hyperedge = (said/Pd.sr:0?:0?.<f:0123 she/Ci (and/J (('ve/Mv.< lived/P.s?x:0lt:0lt.<pf:01) we/Ci here/M (fifteen/M#.<..d years/Cc..p.d)) (('ve/Mv.< (never/Mn.< met/P.so:01:0o.<pf:01)) we/Ci him/Ci)))
# hyperedge builder = (584.1/Pd.sr:0?:0?.<f:0123 584.0/Ci (584.10/J ((584.5/Mv.< 584.6/P.s?x:0lt:0lt.<pf:01) 584.4/Ci 584.7/M (584.8/M#.<..d 584.9/Cc..p.d)) ((584.12/Mv.< (584.13/Mn.< 584.14/P.so:01:0o.<pf:01)) 584.11/Ci 584.15/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
584 0  She     + she     PRON  PRP nsubj    1  -      -       B-ARG0     -   -          -   -          -       -             she/Ci
584 1  said    - say     VERB  VBD ROOT     1  -      say.01  B-V        -   -          -   -          -       state.v.01    said/Pd.sr:0?:0?.<f:0123
584 2  ,       + ,       PUNCT ,   punct    1  -      -       -          -   -          -   -          -       -             -
584 3  "       - "       PUNCT ``  punct    1  -      -       -          -   -          -   -          -       -             -
584 4  We      - we      PRON  PRP nsubj    6  -      -       B-ARGM-DSP -   B-ARG0     -   -          B-MAIN0 -             we/Ci
584 5  've     + have    AUX   VB  aux      6  -      have.01 I-ARGM-DSP B-V -          -   -          -       -             've/Mv.<
584 6  lived   + live    VERB  VBN ccomp    1  -      live.01 I-ARGM-DSP -   B-V        -   -          -       populate.v.01 lived/P.s?x:0lt:0lt.<pf:01
584 7  here    + here    ADV   RB  advmod   6  -      -       I-ARGM-DSP -   B-ARGM-LOC -   -          -       here.r.01     here/M
584 8  fifteen + fifteen NUM   CD  nummod   9  B-DATE -       I-ARGM-DSP -   B-ARGM-TMP -   -          -       fifteen.s.01  fifteen/M#.<..d
584 9  years   + year    NOUN  NNS npadvmod 6  I-DATE -       I-ARGM-DSP -   I-ARGM-TMP -   -          -       year.n.01     years/Cc..p.d
584 10 and     + and     CCONJ CC  cc       6  -      -       I-ARGM-DSP -   -          -   -          -       -             and/J
584 11 we      - we      PRON  PRP nsubj    14 -      -       I-ARGM-DSP -   -          -   B-ARG0     B-REF0  -             we/Ci
584 12 've     + have    AUX   VB  aux      14 -      have.01 I-ARGM-DSP -   -          B-V -          -       -             've/Mv.<
584 13 never   + never   ADV   RB  neg      14 -      -       I-ARGM-DSP -   -          -   B-ARGM-NEG -       never.r.01    never/Mn.<
584 14 met     + meet    VERB  VBN conj     6  -      meet.02 I-ARGM-DSP -   -          -   B-V        -       meet.v.08     met/P.so:01:0o.<pf:01
584 15 him     - he      PRON  PRP dobj     14 -      -       I-ARGM-DSP -   -          -   B-ARG1     -       -             him/Ci
584 16 .       - .       PUNCT .   punct    1  -      -       -          -   -          -   -          -       -             -
584 17 "       - "       PUNCT ''  punct    1  -      -       -          -   -          -   -          -       -             -

# sent_i = 585
# sent = She said that they had lived there fifteen years and that they had never met him.
# hyperedge = (said/Pd.sr:01:01.<f:0123 she/Ci (and/J (that/T ((had/Mv.< lived/P.s?x:0lt:0lt.<pf:01) they/Ci there/M (fifteen/M#.<..d years/Cc..p.d))) (that/T ((had/Mv.< (never/Mn.< met/P.so:01:0o.<pf:01)) they/Ci him/Ci))))
# hyperedge builder = (585.1/Pd.sr:01:01.<f:0123 585.0/Ci (585.9/J (585.2/T ((585.4/Mv.< 585.5/P.s?x:0lt:0lt.<pf:01) 585.3/Ci 585.6/M (585.7/M#.<..d 585.8/Cc..p.d))) (585.10/T ((585.12/Mv.< (585.13/Mn.< 585.14/P.so:01:0o.<pf:01)) 585.11/Ci 585.15/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
585 0  She     + she     PRON  PRP nsubj    1  -      -       B-ARG0 -   -          -   -          -       -             she/Ci
585 1  said    + say     VERB  VBD ROOT     1  -      say.01  B-V    -   -          -   -          -       state.v.01    said/Pd.sr:01:01.<f:0123
585 2  that    + that    SCONJ IN  mark     5  -      -       B-ARG1 -   -          -   -          -       -             that/T
585 3  they    + they    PRON  PRP nsubj    5  -      -       I-ARG1 -   B-ARG0     -   -          B-MAIN0 -             they/Ci
585 4  had     + have    AUX   VBD aux      5  -      have.01 I-ARG1 B-V -          -   -          -       -             had/Mv.<
585 5  lived   + live    VERB  VBN ccomp    1  -      live.01 I-ARG1 -   B-V        -   -          -       populate.v.01 lived/P.s?x:0lt:0lt.<pf:01
585 6  there   + there   ADV   RB  advmod   5  -      -       I-ARG1 -   B-ARGM-LOC -   -          -       there.r.01    there/M
585 7  fifteen + fifteen NUM   CD  nummod   8  B-DATE -       I-ARG1 -   B-ARGM-TMP -   -          -       fifteen.s.01  fifteen/M#.<..d
585 8  years   + year    NOUN  NNS npadvmod 5  I-DATE -       I-ARG1 -   I-ARGM-TMP -   -          -       year.n.01     years/Cc..p.d
585 9  and     + and     CCONJ CC  cc       5  -      -       I-ARG1 -   -          -   -          -       -             and/J
585 10 that    + that    SCONJ IN  mark     14 -      -       I-ARG1 -   -          -   -          -       -             that/T
585 11 they    + they    PRON  PRP nsubj    14 -      -       I-ARG1 -   -          -   B-ARG0     B-REF0  -             they/Ci
585 12 had     + have    AUX   VBD aux      14 -      have.01 I-ARG1 -   -          B-V -          -       -             had/Mv.<
585 13 never   + never   ADV   RB  neg      14 -      -       I-ARG1 -   -          -   B-ARGM-NEG -       never.r.01    never/Mn.<
585 14 met     + meet    VERB  VBN conj     5  -      meet.02 I-ARG1 -   -          -   B-V        -       meet.v.08     met/P.so:01:0o.<pf:01
585 15 him     - he      PRON  PRP dobj     14 -      -       I-ARG1 -   -          -   B-ARG1     -       -             him/Ci
585 16 .       - .       PUNCT .   punct    1  -      -       -      -   -          -   -          -       -             -

# sent_i = 586
# sent = "I will go." he said.
# hyperedge = (said/Pd.rs:?0:?0.<f:0123 ((will/Mm.< go/Pd.s:0:0.-i:1234) (+/Jc.rm.rr i/Ci he/Ci)) he/Ci)
# hyperedge builder = (586.7/Pd.rs:?0:?0.<f:0123 ((586.2/Mm.< 586.3/Pd.s:0:0.-i:1234) (+/Jc.rm.rr 586.1/Ci 586.6/Ci)) 586.6/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
586 0 "    - "    PUNCT ``  punct 7 - -      -   -          -          -       -          -
586 1 I    + I    PRON  PRP nsubj 3 - -      -   B-ARG0     B-ARGM-DSP B-REF0  -          i/Ci
586 2 will + will AUX   MD  aux   3 - -      B-V B-ARGM-MOD I-ARGM-DSP -       -          will/Mm.<
586 3 go   - go   VERB  VB  ccomp 7 - go.01  -   B-V        I-ARGM-DSP -       go.v.03    go/Pd.s:0:0.-i:1234
586 4 .    - .    PUNCT .   punct 3 - -      -   -          -          -       -          -
586 5 "    + "    PUNCT ''  punct 7 - -      -   -          -          -       -          -
586 6 he   + he   PRON  PRP nsubj 7 - -      -   -          B-ARG0     B-MAIN0 -          he/Ci
586 7 said - say  VERB  VBD ROOT  7 - say.01 -   -          B-V        -       state.v.01 said/Pd.rs:?0:?0.<f:0123
586 8 .    - .    PUNCT .   punct 7 - -      -   -          -          -       -          -

# sent_i = 587
# sent = He said he would go.
# hyperedge = (said/Pd.sr:01:01.<f:0123 he/Ci ((would/Mm.< go/P.s:0:0.-i:1234) he/Ci))
# hyperedge builder = (587.1/Pd.sr:01:01.<f:0123 587.0/Ci ((587.3/Mm.< 587.4/P.s:0:0.-i:1234) 587.2/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
587 0 He    + he    PRON  PRP nsubj 1 - -      B-ARG0 -   -          B-MAIN0 -          he/Ci
587 1 said  + say   VERB  VBD ROOT  1 - say.01 B-V    -   -          -       state.v.01 said/Pd.sr:01:01.<f:0123
587 2 he    + he    PRON  PRP nsubj 4 - -      B-ARG1 -   B-ARG0     B-REF0  -          he/Ci
587 3 would + would AUX   MD  aux   4 - -      I-ARG1 B-V B-ARGM-MOD -       -          would/Mm.<
587 4 go    - go    VERB  VB  ccomp 1 - go.01  I-ARG1 -   B-V        -       go.v.03    go/P.s:0:0.-i:1234
587 5 .     - .     PUNCT .   punct 1 - -      -      -   -          -       -          -

# sent_i = 588
# sent = "We must replace the cooker." she said they had to replace the cooker.
# hyperedge = (said/Pd.rsr:-01:-01.<f:0123 ((must/Mm.< replace/Pd.so:01:01.-i:012) we/Ci (the/Md.< cooker/Cc..s)) she/Ci (had/P.sr:--:--.<f (+/Jc.rm.rr they/Ci we/Ci) ((to/Mi.< replace/P.-o:01:01.-i:012) (+/Jc.rm.rr they/Ci we/Ci) (the/Md.< cooker/Cc..s))))
# hyperedge builder = (588.9/Pd.rsr:-01:-01.<f:0123 ((588.2/Mm.< 588.3/Pd.so:01:01.-i:012) 588.1/Ci (588.4/Md.< 588.5/Cc..s)) 588.8/Ci (588.11/P.sr:--:--.<f (+/Jc.rm.rr 588.10/Ci 588.1/Ci) ((588.12/Mi.< 588.13/P.-o:01:01.-i:012) (+/Jc.rm.rr 588.10/Ci 588.1/Ci) (588.14/Md.< 588.15/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 coref2 synset atoms
588 0  "       - "       PUNCT ``  punct 9  - -          -   -          -      -   -          -       -       -            -
588 1  We      + we      PRON  PRP nsubj 3  - -          -   B-ARG0     -      -   -          B-MAIN0 -       -            we/Ci
588 2  must    + must    AUX   MD  aux   3  - -          B-V B-ARGM-MOD -      -   -          -       -       -            must/Mm.<
588 3  replace + replace VERB  VB  ccomp 9  - replace.01 -   B-V        -      -   -          -       -       replace.v.01 replace/Pd.so:01:01.-i:012
588 4  the     + the     DET   DT  det   5  - -          -   B-ARG1     -      -   -          -       B-MAIN1 -            the/Md.<
588 5  cooker  - cooker  NOUN  NN  dobj  3  - -          -   I-ARG1     -      -   -          -       I-MAIN1 cooker.n.01  cooker/Cc..s
588 6  .       - .       PUNCT .   punct 3  - -          -   -          -      -   -          -       -       -            -
588 7  "       + "       PUNCT ''  punct 9  - -          -   -          -      -   -          -       -       -            -
588 8  she     + she     PRON  PRP nsubj 9  - -          -   -          B-ARG0 -   -          -       -       -            she/Ci
588 9  said    + say     VERB  VBD ROOT  9  - say.01     -   -          B-V    -   -          -       -       state.v.01   said/Pd.rsr:-01:-01.<f:0123
588 10 they    + they    PRON  PRP nsubj 11 - -          -   -          B-ARG1 -   B-ARG0     B-REF0  -       -            they/Ci
588 11 had     + have    AUX   VBD ccomp 9  - have.02    -   -          I-ARG1 B-V B-ARGM-MOD -       -       -            had/P.sr:--:--.<f
588 12 to      + to      PART  TO  aux   13 - -          -   -          I-ARG1 -   -          -       -       -            to/Mi.<
588 13 replace + replace VERB  VB  xcomp 11 - replace.01 -   -          I-ARG1 -   B-V        -       -       replace.v.01 replace/P.-o:01:01.-i:012
588 14 the     + the     DET   DT  det   15 - -          -   -          I-ARG1 -   B-ARG1     -       B-REF1  -            the/Md.<
588 15 cooker  - cooker  NOUN  NN  dobj  13 - -          -   -          I-ARG1 -   I-ARG1     -       I-REF1  cooker.n.01  cooker/Cc..s
588 16 .       - .       PUNCT .   punct 9  - -          -   -          -      -   -          -       -       -            -

# sent_i = 589
# sent = "Shall I try it?" she asked if she should try it.
# hyperedge = (asked/Pd.rsr:?01:?01.<f:0123 ((shall/Mm.< try/P?.so:01:01.-i:01) i/Ci it/Ci) (+/Jc.rm.rr she/Ci i/Ci) (if/T ((should/Mm.< try/P.so:01:01.-i:01) (+/Jc.rm.rr she/Ci i/Ci) it/Ci)))
# hyperedge builder = (589.8/Pd.rsr:?01:?01.<f:0123 ((589.1/Mm.< 589.3/P?.so:01:01.-i:01) 589.2/Ci 589.4/Ci) (+/Jc.rm.rr 589.7/Ci 589.2/Ci) (589.9/T ((589.11/Mm.< 589.12/P.so:01:01.-i:01) (+/Jc.rm.rr 589.10/Ci 589.2/Ci) 589.13/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 coref2 synset atoms
589 0  "      - "      PUNCT ``  punct 8  - -      -   -          -          -   -          -       -       -        -
589 1  Shall  + Shall  AUX   MD  aux   3  - -      B-V B-ARGM-MOD B-ARGM-DSP -   -          -       -       -        shall/Mm.<
589 2  I      + I      PRON  PRP nsubj 3  - -      -   B-ARG0     I-ARGM-DSP -   -          B-MAIN0 -       -        i/Ci
589 3  try    + try    VERB  VB  ccomp 8  - try.01 -   B-V        I-ARGM-DSP -   -          -       -       try.v.01 try/P?.so:01:01.-i:01
589 4  it     - it     PRON  PRP dobj  3  - -      -   B-ARG1     I-ARGM-DSP -   -          -       B-MAIN1 -        it/Ci
589 5  ?      - ?      PUNCT .   punct 3  - -      -   -          -          -   -          -       -       -        -
589 6  "      + "      PUNCT ''  punct 8  - -      -   -          -          -   -          -       -       -        -
589 7  she    + she    PRON  PRP nsubj 8  - -      -   -          B-ARG0     -   -          B-REF0  -       -        she/Ci
589 8  asked  + ask    VERB  VBD ROOT  8  - ask.01 -   -          B-V        -   -          -       -       ask.v.01 asked/Pd.rsr:?01:?01.<f:0123
589 9  if     + if     SCONJ IN  mark  12 - -      -   -          B-ARG1     -   -          -       -       -        if/T
589 10 she    + she    PRON  PRP nsubj 12 - -      -   -          I-ARG1     -   B-ARG0     B-REF0  -       -        she/Ci
589 11 should + should AUX   MD  aux   12 - -      -   -          I-ARG1     B-V B-ARGM-MOD -       -       -        should/Mm.<
589 12 try    + try    VERB  VB  ccomp 8  - try.01 -   -          I-ARG1     -   B-V        -       -       try.v.01 try/P.so:01:01.-i:01
589 13 it     - it     PRON  PRP dobj  12 - -      -   -          I-ARG1     -   B-ARG1     -       B-REF1  -        it/Ci
589 14 .      - .      PUNCT .   punct 8  - -      -   -          -          -   -          -       -       -        -

# sent_i = 590
# sent = "I can do it on Monday." she said that she could do it on Monday.
# hyperedge = (said/Pd.rsr:?01:?01.<f:0123 ((can/Mm.< do/Pd.sox:01t:01t.-i:01234) i/Ci it/Ci (on/Tt monday/Cp..s.d)) (+/Jc.rm.rr she/Ci i/Ci) (that/T ((could/Mm.< do/P.sox:01t:01t.-i:01234) (+/Jc.rm.rr she/Ci i/Ci) it/Ci (on/Tt monday/Cp..s.d))))
# hyperedge builder = (590.10/Pd.rsr:?01:?01.<f:0123 ((590.2/Mm.< 590.3/Pd.sox:01t:01t.-i:01234) 590.1/Ci 590.4/Ci (590.5/Tt 590.6/Cp..s.d)) (+/Jc.rm.rr 590.9/Ci 590.1/Ci) (590.11/T ((590.13/Mm.< 590.14/P.sox:01t:01t.-i:01234) (+/Jc.rm.rr 590.12/Ci 590.1/Ci) 590.15/Ci (590.16/Tt 590.17/Cp..s.d))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 coref2 coref3 synset atoms
590 0  "      - "      PUNCT ``  punct 10 -      -      -   -          -          -   -          -       -       -       -            -
590 1  I      + I      PRON  PRP nsubj 3  -      -      -   B-ARG0     B-ARGM-DSP -   -          B-MAIN0 -       -       -            i/Ci
590 2  can    + can    AUX   MD  aux   3  -      -      B-V B-ARGM-MOD I-ARGM-DSP -   -          -       -       -       -            can/Mm.<
590 3  do     + do     VERB  VB  ccomp 10 -      do.02  -   B-V        I-ARGM-DSP -   -          -       -       -       perform.v.01 do/Pd.sox:01t:01t.-i:01234
590 4  it     + it     PRON  PRP dobj  3  -      -      -   B-ARG1     I-ARGM-DSP -   -          -       B-MAIN1 -       -            it/Ci
590 5  on     + on     ADP   IN  prep  3  -      -      -   B-ARGM-TMP I-ARGM-DSP -   -          -       -       -       -            on/Tt
590 6  Monday - Monday PROPN NNP pobj  5  B-DATE -      -   I-ARGM-TMP I-ARGM-DSP -   -          -       -       B-MAIN2 monday.n.01  monday/Cp..s.d
590 7  .      - .      PUNCT .   punct 3  -      -      -   -          I-ARGM-DSP -   -          -       -       -       -            -
590 8  "      + "      PUNCT ''  punct 10 -      -      -   -          I-ARGM-DSP -   -          -       -       -       -            -
590 9  she    + she    PRON  PRP nsubj 10 -      -      -   -          B-ARG0     -   -          B-REF0  -       -       -            she/Ci
590 10 said   + say    VERB  VBD ROOT  10 -      say.01 -   -          B-V        -   -          -       -       -       state.v.01   said/Pd.rsr:?01:?01.<f:0123
590 11 that   + that   SCONJ IN  mark  14 -      -      -   -          B-ARG1     -   -          -       -       -       -            that/T
590 12 she    + she    PRON  PRP nsubj 14 -      -      -   -          I-ARG1     -   B-ARG0     B-REF0  -       -       -            she/Ci
590 13 could  + could  AUX   MD  aux   14 -      -      -   -          I-ARG1     B-V B-ARGM-MOD -       -       -       -            could/Mm.<
590 14 do     + do     VERB  VB  ccomp 10 -      do.02  -   -          I-ARG1     -   B-V        -       -       -       perform.v.01 do/P.sox:01t:01t.-i:01234
590 15 it     + it     PRON  PRP dobj  14 -      -      -   -          I-ARG1     -   B-ARG1     -       B-REF1  -       -            it/Ci
590 16 on     + on     ADP   IN  prep  14 -      -      -   -          I-ARG1     -   B-ARGM-TMP -       -       -       -            on/Tt
590 17 Monday - Monday PROPN NNP pobj  16 B-DATE -      -   -          I-ARG1     -   I-ARGM-TMP -       -       B-REF2  monday.n.01  monday/Cp..s.d
590 18 .      - .      PUNCT .   punct 10 -      -      -   -          -          -   -          -       -       -       -            -

# sent_i = 591
# sent = "I'm spending the day in Glasgow with a school friend" she said.
# hyperedge = (said/Pd.rs:?0:?0.<f:0123 (('m/Mv.< spending/P.soxx:01lo:0qlo.|pg:012) i/Ci (the/Md.<..d day/Cc..s.d) (in/Tl glasgow/Cp..s.g) (with/T (a/Md.< (+/B.am school/Cc.<.s friend/Cc..s)))) (+/Jc.rm.rr she/Ci i/Ci))
# hyperedge builder = (591.14/Pd.rs:?0:?0.<f:0123 ((591.2/Mv.< 591.3/P.soxx:01lo:0qlo.|pg:012) 591.1/Ci (591.4/Md.<..d 591.5/Cc..s.d) (591.6/Tl 591.7/Cp..s.g) (591.8/T (591.9/Md.< (+/B.am 591.10/Cc.<.s 591.11/Cc..s)))) (+/Jc.rm.rr 591.13/Ci 591.1/Ci))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
591 0  "        - "       PUNCT ``  punct    14 -      -        -   -          -          -       -            -
591 1  I        - I       PRON  PRP nsubj    3  -      -        -   B-ARG0     B-ARGM-DSP B-MAIN0 -            i/Ci
591 2  'm       + be      AUX   VBP aux      3  -      be.03    B-V -          I-ARGM-DSP -       -            'm/Mv.<
591 3  spending + spend   VERB  VBG ccomp    14 -      spend.02 -   B-V        I-ARGM-DSP -       spend.v.01   spending/P.soxx:01lo:0qlo.|pg:012
591 4  the      + the     DET   DT  det      5  B-DATE -        -   B-ARG1     I-ARGM-DSP -       -            the/Md.<..d
591 5  day      + day     NOUN  NN  dobj     3  I-DATE -        -   I-ARG1     I-ARGM-DSP -       day.n.01     day/Cc..s.d
591 6  in       + in      ADP   IN  prep     3  -      -        -   B-ARGM-LOC I-ARGM-DSP -       -            in/Tl
591 7  Glasgow  + Glasgow PROPN NNP pobj     6  B-GPE  -        -   I-ARGM-LOC I-ARGM-DSP -       glasgow.n.01 glasgow/Cp..s.g
591 8  with     + with    ADP   IN  prep     3  -      -        -   B-ARGM-COM I-ARGM-DSP -       -            with/T
591 9  a        + a       DET   DT  det      11 -      -        -   I-ARGM-COM I-ARGM-DSP -       -            a/Md.<
591 10 school   + school  NOUN  NN  compound 11 -      -        -   I-ARGM-COM I-ARGM-DSP -       school.n.01  school/Cc.<.s
591 11 friend   - friend  NOUN  NN  pobj     8  -      -        -   I-ARGM-COM I-ARGM-DSP -       friend.n.01  friend/Cc..s
591 12 "        + "       PUNCT ''  punct    14 -      -        -   -          -          -       -            -
591 13 she      + she     PRON  PRP nsubj    14 -      -        -   -          B-ARG0     B-REF0  -            she/Ci
591 14 said     - say     VERB  VBD ROOT     14 -      say.01   -   -          B-V        -       state.v.01   said/Pd.rs:?0:?0.<f:0123
591 15 .        - .       PUNCT .   punct    14 -      -        -   -          -          -       -            -

# sent_i = 592
# sent = She said that she was spending the day in Glasgow with a school friend.
# hyperedge = (said/Pd.sr:01:01.<f:0123 she/Ci (that/T ((was/Mv.< spending/P.soxx:01lo:0qlo.|pg:012) she/Ci (the/Md.<..d day/Cc..s.d) (in/Tl glasgow/Cp..s.g) (with/T (a/Md.< (+/B.am school/Cc.<.s friend/Cc..s))))))
# hyperedge builder = (592.1/Pd.sr:01:01.<f:0123 592.0/Ci (592.2/T ((592.4/Mv.< 592.5/P.soxx:01lo:0qlo.|pg:012) 592.3/Ci (592.6/Md.<..d 592.7/Cc..s.d) (592.8/Tl 592.9/Cp..s.g) (592.10/T (592.11/Md.< (+/B.am 592.12/Cc.<.s 592.13/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
592 0  She      + she     PRON  PRP nsubj    1  -      -        B-ARG0 -   -          B-MAIN0 -            she/Ci
592 1  said     + say     VERB  VBD ROOT     1  -      say.01   B-V    -   -          -       state.v.01   said/Pd.sr:01:01.<f:0123
592 2  that     + that    SCONJ IN  mark     5  -      -        B-ARG1 -   -          -       -            that/T
592 3  she      + she     PRON  PRP nsubj    5  -      -        I-ARG1 -   B-ARG0     B-REF0  -            she/Ci
592 4  was      + be      AUX   VBD aux      5  -      be.03    I-ARG1 B-V -          -       -            was/Mv.<
592 5  spending + spend   VERB  VBG ccomp    1  -      spend.02 I-ARG1 -   B-V        -       spend.v.01   spending/P.soxx:01lo:0qlo.|pg:012
592 6  the      + the     DET   DT  det      7  B-DATE -        I-ARG1 -   B-ARG1     -       -            the/Md.<..d
592 7  day      + day     NOUN  NN  dobj     5  I-DATE -        I-ARG1 -   I-ARG1     -       day.n.01     day/Cc..s.d
592 8  in       + in      ADP   IN  prep     5  -      -        I-ARG1 -   B-ARGM-LOC -       -            in/Tl
592 9  Glasgow  + Glasgow PROPN NNP pobj     8  B-GPE  -        I-ARG1 -   I-ARGM-LOC -       glasgow.n.01 glasgow/Cp..s.g
592 10 with     + with    ADP   IN  prep     5  -      -        I-ARG1 -   B-ARGM-COM -       -            with/T
592 11 a        + a       DET   DT  det      13 -      -        I-ARG1 -   I-ARGM-COM -       -            a/Md.<
592 12 school   + school  NOUN  NN  compound 13 -      -        I-ARG1 -   I-ARGM-COM -       school.n.01  school/Cc.<.s
592 13 friend   - friend  NOUN  NN  pobj     10 -      -        I-ARG1 -   I-ARGM-COM -       friend.n.01  friend/Cc..s
592 14 .        - .       PUNCT .   punct    1  -      -        -      -   -          -       -            -

# sent_i = 593
# sent = "You can use the cotton dressing gown as a nice table cloth, if you don't want to wear it" I said to her.
# hyperedge = (said/Pd.rsx:?02:?0g.<f:0123 ((can/Mm.< use/Pd.soxx:012r:01ir.-i:012) you/Ci (the/Md.< (+/B.am cotton/Cc.<.s (+/B.am dressing/Cc.<.s gown/Cc..s)) (as/T (a/Md.< (nice/Ma.< (+/B.am table/Cc.<.s cloth/Cc..s)))) (if/T ((do/Mv.< (n't/Mn.< want/P.sr:01:01.-i:01234)) you/Ci ((to/Mi.< wear/P.-o:01:01.-i:01) you/Ci (+/Jc.rm.rc it/Ci (the/Md.< (+/B.am cotton/Cc.<.s (+/B.am dressing/Cc.<.s gown/Cc..s))))))) i/Ci (to/T (+/Jc.rm.rr her/Ci you/Ci)))))
# hyperedge builder = (593.24/Pd.rsx:?02:?0g.<f:0123 ((593.2/Mm.< 593.3/Pd.soxx:012r:01ir.-i:012) 593.1/Ci (593.4/Md.< (+/B.am 593.5/Cc.<.s (+/B.am 593.6/Cc.<.s 593.7/Cc..s)) (593.8/T (593.9/Md.< (593.10/Ma.< (+/B.am 593.11/Cc.<.s 593.12/Cc..s)))) (593.14/T ((593.16/Mv.< (593.17/Mn.< 593.18/P.sr:01:01.-i:01234)) 593.15/Ci ((593.19/Mi.< 593.20/P.-o:01:01.-i:01) 593.15/Ci (+/Jc.rm.rc 593.21/Ci (593.4/Md.< (+/B.am 593.5/Cc.<.s (+/B.am 593.6/Cc.<.s 593.7/Cc..s))))))) 593.23/Ci (593.25/T (+/Jc.rm.rr 593.26/Ci 593.1/Ci)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 coref2 synset atoms
593 0  "        - "        PUNCT ``  punct    24 - -       -   -          -   -          -      -          -       -       -                  -
593 1  You      + you      PRON  PRP nsubj    3  - -       -   B-ARG0     -   -          -      B-ARGM-DSP B-MAIN0 -       -                  you/Ci
593 2  can      + can      AUX   MD  aux      3  - -       B-V B-ARGM-MOD -   -          -      I-ARGM-DSP -       -       -                  can/Mm.<
593 3  use      + use      VERB  VB  ccomp    24 - use.01  -   B-V        -   -          -      I-ARGM-DSP -       -       use.v.01           use/Pd.soxx:012r:01ir.-i:012
593 4  the      + the      DET   DT  det      7  - -       -   B-ARG1     -   -          -      I-ARGM-DSP -       B-MAIN1 -                  the/Md.<
593 5  cotton   + cotton   NOUN  NN  compound 6  - -       -   I-ARG1     -   -          -      I-ARGM-DSP -       I-MAIN1 cotton.n.02        cotton/Cc.<.s
593 6  dressing + dressing NOUN  NN  compound 7  - -       -   I-ARG1     -   -          -      I-ARGM-DSP -       I-MAIN1 dressing_gown.n.01 dressing/Cc.<.s
593 7  gown     + gown     NOUN  NN  dobj     3  - -       -   I-ARG1     -   -          -      I-ARGM-DSP -       I-MAIN1 dressing_gown.n.01 gown/Cc..s
593 8  as       + as       SCONJ IN  prep     3  - -       -   B-ARG2     -   -          -      I-ARGM-DSP -       -       -                  as/T
593 9  a        + a        DET   DT  det      12 - -       -   I-ARG2     -   -          -      I-ARGM-DSP -       -       -                  a/Md.<
593 10 nice     + nice     ADJ   JJ  amod     12 - -       -   I-ARG2     -   -          -      I-ARGM-DSP -       -       nice.a.01          nice/Ma.<
593 11 table    + table    NOUN  NN  compound 12 - -       -   I-ARG2     -   -          -      I-ARGM-DSP -       -       tablecloth.n.01    table/Cc.<.s
593 12 cloth    - cloth    NOUN  NN  pobj     8  - -       -   I-ARG2     -   -          -      I-ARGM-DSP -       -       tablecloth.n.01    cloth/Cc..s
593 13 ,        + ,        PUNCT ,   punct    3  - -       -   -          -   -          -      I-ARGM-DSP -       -       -                  -
593 14 if       + if       SCONJ IN  mark     18 - -       -   B-ARGM-ADV -   -          -      I-ARGM-DSP -       -       -                  if/T
593 15 you      + you      PRON  PRP nsubj    18 - -       -   I-ARGM-ADV -   B-ARG0     B-ARG0 I-ARGM-DSP B-REF0  -       -                  you/Ci
593 16 do       - do       AUX   VBP aux      18 - do.01   -   I-ARGM-ADV B-V -          -      I-ARGM-DSP -       -       -                  do/Mv.<
593 17 n't      + not      PART  RB  neg      18 - -       -   I-ARGM-ADV -   B-ARGM-NEG -      I-ARGM-DSP -       -       not.r.01           n't/Mn.<
593 18 want     + want     VERB  VB  advcl    3  - want.01 -   I-ARGM-ADV -   B-V        -      I-ARGM-DSP -       -       desire.v.01        want/P.sr:01:01.-i:01234
593 19 to       + to       PART  TO  aux      20 - -       -   I-ARGM-ADV -   B-ARG1     -      I-ARGM-DSP -       -       -                  to/Mi.<
593 20 wear     + wear     VERB  VB  xcomp    18 - wear.01 -   I-ARGM-ADV -   I-ARG1     B-V    I-ARGM-DSP -       -       wear.v.01          wear/P.-o:01:01.-i:01
593 21 it       - it       PRON  PRP dobj     20 - -       -   I-ARGM-ADV -   I-ARG1     B-ARG1 I-ARGM-DSP -       B-REF1  -                  it/Ci
593 22 "        + "        PUNCT ''  punct    24 - -       -   -          -   -          -      -          -       -       -                  -
593 23 I        + I        PRON  PRP nsubj    24 - -       -   -          -   -          -      B-ARG0     -       -       -                  i/Ci
593 24 said     + say      VERB  VBD ROOT     24 - say.01  -   -          -   -          -      B-V        -       -       state.v.01         said/Pd.rsx:?02:?0g.<f:0123
593 25 to       + to       ADP   IN  prep     24 - -       -   -          -   -          -      B-ARG2     -       -       -                  to/T
593 26 her      - she      PRON  PRP pobj     25 - -       -   -          -   -          -      I-ARG2     B-REF0  -       -                  her/Ci
593 27 .        - .        PUNCT .   punct    24 - -       -   -          -   -          -      -          -       -       -                  -

# sent_i = 594
# sent = I told her she could use the cotton dressing gown as a nice tablecloth if she didn't want to wear it.
# hyperedge = (told/Pd.sor:021:0g1.<f:012 i/Ci her/Ci ((could/Mm.< use/P.soxx:012r:01ir.-i:012) (+/Jc.rm.rr she/Ci her/Ci) (the/Md.< (+/B.am (+/B.am cotton/Cc.<.s dressing/Cc.<.s) gown/Cc..s)) (as/T (a/Md.< (nice/Ma.< tablecloth/Cc..s))) (if/T ((did/Mv.< (n't/Mn.< want/P.sr:01:01.-i:01234)) (+/Jc.rm.rr she/Ci her/Ci) ((to/Mi.< wear/P.-o:01:01.-i:01) (+/Jc.rm.rr she/Ci her/Ci) (+/Jc.rm.rc it/Ci (the/Md.< (+/B.am (+/B.am cotton/Cc.<.s dressing/Cc.<.s) gown/Cc..s))))))))
# hyperedge builder = (594.1/Pd.sor:021:0g1.<f:012 594.0/Ci 594.2/Ci ((594.4/Mm.< 594.5/P.soxx:012r:01ir.-i:012) (+/Jc.rm.rr 594.3/Ci 594.2/Ci) (594.6/Md.< (+/B.am (+/B.am 594.7/Cc.<.s 594.8/Cc.<.s) 594.9/Cc..s)) (594.10/T (594.11/Md.< (594.12/Ma.< 594.13/Cc..s))) (594.14/T ((594.16/Mv.< (594.17/Mn.< 594.18/P.sr:01:01.-i:01234)) (+/Jc.rm.rr 594.15/Ci 594.2/Ci) ((594.19/Mi.< 594.20/P.-o:01:01.-i:01) (+/Jc.rm.rr 594.15/Ci 594.2/Ci) (+/Jc.rm.rc 594.21/Ci (594.6/Md.< (+/B.am (+/B.am 594.7/Cc.<.s 594.8/Cc.<.s) 594.9/Cc..s))))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 coref2 synset atoms
594 0  I          + I          PRON  PRP nsubj    1  - -       B-ARG0 -   -          -   -          -      -       -       -                  i/Ci
594 1  told       + tell       VERB  VBD ROOT     1  - tell.01 B-V    -   -          -   -          -      -       -       state.v.01         told/Pd.sor:021:0g1.<f:012
594 2  her        + she        PRON  PRP dobj     1  - -       B-ARG2 -   -          -   -          -      B-MAIN0 -       -                  her/Ci
594 3  she        + she        PRON  PRP nsubj    5  - -       B-ARG1 -   B-ARG0     -   -          -      B-REF0  -       -                  she/Ci
594 4  could      + could      AUX   MD  aux      5  - -       I-ARG1 B-V B-ARGM-MOD -   -          -      -       -       -                  could/Mm.<
594 5  use        + use        VERB  VB  ccomp    1  - use.01  I-ARG1 -   B-V        -   -          -      -       -       use.v.01           use/P.soxx:012r:01ir.-i:012
594 6  the        + the        DET   DT  det      9  - -       I-ARG1 -   B-ARG1     -   -          -      -       B-MAIN1 -                  the/Md.<
594 7  cotton     + cotton     NOUN  NN  compound 8  - -       I-ARG1 -   I-ARG1     -   -          -      -       I-MAIN1 cotton.n.02        cotton/Cc.<.s
594 8  dressing   + dressing   NOUN  NN  compound 9  - -       I-ARG1 -   I-ARG1     -   -          -      -       I-MAIN1 dressing_gown.n.01 dressing/Cc.<.s
594 9  gown       + gown       NOUN  NN  dobj     5  - -       I-ARG1 -   I-ARG1     -   -          -      -       I-MAIN1 dressing_gown.n.01 gown/Cc..s
594 10 as         + as         SCONJ IN  prep     5  - -       I-ARG1 -   B-ARG2     -   -          -      -       -       -                  as/T
594 11 a          + a          DET   DT  det      13 - -       I-ARG1 -   I-ARG2     -   -          -      -       -       -                  a/Md.<
594 12 nice       + nice       ADJ   JJ  amod     13 - -       I-ARG1 -   I-ARG2     -   -          -      -       -       nice.a.01          nice/Ma.<
594 13 tablecloth + tablecloth NOUN  NN  pobj     10 - -       I-ARG1 -   I-ARG2     -   -          -      -       -       tablecloth.n.01    tablecloth/Cc..s
594 14 if         + if         SCONJ IN  mark     18 - -       I-ARG1 -   B-ARGM-ADV -   -          -      -       -       -                  if/T
594 15 she        + she        PRON  PRP nsubj    18 - -       I-ARG1 -   I-ARGM-ADV -   B-ARG0     B-ARG0 B-REF0  -       -                  she/Ci
594 16 did        - do         AUX   VBD aux      18 - do.01   I-ARG1 -   I-ARGM-ADV B-V -          -      -       -       -                  did/Mv.<
594 17 n't        + not        PART  RB  neg      18 - -       I-ARG1 -   I-ARGM-ADV -   B-ARGM-NEG -      -       -       not.r.01           n't/Mn.<
594 18 want       + want       VERB  VB  advcl    5  - want.01 I-ARG1 -   I-ARGM-ADV -   B-V        -      -       -       desire.v.01        want/P.sr:01:01.-i:01234
594 19 to         + to         PART  TO  aux      20 - -       I-ARG1 -   I-ARGM-ADV -   B-ARG1     -      -       -       -                  to/Mi.<
594 20 wear       + wear       VERB  VB  xcomp    18 - wear.01 I-ARG1 -   I-ARGM-ADV -   I-ARG1     B-V    -       -       wear.v.01          wear/P.-o:01:01.-i:01
594 21 it         - it         PRON  PRP dobj     20 - -       I-ARG1 -   I-ARGM-ADV -   I-ARG1     B-ARG1 -       B-REF1  -                  it/Ci
594 22 .          - .          PUNCT .   punct    1  - -       -      -   -          -   -          -      -       -       -                  -

# sent_i = 595
# sent = "Will you be able to do it?" I asked him whether he would be able to do it.
# hyperedge = (asked/Pd.rsor:?021:?0g1.<f:0123 ((will/Mm.< be/P?.sc:12:1h.-i:12) you/Ci (+/Br.am able/Ca ((to/Mi.< do/P.-o:01:01.-i:01234) you/Ci it/Ci))) i/Ci (+/Jc.rm.rr him/Ci you/Ci) (whether/T ((would/Mm.< be/P.sc:12:1h.-i:12) (+/Jc.rm.rr he/Ci you/Ci) (+/Br.am able/Ca ((to/Mi.< do/P.-o:01:01.-i:01234) (+/Jc.rm.rr he/Ci you/Ci) it/Ci)))))
# hyperedge builder = (595.11/Pd.rsor:?021:?0g1.<f:0123 ((595.1/Mm.< 595.3/P?.sc:12:1h.-i:12) 595.2/Ci (+/Br.am 595.4/Ca ((595.5/Mi.< 595.6/P.-o:01:01.-i:01234) 595.2/Ci 595.7/Ci))) 595.10/Ci (+/Jc.rm.rr 595.12/Ci 595.2/Ci) (595.13/T ((595.15/Mm.< 595.16/P.sc:12:1h.-i:12) (+/Jc.rm.rr 595.14/Ci 595.2/Ci) (+/Br.am 595.17/Ca ((595.18/Mi.< 595.19/P.-o:01:01.-i:01234) (+/Jc.rm.rr 595.14/Ci 595.2/Ci) 595.20/Ci)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 srl7 coref1 coref2 synset atoms
595 0  "       - "       PUNCT ``  punct 11 - -      -   -          -      -          -      -          -      -       -       -            -
595 1  Will    + Will    AUX   MD  aux   3  - -      B-V B-ARGM-MOD -      B-ARGM-DSP -      -          -      -       -       -            will/Mm.<
595 2  you     + you     PRON  PRP nsubj 3  - -      -   B-ARG1     B-ARG0 I-ARGM-DSP -      -          -      B-MAIN0 -       -            you/Ci
595 3  be      + be      VERB  VB  ccomp 11 - be.01  -   B-V        -      I-ARGM-DSP -      -          -      -       -       be.v.01      be/P?.sc:12:1h.-i:12
595 4  able    + able    ADJ   JJ  acomp 3  - -      -   B-ARG2     -      I-ARGM-DSP -      -          -      -       -       able.a.01    able/Ca
595 5  to      + to      PART  TO  aux   6  - -      -   I-ARG2     -      I-ARGM-DSP -      -          -      -       -       -            to/Mi.<
595 6  do      + do      VERB  VB  xcomp 4  - do.02  -   I-ARG2     B-V    I-ARGM-DSP -      -          -      -       -       perform.v.01 do/P.-o:01:01.-i:01234
595 7  it      - it      PRON  PRP dobj  6  - -      -   I-ARG2     B-ARG1 I-ARGM-DSP -      -          -      -       B-MAIN1 -            it/Ci
595 8  ?       - ?       PUNCT .   punct 3  - -      -   -          -      I-ARGM-DSP -      -          -      -       -       -            -
595 9  "       + "       PUNCT ''  punct 11 - -      -   -          -      -          -      -          -      -       -       -            -
595 10 I       + I       PRON  PRP nsubj 11 - -      -   -          -      B-ARG0     -      -          -      -       -       -            i/Ci
595 11 asked   + ask     VERB  VBD ROOT  11 - ask.01 -   -          -      B-V        -      -          -      -       -       ask.v.01     asked/Pd.rsor:?021:?0g1.<f:0123
595 12 him     + he      PRON  PRP dobj  11 - -      -   -          -      B-ARG2     -      -          -      B-REF0  -       -            him/Ci
595 13 whether + whether SCONJ IN  mark  16 - -      -   -          -      B-ARG1     -      -          -      -       -       -            whether/T
595 14 he      + he      PRON  PRP nsubj 16 - -      -   -          -      I-ARG1     -      B-ARG1     B-ARG0 B-REF0  -       -            he/Ci
595 15 would   + would   AUX   MD  aux   16 - -      -   -          -      I-ARG1     B-V    B-ARGM-MOD -      -       -       -            would/Mm.<
595 16 be      + be      VERB  VB  ccomp 11 - be.01  -   -          -      I-ARG1     -      B-V        -      -       -       be.v.01      be/P.sc:12:1h.-i:12
595 17 able    + able    ADJ   JJ  acomp 16 - -      -   -          -      I-ARG1     B-ARG2 B-ARG2     -      -       -       able.a.01    able/Ca
595 18 to      + to      PART  TO  aux   19 - -      -   -          -      I-ARG1     -      I-ARG2     -      -       -       -            to/Mi.<
595 19 do      + do      VERB  VB  xcomp 17 - do.02  -   -          -      I-ARG1     -      I-ARG2     B-V    -       -       perform.v.01 do/P.-o:01:01.-i:01234
595 20 it      - it      PRON  PRP dobj  19 - -      -   -          -      I-ARG1     -      I-ARG2     B-ARG1 -       B-REF1  -            it/Ci
595 21 .       - .       PUNCT .   punct 11 - -      -   -          -      -          -      -          -      -       -       -            -

# sent_i = 596
# sent = So I asked him what the arrangements were.
# hyperedge = (asked/Pd.?sor:s021:s0g1.<f:0123 so/M i/Ci him/Ci (were/P.cs:21:h1.<f:12 what/Cw (the/Md.< arrangements/Cc..p)))
# hyperedge builder = (596.2/Pd.?sor:s021:s0g1.<f:0123 596.0/M 596.1/Ci 596.3/Ci (596.7/P.cs:21:h1.<f:12 596.4/Cw (596.5/Md.< 596.6/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
596 0 So           + so          ADV   RB  advmod 2 - -      B-ARGM-DIS -      -              so/M
596 1 I            + I           PRON  PRP nsubj  2 - -      B-ARG0     -      -              i/Ci
596 2 asked        + ask         VERB  VBD ROOT   2 - ask.01 B-V        -      ask.v.01       asked/Pd.?sor:s021:s0g1.<f:0123
596 3 him          + he          PRON  PRP dobj   2 - -      B-ARG2     -      -              him/Ci
596 4 what         + what        PRON  WP  attr   7 - -      B-ARG1     B-ARG2 -              what/Cw
596 5 the          + the         DET   DT  det    6 - -      I-ARG1     B-ARG1 -              the/Md.<
596 6 arrangements + arrangement NOUN  NNS nsubj  7 - -      I-ARG1     I-ARG1 agreement.n.04 arrangements/Cc..p
596 7 were         - be          AUX   VBD ccomp  2 - be.01  I-ARG1     B-V    be.v.01        were/P.cs:21:h1.<f:12
596 8 .            - .           PUNCT .   punct  2 - -      -          -      -              -

# sent_i = 597
# sent = I phoned up the hospital and asked who I should address the letter to.
# hyperedge = (and/J ((up/Ml.r.> phoned/Pd.so:01:0g.<f:012) i/Ci (the/Md.< hospital/Cc..s)) (asked/Pd.-r:01:01.<f:0123 i/Ci ((should/Mm.< address/P.-sox:2012:10g2.-i:0123) who/Cw i/Ci (the/Md.< letter/Cc..s) to/T)))
# hyperedge builder = (597.5/J ((597.2/Ml.r.> 597.1/Pd.so:01:0g.<f:012) 597.0/Ci (597.3/Md.< 597.4/Cc..s)) (597.6/Pd.-r:01:01.<f:0123 597.0/Ci ((597.9/Mm.< 597.10/P.-sox:2012:10g2.-i:0123) 597.7/Cw 597.8/Ci (597.11/Md.< 597.12/Cc..s) 597.13/T)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
597 0  I        + I        PRON  PRP nsubj 1  - -          B-ARG0 B-ARG0 -   -          B-MAIN0 -             i/Ci
597 1  phoned   + phone    VERB  VBD ROOT  1  - phone.01   B-V    -      -   -          -       call.v.03     phoned/Pd.so:01:0g.<f:012
597 2  up       + up       ADP   RP  prt   1  - -          -      -      -   -          -       -             up/Ml.r.>
597 3  the      + the      DET   DT  det   4  - -          B-ARG1 -      -   -          -       -             the/Md.<
597 4  hospital + hospital NOUN  NN  dobj  1  - -          I-ARG1 -      -   -          -       hospital.n.01 hospital/Cc..s
597 5  and      + and      CCONJ CC  cc    1  - -          -      -      -   -          -       -             and/J
597 6  asked    + ask      VERB  VBD conj  1  - ask.01     -      B-V    -   -          -       ask.v.01      asked/Pd.-r:01:01.<f:0123
597 7  who      + who      PRON  WP  pobj  13 - -          -      B-ARG1 -   B-ARG2     -       -             who/Cw
597 8  I        + I        PRON  PRP nsubj 10 - -          -      I-ARG1 -   B-ARG0     B-REF0  -             i/Ci
597 9  should   + should   AUX   MD  aux   10 - -          -      I-ARG1 B-V B-ARGM-MOD -       -             should/Mm.<
597 10 address  + address  VERB  VB  ccomp 6  - address.01 -      I-ARG1 -   B-V        -       address.v.03  address/P.-sox:2012:10g2.-i:0123
597 11 the      + the      DET   DT  det   12 - -          -      I-ARG1 -   B-ARG1     -       -             the/Md.<
597 12 letter   + letter   NOUN  NN  dobj  10 - -          -      I-ARG1 -   I-ARG1     -       letter.n.01   letter/Cc..s
597 13 to       - to       ADP   IN  prep  10 - -          -      I-ARG1 -   B-C-ARG2   -       -             to/T
597 14 .        - .        PUNCT .   punct 1  - -          -      -      -   -          -       -             -

# sent_i = 598
# sent = They should have been asked if it had cost them money to get there.
# hyperedge = ((should/Mm.< (have/Mv.< (been/Mv.< asked/Pd.px:21:g1.<pf:0123))) they/Ci (if/T ((had/Mv.< cost/P.siox:-321:-gq1.<pf:123) it/Ci (+/Jc.rm.rr them/Ci they/Ci) money/Cc..s ((to/Mi.< get/P.-?:12:1g.-i:012) (+/Jc.rm.rr them/Ci they/Ci) there/M))))
# hyperedge builder = ((598.1/Mm.< (598.2/Mv.< (598.3/Mv.< 598.4/Pd.px:21:g1.<pf:0123))) 598.0/Ci (598.5/T ((598.7/Mv.< 598.8/P.siox:-321:-gq1.<pf:123) 598.6/Ci (+/Jc.rm.rr 598.9/Ci 598.0/Ci) 598.10/Cc..s ((598.11/Mi.< 598.12/P.-?:12:1g.-i:012) (+/Jc.rm.rr 598.9/Ci 598.0/Ci) 598.13/M))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 srl7 coref1 synset atoms
598 0  They   + they   PRON  PRP nsubjpass 4  - -       -   -   -   B-ARG2     -   -      -      B-MAIN0 -           they/Ci
598 1  should + should AUX   MD  aux       4  - -       B-V -   -   B-ARGM-MOD -   -      -      -       -           should/Mm.<
598 2  have   + have   AUX   VB  aux       4  - have.01 -   B-V -   -          -   -      -      -       -           have/Mv.<
598 3  been   + be     AUX   VBN auxpass   4  - be.03   -   -   B-V -          -   -      -      -       -           been/Mv.<
598 4  asked  + ask    VERB  VBN ROOT      4  - ask.01  -   -   -   B-V        -   -      -      -       ask.v.01    asked/Pd.px:21:g1.<pf:0123
598 5  if     + if     SCONJ IN  mark      8  - -       -   -   -   B-ARG1     -   -      -      -       -           if/T
598 6  it     + it     PRON  PRP nsubj     8  - -       -   -   -   I-ARG1     -   -      -      -       -           it/Ci
598 7  had    + have   AUX   VBD aux       8  - have.01 -   -   -   I-ARG1     B-V -      -      -       -           had/Mv.<
598 8  cost   + cost   VERB  VBN advcl     4  - cost.01 -   -   -   I-ARG1     -   B-V    -      -       cost.v.01   cost/P.siox:-321:-gq1.<pf:123
598 9  them   + they   PRON  PRP dative    8  - -       -   -   -   I-ARG1     -   B-ARG3 B-ARG1 B-REF0  -           them/Ci
598 10 money  + money  NOUN  NN  dobj      8  - -       -   -   -   I-ARG1     -   B-ARG2 -      -       money.n.01  money/Cc..s
598 11 to     + to     PART  TO  aux       12 - -       -   -   -   I-ARG1     -   B-ARG1 -      -       -           to/Mi.<
598 12 get    + get    VERB  VB  advcl     8  - get.05  -   -   -   I-ARG1     -   I-ARG1 B-V    -       arrive.v.01 get/P.-?:12:1g.-i:012
598 13 there  - there  ADV   RB  advmod    12 - -       -   -   -   I-ARG1     -   I-ARG1 B-ARG2 -       there.r.01  there/M
598 14 .      - .      PUNCT .   punct     4  - -       -   -   -   -          -   -      -      -       -           -

# sent_i = 599
# sent = A question I'm often asked is, "Why do we need a pronouncing dictionary?"
# hyperedge = (is/P?.sr:12:1h.|f--3s:12 (+/Jr.ma (a/Md.< question/Cc..s) (('m/Mv.< asked/P.-p?:12t:1gt.<pf:0123) (a/Md.< question/Cc..s) i/Ci often/M)) ((do/Mv.< need/P.?so:c01:c01.-i:01) why/Mw we/Ci (a/Md.< (pronouncing/Ma.< dictionary/Cc..s))))
# hyperedge builder = (599.6/P?.sr:12:1h.|f--3s:12 (+/Jr.ma (599.0/Md.< 599.1/Cc..s) ((599.3/Mv.< 599.5/P.-p?:12t:1gt.<pf:0123) (599.0/Md.< 599.1/Cc..s) 599.2/Ci 599.4/M)) ((599.10/Mv.< 599.12/P.?so:c01:c01.-i:01) 599.9/Mw 599.11/Ci (599.13/Md.< (599.14/Ma.< 599.15/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 synset atoms
599 0  A           + a          DET   DT  det       1  - -            -   B-ARG1     B-ARG1 -   -          -   -               a/Md.<
599 1  question    + question   NOUN  NN  nsubj     6  - -            -   I-ARG1     I-ARG1 -   -          -   question.n.01   question/Cc..s
599 2  I           - I          PRON  PRP nsubjpass 5  - -            -   B-ARG2     I-ARG1 -   -          -   -               i/Ci
599 3  'm          + be         AUX   VBP auxpass   5  - be.03        B-V -          I-ARG1 -   -          -   -               'm/Mv.<
599 4  often       + often      ADV   RB  advmod    5  - -            -   B-ARGM-TMP I-ARG1 -   -          -   frequently.r.01 often/M
599 5  asked       + ask        VERB  VBN relcl     1  - ask.01       -   B-V        I-ARG1 -   -          -   ask.v.01        asked/P.-p?:12t:1gt.<pf:0123
599 6  is          - be         AUX   VBZ ROOT      6  - be.01        -   -          B-V    -   -          -   be.v.01         is/P?.sr:12:1h.|f--3s:12
599 7  ,           + ,          PUNCT ,   punct     6  - -            -   -          -      -   -          -   -               -
599 8  "           - "          PUNCT ``  punct     6  - -            -   -          -      -   -          -   -               -
599 9  Why         + why        ADV   WRB advmod    12 - -            -   -          B-ARG2 -   B-ARGM-CAU -   -               why/Mw
599 10 do          + do         AUX   VBP aux       12 - do.01        -   -          I-ARG2 B-V -          -   -               do/Mv.<
599 11 we          + we         PRON  PRP nsubj     12 - -            -   -          I-ARG2 -   B-ARG0     -   -               we/Ci
599 12 need        + need       VERB  VB  ccomp     6  - need.01      -   -          I-ARG2 -   B-V        -   want.v.02       need/P.?so:c01:c01.-i:01
599 13 a           + a          DET   DT  det       15 - -            -   -          I-ARG2 -   B-ARG1     -   -               a/Md.<
599 14 pronouncing + pronounce  VERB  VBG amod      15 - pronounce.01 -   -          I-ARG2 -   I-ARG1     B-V pronounce.v.01  pronouncing/Ma.<
599 15 dictionary  - dictionary NOUN  NN  dobj      12 - -            -   -          I-ARG2 -   I-ARG1     -   dictionary.n.01 dictionary/Cc..s
599 16 ?           - ?          PUNCT .   punct     6  - -            -   -          -      -   -          -   -               -
599 17 "           - "          PUNCT ''  punct     6  - -            -   -          -      -   -          -   -               -

# sent_i = 600
# sent = She, I mean, Mary was here.
# hyperedge = (was/Pd.sts?:1-12:1-1h.<f:12 (+/Jc.rm.rp she/Ci mary/Cp..s.p) (mean/P.s:0:0.|f:012 i/Ci) mary/Cp..s.p here/M)
# hyperedge builder = (600.6/Pd.sts?:1-12:1-1h.<f:12 (+/Jc.rm.rp 600.0/Ci 600.5/Cp..s.p) (600.3/P.s:0:0.|f:012 600.2/Ci) 600.5/Cp..s.p 600.7/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
600 0 She  - she  PRON  PRP nsubj     6 -        -       -      B-R-ARG1 B-REF0  -         she/Ci
600 1 ,    + ,    PUNCT ,   punct     3 -        -       -      -        -       -         -
600 2 I    + I    PRON  PRP nsubj     3 -        -       B-ARG0 -        -       -         i/Ci
600 3 mean - mean VERB  VBP parataxis 6 -        mean.02 B-V    -        -       mean.v.01 mean/P.s:0:0.|f:012
600 4 ,    + ,    PUNCT ,   punct     6 -        -       -      -        -       -         -
600 5 Mary + Mary PROPN NNP nsubj     6 B-PERSON -       -      B-ARG1   B-MAIN0 -         mary/Cp..s.p
600 6 was  + be   AUX   VBD ROOT      6 -        be.01   -      B-V      -       be.v.01   was/Pd.sts?:1-12:1-1h.<f:12
600 7 here - here ADV   RB  advmod    6 -        -       -      B-ARG2   -       here.r.01 here/M
600 8 .    - .    PUNCT .   punct     6 -        -       -      -        -       -         -

# sent_i = 601
# sent = Her friend, I hesitate to say, has betrayed her.
# hyperedge = ((has/Mv.< betrayed/Pd.sto:0s1:0s1.<pf:01) (her/Mp friend/Cc..s) (hesitate/Pd.sr:01:01.|f:01 i/Ci ((to/Mi.< say/P.-:0:0.-i:0123) i/Ci)) her/Ci)
# hyperedge builder = ((601.8/Mv.< 601.9/Pd.sto:0s1:0s1.<pf:01) (601.0/Mp 601.1/Cc..s) (601.4/Pd.sr:01:01.|f:01 601.3/Ci ((601.5/Mi.< 601.6/P.-:0:0.-i:0123) 601.3/Ci)) 601.10/Ci)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 coref1 synset atoms
601 0  Her      + her      PRON  PRP$ poss      1 - -           -      -      -   B-ARG0     B-MAIN0 -             her/Mp
601 1  friend   - friend   NOUN  NN   nsubj     9 - -           -      -      -   I-ARG0     -       friend.n.01   friend/Cc..s
601 2  ,        + ,        PUNCT ,    punct     4 - -           -      -      -   -          -       -             -
601 3  I        + I        PRON  PRP  nsubj     4 - -           B-ARG0 B-ARG0 -   B-ARGM-DIS -       -             i/Ci
601 4  hesitate + hesitate VERB  VBP  parataxis 9 - hesitate.01 B-V    -      -   I-ARGM-DIS -       hesitate.v.01 hesitate/Pd.sr:01:01.|f:01
601 5  to       + to       PART  TO   aux       6 - -           B-ARG1 -      -   I-ARGM-DIS -       -             to/Mi.<
601 6  say      - say      VERB  VB   xcomp     4 - say.01      I-ARG1 B-V    -   I-ARGM-DIS -       state.v.01    say/P.-:0:0.-i:0123
601 7  ,        + ,        PUNCT ,    punct     4 - -           -      -      -   -          -       -             -
601 8  has      + have     AUX   VBZ  aux       9 - have.01     -      -      B-V -          -       -             has/Mv.<
601 9  betrayed + betray   VERB  VBN  ROOT      9 - betray.01   -      -      -   B-V        -       fail.v.03     betrayed/Pd.sto:0s1:0s1.<pf:01
601 10 her      - she      PRON  PRP  dobj      9 - -           -      -      -   B-ARG1     B-REF0  -             her/Ci
601 11 .        - .        PUNCT .    punct     9 - -           -      -      -   -          -       -             -

# sent_i = 602
# sent = Like, you know, it was very nice.
# hyperedge = (was/Pd.jtsc:ss12:ss1h.<f:12 like/C (know/Pd.s:0:0.|f:0 you/Ci) it/Ci (very/M.< nice/Ca))
# hyperedge builder = (602.6/Pd.jtsc:ss12:ss1h.<f:12 602.0/C (602.3/Pd.s:0:0.|f:0 602.2/Ci) 602.5/Ci (602.7/M.< 602.8/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
602 0 Like - like INTJ  UH  intj      6 - -       -      B-ARGM-DIS -         like/C
602 1 ,    + ,    PUNCT ,   punct     3 - -       -      -          -         -
602 2 you  + you  PRON  PRP nsubj     3 - -       B-ARG0 B-ARGM-DIS -         you/Ci
602 3 know - know VERB  VBP parataxis 6 - know.06 B-V    I-ARGM-DIS know.v.01 know/Pd.s:0:0.|f:0
602 4 ,    + ,    PUNCT ,   punct     3 - -       -      -          -         -
602 5 it   + it   PRON  PRP nsubj     6 - -       -      B-ARG1     -         it/Ci
602 6 was  + be   AUX   VBD ROOT      6 - be.01   -      B-V        be.v.01   was/Pd.jtsc:ss12:ss1h.<f:12
602 7 very + very ADV   RB  advmod    8 - -       -      B-ARG2     very.r.01 very/M.<
602 8 nice - nice ADJ   JJ  acomp     6 - -       -      I-ARG2     nice.a.01 nice/Ca
602 9 .    - .    PUNCT .   punct     6 - -       -      -          -         -

# sent_i = 603
# sent = He gave me a nice bonus ($500).
# hyperedge = (gave/Pd.sio:021:0g1.<f:012 he/Ci me/Ci (+/Ba.ma.b (a/Md.< (nice/Ma.< bonus/Cc..s)) ($/M.<..$ 500/C#...$)))
# hyperedge builder = (603.1/Pd.sio:021:0g1.<f:012 603.0/Ci 603.2/Ci (+/Ba.ma.b (603.3/Md.< (603.4/Ma.< 603.5/Cc..s)) (603.7/M.<..$ 603.8/C#...$)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
603 0  He    + he    PRON  PRP   nsubj  1 -       -       B-ARG0 -                 he/Ci
603 1  gave  + give  VERB  VBD   ROOT   1 -       give.01 B-V    give.v.03         gave/Pd.sio:021:0g1.<f:012
603 2  me    + I     PRON  PRP   dative 1 -       -       B-ARG2 -                 me/Ci
603 3  a     + a     DET   DT    det    5 -       -       B-ARG1 -                 a/Md.<
603 4  nice  + nice  ADJ   JJ    amod   5 -       -       I-ARG1 nice.a.01         nice/Ma.<
603 5  bonus + bonus NOUN  NN    dobj   1 -       -       I-ARG1 bonus.n.02        bonus/Cc..s
603 6  (     - (     PUNCT -LRB- punct  5 -       -       I-ARG1 -                 -
603 7  $     - $     SYM   $     nmod   8 B-MONEY -       I-ARG1 -                 $/M.<..$
603 8  500   - 500   NUM   CD    appos  5 I-MONEY -       I-ARG1 five_hundred.s.01 500/C#...$
603 9  )     - )     PUNCT -RRB- punct  5 -       -       I-ARG1 -                 -
603 10 .     - .     PUNCT .     punct  1 -       -       -      -                 -

# sent_i = 604
# sent = A number of things need to be considered before starting your own business: (1) premises, which may be bought or rented; (2) finance, such as a secured bank loan; (3) demand for the product or service; (4) staffing, including recruitment and selection; (5) access to customers.
# hyperedge = (need/Pd.sr:01:!!.|f (+/Ba.ma.n (of/Br (a/Md.< number/Cc..s) things/Cc..p) (:/J (+/Jr.ma (:/J premises/Cc..p 1/C...c) (or/J ((may/Mm.< (be/Mv.< bought/P.-p:11:11.<pf:01234)) (:/J premises/Cc..p 1/C...c) which/Cd) (rented/P.--:11:11.<pf:01234 (:/J premises/Cc..p 1/C...c) which/Cd))) ((such/Ma as/Br) (:/J finance/Cc..s 2/C...c) (a/Md.< (secured/Ma.< (+/B.am bank/Cc.<.s loan/Cc..s)))) (for/Br (:/J demand/Cc..s 3/C...c) (or/J (the/Md.< product/Cc..s) service/Cc..s)) (+/Jr.ma (:/J staffing/Cc..s 4/C...c) (including/P.-o:21:g1.|pg:012 (:/J staffing/Cc..s 4/C...c) (and/J recruitment/Cc..s selection/Cc..s))) (to/Br (:/J access/Cc..s 5/C...c) customers/Cc..p))) ((to/Mi.< (be/Mv.< considered/P.-x:1t:1t.<pf:012)) (+/Ba.ma.n (of/Br (a/Md.< number/Cc..s) things/Cc..p) (:/J (+/Jr.ma (:/J premises/Cc..p 1/C...c) (or/J ((may/Mm.< (be/Mv.< bought/P.-p:11:11.<pf:01234)) (:/J premises/Cc..p 1/C...c) which/Cd) (rented/P.--:11:11.<pf:01234 (:/J premises/Cc..p 1/C...c) which/Cd))) ((such/Ma as/Br) (:/J finance/Cc..s 2/C...c) (a/Md.< (secured/Ma.< (+/B.am bank/Cc.<.s loan/Cc..s)))) (for/Br (:/J demand/Cc..s 3/C...c) (or/J (the/Md.< product/Cc..s) service/Cc..s)) (+/Jr.ma (:/J staffing/Cc..s 4/C...c) (including/P.-o:21:g1.|pg:012 (:/J staffing/Cc..s 4/C...c) (and/J recruitment/Cc..s selection/Cc..s))) (to/Br (:/J access/Cc..s 5/C...c) customers/Cc..p))) (before/Tt (starting/P.o:1:!.|pg (your/Mp (own/Ma.< business/Cc..s))))))
# hyperedge builder = (604.4/Pd.sr:01:!!.|f (+/Ba.ma.n (604.2/Br (604.0/Md.< 604.1/Cc..s) 604.3/Cc..p) (:/J (+/Jr.ma (:/J 604.17/Cc..p 604.15/C...c) (604.23/J ((604.20/Mm.< (604.21/Mv.< 604.22/P.-p:11:11.<pf:01234)) (:/J 604.17/Cc..p 604.15/C...c) 604.19/Cd) (604.24/P.--:11:11.<pf:01234 (:/J 604.17/Cc..p 604.15/C...c) 604.19/Cd))) ((604.31/Ma 604.32/Br) (:/J 604.29/Cc..s 604.27/C...c) (604.33/Md.< (604.34/Ma.< (+/B.am 604.35/Cc.<.s 604.36/Cc..s)))) (604.42/Br (:/J 604.41/Cc..s 604.39/C...c) (604.45/J (604.43/Md.< 604.44/Cc..s) 604.46/Cc..s)) (+/Jr.ma (:/J 604.51/Cc..s 604.49/C...c) (604.53/P.-o:21:g1.|pg:012 (:/J 604.51/Cc..s 604.49/C...c) (604.55/J 604.54/Cc..s 604.56/Cc..s))) (604.62/Br (:/J 604.61/Cc..s 604.59/C...c) 604.63/Cc..p))) ((604.5/Mi.< (604.6/Mv.< 604.7/P.-x:1t:1t.<pf:012)) (+/Ba.ma.n (604.2/Br (604.0/Md.< 604.1/Cc..s) 604.3/Cc..p) (:/J (+/Jr.ma (:/J 604.17/Cc..p 604.15/C...c) (604.23/J ((604.20/Mm.< (604.21/Mv.< 604.22/P.-p:11:11.<pf:01234)) (:/J 604.17/Cc..p 604.15/C...c) 604.19/Cd) (604.24/P.--:11:11.<pf:01234 (:/J 604.17/Cc..p 604.15/C...c) 604.19/Cd))) ((604.31/Ma 604.32/Br) (:/J 604.29/Cc..s 604.27/C...c) (604.33/Md.< (604.34/Ma.< (+/B.am 604.35/Cc.<.s 604.36/Cc..s)))) (604.42/Br (:/J 604.41/Cc..s 604.39/C...c) (604.45/J (604.43/Md.< 604.44/Cc..s) 604.46/Cc..s)) (+/Jr.ma (:/J 604.51/Cc..s 604.49/C...c) (604.53/P.-o:21:g1.|pg:012 (:/J 604.51/Cc..s 604.49/C...c) (604.55/J 604.54/Cc..s 604.56/Cc..s))) (604.62/Br (:/J 604.61/Cc..s 604.59/C...c) 604.63/Cc..p))) (604.8/Tt (604.9/P.o:1:!.|pg (604.10/Mp (604.11/Ma.< 604.12/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 srl7 srl8 srl9 synset atoms
604 0  A           + a           DET   DT    det       1  -          -           B-ARG0 -   B-ARG1     -      -   -   -          -          -      -                a/Md.<
604 1  number      + number      NOUN  NN    nsubj     4  -          -           I-ARG0 -   I-ARG1     -      -   -   -          -          -      number.n.01      number/Cc..s
604 2  of          + of          ADP   IN    prep      1  -          -           I-ARG0 -   I-ARG1     -      -   -   -          -          -      -                of/Br
604 3  things      + thing       NOUN  NNS   pobj      2  -          -           I-ARG0 -   I-ARG1     -      -   -   -          -          -      matter.n.01      things/Cc..p
604 4  need        + need        VERB  VBP   ROOT      4  -          -           B-V    -   -          -      -   -   -          -          -      necessitate.v.01 need/Pd.sr:01:!!.|f
604 5  to          + to          PART  TO    aux       7  -          -           B-ARG1 -   -          -      -   -   -          -          -      -                to/Mi.<
604 6  be          + be          AUX   VB    auxpass   7  -          -           I-ARG1 B-V -          -      -   -   -          -          -      -                be/Mv.<
604 7  considered  + consider    VERB  VBN   xcomp     4  -          consider.02 I-ARG1 -   B-V        -      -   -   -          -          -      consider.v.04    considered/P.-x:1t:1t.<pf:012
604 8  before      + before      ADP   IN    prep      7  -          -           I-ARG1 -   B-ARGM-TMP -      -   -   -          -          -      -                before/Tt
604 9  starting    + start       VERB  VBG   pcomp     8  -          start.02    I-ARG1 -   I-ARGM-TMP B-V    -   -   -          -          -      start.v.10       starting/P.o:1:!.|pg
604 10 your        + your        PRON  PRP$  poss      12 -          -           I-ARG1 -   I-ARGM-TMP B-ARG1 -   -   -          -          -      -                your/Mp
604 11 own         + own         ADJ   JJ    amod      12 -          -           I-ARG1 -   I-ARGM-TMP I-ARG1 -   -   -          -          -      own.s.01         own/Ma.<
604 12 business    - business    NOUN  NN    dobj      9  -          -           I-ARG1 -   I-ARGM-TMP I-ARG1 -   -   -          -          -      business.n.01    business/Cc..s
604 13 :           + :           PUNCT :     punct     4  -          -           -      -   -          -      -   -   -          -          -      -                -
604 14 (           - (           PUNCT -LRB- punct     15 -          -           -      -   -          -      -   -   -          -          -      -                -
604 15 1           - 1           X     LS    meta      17 B-CARDINAL -           -      -   -          -      -   -   -          -          -      -                1/C...c
604 16 )           + )           PUNCT -RRB- punct     15 -          -           -      -   -          -      -   -   -          -          -      -                -
604 17 premises    - premise     NOUN  NNS   appos     1  -          -           -      -   -          -      -   -   B-ARG1     B-ARG1     -      premises.n.01    premises/Cc..p
604 18 ,           + ,           PUNCT ,     punct     17 -          -           -      -   -          -      -   -   -          -          -      -                -
604 19 which       + which       DET   WDT   nsubjpass 22 -          -           -      -   -          -      -   -   B-R-ARG1   B-R-ARG1   -      -                which/Cd
604 20 may         + may         AUX   MD    aux       22 -          -           -      -   -          -      B-V -   B-ARGM-MOD B-ARGM-MOD -      -                may/Mm.<
604 21 be          + be          AUX   VB    auxpass   22 -          be.03       -      -   -          -      -   B-V -          -          -      -                be/Mv.<
604 22 bought      + buy         VERB  VBN   relcl     17 -          buy.01      -      -   -          -      -   -   B-V        -          -      buy.v.01         bought/P.-p:11:11.<pf:01234
604 23 or          + or          CCONJ CC    cc        22 -          -           -      -   -          -      -   -   -          -          -      -                or/J
604 24 rented      - rent        VERB  VBN   conj      22 -          rent.01     -      -   -          -      -   -   -          B-V        -      rent.v.04        rented/P.--:11:11.<pf:01234
604 25 ;           + ;           PUNCT :     punct     17 -          -           -      -   -          -      -   -   -          -          -      -                -
604 26 (           - (           PUNCT -LRB- punct     27 -          -           -      -   -          -      -   -   -          -          -      -                -
604 27 2           - 2           X     LS    meta      29 B-CARDINAL -           -      -   -          -      -   -   -          -          -      -                2/C...c
604 28 )           + )           PUNCT -RRB- punct     27 -          -           -      -   -          -      -   -   -          -          -      -                -
604 29 finance     - finance     NOUN  NN    conj      17 -          -           -      -   -          -      -   -   -          -          -      finance.n.01     finance/Cc..s
604 30 ,           + ,           PUNCT ,     punct     29 -          -           -      -   -          -      -   -   -          -          -      -                -
604 31 such        + such        ADJ   JJ    amod      32 -          -           -      -   -          -      -   -   -          -          -      -                such/Ma
604 32 as          + as          SCONJ IN    prep      29 -          -           -      -   -          -      -   -   -          -          -      -                as/Br
604 33 a           + a           DET   DT    det       36 -          -           -      -   -          -      -   -   -          -          -      -                a/Md.<
604 34 secured     + secured     ADJ   JJ    amod      36 -          -           -      -   -          -      -   -   -          -          -      dependable.s.04  secured/Ma.<
604 35 bank        + bank        NOUN  NN    compound  36 -          -           -      -   -          -      -   -   -          -          -      bank_loan.n.01   bank/Cc.<.s
604 36 loan        - loan        NOUN  NN    pobj      32 -          -           -      -   -          -      -   -   -          -          -      bank_loan.n.01   loan/Cc..s
604 37 ;           + ;           PUNCT :     punct     29 -          -           -      -   -          -      -   -   -          -          -      -                -
604 38 (           - (           PUNCT -LRB- punct     39 -          -           -      -   -          -      -   -   -          -          -      -                -
604 39 3           - 3           X     LS    meta      41 B-CARDINAL -           -      -   -          -      -   -   -          -          -      -                3/C...c
604 40 )           + )           PUNCT -RRB- punct     39 -          -           -      -   -          -      -   -   -          -          -      -                -
604 41 demand      + demand      NOUN  NN    conj      29 -          -           -      -   -          -      -   -   -          -          -      demand.n.02      demand/Cc..s
604 42 for         + for         ADP   IN    prep      41 -          -           -      -   -          -      -   -   -          -          -      -                for/Br
604 43 the         + the         DET   DT    det       44 -          -           -      -   -          -      -   -   -          -          -      -                the/Md.<
604 44 product     + product     NOUN  NN    pobj      42 -          -           -      -   -          -      -   -   -          -          -      merchandise.n.01 product/Cc..s
604 45 or          + or          CCONJ CC    cc        44 -          -           -      -   -          -      -   -   -          -          -      -                or/J
604 46 service     - service     NOUN  NN    conj      44 -          -           -      -   -          -      -   -   -          -          -      service.n.01     service/Cc..s
604 47 ;           + ;           PUNCT ,     punct     17 -          -           -      -   -          -      -   -   -          -          -      -                -
604 48 (           - (           PUNCT -LRB- punct     49 -          -           -      -   -          -      -   -   -          -          -      -                -
604 49 4           - 4           X     LS    meta      51 B-CARDINAL -           -      -   -          -      -   -   -          -          -      -                4/C...c
604 50 )           + )           PUNCT -RRB- punct     49 -          -           -      -   -          -      -   -   -          -          -      -                -
604 51 staffing    - staffing    NOUN  NN    conj      41 -          -           -      -   -          -      -   -   -          -          B-ARG2 staff.n.01       staffing/Cc..s
604 52 ,           + ,           PUNCT ,     punct     51 -          -           -      -   -          -      -   -   -          -          -      -                -
604 53 including   + include     VERB  VBG   acl       51 -          include.01  -      -   -          -      -   -   -          -          B-V    -                including/P.-o:21:g1.|pg:012
604 54 recruitment + recruitment NOUN  NN    dobj      53 -          -           -      -   -          -      -   -   -          -          B-ARG1 recruitment.n.01 recruitment/Cc..s
604 55 and         + and         CCONJ CC    cc        54 -          -           -      -   -          -      -   -   -          -          I-ARG1 -                and/J
604 56 selection   - selection   NOUN  NN    conj      54 -          -           -      -   -          -      -   -   -          -          I-ARG1 choice.n.02      selection/Cc..s
604 57 ;           + ;           PUNCT :     punct     17 -          -           -      -   -          -      -   -   -          -          -      -                -
604 58 (           - (           PUNCT -LRB- punct     59 -          -           -      -   -          -      -   -   -          -          -      -                -
604 59 5           - 5           X     LS    meta      61 B-CARDINAL -           -      -   -          -      -   -   -          -          -      -                5/C...c
604 60 )           + )           PUNCT -RRB- punct     59 -          -           -      -   -          -      -   -   -          -          -      -                -
604 61 access      + access      NOUN  NN    conj      51 -          -           -      -   -          -      -   -   -          -          -      access.n.02      access/Cc..s
604 62 to          + to          ADP   IN    prep      61 -          -           -      -   -          -      -   -   -          -          -      -                to/Br
604 63 customers   - customer    NOUN  NNS   pobj      62 -          -           -      -   -          -      -   -   -          -          -      customer.n.01    customers/Cc..p
604 64 .           - .           PUNCT .     punct     4  -          -           -      -   -          -      -   -   -          -          -      -                -

# sent_i = 605
# sent = His ankles hurt badly, but his knees hurt worst.
# hyperedge = (but/J (hurt/Pd.s?:1m:0m.|f:1 (his/Mp ankles/Cc..p) badly/M) (hurt/Pd.s?:1m:0m.|f:1 (his/Mp knees/Cc..p) worst/M^))
# hyperedge builder = (605.5/J (605.2/Pd.s?:1m:0m.|f:1 (605.0/Mp 605.1/Cc..p) 605.3/M) (605.8/Pd.s?:1m:0m.|f:1 (605.6/Mp 605.7/Cc..p) 605.9/M^))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
605 0  His    + his   PRON  PRP$ poss   1 - -       B-ARG1     -          B-MAIN0 -          his/Mp
605 1  ankles + ankle NOUN  NNS  nsubj  2 - -       I-ARG1     -          -       ankle.n.01 ankles/Cc..p
605 2  hurt   + hurt  VERB  VBP  ROOT   2 - hurt.02 B-V        -          -       ache.v.03  hurt/Pd.s?:1m:0m.|f:1
605 3  badly  - badly ADV   RB   advmod 2 - -       B-ARGM-MNR -          -       badly.r.01 badly/M
605 4  ,      + ,     PUNCT ,    punct  2 - -       -          -          -       -          -
605 5  but    + but   CCONJ CC   cc     2 - -       -          -          -       -          but/J
605 6  his    + his   PRON  PRP$ poss   7 - -       -          B-ARG1     B-REF0  -          his/Mp
605 7  knees  + knee  NOUN  NNS  nsubj  8 - -       -          I-ARG1     -       knee.n.01  knees/Cc..p
605 8  hurt   + hurt  VERB  VBP  conj   2 - hurt.02 -          B-V        -       ache.v.03  hurt/Pd.s?:1m:0m.|f:1
605 9  worst  - worst ADV   RBS  advmod 8 - -       -          B-ARGM-MNR -       worst.r.01 worst/M^
605 10 .      - .     PUNCT .    punct  8 - -       -          -          -       -          -

# sent_i = 606
# sent = It rains most often at the beginning of the year.
# hyperedge = (rains/Pd.s?x:-tt:-tt.|f--3s:012 it/Ci (most/M^.< often/M) (at/Tt (of/Br...d (the/Md.<..d beginning/Cc..s.d) (the/Md.<..d year/Cc..s.d))))
# hyperedge builder = (606.1/Pd.s?x:-tt:-tt.|f--3s:012 606.0/Ci (606.2/M^.< 606.3/M) (606.4/Tt (606.7/Br...d (606.5/Md.<..d 606.6/Cc..s.d) (606.8/Md.<..d 606.9/Cc..s.d))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
606 0  It        + it        PRON  PRP nsubj  1 -      -       -          -               it/Ci
606 1  rains     + rain      VERB  VBZ ROOT   1 -      rain.01 B-V        rain.v.01       rains/Pd.s?x:-tt:-tt.|f--3s:012
606 2  most      + most      ADV   RBS advmod 3 -      -       B-ARGM-TMP most.r.02       most/M^.<
606 3  often     + often     ADV   RB  advmod 1 -      -       I-ARGM-TMP frequently.r.01 often/M
606 4  at        + at        ADP   IN  prep   1 -      -       B-ARGM-TMP -               at/Tt
606 5  the       + the       DET   DT  det    6 B-DATE -       I-ARGM-TMP -               the/Md.<..d
606 6  beginning + beginning NOUN  NN  pobj   4 I-DATE -       I-ARGM-TMP beginning.n.01  beginning/Cc..s.d
606 7  of        + of        ADP   IN  prep   6 I-DATE -       I-ARGM-TMP -               of/Br...d
606 8  the       + the       DET   DT  det    9 I-DATE -       I-ARGM-TMP -               the/Md.<..d
606 9  year      - year      NOUN  NN  pobj   7 I-DATE -       I-ARGM-TMP year.n.01       year/Cc..s.d
606 10 .         - .         PUNCT .   punct  1 -      -       -          -               -

# sent_i = 607
# sent = Most Vikings were also farmers, fishermen, craftsmen and traders.
# hyperedge = (were/Pd.s?c:1s2:1sh.<f:12 (most/Ms.< vikings/Cp..p.n) also/M (and/J farmers/Cc..p fishermen/Cc..p craftsmen/Cc..p traders/Cc..p))
# hyperedge builder = (607.2/Pd.s?c:1s2:1sh.<f:12 (607.0/Ms.< 607.1/Cp..p.n) 607.3/M (607.9/J 607.4/Cc..p 607.6/Cc..p 607.8/Cc..p 607.10/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
607 0  Most      + Most      ADJ   JJS  amod   1 -      -     B-ARG1     most.a.01      most/Ms.<
607 1  Vikings   + Vikings   PROPN NNPS nsubj  2 B-NORP -     I-ARG1     viking.n.01    vikings/Cp..p.n
607 2  were      + be        AUX   VBD  ROOT   2 -      be.01 B-V        be.v.01        were/Pd.s?c:1s2:1sh.<f:12
607 3  also      + also      ADV   RB   advmod 2 -      -     B-ARGM-DIS besides.r.02   also/M
607 4  farmers   - farmer    NOUN  NNS  attr   2 -      -     B-ARG2     farmer.n.01    farmers/Cc..p
607 5  ,         + ,         PUNCT ,    punct  4 -      -     I-ARG2     -              -
607 6  fishermen - fisherman NOUN  NNS  conj   4 -      -     I-ARG2     fisherman.n.01 fishermen/Cc..p
607 7  ,         + ,         PUNCT ,    punct  6 -      -     I-ARG2     -              -
607 8  craftsmen + craftsman NOUN  NNS  conj   6 -      -     I-ARG2     craftsman.n.03 craftsmen/Cc..p
607 9  and       + and       CCONJ CC   cc     8 -      -     I-ARG2     -              and/J
607 10 traders   - trader    NOUN  NNS  conj   8 -      -     I-ARG2     trader.n.01    traders/Cc..p
607 11 .         - .         PUNCT .    punct  2 -      -     -          -              -

# sent_i = 608
# sent = The Nazis aimed to unite all Germans living in historically German territory, as well as gain additional lands for German expansion.
# hyperedge = (aimed/Pd.sr:01:01.<f:01 (the/Md.< nazis/Cp..p.n) ((as/M.< (well/M.< as/J)) ((to/Mi.< unite/Pd.-o:01:01.-i:0123) (the/Md.< nazis/Cp..p.n) (+/Jr.ma (all/Md.< germans/Cp..p.n) (living/P.-x:0l:0l.|pg:01 (all/Md.< germans/Cp..p.n) (in/Tl ((historically/M.< german/Ma.<..n) territory/Cc..s))))) (gain/Pd.-ox:013:01g.-i:0123 (the/Md.< nazis/Cp..p.n) (additional/Ma.< lands/Cc..p) (for/T (german/Ma.<..n expansion/Cc..s)))))
# hyperedge builder = (608.2/Pd.sr:01:01.<f:01 (608.0/Md.< 608.1/Cp..p.n) ((608.13/M.< (608.14/M.< 608.15/J)) ((608.3/Mi.< 608.4/Pd.-o:01:01.-i:0123) (608.0/Md.< 608.1/Cp..p.n) (+/Jr.ma (608.5/Md.< 608.6/Cp..p.n) (608.7/P.-x:0l:0l.|pg:01 (608.5/Md.< 608.6/Cp..p.n) (608.8/Tl ((608.9/M.< 608.10/Ma.<..n) 608.11/Cc..s))))) (608.16/Pd.-ox:013:01g.-i:0123 (608.0/Md.< 608.1/Cp..p.n) (608.17/Ma.< 608.18/Cc..p) (608.19/T (608.20/Ma.<..n 608.21/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
608 0  The          + the          DET   DT   det    1  -      -        B-ARG0 B-ARG0 -          B-ARG0 -                 the/Md.<
608 1  Nazis        + Nazis        PROPN NNPS nsubj  2  B-NORP -        I-ARG0 I-ARG0 -          I-ARG0 nazi.n.01         nazis/Cp..p.n
608 2  aimed        + aim          VERB  VBD  ROOT   2  -      aim.01   B-V    -      -          -      aim.v.02          aimed/Pd.sr:01:01.<f:01
608 3  to           + to           PART  TO   aux    4  -      -        B-ARG1 -      -          -      -                 to/Mi.<
608 4  unite        + unite        VERB  VB   xcomp  2  -      unite.01 I-ARG1 B-V    -          -      unify.v.01        unite/Pd.-o:01:01.-i:0123
608 5  all          + all          DET   DT   det    6  -      -        I-ARG1 B-ARG1 B-ARG0     -      all.a.01          all/Md.<
608 6  Germans      + Germans      PROPN NNPS dobj   4  B-NORP -        I-ARG1 I-ARG1 I-ARG0     -      german.n.01       germans/Cp..p.n
608 7  living       + live         VERB  VBG  acl    6  -      live.01  I-ARG1 I-ARG1 B-V        -      populate.v.01     living/P.-x:0l:0l.|pg:01
608 8  in           + in           ADP   IN   prep   7  -      -        I-ARG1 I-ARG1 B-ARGM-LOC -      -                 in/Tl
608 9  historically + historically ADV   RB   advmod 10 -      -        I-ARG1 I-ARG1 I-ARGM-LOC -      historically.r.02 historically/M.<
608 10 German       + german       ADJ   JJ   amod   11 B-NORP -        I-ARG1 I-ARG1 I-ARGM-LOC -      german.a.01       german/Ma.<..n
608 11 territory    - territory    NOUN  NN   pobj   8  -      -        I-ARG1 I-ARG1 I-ARGM-LOC -      territory.n.03    territory/Cc..s
608 12 ,            + ,            PUNCT ,    punct  4  -      -        I-ARG1 -      -          -      -                 -
608 13 as           + as           ADV   RB   advmod 15 -      -        I-ARG1 -      -          -      besides.r.02      as/M.<
608 14 well         + well         ADV   RB   advmod 15 -      -        I-ARG1 -      -          -      besides.r.02      well/M.<
608 15 as           + as           SCONJ IN   cc     4  -      -        I-ARG1 -      -          -      -                 as/J
608 16 gain         + gain         VERB  VB   conj   4  -      gain.02  I-ARG1 -      -          B-V    derive.v.02       gain/Pd.-ox:013:01g.-i:0123
608 17 additional   + additional   ADJ   JJ   amod   18 -      -        I-ARG1 -      -          B-ARG1 extra.s.03        additional/Ma.<
608 18 lands        + land         NOUN  NNS  dobj   16 -      -        I-ARG1 -      -          I-ARG1 domain.n.02       lands/Cc..p
608 19 for          + for          ADP   IN   prep   16 -      -        I-ARG1 -      -          B-ARG3 -                 for/T
608 20 German       + german       ADJ   JJ   amod   21 B-NORP -        I-ARG1 -      -          I-ARG3 german.a.01       german/Ma.<..n
608 21 expansion    - expansion    NOUN  NN   pobj   19 -      -        I-ARG1 -      -          I-ARG3 expansion.n.01    expansion/Cc..s
608 22 .            - .            PUNCT .    punct  2  -      -        -      -      -          -      -                 -

# sent_i = 609
# sent = I sent an email to bzitko@pmfst.hr with a link to https://www.acnltutor.net/
# hyperedge = (sent/P.soi-:0121:01g1.<f:012 i/Ci (with/Br (an/Md.< email/Cc..s) (to/Br (a/Md.< link/Cc..s) https:%2f%2fwww%2eacnltutor%2enet%2f/C)) (to/T bzitko%40pmfst%2ehr/C) (with/Br (to/Br (a/Md.< link/Cc..s) https:%2f%2fwww%2eacnltutor%2enet%2f/C)))
# hyperedge builder = (609.1/P.soi-:0121:01g1.<f:012 609.0/Ci (609.6/Br (609.2/Md.< 609.3/Cc..s) (609.9/Br (609.7/Md.< 609.8/Cc..s) 609.10/C)) (609.4/T 609.5/C) (609.6/Br (609.9/Br (609.7/Md.< 609.8/Cc..s) 609.10/C)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
609 0  I                          + I                          PRON PRP nsubj  1 - -       B-ARG0   -                    i/Ci
609 1  sent                       + send                       VERB VBD ROOT   1 - send.01 B-V      mail.v.02            sent/P.soi-:0121:01g1.<f:012
609 2  an                         + an                         DET  DT  det    3 - -       B-ARG1   -                    an/Md.<
609 3  email                      + email                      NOUN NN  dobj   1 - -       I-ARG1   electronic_mail.n.01 email/Cc..s
609 4  to                         + to                         ADP  IN  dative 1 - -       B-ARG2   -                    to/T
609 5  bzitko@pmfst.hr            + bzitko@pmfst.hr            X    ADD pobj   4 - -       I-ARG2   -                    bzitko%40pmfst%2ehr/C
609 6  with                       + with                       ADP  IN  prep   3 - -       B-C-ARG1 -                    with/Br
609 7  a                          + a                          DET  DT  det    8 - -       I-C-ARG1 -                    a/Md.<
609 8  link                       + link                       NOUN NN  pobj   6 - -       I-C-ARG1 link.n.06            link/Cc..s
609 9  to                         + to                         ADP  IN  prep   8 - -       I-C-ARG1 -                    to/Br
609 10 https://www.acnltutor.net/ - https://www.acnltutor.net/ X    ADD pobj   9 - -       I-C-ARG1 -                    https:%2f%2fwww%2eacnltutor%2enet%2f/C

# sent_i = 610
# sent = She got $8 million for appearing in that film.
# hyperedge = (got/Pd.sox:013:01q.<f:01234 she/Ci ($/M.<..$ (+/B.am..$ 8/C#.<..$ million/C#...$)) (for/T (appearing/P.-x:1l:1l.|pg:1 she/Ci (in/Tl (that/Md.< film/Cc..s)))))
# hyperedge builder = (610.1/Pd.sox:013:01q.<f:01234 610.0/Ci (610.2/M.<..$ (+/B.am..$ 610.3/C#.<..$ 610.4/C#...$)) (610.5/T (610.6/P.-x:1l:1l.|pg:1 610.0/Ci (610.7/Tl (610.8/Md.< 610.9/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
610 0  She       + she     PRON  PRP nsubj    1 -       -         B-ARG0 B-ARG1     -            she/Ci
610 1  got       + get     VERB  VBD ROOT     1 -       get.01    B-V    -          get.v.01     got/Pd.sox:013:01q.<f:01234
610 2  $         - $       SYM   $   nmod     4 B-MONEY -         B-ARG1 -          -            $/M.<..$
610 3  8         + 8       NUM   CD  compound 4 I-MONEY -         I-ARG1 -          eight.s.01   8/C#.<..$
610 4  million   + million NUM   CD  dobj     1 I-MONEY -         I-ARG1 -          million.s.01 million/C#...$
610 5  for       + for     ADP   IN  prep     1 -       -         B-ARG3 -          -            for/T
610 6  appearing + appear  VERB  VBG pcomp    5 -       appear.01 I-ARG3 B-V        appear.v.06  appearing/P.-x:1l:1l.|pg:1
610 7  in        + in      ADP   IN  prep     6 -       -         I-ARG3 B-ARGM-LOC -            in/Tl
610 8  that      + that    DET   DT  det      9 -       -         I-ARG3 I-ARGM-LOC -            that/Md.<
610 9  film      - film    NOUN  NN  pobj     7 -       -         I-ARG3 I-ARGM-LOC movie.n.01   film/Cc..s
610 10 .         - .       PUNCT .   punct    1 -       -         -      -          -            -

# sent_i = 611
# sent = I owe Janet £10.
# hyperedge = (owe/Pd.sio:021:0g1.|f:0123 i/Ci janet/Cp..s.p (£/M.<..$ 10/C#...$))
# hyperedge builder = (611.1/Pd.sio:021:0g1.|f:0123 611.0/Ci 611.2/Cp..s.p (611.3/M.<..$ 611.4/C#...$))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
611 0 I     + I     PRON  PRP nsubj  1 -        -      B-ARG0 -        i/Ci
611 1 owe   + owe   VERB  VBP ROOT   1 -        owe.01 B-V    owe.v.01 owe/Pd.sio:021:0g1.|f:0123
611 2 Janet + Janet PROPN NNP dative 1 B-PERSON -      B-ARG2 -        janet/Cp..s.p
611 3 £     - £     SYM   $   nmod   4 B-MONEY  -      B-ARG1 -        £/M.<..$
611 4 10    - 10    NUM   CD  dobj   1 I-MONEY  -      I-ARG1 ten.s.01 10/C#...$
611 5 .     - .     PUNCT .   punct  1 -        -      -      -        -

# sent_i = 612
# sent = "Alea iacta est" is a Latin phrase that means "the die has been cast".
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (+/B.am alea/Cm.< (+/B.am iacta/Cm.< est/C)) (+/Jr.ma (a/Md.< (latin/Ma.<..u phrase/Cc..s)) (means/P.-sr:112:m11.|f--3s:0123 (a/Md.< (latin/Ma.<..u phrase/Cc..s)) that/Cd ((has/Mv.< (been/Mv.< cast/P.p:1:1.<pf:012)) (the/Md.< die/Cc..s)))))
# hyperedge builder = (612.5/Pd.sc:12:1h.|f--3s:12 (+/B.am 612.1/Cm.< (+/B.am 612.2/Cm.< 612.3/C)) (+/Jr.ma (612.6/Md.< (612.7/Ma.<..u 612.8/Cc..s)) (612.10/P.-sr:112:m11.|f--3s:0123 (612.6/Md.< (612.7/Ma.<..u 612.8/Cc..s)) 612.9/Cd ((612.14/Mv.< (612.15/Mv.< 612.16/P.p:1:1.<pf:012)) (612.12/Md.< 612.13/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 synset atoms
612 0  "      - "      PUNCT ``  punct     5  -          -       -      -        -   -   -      -            -
612 1  Alea   + Alea   X     FW  nmod      3  -          -       B-ARG1 -        -   -   -      -            alea/Cm.<
612 2  iacta  + iacta  X     FW  nmod      3  -          -       I-ARG1 -        -   -   -      -            iacta/Cm.<
612 3  est    - est    X     FW  nsubj     5  -          -       I-ARG1 -        -   -   -      -            est/C
612 4  "      + "      PUNCT ''  punct     5  -          -       -      -        -   -   -      -            -
612 5  is     + be     AUX   VBZ ROOT      5  -          be.01   B-V    -        -   -   -      be.v.01      is/Pd.sc:12:1h.|f--3s:12
612 6  a      + a      DET   DT  det       8  -          -       B-ARG2 B-ARG1   -   -   -      -            a/Md.<
612 7  Latin  + latin  ADJ   JJ  amod      8  B-LANGUAGE -       I-ARG2 I-ARG1   -   -   -      latin.a.01   latin/Ma.<..u
612 8  phrase + phrase NOUN  NN  attr      5  -          -       I-ARG2 I-ARG1   -   -   -      phrase.n.01  phrase/Cc..s
612 9  that   + that   DET   WDT nsubj     10 -          -       I-ARG2 B-R-ARG1 -   -   -      -            that/Cd
612 10 means  + mean   VERB  VBZ relcl     8  -          mean.01 I-ARG2 B-V      -   -   -      mean.v.03    means/P.-sr:112:m11.|f--3s:0123
612 11 "      - "      PUNCT ``  punct     16 -          -       I-ARG2 B-ARG2   -   -   -      -            -
612 12 the    + the    DET   DT  det       13 -          -       I-ARG2 I-ARG2   -   -   B-ARG1 -            the/Md.<
612 13 die    + die    NOUN  NN  nsubjpass 16 -          -       I-ARG2 I-ARG2   -   -   I-ARG1 die.n.01     die/Cc..s
612 14 has    + have   AUX   VBZ aux       16 -          have.01 I-ARG2 I-ARG2   B-V -   -      -            has/Mv.<
612 15 been   + be     AUX   VBN auxpass   16 -          be.03   I-ARG2 I-ARG2   -   B-V -      -            been/Mv.<
612 16 cast   - cast   VERB  VBN ccomp     10 -          cast.01 I-ARG2 I-ARG2   -   -   B-V    project.v.10 cast/P.p:1:1.<pf:012
612 17 "      - "      PUNCT ''  punct     16 -          -       I-ARG2 I-ARG2   -   -   -      -            -
612 18 .      - .      PUNCT .   punct     5  -          -       -      -        -   -   -      -            -

# sent_i = 613
# sent = He is content with the "status quo" and does not like change.
# hyperedge = (and/J (is/Pd.sc:12:1h.|f--3s:12 he/Ci (with/Br content/Ca (the/Md.< (+/B.am status/Cm.< quo/C)))) ((does/Mv.< (not/Mn.< like/P.-o:01:01.-i:01)) he/Ci change/Cc..s))
# hyperedge builder = (613.9/J (613.1/Pd.sc:12:1h.|f--3s:12 613.0/Ci (613.3/Br 613.2/Ca (613.4/Md.< (+/B.am 613.6/Cm.< 613.7/C)))) ((613.10/Mv.< (613.11/Mn.< 613.12/P.-o:01:01.-i:01)) 613.0/Ci 613.13/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
613 0  He      + he      PRON  PRP nsubj 1  - -       B-ARG1 -   B-ARG0 -               he/Ci
613 1  is      + be      AUX   VBZ ROOT  1  - be.01   B-V    -   -      be.v.01         is/Pd.sc:12:1h.|f--3s:12
613 2  content + content ADJ   JJ  acomp 1  - -       B-ARG2 -   -      contented.a.01  content/Ca
613 3  with    + with    ADP   IN  prep  2  - -       I-ARG2 -   -      -               with/Br
613 4  the     + the     DET   DT  det   7  - -       I-ARG2 -   -      -               the/Md.<
613 5  "       - "       PUNCT ``  punct 7  - -       I-ARG2 -   -      -               -
613 6  status  + status  X     FW  nmod  7  - -       I-ARG2 -   -      status_quo.n.01 status/Cm.<
613 7  quo     - quo     X     FW  pobj  3  - -       I-ARG2 -   -      status_quo.n.01 quo/C
613 8  "       + "       PUNCT ''  punct 7  - -       I-ARG2 -   -      -               -
613 9  and     + and     CCONJ CC  cc    1  - -       -      -   -      -               and/J
613 10 does    + do      AUX   VBZ aux   12 - do.01   -      B-V -      -               does/Mv.<
613 11 not     + not     PART  RB  neg   12 - -       -      -   -      not.r.01        not/Mn.<
613 12 like    + like    VERB  VB  conj  1  - like.01 -      -   B-V    like.v.02       like/P.-o:01:01.-i:01
613 13 change  - change  NOUN  NN  dobj  12 - -       -      -   B-ARG1 change.n.01     change/Cc..s
613 14 .       - .       PUNCT .   punct 1  - -       -      -   -      -               -

# sent_i = 614
# sent = ilYwECfYs  
# hyperedge = (:/J ilywecfys/C %20/C)
# hyperedge builder = (:/J 614.0/C 614.1/C)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset synset atoms
614 0 ilYwECfYs + ilywecfys X     XX  ROOT 0 - - - ilywecfys/C
614 1 \         + \         SPACE _SP dep  0 - - - %20/C

# sent_i = 615
# sent = There are other non Brits in the program.
# hyperedge = (are/Pd.ecx:-1r:-1r.|f:1 there/Me (other/Ma.< (non/Ma.< brits/Cp..p.n)) (in/T (the/Md.< program/Cc..s)))
# hyperedge builder = (615.1/Pd.ecx:-1r:-1r.|f:1 615.0/Me (615.2/Ma.< (615.3/Ma.< 615.4/Cp..p.n)) (615.5/T (615.6/Md.< 615.7/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
615 0 There   + there   PRON  EX   expl  1 -      -     -          -            there/Me
615 1 are     + be      AUX   VBP  ROOT  1 -      be.02 B-V        be.v.01      are/Pd.ecx:-1r:-1r.|f:1
615 2 other   + other   ADJ   JJ   amod  4 -      -     B-ARG1     other.a.01   other/Ma.<
615 3 non     + non     ADJ   AFX  amod  4 -      -     I-ARG1     not.r.01     non/Ma.<
615 4 Brits   + Brits   PROPN NNPS attr  1 B-NORP -     I-ARG1     british.n.01 brits/Cp..p.n
615 5 in      + in      ADP   IN   prep  1 -      -     B-ARGM-ADV -            in/T
615 6 the     + the     DET   DT   det   7 -      -     I-ARGM-ADV -            the/Md.<
615 7 program - program NOUN  NN   pobj  5 -      -     I-ARGM-ADV program.n.02 program/Cc..s
615 8 .       - .       PUNCT .    punct 1 -      -     -          -            -

# sent_i = 616
# sent = The purpose of this study was to investigate patients' need for pre- and post-operative information.
# hyperedge = (was/Pd.sr:12:1h.<f:12 (of/Br (the/Md.< purpose/Cc..s) (this/Md.< study/Cc..s)) ((to/Mi.< investigate/P.o:1:1.-i:012) (for/Br ('/Bp patients/Cc..p need/Cc..s) ((and/J pre-/Ma.< post-operative/M) information/Cc..s))))
# hyperedge builder = (616.5/Pd.sr:12:1h.<f:12 (616.2/Br (616.0/Md.< 616.1/Cc..s) (616.3/Md.< 616.4/Cc..s)) ((616.6/Mi.< 616.7/P.o:1:1.-i:012) (616.11/Br (616.9/Bp 616.8/Cc..p 616.10/Cc..s) ((616.13/J 616.12/Ma.< 616.14/M) 616.15/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
616 0  The            + the            DET   DT  det   1  - -              B-ARG1 -      -                  the/Md.<
616 1  purpose        + purpose        NOUN  NN  nsubj 5  - -              I-ARG1 -      purpose.n.01       purpose/Cc..s
616 2  of             + of             ADP   IN  prep  1  - -              I-ARG1 -      -                  of/Br
616 3  this           + this           DET   DT  det   4  - -              I-ARG1 -      -                  this/Md.<
616 4  study          + study          NOUN  NN  pobj  2  - -              I-ARG1 -      report.n.01        study/Cc..s
616 5  was            + be             VERB  VBD ROOT  5  - be.01          B-V    -      -                  was/Pd.sr:12:1h.<f:12
616 6  to             + to             PART  TO  aux   7  - -              B-ARG2 -      -                  to/Mi.<
616 7  investigate    + investigate    VERB  VB  xcomp 5  - investigate.01 I-ARG2 B-V    investigate.v.01   investigate/P.o:1:1.-i:012
616 8  patients       - patient        NOUN  NNS poss  10 - -              I-ARG2 B-ARG1 patient.n.01       patients/Cc..p
616 9  '              + '              PART  POS case  8  - -              I-ARG2 I-ARG1 -                  '/Bp
616 10 need           + need           NOUN  NN  dobj  7  - -              I-ARG2 I-ARG1 need.n.02          need/Cc..s
616 11 for            + for            ADP   IN  prep  10 - -              I-ARG2 I-ARG1 -                  for/Br
616 12 pre-           + pre-           ADJ   AFX amod  15 - -              I-ARG2 I-ARG1 preoperative.s.01  pre-/Ma.<
616 13 and            + and            CCONJ CC  cc    12 - -              I-ARG2 I-ARG1 -                  and/J
616 14 post-operative + post-operative ADJ   JJ  conj  12 - -              I-ARG2 I-ARG1 postoperative.s.01 post-operative/M
616 15 information    - information    NOUN  NN  pobj  11 - -              I-ARG2 I-ARG1 data.n.01          information/Cc..s
616 16 .              - .              PUNCT .   punct 5  - -              -      -      -                  -

# sent_i = 617
# sent = See you soon :).
# hyperedge = (see/Pd.o?:1t:1t.-i:012 you/Ci soon/M)
# hyperedge builder = (617.0/Pd.o?:1t:1t.-i:012 617.1/Ci 617.2/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
617 0 See  + see  VERB  VB  ROOT   0 - see.01 B-V        meet.v.01 see/Pd.o?:1t:1t.-i:012
617 1 you  + you  PRON  PRP dobj   0 - -      B-ARG1     -         you/Ci
617 2 soon + soon ADV   RB  advmod 0 - -      B-ARGM-TMP soon.r.01 soon/M
617 3 :)   - :)   PUNCT NFP punct  0 - -      -          -         -
617 4 .    - .    PUNCT .   punct  0 - -      -          -         -

# sent_i = 618
# sent = 2 + 2 is equal to 2 x 2.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (+/J 2/C#...c 2/C#...c) (to/Br equal/Ca (x/J 2/C#...c 2/C#...c)))
# hyperedge builder = (618.3/Pd.sc:12:1h.|f--3s:12 (618.1/J 618.0/C#...c 618.2/C#...c) (618.5/Br 618.4/Ca (618.7/J 618.6/C#...c 618.8/C#...c)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
618 0 2     + 2     NUM   CD  nsubj 3 B-CARDINAL -     B-ARG1 two.n.01   2/C#...c
618 1 +     + +     SYM   SYM cc    0 -          -     I-ARG1 -          +/J
618 2 2     + 2     NUM   CD  conj  0 B-CARDINAL -     I-ARG1 two.n.01   2/C#...c
618 3 is    + be    AUX   VBZ ROOT  3 -          be.01 B-V    be.v.01    is/Pd.sc:12:1h.|f--3s:12
618 4 equal + equal ADJ   JJ  acomp 3 -          -     B-ARG2 equal.a.01 equal/Ca
618 5 to    + to    ADP   IN  prep  4 -          -     I-ARG2 -          to/Br
618 6 2     + 2     NUM   CD  pobj  5 B-CARDINAL -     I-ARG2 two.n.01   2/C#...c
618 7 x     + x     SYM   SYM cc    6 -          -     I-ARG2 -          x/J
618 8 2     - 2     NUM   CD  conj  6 B-CARDINAL -     I-ARG2 two.n.01   2/C#...c
618 9 .     - .     PUNCT .   punct 3 -          -     -      -          -

# sent_i = 619
# sent = There is no doubt that "the Mona Lisa" is a very good painting.
# hyperedge = (is/Pd.ec:-1:-1.|f--3s:1 there/Me (+/Jr.ma (no/Md.< doubt/Cc..s) (that/T (is/P.sc:-2:-h.|f--3s:12 (the/Md.<..a (+/B.am..a mona/Cp.<.s.a lisa/Cp..s.a)) (a/Md.< ((very/M.< good/Ma.<) painting/Cc..s))))))
# hyperedge builder = (619.1/Pd.ec:-1:-1.|f--3s:1 619.0/Me (+/Jr.ma (619.2/Md.< 619.3/Cc..s) (619.4/T (619.10/P.sc:-2:-h.|f--3s:12 (619.6/Md.<..a (+/B.am..a 619.7/Cp.<.s.a 619.8/Cp..s.a)) (619.11/Md.< ((619.12/M.< 619.13/Ma.<) 619.14/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
619 0  There    + there    PRON  EX  expl     1  -             -     -      -      -             there/Me
619 1  is       + be       AUX   VBZ ROOT     1  -             be.02 B-V    -      be.v.01       is/Pd.ec:-1:-1.|f--3s:1
619 2  no       + no       DET   DT  det      3  -             -     B-ARG1 -      no.a.01       no/Md.<
619 3  doubt    + doubt    NOUN  NN  attr     1  -             -     I-ARG1 -      doubt.n.02    doubt/Cc..s
619 4  that     + that     SCONJ IN  mark     10 -             -     I-ARG1 -      -             that/T
619 5  "        - "        PUNCT ``  punct    10 -             -     I-ARG1 B-ARG1 -             -
619 6  the      + the      DET   DT  det      8  B-WORK_OF_ART -     I-ARG1 I-ARG1 -             the/Md.<..a
619 7  Mona     + Mona     PROPN NNP compound 8  I-WORK_OF_ART -     I-ARG1 I-ARG1 -             mona/Cp.<.s.a
619 8  Lisa     - Lisa     PROPN NNP nsubj    10 I-WORK_OF_ART -     I-ARG1 I-ARG1 -             lisa/Cp..s.a
619 9  "        + "        PUNCT "   punct    10 -             -     I-ARG1 I-ARG1 -             -
619 10 is       + be       VERB  VBZ acl      3  -             be.01 I-ARG1 B-V    be.v.01       is/P.sc:-2:-h.|f--3s:12
619 11 a        + a        DET   DT  det      14 -             -     I-ARG1 B-ARG2 -             a/Md.<
619 12 very     + very     ADV   RB  advmod   13 -             -     I-ARG1 I-ARG2 very.r.01     very/M.<
619 13 good     + good     ADJ   JJ  amod     14 -             -     I-ARG1 I-ARG2 good.a.01     good/Ma.<
619 14 painting - painting NOUN  NN  attr     10 -             -     I-ARG1 I-ARG2 painting.n.01 painting/Cc..s
619 15 .        - .        PUNCT .   punct    1  -             -     -      -      -             -

# sent_i = 620
# sent = Calvin Coolidge, the 30th president, was born on July 4, 1872; so far he is the only U.S. president to have been born on Independence Day.
# hyperedge = (is/Pd.r?sc:-t12:-t1h.|f--3s:12 ((was/Mv.< born/P.px:1t:1t.<pf:01) (+/Ba.ma.c (+/B.am..p calvin/Cp.<.s.p coolidge/Cp..s.p) (the/Md.< (30th/Ma.<..# president/Cc..s))) (on/Tt (1872/M#.>..d (4/M#.>..d july/Cp..s.d)))) (so/M.< far/M) (+/Jc.rm.rp he/Ci (+/Ba.ma.c (+/B.am..p calvin/Cp.<.s.p coolidge/Cp..s.p) (the/Md.< (30th/Ma.<..# president/Cc..s)))) (+/Jr.ma (the/Md.< (only/Ma.< (+/B.am u%2es%2e/Cp.<.s.g president/Cc..s))) ((to/Mi.< (have/Mv.< (been/Mv.< born/P.-x:1t:1t.<pf:01))) (the/Md.< (only/Ma.< (+/B.am u%2es%2e/Cp.<.s.g president/Cc..s))) (on/Tt (+/B.am..e independence/Cp.<.s.e day/Cp..s.e)))))
# hyperedge builder = (620.18/Pd.r?sc:-t12:-t1h.|f--3s:12 ((620.7/Mv.< 620.8/P.px:1t:1t.<pf:01) (+/Ba.ma.c (+/B.am..p 620.0/Cp.<.s.p 620.1/Cp..s.p) (620.3/Md.< (620.4/Ma.<..# 620.5/Cc..s))) (620.9/Tt (620.13/M#.>..d (620.11/M#.>..d 620.10/Cp..s.d)))) (620.15/M.< 620.16/M) (+/Jc.rm.rp 620.17/Ci (+/Ba.ma.c (+/B.am..p 620.0/Cp.<.s.p 620.1/Cp..s.p) (620.3/Md.< (620.4/Ma.<..# 620.5/Cc..s)))) (+/Jr.ma (620.19/Md.< (620.20/Ma.< (+/B.am 620.21/Cp.<.s.g 620.22/Cc..s))) ((620.23/Mi.< (620.24/Mv.< (620.25/Mv.< 620.26/P.-x:1t:1t.<pf:01))) (620.19/Md.< (620.20/Ma.< (+/B.am 620.21/Cp.<.s.g 620.22/Cc..s))) (620.27/Tt (+/B.am..e 620.28/Cp.<.s.e 620.29/Cp..s.e)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 synset atoms
620 0  Calvin       + Calvin       PROPN NNP compound  1  B-PERSON  -       -   B-ARG1     -          -   -   -          B-MAIN0 coolidge.n.01                       calvin/Cp.<.s.p
620 1  Coolidge     - Coolidge     PROPN NNP nsubjpass 8  I-PERSON  -       -   I-ARG1     -          -   -   -          I-MAIN0 coolidge.n.01                       coolidge/Cp..s.p
620 2  ,            + ,            PUNCT ,   punct     1  -         -       -   I-ARG1     -          -   -   -          I-MAIN0 -                                   -
620 3  the          + the          DET   DT  det       5  -         -       -   I-ARG1     -          -   -   -          I-MAIN0 -                                   the/Md.<
620 4  30th         + 30th         ADJ   JJ  amod      5  B-ORDINAL -       -   I-ARG1     -          -   -   -          I-MAIN0 thirtieth.s.01                      30th/Ma.<..#
620 5  president    - president    NOUN  NN  appos     1  -         -       -   I-ARG1     -          -   -   -          I-MAIN0 president_of_the_united_states.n.01 president/Cc..s
620 6  ,            + ,            PUNCT ,   punct     1  -         -       -   I-ARG1     -          -   -   -          -       -                                   -
620 7  was          + be           AUX   VBD auxpass   8  -         be.03   B-V -          -          -   -   -          -       be_born.v.01                        was/Mv.<
620 8  born         + bear         VERB  VBN ccomp     18 -         bear.02 -   B-V        -          -   -   -          -       be_born.v.01                        born/P.px:1t:1t.<pf:01
620 9  on           + on           ADP   IN  prep      8  -         -       -   B-ARGM-TMP -          -   -   -          -       -                                   on/Tt
620 10 July         + July         PROPN NNP pobj      9  B-DATE    -       -   I-ARGM-TMP -          -   -   -          -       july.n.01                           july/Cp..s.d
620 11 4            - 4            NUM   CD  nummod    10 I-DATE    -       -   I-ARGM-TMP -          -   -   -          -       four.s.01                           4/M#.>..d
620 12 ,            + ,            PUNCT ,   punct     10 I-DATE    -       -   I-ARGM-TMP -          -   -   -          -       -                                   -
620 13 1872         - 1872         NUM   CD  nummod    10 I-DATE    -       -   I-ARGM-TMP -          -   -   -          -       -                                   1872/M#.>..d
620 14 ;            + ;            PUNCT :   punct     18 -         -       -   -          -          -   -   -          -       -                                   -
620 15 so           + so           ADV   RB  advmod    16 -         -       -   -          B-ARGM-TMP -   -   -          -       so_far.r.01                         so/M.<
620 16 far          + far          ADV   RB  advmod    18 -         -       -   -          I-ARGM-TMP -   -   -          -       so_far.r.01                         far/M
620 17 he           + he           PRON  PRP nsubj     18 -         -       -   -          B-ARG1     -   -   -          B-REF0  -                                   he/Ci
620 18 is           + be           AUX   VBZ ROOT      18 -         be.01   -   -          B-V        -   -   -          -       be.v.01                             is/Pd.r?sc:-t12:-t1h.|f--3s:12
620 19 the          + the          DET   DT  det       22 -         -       -   -          B-ARG2     -   -   B-ARG1     -       -                                   the/Md.<
620 20 only         + only         ADJ   JJ  amod      22 -         -       -   -          I-ARG2     -   -   I-ARG1     -       lone.s.03                           only/Ma.<
620 21 U.S.         + U.S.         PROPN NNP compound  22 B-GPE     -       -   -          I-ARG2     -   -   I-ARG1     -       president_of_the_united_states.n.01 u%2es%2e/Cp.<.s.g
620 22 president    + president    NOUN  NN  attr      18 -         -       -   -          I-ARG2     -   -   I-ARG1     -       president_of_the_united_states.n.01 president/Cc..s
620 23 to           + to           PART  TO  aux       26 -         -       -   -          I-ARG2     -   -   -          -       -                                   to/Mi.<
620 24 have         + have         AUX   VB  aux       26 -         have.01 -   -          I-ARG2     B-V -   -          -       -                                   have/Mv.<
620 25 been         + be           AUX   VBN auxpass   26 -         be.03   -   -          I-ARG2     -   B-V -          -       be_born.v.01                        been/Mv.<
620 26 born         + bear         VERB  VBN relcl     22 -         bear.02 -   -          I-ARG2     -   -   B-V        -       be_born.v.01                        born/P.-x:1t:1t.<pf:01
620 27 on           + on           ADP   IN  prep      26 -         -       -   -          I-ARG2     -   -   B-ARGM-TMP -       -                                   on/Tt
620 28 Independence + Independence PROPN NNP compound  29 B-EVENT   -       -   -          I-ARG2     -   -   I-ARGM-TMP -       independence_day.n.01               independence/Cp.<.s.e
620 29 Day          - Day          PROPN NNP pobj      27 I-EVENT   -       -   -          I-ARG2     -   -   I-ARGM-TMP -       independence_day.n.01               day/Cp..s.e
620 30 .            - .            PUNCT .   punct     18 -         -       -   -          -          -   -   -          -       -                                   -

# sent_i = 621
# sent = How many languages are written in Arabic characters?
# hyperedge = ((are/Mv.< written/P?.px:1m:1m.<pf:012) ((how/Mw.< many/Ma.<) languages/Cc..p) (in/T (arabic/Ma.<..u characters/Cc..p)))
# hyperedge builder = ((621.3/Mv.< 621.4/P?.px:1m:1m.<pf:012) ((621.0/Mw.< 621.1/Ma.<) 621.2/Cc..p) (621.5/T (621.6/Ma.<..u 621.7/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
621 0 How        + how       ADV   WRB advmod    1 -          -        -   B-ARG1     -              how/Mw.<
621 1 many       + many      ADJ   JJ  amod      2 -          -        -   I-ARG1     many.a.01      many/Ma.<
621 2 languages  + language  NOUN  NNS nsubjpass 4 -          -        -   I-ARG1     language.n.01  languages/Cc..p
621 3 are        + be        AUX   VBP auxpass   4 -          be.03    B-V -          -              are/Mv.<
621 4 written    + write     VERB  VBN ROOT      4 -          write.01 -   B-V        spell.v.03     written/P?.px:1m:1m.<pf:012
621 5 in         + in        ADP   IN  prep      4 -          -        -   B-ARGM-MNR -              in/T
621 6 Arabic     + arabic    ADJ   JJ  amod      7 B-LANGUAGE -        -   I-ARGM-MNR arabic.a.01    arabic/Ma.<..u
621 7 characters - character NOUN  NNS pobj      5 -          -        -   I-ARGM-MNR character.n.08 characters/Cc..p
621 8 ?          - ?         PUNCT .   punct     4 -          -        -   -          -              -

# sent_i = 622
# sent = A walk from Rockefeller Center to Central Park on 5th Ave is a must-do!
# hyperedge = (is/P!.sc:12:1h.|f--3s:12 (to/Br (from/Br (a/Md.< walk/Cc..s) (+/B.am..f rockefeller/Cp.<.s.f center/Cp..s.f)) (on/Br (+/B.am..l central/Cp.<.s.l park/Cp..s.l) (5th/Ma.<..f ave/Cp..s.f))) (a/Md.< must-do/Cc..s))
# hyperedge builder = (622.11/P!.sc:12:1h.|f--3s:12 (622.5/Br (622.2/Br (622.0/Md.< 622.1/Cc..s) (+/B.am..f 622.3/Cp.<.s.f 622.4/Cp..s.f)) (622.8/Br (+/B.am..l 622.6/Cp.<.s.l 622.7/Cp..s.l) (622.9/Ma.<..f 622.10/Cp..s.f))) (622.12/Md.< 622.13/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
622 0  A           + a           DET   DT  det      1  -     -     B-ARG1 -                 a/Md.<
622 1  walk        + walk        NOUN  NN  nsubj    11 -     -     I-ARG1 walk.n.01         walk/Cc..s
622 2  from        + from        ADP   IN  prep     1  -     -     I-ARG1 -                 from/Br
622 3  Rockefeller + Rockefeller PROPN NNP compound 4  B-FAC -     I-ARG1 rockefeller.n.01  rockefeller/Cp.<.s.f
622 4  Center      + Center      PROPN NNP pobj     2  I-FAC -     I-ARG1 center.n.03       center/Cp..s.f
622 5  to          + to          ADP   IN  prep     1  -     -     I-ARG1 -                 to/Br
622 6  Central     + Central     PROPN NNP compound 7  B-LOC -     I-ARG1 central_park.n.01 central/Cp.<.s.l
622 7  Park        + Park        PROPN NNP pobj     5  I-LOC -     I-ARG1 central_park.n.01 park/Cp..s.l
622 8  on          + on          ADP   IN  prep     7  -     -     I-ARG1 -                 on/Br
622 9  5th         + 5th         ADJ   JJ  amod     10 B-FAC -     I-ARG1 fifth_avenue.n.01 5th/Ma.<..f
622 10 Ave         + Ave         PROPN NNP pobj     8  I-FAC -     I-ARG1 fifth_avenue.n.01 ave/Cp..s.f
622 11 is          + be          AUX   VBZ ROOT     11 -     be.01 B-V    be.v.01           is/P!.sc:12:1h.|f--3s:12
622 12 a           + a           DET   DT  det      13 -     -     B-ARG2 -                 a/Md.<
622 13 must-do     - must-do     NOUN  NN  attr     11 -     -     B-ARG2 must.n.01         must-do/Cc..s
622 14 !           - !           PUNCT .   punct    11 -     -     -      -                 -

# sent_i = 623
# sent = Thirty-three amendments to the U.S. Constitution have been proposed by the U.S. Congress and sent to the states for ratification since the Constitution was put into operation on March 4, 1789.
# hyperedge = (and/J ((have/Mv.< (been/Mv.< proposed/Pd.pxa:130:1g0.<pf:0123)) (thirty-three/M#.<..c amendments/Cc..p) (to/T (the/Md.<..w (+/B.am..w u%2es%2e/Cp.<.s.w constitution/Cp..s.w))) (by/T (the/Md.<..o (+/B.am..o u%2es%2e/Cp.<.s.o congress/Cp..s.o)))) (sent/P.-ixx:12it:1git.<f:012 (thirty-three/M#.<..c amendments/Cc..p) (to/T (the/Md.< states/Cc..p)) (for/T ratification/Cc..s) (since/T ((was/Mv.< (into/Ml.r.> put/P.pox:1-t:1-t.<pf:012)) (+/Jc.rm.pp (the/Md.< constitution/Cp..s.w) (the/Md.<..w (+/B.am..w u%2es%2e/Cp.<.s.w constitution/Cp..s.w))) operation/Cc..s (on/Tt (1789/M#.>..d (4/M#.>..d march/Cp..s.d)))))))
# hyperedge builder = (623.13/J ((623.6/Mv.< (623.7/Mv.< 623.8/Pd.pxa:130:1g0.<pf:0123)) (623.0/M#.<..c 623.1/Cc..p) (623.2/T (623.3/Md.<..w (+/B.am..w 623.4/Cp.<.s.w 623.5/Cp..s.w))) (623.9/T (623.10/Md.<..o (+/B.am..o 623.11/Cp.<.s.o 623.12/Cp..s.o)))) (623.14/P.-ixx:12it:1git.<f:012 (623.0/M#.<..c 623.1/Cc..p) (623.15/T (623.16/Md.< 623.17/Cc..p)) (623.18/T 623.19/Cc..s) (623.20/T ((623.23/Mv.< (623.25/Ml.r.> 623.24/P.pox:1-t:1-t.<pf:012)) (+/Jc.rm.pp (623.21/Md.< 623.22/Cp..s.w) (623.3/Md.<..w (+/B.am..w 623.4/Cp.<.s.w 623.5/Cp..s.w))) 623.26/Cc..s (623.27/Tt (623.31/M#.>..d (623.29/M#.>..d 623.28/Cp..s.d)))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 synset atoms
623 0  Thirty-three + thirty-three NUM   CD  nummod    1  B-CARDINAL -          -   -   B-ARG1 B-ARG1     -   -          -       thirty-three.s.01               thirty-three/M#.<..c
623 1  amendments   + amendment    NOUN  NNS nsubjpass 8  -          -          -   -   I-ARG1 I-ARG1     -   -          -       amendment.n.02                  amendments/Cc..p
623 2  to           + to           ADP   IN  prep      8  -          -          -   -   B-ARG3 -          -   -          -       -                               to/T
623 3  the          + the          DET   DT  det       5  B-LAW      -          -   -   I-ARG3 -          -   -          B-MAIN0 -                               the/Md.<..w
623 4  U.S.         + U.S.         PROPN NNP compound  5  I-LAW      -          -   -   I-ARG3 -          -   -          I-MAIN0 united_states_constitution.n.01 u%2es%2e/Cp.<.s.w
623 5  Constitution + Constitution PROPN NNP pobj      2  I-LAW      -          -   -   I-ARG3 -          -   -          I-MAIN0 united_states_constitution.n.01 constitution/Cp..s.w
623 6  have         + have         AUX   VBP aux       8  -          have.01    B-V -   -      -          -   -          -       -                               have/Mv.<
623 7  been         + be           AUX   VBN auxpass   8  -          be.03      -   B-V -      -          -   -          -       -                               been/Mv.<
623 8  proposed     + propose      VERB  VBN ROOT      8  -          propose.01 -   -   B-V    -          -   -          -       project.v.08                    proposed/Pd.pxa:130:1g0.<pf:0123
623 9  by           + by           ADP   IN  agent     8  -          -          -   -   B-ARG0 -          -   -          -       -                               by/T
623 10 the          + the          DET   DT  det       12 B-ORG      -          -   -   I-ARG0 -          -   -          -       -                               the/Md.<..o
623 11 U.S.         + U.S.         PROPN NNP compound  12 I-ORG      -          -   -   I-ARG0 -          -   -          -       congress.n.01                   u%2es%2e/Cp.<.s.o
623 12 Congress     + Congress     PROPN NNP pobj      9  I-ORG      -          -   -   I-ARG0 -          -   -          -       congress.n.01                   congress/Cp..s.o
623 13 and          + and          CCONJ CC  cc        8  -          -          -   -   -      -          -   -          -       -                               and/J
623 14 sent         + send         VERB  VBD conj      8  -          send.01    -   -   -      B-V        -   -          -       mail.v.02                       sent/P.-ixx:12it:1git.<f:012
623 15 to           + to           ADP   IN  dative    14 -          -          -   -   -      B-ARG2     -   -          -       -                               to/T
623 16 the          + the          DET   DT  det       17 -          -          -   -   -      I-ARG2     -   -          -       -                               the/Md.<
623 17 states       + state        NOUN  NNS pobj      15 -          -          -   -   -      I-ARG2     -   -          -       state.n.04                      states/Cc..p
623 18 for          + for          ADP   IN  prep      14 -          -          -   -   -      B-ARGM-PRP -   -          -       -                               for/T
623 19 ratification + ratification NOUN  NN  pobj      18 -          -          -   -   -      I-ARGM-PRP -   -          -       ratification.n.01               ratification/Cc..s
623 20 since        + since        SCONJ IN  mark      24 -          -          -   -   -      B-ARGM-TMP -   -          -       -                               since/T
623 21 the          + the          DET   DT  det       22 -          -          -   -   -      I-ARGM-TMP -   B-ARG1     B-REF0  -                               the/Md.<
623 22 Constitution + Constitution PROPN NNP nsubjpass 24 B-LAW      -          -   -   -      I-ARGM-TMP -   I-ARG1     I-REF0  fundamental_law.n.01            constitution/Cp..s.w
623 23 was          + be           AUX   VBD auxpass   24 -          be.03      -   -   -      I-ARGM-TMP B-V -          -       -                               was/Mv.<
623 24 put          + put          VERB  VBN advcl     14 -          put.03     -   -   -      I-ARGM-TMP -   B-V        -       bring_to_bear.v.01              put/P.pox:1-t:1-t.<pf:012
623 25 into         + into         ADP   IN  prt       24 -          -          -   -   -      I-ARGM-TMP -   B-ARG2     -       bring_to_bear.v.01              into/Ml.r.>
623 26 operation    + operation    NOUN  NN  dobj      24 -          -          -   -   -      I-ARGM-TMP -   I-ARG2     -       bring_to_bear.v.01              operation/Cc..s
623 27 on           + on           ADP   IN  prep      24 -          -          -   -   -      I-ARGM-TMP -   B-ARGM-TMP -       -                               on/Tt
623 28 March        + March        PROPN NNP pobj      27 B-DATE     -          -   -   -      I-ARGM-TMP -   I-ARGM-TMP -       march.n.01                      march/Cp..s.d
623 29 4            - 4            NUM   CD  nummod    28 I-DATE     -          -   -   -      I-ARGM-TMP -   I-ARGM-TMP -       four.s.01                       4/M#.>..d
623 30 ,            + ,            PUNCT ,   punct     28 I-DATE     -          -   -   -      I-ARGM-TMP -   I-ARGM-TMP -       -                               -
623 31 1789         - 1789         NUM   CD  nummod    28 I-DATE     -          -   -   -      I-ARGM-TMP -   I-ARGM-TMP -       -                               1789/M#.>..d
623 32 .            - .            PUNCT .   punct     8  -          -          -   -   -      -          -   -          -       -                               -

# sent_i = 624
# sent = 68 percent ($6.3 trillion) of total income reported on individual income tax returns is in wages and salaries, and about 83% of all tax filers report wage income.
# hyperedge = (and/J (is/Pd.sx:12:1h.|f--3s:12 (+/Jr.ma (of/Br (+/Ba.ma.b (68/M#.<..% percent/Cc..s.%) ($/M.<..$ (+/B.am..$ 6%2e3/C#.<..$ trillion/C#...$))) (total/Ma.< income/Cc..s)) (reported/P.-x:1l:1l.<pf:012 (of/Br (+/Ba.ma.b (68/M#.<..% percent/Cc..s.%) ($/M.<..$ (+/B.am..$ 6%2e3/C#.<..$ trillion/C#...$))) (total/Ma.< income/Cc..s)) (on/Tl (individual/Ma.< (+/B.am (+/B.am income/Cc.<.s tax/Cc.<.s) returns/Cc..p))))) (in/T (and/J wages/Cc..p salaries/Cc..p))) (report/Pd.so:01:01.|f:012 (of/Br ((about/M.<..% 83/M#.<..%) %25/Cc..s.%) (all/Md.< (+/B.am tax/Cc.<.s filers/Cc..p))) (+/B.am wage/Cc.<.s income/Cc..s)))
# hyperedge builder = (624.22/J (624.16/Pd.sx:12:1h.|f--3s:12 (+/Jr.ma (624.7/Br (+/Ba.ma.b (624.0/M#.<..% 624.1/Cc..s.%) (624.3/M.<..$ (+/B.am..$ 624.4/C#.<..$ 624.5/C#...$))) (624.8/Ma.< 624.9/Cc..s)) (624.10/P.-x:1l:1l.<pf:012 (624.7/Br (+/Ba.ma.b (624.0/M#.<..% 624.1/Cc..s.%) (624.3/M.<..$ (+/B.am..$ 624.4/C#.<..$ 624.5/C#...$))) (624.8/Ma.< 624.9/Cc..s)) (624.11/Tl (624.12/Ma.< (+/B.am (+/B.am 624.13/Cc.<.s 624.14/Cc.<.s) 624.15/Cc..p))))) (624.17/T (624.19/J 624.18/Cc..p 624.20/Cc..p))) (624.30/Pd.so:01:01.|f:012 (624.26/Br ((624.23/M.<..% 624.24/M#.<..%) 624.25/Cc..s.%) (624.27/Md.< (+/B.am 624.28/Cc.<.s 624.29/Cc..p))) (+/B.am 624.31/Cc.<.s 624.32/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
624 0  68         + 68         NUM   CD    nummod   1  B-PERCENT -         B-ARG1     B-ARG1 -      sixty-eight.s.01  68/M#.<..%
624 1  percent    + percent    NOUN  NN    nsubj    16 I-PERCENT -         I-ARG1     I-ARG1 -      percentage.n.01   percent/Cc..s.%
624 2  (          - (          PUNCT -LRB- punct    1  -         -         I-ARG1     I-ARG1 -      -                 -
624 3  $          - $          SYM   $     nmod     5  B-MONEY   -         I-ARG1     I-ARG1 -      -                 $/M.<..$
624 4  6.3        + 6.3        NUM   CD    compound 5  I-MONEY   -         I-ARG1     I-ARG1 -      -                 6%2e3/C#.<..$
624 5  trillion   - trillion   NUM   CD    appos    1  I-MONEY   -         I-ARG1     I-ARG1 -      trillion.s.02     trillion/C#...$
624 6  )          + )          PUNCT -RRB- punct    1  -         -         I-ARG1     I-ARG1 -      -                 -
624 7  of         + of         ADP   IN    prep     1  -         -         I-ARG1     I-ARG1 -      -                 of/Br
624 8  total      + total      ADJ   JJ    amod     9  -         -         I-ARG1     I-ARG1 -      entire.s.01       total/Ma.<
624 9  income     + income     NOUN  NN    pobj     7  -         -         I-ARG1     I-ARG1 -      income.n.01       income/Cc..s
624 10 reported   + report     VERB  VBN   acl      1  -         report.01 B-V        I-ARG1 -      report.v.02       reported/P.-x:1l:1l.<pf:012
624 11 on         + on         ADP   IN    prep     10 -         -         B-ARGM-LOC I-ARG1 -      -                 on/Tl
624 12 individual + individual ADJ   JJ    amod     15 -         -         I-ARGM-LOC I-ARG1 -      individual.a.01   individual/Ma.<
624 13 income     + income     NOUN  NN    compound 14 -         -         I-ARGM-LOC I-ARG1 -      income.n.01       income/Cc.<.s
624 14 tax        + tax        NOUN  NN    compound 15 -         -         I-ARGM-LOC I-ARG1 -      tax_return.n.01   tax/Cc.<.s
624 15 returns    + return     NOUN  NNS   pobj     11 -         -         I-ARGM-LOC I-ARG1 -      tax_return.n.01   returns/Cc..p
624 16 is         + be         AUX   VBZ   ROOT     16 -         be.01     -          B-V    -      be.v.01           is/Pd.sx:12:1h.|f--3s:12
624 17 in         + in         ADP   IN    prep     16 -         -         -          B-ARG2 -      -                 in/T
624 18 wages      + wage       NOUN  NNS   pobj     17 -         -         -          I-ARG2 -      wage.n.01         wages/Cc..p
624 19 and        + and        CCONJ CC    cc       18 -         -         -          I-ARG2 -      -                 and/J
624 20 salaries   - salary     NOUN  NNS   conj     18 -         -         -          I-ARG2 -      wage.n.01         salaries/Cc..p
624 21 ,          + ,          PUNCT ,     punct    16 -         -         -          -      -      -                 -
624 22 and        + and        CCONJ CC    cc       16 -         -         -          -      -      -                 and/J
624 23 about      + about      ADV   RB    advmod   24 B-PERCENT -         -          -      B-ARG0 -                 about/M.<..%
624 24 83         - 83         NUM   CD    nummod   25 I-PERCENT -         -          -      I-ARG0 eighty-three.s.01 83/M#.<..%
624 25 %          + %          NOUN  NN    nsubj    30 I-PERCENT -         -          -      I-ARG0 -                 %25/Cc..s.%
624 26 of         + of         ADP   IN    prep     25 -         -         -          -      I-ARG0 -                 of/Br
624 27 all        + all        DET   DT    det      29 -         -         -          -      I-ARG0 all.a.01          all/Md.<
624 28 tax        + tax        NOUN  NN    compound 29 -         -         -          -      I-ARG0 tax.n.01          tax/Cc.<.s
624 29 filers     + filer      NOUN  NNS   pobj     26 -         -         -          -      I-ARG0 filer.n.01        filers/Cc..p
624 30 report     + report     VERB  VBP   conj     16 -         report.01 -          -      B-V    report.v.02       report/Pd.so:01:01.|f:012
624 31 wage       + wage       NOUN  NN    compound 32 -         -         -          -      B-ARG1 wage.n.01         wage/Cc.<.s
624 32 income     - income     NOUN  NN    dobj     30 -         -         -          -      I-ARG1 income.n.01       income/Cc..s
624 33 .          - .          PUNCT .     punct    30 -         -         -          -      -      -                 -

# sent_i = 625
# sent = I am, however, an iPhone devotee, and as a software reviewer, I have lots of experience on Macs.
# hyperedge = (and/J (am/Pd.s?c:1s2:1sh.|f:12 i/Ci however/M (an/Md.< (+/B.am iphone/Cp.<.s.r devotee/Cc..s))) (have/Pd.xso-x:r0-k1:!!-!!.|f (as/T (a/Md.< (+/B.am software/Cc.<.s reviewer/Cc..s))) i/Ci (of/Br lots/Cc..p (on/Br experience/Cc..s macs/Cp..p.r)) (on/Br experience/Cc..s macs/Cp..p.r)))
# hyperedge builder = (625.9/J (625.1/Pd.s?c:1s2:1sh.|f:12 625.0/Ci 625.3/M (625.5/Md.< (+/B.am 625.6/Cp.<.s.r 625.7/Cc..s))) (625.16/Pd.xso-x:r0-k1:!!-!!.|f (625.10/T (625.11/Md.< (+/B.am 625.12/Cc.<.s 625.13/Cc..s))) 625.15/Ci (625.18/Br 625.17/Cc..p (625.20/Br 625.19/Cc..s 625.21/Cp..p.r)) (625.20/Br 625.19/Cc..s 625.21/Cp..p.r)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
625 0  I          + I          PRON  PRP  nsubj    1  -         -             B-ARG1     -          -          B-MAIN0 -               i/Ci
625 1  am         - be         AUX   VBP  ROOT     1  -         be.01         B-V        -          -          -       be.v.01         am/Pd.s?c:1s2:1sh.|f:12
625 2  ,          + ,          PUNCT ,    punct    1  -         -             -          -          -          -       -               -
625 3  however    - however    ADV   RB   advmod   1  -         -             B-ARGM-DIS -          -          -       however.r.02    however/M
625 4  ,          + ,          PUNCT ,    punct    1  -         -             -          -          -          -       -               -
625 5  an         + an         DET   DT   det      7  -         -             B-ARG2     -          -          -       -               an/Md.<
625 6  iPhone     + iPhone     PROPN NNP  compound 7  B-PRODUCT -             I-ARG2     -          -          -       -               iphone/Cp.<.s.r
625 7  devotee    - devotee    NOUN  NN   attr     1  -         -             I-ARG2     -          -          -       fan.n.03        devotee/Cc..s
625 8  ,          + ,          PUNCT ,    punct    1  -         -             -          -          -          -       -               -
625 9  and        + and        CCONJ CC   cc       1  -         -             -          -          -          -       -               and/J
625 10 as         + as         ADP   IN   prep     16 -         -             -          -          B-ARGM-ADV -       -               as/T
625 11 a          + a          DET   DT   det      13 -         -             -          -          I-ARGM-ADV -       -               a/Md.<
625 12 software   + software   NOUN  NN   compound 13 -         -             -          -          I-ARGM-ADV -       software.n.01   software/Cc.<.s
625 13 reviewer   - reviewer   NOUN  NN   pobj     10 -         -             -          -          I-ARGM-ADV -       reviewer.n.01   reviewer/Cc..s
625 14 ,          + ,          PUNCT ,    punct    16 -         -             -          -          -          -       -               -
625 15 I          + I          PRON  PRP  nsubj    16 -         -             -          -          B-ARG0     B-REF0  -               i/Ci
625 16 have       + have       VERB  VBP  conj     1  -         have.LV       -          B-V        B-ARGM-LVB -       have.v.01       have/Pd.xso-x:r0-k1:!!-!!.|f
625 17 lots       + lot        NOUN  NNS  dobj     16 -         -             -          -          -          -       batch.n.02      lots/Cc..p
625 18 of         + of         ADP   IN   prep     17 -         -             -          -          -          -       -               of/Br
625 19 experience + experience NOUN  NN   pobj     18 -         experience.01 -          B-ARGM-PRR B-V        -       experience.n.01 experience/Cc..s
625 20 on         + on         ADP   IN   prep     19 -         -             -          -          B-ARG1     -       -               on/Br
625 21 Macs       - Macs       PROPN NNPS pobj     20 B-PRODUCT -             -          -          I-ARG1     -       -               macs/Cp..p.r
625 22 .          - .          PUNCT .    punct    16 -         -             -          -          -          -       -               -

# sent_i = 626
# sent = The people watching and enjoying the show were astonished.
# hyperedge = (were/Pd.sc:12:1h.<f:12 (+/Jr.ma (the/Md.< people/Cc..p) (and/J (watching/P.--:01:01.|pg:01 (the/Md.< people/Cc..p) (the/Md.< show/Cc..s)) (enjoying/P.-o:01:10.|pg:01 (the/Md.< people/Cc..p) (the/Md.< show/Cc..s)))) astonished/Ca)
# hyperedge builder = (626.7/Pd.sc:12:1h.<f:12 (+/Jr.ma (626.0/Md.< 626.1/Cc..p) (626.3/J (626.2/P.--:01:01.|pg:01 (626.0/Md.< 626.1/Cc..p) (626.5/Md.< 626.6/Cc..s)) (626.4/P.-o:01:10.|pg:01 (626.0/Md.< 626.1/Cc..p) (626.5/Md.< 626.6/Cc..s)))) 626.8/Ca)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
626 0 The        + the        DET   DT  det   1 - -        B-ARG0 B-ARG0 B-ARG1 -           the/Md.<
626 1 people     + people     NOUN  NNS nsubj 7 - -        I-ARG0 I-ARG0 I-ARG1 people.n.01 people/Cc..p
626 2 watching   + watch      VERB  VBG acl   1 - watch.01 B-V    -      I-ARG1 watch.v.03  watching/P.--:01:01.|pg:01
626 3 and        + and        CCONJ CC  cc    2 - -        -      -      I-ARG1 -           and/J
626 4 enjoying   + enjoy      VERB  VBG conj  2 - enjoy.01 -      B-V    I-ARG1 enjoy.v.01  enjoying/P.-o:01:10.|pg:01
626 5 the        + the        DET   DT  det   6 - -        B-ARG1 B-ARG1 I-ARG1 -           the/Md.<
626 6 show       + show       NOUN  NN  dobj  4 - -        I-ARG1 I-ARG1 I-ARG1 show.n.03   show/Cc..s
626 7 were       + be         AUX   VBD ROOT  7 - be.01    -      -      B-V    be.v.01     were/Pd.sc:12:1h.<f:12
626 8 astonished - astonished ADJ   JJ  acomp 7 - -        -      -      B-ARG2 amazed.s.01 astonished/Ca
626 9 .          - .          PUNCT .   punct 7 - -        -      -      -      -           -

# sent_i = 627
# sent = The students were really bored and disappointed with the film.
# hyperedge = (were/Pd.sc:12:1h.<f:12 (the/Md.< students/Cc..p) (and/J (really/M.< bored/Ca) (with/Br disappointed/Ca (the/Md.< film/Cc..s))))
# hyperedge builder = (627.2/Pd.sc:12:1h.<f:12 (627.0/Md.< 627.1/Cc..p) (627.5/J (627.3/M.< 627.4/Ca) (627.7/Br 627.6/Ca (627.8/Md.< 627.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
627 0  The          + the        DET   DT  det    1 - -     B-ARG1 -               the/Md.<
627 1  students     + student    NOUN  NNS nsubj  2 - -     I-ARG1 student.n.01    students/Cc..p
627 2  were         + be         VERB  VBD ROOT   2 - be.01 B-V    be.v.01         were/Pd.sc:12:1h.<f:12
627 3  really       + really     ADV   RB  advmod 4 - -     B-ARG2 very.r.01       really/M.<
627 4  bored        + bored      ADJ   JJ  acomp  2 - -     I-ARG2 blase.s.02      bored/Ca
627 5  and          + and        CCONJ CC  cc     4 - -     I-ARG2 -               and/J
627 6  disappointed + disappoint ADJ   JJ  conj   4 - -     I-ARG2 disappoint.v.01 disappointed/Ca
627 7  with         + with       ADP   IN  prep   6 - -     I-ARG2 -               with/Br
627 8  the          + the        DET   DT  det    9 - -     I-ARG2 -               the/Md.<
627 9  film         - film       NOUN  NN  pobj   7 - -     I-ARG2 movie.n.01      film/Cc..s
627 10 .            - .          PUNCT .   punct  2 - -     -      -               -

# sent_i = 628
# sent = I made mistakes because I was or must have been tired.
# hyperedge = (made/Pd.sox:0kc:!!!.<f i/Ci mistakes/Cc..p (because/T (or/J (was/P.s-:12:1h.<f:12 i/Ci tired/Ca) ((must/Mm.< (have/Mv.< been/P.-c:12:1h.<pf:12)) i/Ci tired/Ca))))
# hyperedge builder = (628.1/Pd.sox:0kc:!!!.<f 628.0/Ci 628.2/Cc..p (628.3/T (628.6/J (628.5/P.s-:12:1h.<f:12 628.4/Ci 628.10/Ca) ((628.7/Mm.< (628.8/Mv.< 628.9/P.-c:12:1h.<pf:12)) 628.4/Ci 628.10/Ca))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 srl6 coref1 synset atoms
628 0  I        + I       PRON  PRP nsubj 1 - -          -          B-ARG0     -      -   -   -          B-MAIN0 -            i/Ci
628 1  made     + make    VERB  VBD ROOT  1 - make.LV    B-V        B-ARGM-LVB -      -   -   -          -       make.v.24    made/Pd.sox:0kc:!!!.<f
628 2  mistakes + mistake NOUN  NNS dobj  1 - mistake.02 B-ARGM-PRR B-V        -      -   -   -          -       mistake.n.01 mistakes/Cc..p
628 3  because  + because SCONJ IN  mark  5 - -          -          B-ARGM-CAU -      -   -   -          -       -            because/T
628 4  I        + I       PRON  PRP nsubj 5 - -          -          I-ARGM-CAU B-ARG1 -   -   B-ARG1     B-REF0  -            i/Ci
628 5  was      + be      VERB  VBD advcl 1 - be.01      -          I-ARGM-CAU B-V    -   -   -          -       be.v.01      was/P.s-:12:1h.<f:12
628 6  or       + or      CCONJ CC  cc    5 - -          -          I-ARGM-CAU -      -   -   -          -       -            or/J
628 7  must     + must    AUX   MD  aux   9 - -          -          I-ARGM-CAU -      B-V -   B-ARGM-MOD -       -            must/Mm.<
628 8  have     + have    AUX   VB  aux   9 - have.01    -          I-ARGM-CAU -      -   B-V -          -       -            have/Mv.<
628 9  been     + be      VERB  VBN conj  5 - be.01      -          I-ARGM-CAU -      -   -   B-V        -       be.v.01      been/P.-c:12:1h.<pf:12
628 10 tired    - tired   ADJ   JJ  acomp 9 - -          -          I-ARGM-CAU B-ARG2 -   -   B-ARG2     -       tired.a.01   tired/Ca
628 11 .        - .       PUNCT .   punct 1 - -          -          -          -      -   -   -          -       -            -

# sent_i = 629
# sent = All passengers with tickets can board now and in few hours.
# hyperedge = ((can/Mm.< board/Pd.s?:0t:1t.-i:01) (with/Br (all/Md.< passengers/Cc..p) tickets/Cc..p) (and/J now/M (in/T (few/Ma.<..t hours/Cc..p.t))))
# hyperedge builder = ((629.4/Mm.< 629.5/Pd.s?:0t:1t.-i:01) (629.2/Br (629.0/Md.< 629.1/Cc..p) 629.3/Cc..p) (629.7/J 629.6/M (629.8/T (629.9/Ma.<..t 629.10/Cc..p.t))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
629 0  All        + all       DET   DT  det    1  -      -        -   B-ARG0     all.a.01       all/Md.<
629 1  passengers + passenger NOUN  NNS nsubj  5  -      -        -   I-ARG0     passenger.n.01 passengers/Cc..p
629 2  with       + with      ADP   IN  prep   1  -      -        -   I-ARG0     -              with/Br
629 3  tickets    + ticket    NOUN  NNS pobj   2  -      -        -   I-ARG0     ticket.n.01    tickets/Cc..p
629 4  can        + can       AUX   MD  aux    5  -      -        B-V B-ARGM-MOD -              can/Mm.<
629 5  board      + board     VERB  VB  ROOT   5  -      board.01 -   B-V        board.v.01     board/Pd.s?:0t:1t.-i:01
629 6  now        + now       ADV   RB  advmod 5  -      -        -   B-ARGM-TMP now.r.04       now/M
629 7  and        + and       CCONJ CC  cc     6  -      -        -   I-ARGM-TMP -              and/J
629 8  in         + in        ADP   IN  conj   6  -      -        -   I-ARGM-TMP -              in/T
629 9  few        + few       ADJ   JJ  amod   10 B-TIME -        -   I-ARGM-TMP few.a.01       few/Ma.<..t
629 10 hours      - hour      NOUN  NNS pobj   8  I-TIME -        -   I-ARGM-TMP hour.n.01      hours/Cc..p.t
629 11 .          - .         PUNCT .   punct  5  -      -        -   -          -              -

# sent_i = 630
# sent = The gallery intends to buy more pictures painted by and for local artists.
# hyperedge = (intends/Pd.sr:01:01.|f--3s:01 (the/Md.< gallery/Cc..s) ((to/Mi.< buy/P.-o:01:01.-i:01234) (the/Md.< gallery/Cc..s) (+/Jr.ma (more/Mc.< pictures/Cc..p) (painted/P.-a:10:10.<pf:012 (more/Mc.< pictures/Cc..p) ((and/J by/T for/T) (local/Ma.< artists/Cc..p))))))
# hyperedge builder = (630.2/Pd.sr:01:01.|f--3s:01 (630.0/Md.< 630.1/Cc..s) ((630.3/Mi.< 630.4/P.-o:01:01.-i:01234) (630.0/Md.< 630.1/Cc..s) (+/Jr.ma (630.5/Mc.< 630.6/Cc..p) (630.7/P.-a:10:10.<pf:012 (630.5/Mc.< 630.6/Cc..p) ((630.9/J 630.8/T 630.10/T) (630.11/Ma.< 630.12/Cc..p))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
630 0  The      + the     DET   DT  det   1  - -         B-ARG0 B-ARG0 -      -             the/Md.<
630 1  gallery  + gallery NOUN  NN  nsubj 2  - -         I-ARG0 I-ARG0 -      gallery.n.03  gallery/Cc..s
630 2  intends  + intend  VERB  VBZ ROOT  2  - intend.01 B-V    -      -      intend.v.01   intends/Pd.sr:01:01.|f--3s:01
630 3  to       + to      PART  TO  aux   4  - -         B-ARG1 -      -      -             to/Mi.<
630 4  buy      + buy     VERB  VB  xcomp 2  - buy.01    I-ARG1 B-V    -      buy.v.01      buy/P.-o:01:01.-i:01234
630 5  more     + more    ADJ   JJR amod  6  - -         I-ARG1 B-ARG1 B-ARG1 more.a.02     more/Mc.<
630 6  pictures + picture NOUN  NNS dobj  4  - -         I-ARG1 I-ARG1 I-ARG1 painting.n.01 pictures/Cc..p
630 7  painted  + paint   VERB  VBN acl   6  - paint.02  I-ARG1 I-ARG1 B-V    paint.v.01    painted/P.-a:10:10.<pf:012
630 8  by       + by      ADP   IN  agent 7  - -         I-ARG1 I-ARG1 B-ARG0 -             by/T
630 9  and      + and     CCONJ CC  cc    8  - -         I-ARG1 I-ARG1 I-ARG0 -             and/J
630 10 for      + for     ADP   IN  conj  8  - -         I-ARG1 I-ARG1 I-ARG0 -             for/T
630 11 local    + local   ADJ   JJ  amod  12 - -         I-ARG1 I-ARG1 I-ARG0 local.a.02    local/Ma.<
630 12 artists  - artist  NOUN  NNS pobj  10 - -         I-ARG1 I-ARG1 I-ARG0 artist.n.01   artists/Cc..p
630 13 .        - .       PUNCT .   punct 2  - -         -      -      -      -             -

# sent_i = 631
# sent = He has clever and bright ideas.
# hyperedge = (has/Pd.so:01:01.|f--3s:01 he/Ci ((and/J clever/Ma.< bright/Ma) ideas/Cc..p))
# hyperedge builder = (631.1/Pd.so:01:01.|f--3s:01 631.0/Ci ((631.3/J 631.2/Ma.< 631.4/Ma) 631.5/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
631 0 He     + he     PRON  PRP nsubj 1 - -       B-ARG0 -           he/Ci
631 1 has    + have   VERB  VBZ ROOT  1 - have.03 B-V    have.v.01   has/Pd.so:01:01.|f--3s:01
631 2 clever + clever ADJ   JJ  amod  5 - -       B-ARG1 clever.s.03 clever/Ma.<
631 3 and    + and    CCONJ CC  cc    2 - -       I-ARG1 -           and/J
631 4 bright + bright ADJ   JJ  conj  2 - -       I-ARG1 bright.s.03 bright/Ma
631 5 ideas  - idea   NOUN  NNS dobj  1 - -       I-ARG1 idea.n.01   ideas/Cc..p
631 6 .      - .      PUNCT .   punct 1 - -       -      -           -

# sent_i = 632
# sent = George, my neighbor and friend, often goes to the races.
# hyperedge = (goes/Pd.s?x:0t4:1tg.|f--3s:0134 (+/Ba.ma.c george/Cp..s.p (+/Jc.rm.cp (and/J (my/Mp neighbor/Cc..s) friend/Cc..s) george/Cp..s.p)) often/M (to/T (the/Md.< races/Cc..p)))
# hyperedge builder = (632.8/Pd.s?x:0t4:1tg.|f--3s:0134 (+/Ba.ma.c 632.0/Cp..s.p (+/Jc.rm.cp (632.4/J (632.2/Mp 632.3/Cc..s) 632.5/Cc..s) 632.0/Cp..s.p)) 632.7/M (632.9/T (632.10/Md.< 632.11/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 coref1 synset atoms
632 0  George   - George   PROPN NNP  nsubj  8  B-PERSON -     B-ARG0     B-MAIN0 -               george/Cp..s.p
632 1  ,        + ,        PUNCT ,    punct  0  -        -     I-ARG0     -       -               -
632 2  my       + my       PRON  PRP$ poss   3  -        -     I-ARG0     B-REF0  -               my/Mp
632 3  neighbor + neighbor NOUN  NN   appos  0  -        -     I-ARG0     I-REF0  neighbor.n.01   neighbor/Cc..s
632 4  and      + and      CCONJ CC   cc     3  -        -     I-ARG0     I-REF0  -               and/J
632 5  friend   - friend   NOUN  NN   conj   3  -        -     I-ARG0     I-REF0  friend.n.01     friend/Cc..s
632 6  ,        + ,        PUNCT ,    punct  8  -        -     -          -       -               -
632 7  often    + often    ADV   RB   advmod 8  -        -     B-ARGM-TMP -       frequently.r.01 often/M
632 8  goes     + go       VERB  VBZ  ROOT   8  -        go.02 B-V        -       attend.v.01     goes/Pd.s?x:0t4:1tg.|f--3s:0134
632 9  to       + to       ADP   IN   prep   8  -        -     B-ARG4     -       attend.v.01     to/T
632 10 the      + the      DET   DT   det    11 -        -     I-ARG4     -       -               the/Md.<
632 11 races    - race     NOUN  NNS  pobj   9  -        -     I-ARG4     -       race.n.02       races/Cc..p
632 12 .        - .        PUNCT .    punct  8  -        -     -          -       -               -

# sent_i = 633
# sent = It was a very big meal and great pleasure.
# hyperedge = (was/Pd.sc:12:1h.<f:12 it/Ci (and/J (a/Md.< ((very/M.< big/Ma.<) meal/Cc..s)) (great/Ma.< pleasure/Cc..s)))
# hyperedge builder = (633.1/Pd.sc:12:1h.<f:12 633.0/Ci (633.6/J (633.2/Md.< ((633.3/M.< 633.4/Ma.<) 633.5/Cc..s)) (633.7/Ma.< 633.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
633 0 It       + it       PRON  PRP nsubj  1 - -     B-ARG1 -             it/Ci
633 1 was      + be       AUX   VBD ROOT   1 - be.01 B-V    be.v.01       was/Pd.sc:12:1h.<f:12
633 2 a        + a        DET   DT  det    5 - -     B-ARG2 -             a/Md.<
633 3 very     + very     ADV   RB  advmod 4 - -     I-ARG2 very.r.01     very/M.<
633 4 big      + big      ADJ   JJ  amod   5 - -     I-ARG2 large.a.01    big/Ma.<
633 5 meal     + meal     NOUN  NN  attr   1 - -     I-ARG2 meal.n.01     meal/Cc..s
633 6 and      + and      CCONJ CC  cc     5 - -     I-ARG2 -             and/J
633 7 great    + great    ADJ   JJ  amod   8 - -     I-ARG2 bang-up.s.01  great/Ma.<
633 8 pleasure - pleasure NOUN  NN  conj   5 - -     I-ARG2 pleasure.n.01 pleasure/Cc..s
633 9 .        - .        PUNCT .   punct  1 - -     -      -             -

# sent_i = 634
# sent = All passengers with tickets can and should board.
# hyperedge = (((and/J can/Mm.< should/Mm) board/Pd.s:0:1.-i:01) (with/Br (all/Md.< passengers/Cc..p) tickets/Cc..p))
# hyperedge builder = (((634.5/J 634.4/Mm.< 634.6/Mm) 634.7/Pd.s:0:1.-i:01) (634.2/Br (634.0/Md.< 634.1/Cc..p) 634.3/Cc..p))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
634 0 All        + all       DET   DT  det   1 - -        -   -   B-ARG0     all.a.01       all/Md.<
634 1 passengers + passenger NOUN  NNS nsubj 7 - -        -   -   I-ARG0     passenger.n.01 passengers/Cc..p
634 2 with       + with      ADP   IN  prep  1 - -        -   -   I-ARG0     -              with/Br
634 3 tickets    + ticket    NOUN  NNS pobj  2 - -        -   -   I-ARG0     ticket.n.01    tickets/Cc..p
634 4 can        + can       AUX   MD  aux   7 - -        B-V -   B-ARGM-MOD -              can/Mm.<
634 5 and        + and       CCONJ CC  cc    4 - -        -   -   -          -              and/J
634 6 should     + should    AUX   MD  conj  4 - -        -   B-V B-ARGM-MOD -              should/Mm
634 7 board      - board     VERB  VB  ROOT  7 - board.01 -   -   B-V        board.v.01     board/Pd.s:0:1.-i:01
634 8 .          - .         PUNCT .   punct 7 - -        -   -   -          -              -

# sent_i = 635
# sent = Many people are or will be killed on the roads.
# hyperedge = (or/J ((are/Mv.< (will/Mm.< (be/Mv.< killed/Pd.px:1l:!!.<pf))) (many/Ma.< people/Cc..p) (on/Tl (the/Md.< roads/Cc..p))))
# hyperedge builder = (635.3/J ((635.2/Mv.< (635.4/Mm.< (635.5/Mv.< 635.6/Pd.px:1l:!!.<pf))) (635.0/Ma.< 635.1/Cc..p) (635.7/Tl (635.8/Md.< 635.9/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
635 0  Many   + many   ADJ   JJ  amod      1 - -     -   -   -   B-ARG1     many.a.01   many/Ma.<
635 1  people + people NOUN  NNS nsubjpass 6 - -     -   -   -   I-ARG1     people.n.01 people/Cc..p
635 2  are    + be     AUX   VBP auxpass   6 - be.03 B-V -   -   -          -           are/Mv.<
635 3  or     + or     CCONJ CC  cc        6 - -     -   -   -   -          -           or/J
635 4  will   + will   AUX   MD  aux       6 - -     -   B-V -   B-ARGM-MOD -           will/Mm.<
635 5  be     + be     AUX   VB  auxpass   6 - -     -   -   B-V -          -           be/Mv.<
635 6  killed + kill   VERB  VBN ROOT      6 - -     -   -   -   B-V        kill.v.01   killed/Pd.px:1l:!!.<pf
635 7  on     + on     ADP   IN  prep      6 - -     -   -   -   B-ARGM-LOC -           on/Tl
635 8  the    + the    DET   DT  det       9 - -     -   -   -   I-ARGM-LOC -           the/Md.<
635 9  roads  - road   NOUN  NNS pobj      7 - -     -   -   -   I-ARGM-LOC road.n.01   roads/Cc..p
635 10 .      - .      PUNCT .   punct     6 - -     -   -   -   -          -           -

# sent_i = 636
# sent = Three years is a long time to be separated from one's or other's friend.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (three/M#.<..d years/Cc..p.d) (+/Jr.ma (a/Md.< (long/Ma.< time/Cc..s)) ((to/Mi.< (be/Mv.< separated/P.-x:t2:td.<pf:012)) (a/Md.< (long/Ma.< time/Cc..s)) (from/T (or/J ('s/Bp one/Ci) ('s/Bp other/M) friend/Cc..s)))))
# hyperedge builder = (636.2/Pd.sc:12:1h.|f--3s:12 (636.0/M#.<..d 636.1/Cc..p.d) (+/Jr.ma (636.3/Md.< (636.4/Ma.< 636.5/Cc..s)) ((636.6/Mi.< (636.7/Mv.< 636.8/P.-x:t2:td.<pf:012)) (636.3/Md.< (636.4/Ma.< 636.5/Cc..s)) (636.9/T (636.12/J (636.11/Bp 636.10/Ci) (636.14/Bp 636.13/M) 636.15/Cc..s)))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
636 0  Three     + three    NUM   CD  nummod  1  B-DATE -           B-ARG1 -   -          three.s.01     three/M#.<..d
636 1  years     + year     NOUN  NNS nsubj   2  I-DATE -           I-ARG1 -   -          year.n.01      years/Cc..p.d
636 2  is        + be       AUX   VBZ ROOT    2  -      be.01       B-V    -   -          be.v.01        is/Pd.sc:12:1h.|f--3s:12
636 3  a         + a        DET   DT  det     5  -      -           B-ARG2 -   B-ARGM-TMP -              a/Md.<
636 4  long      + long     ADJ   JJ  amod    5  -      -           I-ARG2 -   I-ARGM-TMP long_time.n.01 long/Ma.<
636 5  time      + time     NOUN  NN  attr    2  -      -           I-ARG2 -   I-ARGM-TMP long_time.n.01 time/Cc..s
636 6  to        + to       PART  TO  aux     8  -      -           I-ARG2 -   -          -              to/Mi.<
636 7  be        + be       AUX   VB  auxpass 8  -      be.03       I-ARG2 B-V -          -              be/Mv.<
636 8  separated + separate VERB  VBN relcl   5  -      separate.01 I-ARG2 -   B-V        separate.v.09  separated/P.-x:t2:td.<pf:012
636 9  from      + from     ADP   IN  prep    8  -      -           I-ARG2 -   B-ARG2     -              from/T
636 10 one       - one      PRON  PRP poss    15 -      -           I-ARG2 -   I-ARG2     one.n.02       one/Ci
636 11 's        + 's       PART  POS case    10 -      -           I-ARG2 -   I-ARG2     -              's/Bp
636 12 or        + or       CCONJ CC  cc      10 -      -           I-ARG2 -   I-ARG2     -              or/J
636 13 other     - other    ADJ   JJ  conj    10 -      -           I-ARG2 -   I-ARG2     other.a.01     other/M
636 14 's        + 's       PART  POS case    13 -      -           I-ARG2 -   I-ARG2     -              's/Bp
636 15 friend    - friend   NOUN  NN  pobj    9  -      -           I-ARG2 -   I-ARG2     friend.n.01    friend/Cc..s
636 16 .         - .        PUNCT .   punct   2  -      -           -      -   -          -              -

# sent_i = 637
# sent = Mr. Filbert has lost his wallet and yet is not very much upset.
# hyperedge = (and/J ((has/Mv.< lost/Pd.so:01:01.<pf:0123) (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p) ((+/Jc.rm.rp his/Mp (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p)) wallet/Cc..s)) ((not/Mn.> is/P.-?c:1-2:1-h.|f--3s:12) (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p) yet/M ((very/M.< much/M.<) upset/Ca)))
# hyperedge builder = (637.6/J ((637.2/Mv.< 637.3/Pd.so:01:01.<pf:0123) (+/B.am 637.0/Cp.<.s 637.1/Cp..s.p) ((+/Jc.rm.rp 637.4/Mp (+/B.am 637.0/Cp.<.s 637.1/Cp..s.p)) 637.5/Cc..s)) ((637.9/Mn.> 637.8/P.-?c:1-2:1-h.|f--3s:12) (+/B.am 637.0/Cp.<.s 637.1/Cp..s.p) 637.7/M ((637.10/M.< 637.11/M.<) 637.12/Ca)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 coref1 synset atoms
637 0  Mr.     + Mr.     PROPN NNP  compound 1  -        -       -   B-ARG0 B-ARG1     B-MAIN0 mister.n.01     mr%2e/Cp.<.s
637 1  Filbert + Filbert PROPN NNP  nsubj    3  B-PERSON -       -   I-ARG0 I-ARG1     I-MAIN0 -               filbert/Cp..s.p
637 2  has     + have    AUX   VBZ  aux      3  -        have.01 B-V -      -          -       -               has/Mv.<
637 3  lost    + lose    VERB  VBN  ROOT     3  -        lose.02 -   B-V    -          -       lose.v.01       lost/Pd.so:01:01.<pf:0123
637 4  his     + his     PRON  PRP$ poss     5  -        -       -   B-ARG1 -          B-REF0  -               his/Mp
637 5  wallet  + wallet  NOUN  NN   dobj     3  -        -       -   I-ARG1 -          -       wallet.n.01     wallet/Cc..s
637 6  and     + and     CCONJ CC   cc       3  -        -       -   -      -          -       -               and/J
637 7  yet     + yet     ADV   RB   advmod   8  -        -       -   -      -          -       however.r.01    yet/M
637 8  is      + be      VERB  VBZ  conj     3  -        be.01   -   -      B-V        -       be.v.01         is/P.-?c:1-2:1-h.|f--3s:12
637 9  not     + not     PART  RB   neg      8  -        -       -   -      B-ARGM-NEG -       not.r.01        not/Mn.>
637 10 very    + very    ADV   RB   advmod   11 -        -       -   -      B-ARG2     -       very.r.01       very/M.<
637 11 much    + much    ADV   RB   advmod   12 -        -       -   -      I-ARG2     -       much.r.02       much/M.<
637 12 upset   - upset   ADJ   JJ   acomp    8  -        -       -   -      I-ARG2     -       disquieted.s.01 upset/Ca
637 13 .       - .       PUNCT .    punct    3  -        -       -   -      -          -       -               -

# sent_i = 638
# sent = Mary knows John smokes and drinks.
# hyperedge = (knows/Pd.sr:01:01.|f--3s:012 mary/Cp..s.p (and/J (smokes/P.s:0:0.|f--3s:01 john/Cp..s.p) (drinks/P.-:0:0.|f--3s:012 john/Cp..s.p)))
# hyperedge builder = (638.1/Pd.sr:01:01.|f--3s:012 638.0/Cp..s.p (638.4/J (638.3/P.s:0:0.|f--3s:01 638.2/Cp..s.p) (638.5/P.-:0:0.|f--3s:012 638.2/Cp..s.p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
638 0 Mary   + Mary  PROPN NNP nsubj 1 B-PERSON -        B-ARG0 -      -      -          mary/Cp..s.p
638 1 knows  + know  VERB  VBZ ROOT  1 -        know.01  B-V    -      -      know.v.01  knows/Pd.sr:01:01.|f--3s:012
638 2 John   + John  PROPN NNP nsubj 3 B-PERSON -        B-ARG1 B-ARG0 B-ARG0 -          john/Cp..s.p
638 3 smokes + smoke VERB  VBZ ccomp 1 -        smoke.02 I-ARG1 B-V    -      smoke.v.01 smokes/P.s:0:0.|f--3s:01
638 4 and    + and   CCONJ CC  cc    3 -        -        I-ARG1 -      -      -          and/J
638 5 drinks - drink VERB  VBZ conj  3 -        drink.01 I-ARG1 -      B-V    drink.v.02 drinks/P.-:0:0.|f--3s:012
638 6 .      - .     PUNCT .   punct 1 -        -        -      -      -      -          -

# sent_i = 639
# sent = Their keys may be in my coat or jacket pockets.
# hyperedge = ((may/Mm.< be/Pd.sx:12:1h.-i:12) (their/Mp keys/Cc..p) (in/T (my/Mp (+/B.am (or/J coat/Cc.<.s jacket/Cc..s) pockets/Cc..p))))
# hyperedge builder = ((639.2/Mm.< 639.3/Pd.sx:12:1h.-i:12) (639.0/Mp 639.1/Cc..p) (639.4/T (639.5/Mp (+/B.am (639.7/J 639.6/Cc.<.s 639.8/Cc..s) 639.9/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
639 0  Their   + their   PRON  PRP$ poss     1 - -     -   B-ARG1     -           their/Mp
639 1  keys    + key     NOUN  NNS  nsubj    3 - -     -   I-ARG1     key.n.01    keys/Cc..p
639 2  may     + may     AUX   MD   aux      3 - -     B-V B-ARGM-MOD -           may/Mm.<
639 3  be      + be      VERB  VB   ROOT     3 - be.01 -   B-V        be.v.01     be/Pd.sx:12:1h.-i:12
639 4  in      + in      ADP   IN   prep     3 - -     -   B-ARG2     -           in/T
639 5  my      + my      PRON  PRP$ poss     9 - -     -   I-ARG2     -           my/Mp
639 6  coat    + coat    NOUN  NN   compound 9 - -     -   I-ARG2     coat.n.01   coat/Cc.<.s
639 7  or      + or      CCONJ CC   cc       6 - -     -   I-ARG2     -           or/J
639 8  jacket  + jacket  NOUN  NN   conj     6 - -     -   I-ARG2     jacket.n.01 jacket/Cc..s
639 9  pockets - pockets NOUN  NNS  pobj     4 - -     -   I-ARG2     pocket.n.01 pockets/Cc..p
639 10 .       - .       PUNCT .    punct    3 - -     -   -          -           -

# sent_i = 640
# sent = Mr. Filbert has lost his wallet and is or will be very much upset.
# hyperedge = (and/J ((has/Mv.< lost/Pd.so:01:01.<pf:0123) (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p) ((+/Jc.rm.rp his/Mp (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p)) wallet/Cc..s)) (or/J (is/P.--:12:1h.|f--3s:12 (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p) ((very/M.< much/M.<) upset/Ca)) ((will/Mm.< be/P.-c:12:1h.-i:12) (+/B.am mr%2e/Cp.<.s filbert/Cp..s.p) ((very/M.< much/M.<) upset/Ca))))
# hyperedge builder = (640.6/J ((640.2/Mv.< 640.3/Pd.so:01:01.<pf:0123) (+/B.am 640.0/Cp.<.s 640.1/Cp..s.p) ((+/Jc.rm.rp 640.4/Mp (+/B.am 640.0/Cp.<.s 640.1/Cp..s.p)) 640.5/Cc..s)) (640.8/J (640.7/P.--:12:1h.|f--3s:12 (+/B.am 640.0/Cp.<.s 640.1/Cp..s.p) ((640.11/M.< 640.12/M.<) 640.13/Ca)) ((640.9/Mm.< 640.10/P.-c:12:1h.-i:12) (+/B.am 640.0/Cp.<.s 640.1/Cp..s.p) ((640.11/M.< 640.12/M.<) 640.13/Ca))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 srl5 coref1 synset atoms
640 0  Mr.     + Mr.     PROPN NNP  compound 1  -        -       -   B-ARG0 B-ARG1 -   B-ARG1     B-MAIN0 mister.n.01     mr%2e/Cp.<.s
640 1  Filbert + Filbert PROPN NNP  nsubj    3  B-PERSON -       -   I-ARG0 I-ARG1 -   I-ARG1     I-MAIN0 -               filbert/Cp..s.p
640 2  has     + have    AUX   VBZ  aux      3  -        have.01 B-V -      -      -   -          -       -               has/Mv.<
640 3  lost    + lose    VERB  VBN  ROOT     3  -        lose.02 -   B-V    -      -   -          -       lose.v.01       lost/Pd.so:01:01.<pf:0123
640 4  his     + his     PRON  PRP$ poss     5  -        -       -   B-ARG1 -      -   -          B-REF0  -               his/Mp
640 5  wallet  + wallet  NOUN  NN   dobj     3  -        -       -   I-ARG1 -      -   -          -       wallet.n.01     wallet/Cc..s
640 6  and     + and     CCONJ CC   cc       3  -        -       -   -      -      -   -          -       -               and/J
640 7  is      + be      VERB  VBZ  conj     3  -        be.01   -   -      B-V    -   -          -       be.v.01         is/P.--:12:1h.|f--3s:12
640 8  or      + or      CCONJ CC   cc       7  -        -       -   -      -      -   -          -       -               or/J
640 9  will    + will    AUX   MD   aux      10 -        -       -   -      -      B-V B-ARGM-MOD -       -               will/Mm.<
640 10 be      + be      VERB  VB   conj     7  -        be.01   -   -      -      -   B-V        -       be.v.01         be/P.-c:12:1h.-i:12
640 11 very    + very    ADV   RB   advmod   12 -        -       -   -      B-ARG2 -   B-ARG2     -       very.r.01       very/M.<
640 12 much    + much    ADV   RB   advmod   13 -        -       -   -      I-ARG2 -   I-ARG2     -       much.r.02       much/M.<
640 13 upset   - upset   ADJ   JJ   acomp    10 -        -       -   -      I-ARG2 -   I-ARG2     -       disquieted.s.01 upset/Ca
640 14 .       - .       PUNCT .    punct    3  -        -       -   -      -      -   -          -       -               -

# sent_i = 641
# sent = What he needs and likes is a complete rest.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (and/J (needs/P.os:10:10.|f--3s:01 what/Cw he/Ci) (likes/P.--:10:10.|f--3s:01 what/Cw he/Ci)) (a/Md.< (complete/Ma.< rest/Cc..s)))
# hyperedge builder = (641.5/Pd.sc:12:1h.|f--3s:12 (641.3/J (641.2/P.os:10:10.|f--3s:01 641.0/Cw 641.1/Ci) (641.4/P.--:10:10.|f--3s:01 641.0/Cw 641.1/Ci)) (641.6/Md.< (641.7/Ma.< 641.8/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
641 0 What     + what     PRON  WP  dobj  2 - -       B-ARG1 B-ARG1 B-ARG1 -             what/Cw
641 1 he       + he       PRON  PRP nsubj 2 - -       B-ARG0 B-ARG0 I-ARG1 -             he/Ci
641 2 needs    + need     VERB  VBZ csubj 5 - need.01 B-V    -      I-ARG1 want.v.02     needs/P.os:10:10.|f--3s:01
641 3 and      + and      CCONJ CC  cc    2 - -       -      -      I-ARG1 -             and/J
641 4 likes    + like     VERB  VBZ conj  2 - like.01 -      B-V    I-ARG1 like.v.02     likes/P.--:10:10.|f--3s:01
641 5 is       + be       AUX   VBZ ROOT  5 - be.01   -      -      B-V    be.v.01       is/Pd.sc:12:1h.|f--3s:12
641 6 a        + a        DET   DT  det   8 - -       -      -      B-ARG2 -             a/Md.<
641 7 complete + complete ADJ   JJ  amod  8 - -       -      -      I-ARG2 complete.a.01 complete/Ma.<
641 8 rest     - rest     NOUN  NN  attr  5 - -       -      -      I-ARG2 rest.n.02     rest/Cc..s
641 9 .        - .        PUNCT .   punct 5 - -       -      -      -      -             -

# sent_i = 642
# sent = Playing and promoting ball games is not allowed.
# hyperedge = ((is/Mv.< (not/Mn.< allowed/Pd.p:1:1.<pf:01)) (and/J (playing/P.-:1:1.|pg:0123 (+/B.am ball/Cc.<.s games/Cc..p)) (promoting/P.o:1:1.|pg:012 (+/B.am ball/Cc.<.s games/Cc..p))))
# hyperedge builder = ((642.5/Mv.< (642.6/Mn.< 642.7/Pd.p:1:1.<pf:01)) (642.1/J (642.0/P.-:1:1.|pg:0123 (+/B.am 642.3/Cc.<.s 642.4/Cc..p)) (642.2/P.o:1:1.|pg:012 (+/B.am 642.3/Cc.<.s 642.4/Cc..p))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
642 0 Playing   + play    VERB  VBG csubjpass 7 - play.01    B-V    -      -   B-ARG1     play.v.01      playing/P.-:1:1.|pg:0123
642 1 and       + and     CCONJ CC  cc        0 - -          -      -      -   I-ARG1     -              and/J
642 2 promoting + promote VERB  VBG conj      0 - promote.02 -      B-V    -   I-ARG1     promote.v.01   promoting/P.o:1:1.|pg:012
642 3 ball      + ball    NOUN  NN  compound  4 - -          B-ARG1 B-ARG1 -   I-ARG1     ball_game.n.01 ball/Cc.<.s
642 4 games     + game    NOUN  NNS dobj      2 - -          I-ARG1 I-ARG1 -   I-ARG1     ball_game.n.01 games/Cc..p
642 5 is        + be      AUX   VBZ auxpass   7 - be.03      -      -      B-V -          -              is/Mv.<
642 6 not       + not     PART  RB  neg       7 - -          -      -      -   B-ARGM-NEG not.r.01       not/Mn.<
642 7 allowed   - allow   VERB  VBN ROOT      7 - allow.01   -      -      -   B-V        allow.v.10     allowed/Pd.p:1:1.<pf:01
642 8 .         - .       PUNCT .   punct     7 - -          -      -      -   -          -              -

# sent_i = 643
# sent = I owe Janet and Peter £10.
# hyperedge = (owe/Pd.sio:021:0g1.|f:0123 i/Ci (and/J janet/Cp..s.p peter/Cp..s.p) (£/M.<..$ 10/C#...$))
# hyperedge builder = (643.1/Pd.sio:021:0g1.|f:0123 643.0/Ci (643.3/J 643.2/Cp..s.p 643.4/Cp..s.p) (643.5/M.<..$ 643.6/C#...$))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
643 0 I     + I     PRON  PRP nsubj  1 -        -      B-ARG0 -        i/Ci
643 1 owe   + owe   VERB  VBP ROOT   1 -        owe.01 B-V    owe.v.01 owe/Pd.sio:021:0g1.|f:0123
643 2 Janet + Janet PROPN NNP dative 1 B-PERSON -      B-ARG2 -        janet/Cp..s.p
643 3 and   + and   CCONJ CC  cc     2 -        -      I-ARG2 -        and/J
643 4 Peter + Peter PROPN NNP conj   2 B-PERSON -      I-ARG2 -        peter/Cp..s.p
643 5 £     - £     SYM   $   nmod   6 B-MONEY  -      B-ARG1 -        £/M.<..$
643 6 10    - 10    NUM   CD  dobj   1 I-MONEY  -      I-ARG1 ten.s.01 10/C#...$
643 7 .     - .     PUNCT .   punct  1 -        -      -      -        -

# sent_i = 644
# sent = Animals need water and food.
# hyperedge = (need/Pd.so:01:01.|f:01 animals/Cc..p (and/J water/Cc..s food/Cc..s))
# hyperedge builder = (644.1/Pd.so:01:01.|f:01 644.0/Cc..p (644.3/J 644.2/Cc..s 644.4/Cc..s))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
644 0 Animals + animal NOUN  NNS nsubj 1 - -       B-ARG0 animal.n.01 animals/Cc..p
644 1 need    + need   VERB  VBP ROOT  1 - need.01 B-V    want.v.02   need/Pd.so:01:01.|f:01
644 2 water   + water  NOUN  NN  dobj  1 - -       B-ARG1 water.n.06  water/Cc..s
644 3 and     + and    CCONJ CC  cc    2 - -       I-ARG1 -           and/J
644 4 food    - food   NOUN  NN  conj  2 - -       I-ARG1 food.n.01   food/Cc..s
644 5 .       - .      PUNCT .   punct 1 - -       -      -           -

# sent_i = 645
# sent = Anyway and indeed, it doesn't matter now.
# hyperedge = ((does/Mv.< (n't/Mn.< matter/Pd.js?:s1t:s1t.-i:12)) (and/J anyway/C indeed/C) it/Ci now/M)
# hyperedge builder = ((645.5/Mv.< (645.6/Mn.< 645.7/Pd.js?:s1t:s1t.-i:12)) (645.1/J 645.0/C 645.2/C) 645.4/Ci 645.8/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
645 0 Anyway + anyway INTJ  UH  intj   7 - -         -   B-ARGM-DIS anyhow.r.01 anyway/C
645 1 and    + and    CCONJ CC  cc     0 - -         -   I-ARGM-DIS -           and/J
645 2 indeed - indeed INTJ  UH  conj   0 - -         -   I-ARGM-DIS indeed.r.01 indeed/C
645 3 ,      + ,      PUNCT ,   punct  7 - -         -   -          -           -
645 4 it     + it     PRON  PRP nsubj  7 - -         -   B-ARG1     -           it/Ci
645 5 does   - do     AUX   VBZ aux    7 - do.01     B-V -          -           does/Mv.<
645 6 n't    + not    PART  RB  neg    7 - -         -   B-ARGM-NEG not.r.01    n't/Mn.<
645 7 matter + matter VERB  VB  ROOT   7 - matter.01 -   B-V        count.v.02  matter/Pd.js?:s1t:s1t.-i:12
645 8 now    - now    ADV   RB  advmod 7 - -         -   B-ARGM-TMP now.r.04    now/M
645 9 .      - .      PUNCT .   punct  7 - -         -   -          -           -

# sent_i = 646
# sent = A gust of wind caught him as and while he fell.
# hyperedge = (caught/Pd.sox:01t:01t.<f:012 (of/Br (a/Md.< gust/Cc..s) wind/Cc..s) him/Ci ((and/J as/T while/T) (fell/P.s:1:1.<f:1234m (+/Jc.rm.rr he/Ci him/Ci))))
# hyperedge builder = (646.4/Pd.sox:01t:01t.<f:012 (646.2/Br (646.0/Md.< 646.1/Cc..s) 646.3/Cc..s) 646.5/Ci ((646.7/J 646.6/T 646.8/T) (646.10/P.s:1:1.<f:1234m (+/Jc.rm.rr 646.9/Ci 646.5/Ci))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 coref1 synset atoms
646 0  A      + a     DET   DT  det   1  - -        B-ARG0     -      -       -          a/Md.<
646 1  gust   + gust  NOUN  NN  nsubj 4  - -        I-ARG0     -      -       gust.n.01  gust/Cc..s
646 2  of     + of    ADP   IN  prep  1  - -        I-ARG0     -      -       -          of/Br
646 3  wind   + wind  NOUN  NN  pobj  2  - -        I-ARG0     -      -       wind.n.01  wind/Cc..s
646 4  caught + catch VERB  VBD ROOT  4  - catch.01 B-V        -      -       catch.v.04 caught/Pd.sox:01t:01t.<f:012
646 5  him    + he    PRON  PRP dobj  4  - -        B-ARG1     -      B-MAIN0 -          him/Ci
646 6  as     + as    ADP   IN  mark  10 - -        B-ARGM-TMP -      -       -          as/T
646 7  and    + and   CCONJ CC  cc    6  - -        I-ARGM-TMP -      -       -          and/J
646 8  while  + while SCONJ IN  conj  6  - -        I-ARGM-TMP -      -       -          while/T
646 9  he     + he    PRON  PRP nsubj 10 - -        I-ARGM-TMP B-ARG1 B-REF0  -          he/Ci
646 10 fell   - fall  VERB  VBD advcl 4  - fall.01  I-ARGM-TMP B-V    -       fall.v.01  fell/P.s:1:1.<f:1234m
646 11 .      - .     PUNCT .   punct 4  - -        -          -      -       -          -

# sent_i = 647
# sent = I have never and nowhere experienced such a quiet evidence.
# hyperedge = ((have/Mv.< ((and/J never/Mn.< nowhere/Mn) experienced/Pd.so:01:1c.<f:01)) i/Ci (such/M.< (a/Md.< (quiet/Ma.< evidence/Cc..s))))
# hyperedge builder = ((647.1/Mv.< ((647.3/J 647.2/Mn.< 647.4/Mn) 647.5/Pd.so:01:1c.<f:01)) 647.0/Ci (647.6/M.< (647.7/Md.< (647.8/Ma.< 647.9/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
647 0  I           + I          PRON  PRP nsubj  5 - -             -   B-ARG0     -             i/Ci
647 1  have        + have       AUX   VBP aux    5 - have.01       B-V -          -             have/Mv.<
647 2  never       + never      ADV   RB  neg    5 - -             -   B-ARGM-NEG never.r.01    never/Mn.<
647 3  and         + and        CCONJ CC  cc     2 - -             -   I-ARGM-NEG -             and/J
647 4  nowhere     + nowhere    ADV   RB  conj   2 - -             -   I-ARGM-NEG nowhere.r.01  nowhere/Mn
647 5  experienced + experience VERB  VBD ROOT   5 - experience.01 -   B-V        know.v.05     experienced/Pd.so:01:1c.<f:01
647 6  such        + such       DET   PDT predet 9 - -             -   B-ARG1     such.r.01     such/M.<
647 7  a           + a          DET   DT  det    9 - -             -   I-ARG1     -             a/Md.<
647 8  quiet       + quiet      ADJ   JJ  amod   9 - -             -   I-ARG1     quiet.a.01    quiet/Ma.<
647 9  evidence    - evidence   NOUN  NN  dobj   5 - -             -   I-ARG1     evidence.n.02 evidence/Cc..s
647 10 .           - .          PUNCT .   punct  5 - -             -   -          -             -

# sent_i = 648
# sent = I owe Janet (£ or $) 10.
# hyperedge = (owe/Pd.sio:021:0g1.|f:0123 i/Ci janet/Cp..s.p ((or/J...$ £/M.<..$ $/M...$) 10/C#...$))
# hyperedge builder = (648.1/Pd.sio:021:0g1.|f:0123 648.0/Ci 648.2/Cp..s.p ((648.5/J...$ 648.4/M.<..$ 648.6/M...$) 648.8/C#...$))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
648 0 I     + I     PRON  PRP   nsubj  1 -        -      B-ARG0 -        i/Ci
648 1 owe   + owe   VERB  VBP   ROOT   1 -        owe.01 B-V    owe.v.01 owe/Pd.sio:021:0g1.|f:0123
648 2 Janet + Janet PROPN NNP   dative 1 B-PERSON -      B-ARG2 -        janet/Cp..s.p
648 3 (     - (     PUNCT -LRB- punct  8 B-MONEY  -      B-ARG1 -        -
648 4 £     + £     SYM   $     nmod   8 I-MONEY  -      I-ARG1 -        £/M.<..$
648 5 or    + or    CCONJ CC    cc     4 I-MONEY  -      I-ARG1 -        or/J...$
648 6 $     - $     SYM   $     conj   4 I-MONEY  -      I-ARG1 -        $/M...$
648 7 )     + )     PUNCT -RRB- punct  8 I-MONEY  -      I-ARG1 -        -
648 8 10    - 10    NUM   CD    dobj   1 I-MONEY  -      I-ARG1 ten.s.01 10/C#...$
648 9 .     - .     PUNCT .     punct  1 -        -      -      -        -

# sent_i = 649
# sent = I will be going to France next week and the week after.
# hyperedge = ((will/Mm.< (be/Mv.< going/Pd.sxx:04t:1gt.|pg:0134)) i/Ci (to/T france/Cp..s.g) (and/J (next/Ma.<..d week/Cc..s.d) (after/M.>..d (the/Md.<..d week/Cc..s.d))))
# hyperedge builder = ((649.1/Mm.< (649.2/Mv.< 649.3/Pd.sxx:04t:1gt.|pg:0134)) 649.0/Ci (649.4/T 649.5/Cp..s.g) (649.8/J (649.6/Ma.<..d 649.7/Cc..s.d) (649.11/M.>..d (649.9/Md.<..d 649.10/Cc..s.d))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
649 0  I      + I      PRON  PRP nsubj    3  -      -     -   -   B-ARG0     -                 i/Ci
649 1  will   + will   AUX   MD  aux      3  -      -     B-V -   B-ARGM-MOD -                 will/Mm.<
649 2  be     + be     AUX   VB  aux      3  -      be.03 -   B-V -          -                 be/Mv.<
649 3  going  + go     VERB  VBG ROOT     3  -      go.02 -   -   B-V        travel.v.01       going/Pd.sxx:04t:1gt.|pg:0134
649 4  to     + to     ADP   IN  prep     3  -      -     -   -   B-ARG4     -                 to/T
649 5  France + France PROPN NNP pobj     4  B-GPE  -     -   -   I-ARG4     france.n.01       france/Cp..s.g
649 6  next   + next   ADJ   JJ  amod     7  B-DATE -     -   -   B-ARGM-TMP following.s.02    next/Ma.<..d
649 7  week   + week   NOUN  NN  npadvmod 3  I-DATE -     -   -   I-ARGM-TMP week.n.03         week/Cc..s.d
649 8  and    + and    CCONJ CC  cc       7  -      -     -   -   I-ARGM-TMP -                 and/J
649 9  the    + the    DET   DT  det      10 B-DATE -     -   -   I-ARGM-TMP -                 the/Md.<..d
649 10 week   + week   NOUN  NN  conj     7  I-DATE -     -   -   I-ARGM-TMP week.n.03         week/Cc..s.d
649 11 after  - after  ADV   RB  advmod   10 I-DATE -     -   -   I-ARGM-TMP subsequently.r.01 after/M.>..d
649 12 .      - .      PUNCT .   punct    3  -      -     -   -   -          -                 -

# sent_i = 650
# sent = Animals and plants need water.
# hyperedge = (need/Pd.so:01:01.|f:01 (and/J animals/Cc..p plants/Cc..p) water/Cc..s)
# hyperedge builder = (650.3/Pd.so:01:01.|f:01 (650.1/J 650.0/Cc..p 650.2/Cc..p) 650.4/Cc..s)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
650 0 Animals + animal NOUN  NNS nsubj 3 - -       B-ARG0 animal.n.01 animals/Cc..p
650 1 and     + and    CCONJ CC  cc    0 - -       I-ARG0 -           and/J
650 2 plants  + plant  NOUN  NNS conj  0 - -       I-ARG0 plant.n.02  plants/Cc..p
650 3 need    + need   VERB  VBP ROOT  3 - need.01 B-V    want.v.02   need/Pd.so:01:01.|f:01
650 4 water   - water  NOUN  NN  dobj  3 - -       B-ARG1 water.n.06  water/Cc..s
650 5 .       - .      PUNCT .   punct 3 - -       -      -           -

# sent_i = 651
# sent = Many people and animals are killed on the roads.
# hyperedge = ((are/Mv.< killed/Pd.px:1l:1l.<pf:012) (and/J (many/Ma.< people/Cc..p) animals/Cc..p) (on/Tl (the/Md.< roads/Cc..p)))
# hyperedge builder = ((651.4/Mv.< 651.5/Pd.px:1l:1l.<pf:012) (651.2/J (651.0/Ma.< 651.1/Cc..p) 651.3/Cc..p) (651.6/Tl (651.7/Md.< 651.8/Cc..p)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
651 0 Many    + many   ADJ   JJ  amod      1 - -       -   B-ARG1     many.a.01   many/Ma.<
651 1 people  + people NOUN  NNS nsubjpass 5 - -       -   I-ARG1     people.n.01 people/Cc..p
651 2 and     + and    CCONJ CC  cc        1 - -       -   I-ARG1     -           and/J
651 3 animals + animal NOUN  NNS conj      1 - -       -   I-ARG1     animal.n.01 animals/Cc..p
651 4 are     + be     AUX   VBP auxpass   5 - be.03   B-V -          -           are/Mv.<
651 5 killed  + kill   VERB  VBN ROOT      5 - kill.01 -   B-V        kill.v.01   killed/Pd.px:1l:1l.<pf:012
651 6 on      + on     ADP   IN  prep      5 - -       -   B-ARGM-LOC -           on/Tl
651 7 the     + the    DET   DT  det       8 - -       -   I-ARGM-LOC -           the/Md.<
651 8 roads   - road   NOUN  NNS pobj      6 - -       -   I-ARGM-LOC road.n.01   roads/Cc..p
651 9 .       - .      PUNCT .   punct     5 - -       -   -          -           -

# sent_i = 652
# sent = We have been working since 9 or 10 am.
# hyperedge = ((have/Mv.< (been/Mv.< working/Pd.sx:0t:0t.|pg:012345)) we/Ci (since/Tt ((or/J...t 9/M#.<..t 10/M#...t) am/Cc..s.t)))
# hyperedge builder = ((652.1/Mv.< (652.2/Mv.< 652.3/Pd.sx:0t:0t.|pg:012345)) 652.0/Ci (652.4/Tt ((652.6/J...t 652.5/M#.<..t 652.7/M#...t) 652.8/Cc..s.t)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
652 0 We      + we    PRON  PRP nsubj  3 -      -       -   -   B-ARG0     -                  we/Ci
652 1 have    + have  AUX   VBP aux    3 -      have.01 B-V -   -          -                  have/Mv.<
652 2 been    + be    AUX   VBN aux    3 -      be.03   -   B-V -          -                  been/Mv.<
652 3 working + work  VERB  VBG ROOT   3 -      work.01 -   -   B-V        work.v.01          working/Pd.sx:0t:0t.|pg:012345
652 4 since   + since SCONJ IN  prep   3 -      -       -   -   B-ARGM-TMP -                  since/Tt
652 5 9       + 9     NUM   CD  nummod 8 B-TIME -       -   -   I-ARGM-TMP nine.s.01          9/M#.<..t
652 6 or      + or    CCONJ CC  cc     5 I-TIME -       -   -   I-ARGM-TMP -                  or/J...t
652 7 10      + 10    NUM   CD  conj   5 I-TIME -       -   -   I-ARGM-TMP ten.s.01           10/M#...t
652 8 am      - am    NOUN  NN  pobj   4 I-TIME -       -   -   I-ARGM-TMP ante_meridiem.r.01 am/Cc..s.t
652 9 .       - .     PUNCT .   punct  3 -      -       -   -   -          -                  -

# sent_i = 653
# sent = Five dollars seems very reasonable and fair for that shirt.
# hyperedge = (seems/Pd.so:11:11.|f--3s:12 (five/M#.<..$ dollars/Cc..p.$) (for/Br (and/J (very/M.< reasonable/M) fair/M) (that/Md.< shirt/Cc..s)))
# hyperedge builder = (653.2/Pd.so:11:11.|f--3s:12 (653.0/M#.<..$ 653.1/Cc..p.$) (653.7/Br (653.5/J (653.3/M.< 653.4/M) 653.6/M) (653.8/Md.< 653.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
653 0  Five       + five       NUM   CD  nummod 1 B-MONEY -       B-ARG1   five.s.01   five/M#.<..$
653 1  dollars    + dollar     NOUN  NNS nsubj  2 I-MONEY -       I-ARG1   dollar.n.01 dollars/Cc..p.$
653 2  seems      + seem       VERB  VBZ ROOT   2 -       seem.01 B-V      look.v.02   seems/Pd.so:11:11.|f--3s:12
653 3  very       + very       ADV   RB  advmod 4 -       -       B-C-ARG1 very.r.01   very/M.<
653 4  reasonable + reasonable ADJ   JJ  oprd   2 -       -       I-C-ARG1 fair.s.02   reasonable/M
653 5  and        + and        CCONJ CC  cc     4 -       -       I-C-ARG1 -           and/J
653 6  fair       + fair       ADJ   JJ  conj   4 -       -       I-C-ARG1 fair.s.02   fair/M
653 7  for        + for        ADP   IN  prep   6 -       -       I-C-ARG1 -           for/Br
653 8  that       + that       DET   DT  det    9 -       -       I-C-ARG1 -           that/Md.<
653 9  shirt      - shirt      NOUN  NN  pobj   7 -       -       I-C-ARG1 shirt.n.01  shirt/Cc..s
653 10 .          - .          PUNCT .   punct  2 -       -       -        -           -

# sent_i = 654
# sent = Like, you know and see, it was very nice.
# hyperedge = (was/Pd.jtsc:ss12:ss1h.<f:12 like/C (and/J (know/P.s:0:0.|f:0 you/Ci) (see/P.-:0:0.-i:0 you/Ci)) it/Ci (very/M.< nice/Ca))
# hyperedge builder = (654.8/Pd.jtsc:ss12:ss1h.<f:12 654.0/C (654.4/J (654.3/P.s:0:0.|f:0 654.2/Ci) (654.5/P.-:0:0.-i:0 654.2/Ci)) 654.7/Ci (654.9/M.< 654.10/Ca))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
654 0  Like - like INTJ  UH  intj      8  - -       -      -      B-ARGM-DIS -         like/C
654 1  ,    + ,    PUNCT ,   punct     3  - -       -      -      -          -         -
654 2  you  + you  PRON  PRP nsubj     3  - -       B-ARG0 B-ARG0 B-ARGM-DIS -         you/Ci
654 3  know + know VERB  VBP parataxis 8  - know.06 B-V    -      I-ARGM-DIS know.v.01 know/P.s:0:0.|f:0
654 4  and  + and  CCONJ CC  cc        3  - -       -      -      I-ARGM-DIS -         and/J
654 5  see  - see  VERB  VB  conj      3  - see.03  -      B-V    I-ARGM-DIS see.v.01  see/P.-:0:0.-i:0
654 6  ,    + ,    PUNCT ,   punct     8  - -       -      -      -          -         -
654 7  it   + it   PRON  PRP nsubj     8  - -       -      -      B-ARG1     -         it/Ci
654 8  was  + be   AUX   VBD ROOT      8  - be.01   -      -      B-V        be.v.01   was/Pd.jtsc:ss12:ss1h.<f:12
654 9  very + very ADV   RB  advmod    10 - -       -      -      B-ARG2     very.r.01 very/M.<
654 10 nice - nice ADJ   JJ  acomp     8  - -       -      -      I-ARG2     nice.a.01 nice/Ca
654 11 .    - .    PUNCT .   punct     8  - -       -      -      -          -         -

# sent_i = 655
# sent = A holiday is nicer than sitting and working at a desk.
# hyperedge = (is/Pd.sc:12:1h.|f--3s:12 (a/Md.< holiday/Cc..s) (than/Br nicer/Ca (and/J (sitting/P.-:2:l.|pg:12 (at/Tl (a/Md.< desk/Cc..s))) (working/P.x:l:l.|pg:012345 (at/Tl (a/Md.< desk/Cc..s))))))
# hyperedge builder = (655.2/Pd.sc:12:1h.|f--3s:12 (655.0/Md.< 655.1/Cc..s) (655.4/Br 655.3/Ca (655.6/J (655.5/P.-:2:l.|pg:12 (655.8/Tl (655.9/Md.< 655.10/Cc..s))) (655.7/P.x:l:l.|pg:012345 (655.8/Tl (655.9/Md.< 655.10/Cc..s))))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
655 0  A       + a       DET   DT  det   1  - -       B-ARG1 -      -          -             a/Md.<
655 1  holiday + holiday NOUN  NN  nsubj 2  - -       I-ARG1 -      -          vacation.n.01 holiday/Cc..s
655 2  is      + be      AUX   VBZ ROOT  2  - be.01   B-V    -      -          be.v.01       is/Pd.sc:12:1h.|f--3s:12
655 3  nicer   + nice    ADJ   JJR acomp 2  - -       B-ARG2 -      -          nice.a.01     nicer/Ca
655 4  than    + than    SCONJ IN  prep  3  - -       I-ARG2 -      -          -             than/Br
655 5  sitting + sit     VERB  VBG pcomp 4  - sit.01  I-ARG2 B-V    -          sit.v.01      sitting/P.-:2:l.|pg:12
655 6  and     + and     CCONJ CC  cc    5  - -       I-ARG2 -      -          -             and/J
655 7  working + work    VERB  VBG conj  5  - work.01 I-ARG2 -      B-V        work.v.02     working/P.x:l:l.|pg:012345
655 8  at      + at      ADP   IN  prep  7  - -       I-ARG2 B-ARG2 B-ARGM-LOC -             at/Tl
655 9  a       + a       DET   DT  det   10 - -       I-ARG2 I-ARG2 I-ARGM-LOC -             a/Md.<
655 10 desk    - desk    NOUN  NN  pobj  8  - -       I-ARG2 I-ARG2 I-ARGM-LOC desk.n.01     desk/Cc..s
655 11 .       - .       PUNCT .   punct 2  - -       -      -      -          -             -

# sent_i = 656
# sent = All passengers with tickets and documents can board now.
# hyperedge = ((can/Mm.< board/Pd.s?:0t:1t.-i:01) (with/Br (all/Md.< passengers/Cc..p) (and/J tickets/Cc..p documents/Cc..p)) now/M)
# hyperedge builder = ((656.6/Mm.< 656.7/Pd.s?:0t:1t.-i:01) (656.2/Br (656.0/Md.< 656.1/Cc..p) (656.4/J 656.3/Cc..p 656.5/Cc..p)) 656.8/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
656 0 All        + all       DET   DT  det    1 - -        -   B-ARG0     all.a.01       all/Md.<
656 1 passengers + passenger NOUN  NNS nsubj  7 - -        -   I-ARG0     passenger.n.01 passengers/Cc..p
656 2 with       + with      ADP   IN  prep   1 - -        -   I-ARG0     -              with/Br
656 3 tickets    + ticket    NOUN  NNS pobj   2 - -        -   I-ARG0     ticket.n.01    tickets/Cc..p
656 4 and        + and       CCONJ CC  cc     3 - -        -   I-ARG0     -              and/J
656 5 documents  + document  NOUN  NNS conj   3 - -        -   I-ARG0     document.n.01  documents/Cc..p
656 6 can        + can       AUX   MD  aux    7 - -        B-V B-ARGM-MOD -              can/Mm.<
656 7 board      + board     VERB  VB  ROOT   7 - board.01 -   B-V        board.v.01     board/Pd.s?:0t:1t.-i:01
656 8 now        - now       ADV   RB  advmod 7 - -        -   B-ARGM-TMP now.r.04       now/M
656 9 .          - .         PUNCT .   punct  7 - -        -   -          -              -

# sent_i = 657
# sent = The president smokes a cigar in his and your office.
# hyperedge = (smokes/Pd.sox:01l:01l.|f--3s:01 (the/Md.< president/Cc..s) (a/Md.< cigar/Cc..s) (in/Tl ((and/J (+/Jc.rm.rc his/Mp (the/Md.< president/Cc..s)) your/Mp) office/Cc..s)))
# hyperedge builder = (657.2/Pd.sox:01l:01l.|f--3s:01 (657.0/Md.< 657.1/Cc..s) (657.3/Md.< 657.4/Cc..s) (657.5/Tl ((657.7/J (+/Jc.rm.rc 657.6/Mp (657.0/Md.< 657.1/Cc..s)) 657.8/Mp) 657.9/Cc..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 coref1 synset atoms
657 0  The       + the       DET   DT   det   1 - -        B-ARG0     B-MAIN0 -              the/Md.<
657 1  president + president NOUN  NN   nsubj 2 - -        I-ARG0     I-MAIN0 president.n.03 president/Cc..s
657 2  smokes    + smoke     VERB  VBZ  ROOT  2 - smoke.02 B-V        -       smoke.v.01     smokes/Pd.sox:01l:01l.|f--3s:01
657 3  a         + a         DET   DT   det   4 - -        B-ARG1     -       -              a/Md.<
657 4  cigar     + cigar     NOUN  NN   dobj  2 - -        I-ARG1     -       cigar.n.01     cigar/Cc..s
657 5  in        + in        ADP   IN   prep  2 - -        B-ARGM-LOC -       -              in/Tl
657 6  his       + his       PRON  PRP$ poss  9 - -        I-ARGM-LOC B-REF0  -              his/Mp
657 7  and       + and       CCONJ CC   cc    6 - -        I-ARGM-LOC -       -              and/J
657 8  your      + your      PRON  PRP$ conj  6 - -        I-ARGM-LOC -       -              your/Mp
657 9  office    - office    NOUN  NN   pobj  5 - -        I-ARGM-LOC -       office.n.01    office/Cc..s
657 10 .         - .         PUNCT .    punct 2 - -        -          -       -              -

# sent_i = 658
# sent = Brian agreed to pay half or all the cost.
# hyperedge = (agreed/Pd.sr:01:01.<f:012 brian/Cp..s.p ((to/Mi.< pay/P.-o:01:0q.-i:0123) brian/Cp..s.p ((or/J half/M.< all/M) (the/Md.< cost/Cc..s))))
# hyperedge builder = (658.1/Pd.sr:01:01.<f:012 658.0/Cp..s.p ((658.2/Mi.< 658.3/P.-o:01:0q.-i:0123) 658.0/Cp..s.p ((658.5/J 658.4/M.< 658.6/M) (658.7/Md.< 658.8/Cc..s))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
658 0 Brian  + Brian PROPN NNP nsubj  1 B-PERSON -        B-ARG0 B-ARG0 -             brian/Cp..s.p
658 1 agreed + agree VERB  VBD ROOT   1 -        agree.01 B-V    -      agree.v.02    agreed/Pd.sr:01:01.<f:012
658 2 to     + to    PART  TO  aux    3 -        -        B-ARG1 -      -             to/Mi.<
658 3 pay    + pay   VERB  VB  xcomp  1 -        pay.01   I-ARG1 B-V    pay.v.01      pay/P.-o:01:0q.-i:0123
658 4 half   + half  DET   PDT predet 8 -        -        I-ARG1 B-ARG1 one-half.n.01 half/M.<
658 5 or     + or    CCONJ CC  cc     4 -        -        I-ARG1 I-ARG1 -             or/J
658 6 all    + all   DET   PDT conj   4 -        -        I-ARG1 I-ARG1 all.a.01      all/M
658 7 the    + the   DET   DT  det    8 -        -        I-ARG1 I-ARG1 -             the/Md.<
658 8 cost   - cost  NOUN  NN  dobj   3 -        -        I-ARG1 I-ARG1 cost.n.01     cost/Cc..s
658 9 .      - .     PUNCT .   punct  1 -        -        -      -      -             -

# sent_i = 659
# sent = All passengers with or without tickets can board now.
# hyperedge = ((can/Mm.< board/Pd.s?:0t:1t.-i:01) ((or/J with/Br without/Br) (all/Md.< passengers/Cc..p) tickets/Cc..p) now/M)
# hyperedge builder = ((659.6/Mm.< 659.7/Pd.s?:0t:1t.-i:01) ((659.3/J 659.2/Br 659.4/Br) (659.0/Md.< 659.1/Cc..p) 659.5/Cc..p) 659.8/M)
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 synset atoms
659 0 All        + all       DET   DT  det    1 - -        -   B-ARG0     all.a.01       all/Md.<
659 1 passengers + passenger NOUN  NNS nsubj  7 - -        -   I-ARG0     passenger.n.01 passengers/Cc..p
659 2 with       + with      ADP   IN  prep   1 - -        -   I-ARG0     -              with/Br
659 3 or         + or        CCONJ CC  cc     2 - -        -   I-ARG0     -              or/J
659 4 without    + without   ADP   IN  conj   2 - -        -   I-ARG0     -              without/Br
659 5 tickets    + ticket    NOUN  NNS pobj   4 - -        -   I-ARG0     ticket.n.01    tickets/Cc..p
659 6 can        + can       AUX   MD  aux    7 - -        B-V B-ARGM-MOD -              can/Mm.<
659 7 board      + board     VERB  VB  ROOT   7 - board.01 -   B-V        board.v.01     board/Pd.s?:0t:1t.-i:01
659 8 now        - now       ADV   RB  advmod 7 - -        -   B-ARGM-TMP now.r.04       now/M
659 9 .          - .         PUNCT .   punct  7 - -        -   -          -              -

# sent_i = 660
# sent = The nose went up and through a blast fence.
# hyperedge = (((and/J up/Ml.r.> through/Ml.r.>) went/Pd.s?:12:1d.<f:012) (the/Md.< nose/Cc..s) (a/Md.< (+/B.am blast/Cc.<.s fence/M..s)))
# hyperedge builder = (((660.4/J 660.3/Ml.r.> 660.5/Ml.r.>) 660.2/Pd.s?:12:1d.<f:012) (660.0/Md.< 660.1/Cc..s) (660.6/Md.< (+/B.am 660.7/Cc.<.s 660.8/M..s)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 synset atoms
660 0 The     + the     DET   DT  det      1 - -     B-ARG1 -            the/Md.<
660 1 nose    + nose    NOUN  NN  nsubj    2 - -     I-ARG1 nose.n.02    nose/Cc..s
660 2 went    + go      VERB  VBD ROOT     2 - go.06 B-V    rise.v.01    went/Pd.s?:12:1d.<f:012
660 3 up      + up      ADP   RP  prt      2 - -     -      rise.v.01    up/Ml.r.>
660 4 and     + and     CCONJ CC  cc       2 - -     -      -            and/J
660 5 through + through ADP   IN  prt      2 - -     -      through.r.02 through/Ml.r.>
660 6 a       + a       DET   DT  det      8 - -     B-ARG2 -            a/Md.<
660 7 blast   + blast   NOUN  NN  compound 8 - -     I-ARG2 blast.n.04   blast/Cc.<.s
660 8 fence   - fence   NOUN  NN  advmod   2 - -     I-ARG2 fence.n.01   fence/M..s
660 9 .       - .       PUNCT .   punct    2 - -     -      -            -

# sent_i = 661
# sent = Stonehenge is thought to date from about or around 1900 BC.
# hyperedge = ((is/Mv.< thought/Pd.pr:11:11.<pf:012) stonehenge/Cp..s.g ((to/Mi.< date/P.-x:12:g1.-i:012) stonehenge/Cp..s.g (from/T (((or/J...d about/M.<..d around/M...d) 1900/M#.<..d) bc/Cc..s.d))))
# hyperedge builder = ((661.1/Mv.< 661.2/Pd.pr:11:11.<pf:012) 661.0/Cp..s.g ((661.3/Mi.< 661.4/P.-x:12:g1.-i:012) 661.0/Cp..s.g (661.5/T (((661.7/J...d 661.6/M.<..d 661.8/M...d) 661.9/M#.<..d) 661.10/Cc..s.d))))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
661 0  Stonehenge + Stonehenge PROPN NNP nsubjpass 2  B-GPE  -        -   B-ARG1   B-ARG1 stonehenge.n.01    stonehenge/Cp..s.g
661 1  is         + be         AUX   VBZ auxpass   2  -      be.03    B-V -        -      -                  is/Mv.<
661 2  thought    + think      VERB  VBN ROOT      2  -      think.01 -   B-V      -      think.v.01         thought/Pd.pr:11:11.<pf:012
661 3  to         + to         PART  TO  aux       4  -      -        -   B-C-ARG1 -      -                  to/Mi.<
661 4  date       + date       VERB  VB  xcomp     2  -      date.01  -   I-C-ARG1 B-V    date.v.03          date/P.-x:12:g1.-i:012
661 5  from       + from       ADP   IN  prep      4  -      -        -   I-C-ARG1 B-ARG2 -                  from/T
661 6  about      + about      ADP   IN  quantmod  9  B-DATE -        -   I-C-ARG1 I-ARG2 approximately.r.01 about/M.<..d
661 7  or         + or         CCONJ CC  cc        6  I-DATE -        -   I-C-ARG1 I-ARG2 -                  or/J...d
661 8  around     + around     ADP   IN  conj      6  I-DATE -        -   I-C-ARG1 I-ARG2 approximately.r.01 around/M...d
661 9  1900       + 1900       NUM   CD  nummod    10 I-DATE -        -   I-C-ARG1 I-ARG2 -                  1900/M#.<..d
661 10 BC         - BC         NOUN  NN  pobj      5  I-DATE -        -   I-C-ARG1 I-ARG2 bc.r.01            bc/Cc..s.d
661 11 .          - .          PUNCT .   punct     2  -      -        -   -        -      -                  -

# sent_i = 662
# sent = The man who came and wanted to dinner stayed for several months.
# hyperedge = (stayed/Pd.sx:1t:1t.<f:123 (+/Jr.ma (the/Md.< man/Cc..s) (and/J (came/P.-s:11:11.<f:1234 (the/Md.< man/Cc..s) who/Cw) (wanted/P.--x:001:001.<f:01234 (the/Md.< man/Cc..s) who/Cw (to/T dinner/Cc..s)))) (for/Tt (several/Ma.<..d months/Cc..p.d)))
# hyperedge builder = (662.8/Pd.sx:1t:1t.<f:123 (+/Jr.ma (662.0/Md.< 662.1/Cc..s) (662.4/J (662.3/P.-s:11:11.<f:1234 (662.0/Md.< 662.1/Cc..s) 662.2/Cw) (662.5/P.--x:001:001.<f:01234 (662.0/Md.< 662.1/Cc..s) 662.2/Cw (662.6/T 662.7/Cc..s)))) (662.9/Tt (662.10/Ma.<..d 662.11/Cc..p.d)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 synset atoms
662 0  The     + the     DET   DT  det   1  -      -       B-ARG1   B-ARG0   B-ARG1     -            the/Md.<
662 1  man     + man     NOUN  NN  nsubj 8  -      -       I-ARG1   I-ARG0   I-ARG1     man.n.01     man/Cc..s
662 2  who     + who     PRON  WP  nsubj 3  -      -       B-R-ARG1 B-R-ARG0 I-ARG1     -            who/Cw
662 3  came    + come    VERB  VBD relcl 1  -      come.01 B-V      -        I-ARG1     arrive.v.01  came/P.-s:11:11.<f:1234
662 4  and     + and     CCONJ CC  cc    3  -      -       -        -        I-ARG1     -            and/J
662 5  wanted  + want    VERB  VBD conj  3  -      want.01 -        B-V      I-ARG1     desire.v.01  wanted/P.--x:001:001.<f:01234
662 6  to      + to      ADP   IN  prep  5  -      -       -        B-ARG1   I-ARG1     -            to/T
662 7  dinner  + dinner  NOUN  NN  pobj  6  -      -       -        I-ARG1   I-ARG1     dinner.n.01  dinner/Cc..s
662 8  stayed  + stay    VERB  VBD ROOT  8  -      stay.01 -        -        B-V        bide.v.01    stayed/Pd.sx:1t:1t.<f:123
662 9  for     + for     ADP   IN  prep  8  -      -       -        -        B-ARGM-TMP -            for/Tt
662 10 several + several ADJ   JJ  amod  11 B-DATE -       -        -        I-ARGM-TMP several.s.01 several/Ma.<..d
662 11 months  - month   NOUN  NNS pobj  9  I-DATE -       -        -        I-ARGM-TMP month.n.02   months/Cc..p.d
662 12 .       - .       PUNCT .   punct 8  -      -       -        -        -          -            -

# sent_i = 663
# sent = They were trying to help and support you.
# hyperedge = ((were/Mv.< trying/Pd.sr:01:01.|pg:01) they/Ci (and/J ((to/Mi.< help/P.--:01:01.-i:012) they/Ci you/Ci) (support/P.-o:01:01.-i:01 they/Ci you/Ci)))
# hyperedge builder = ((663.1/Mv.< 663.2/Pd.sr:01:01.|pg:01) 663.0/Ci (663.5/J ((663.3/Mi.< 663.4/P.--:01:01.-i:012) 663.0/Ci 663.7/Ci) (663.6/P.-o:01:01.-i:01 663.0/Ci 663.7/Ci)))
# fields = sent_i tok_i words spaces lemmas pos tags deps heads ner roleset srl1 srl2 srl3 srl4 synset atoms
663 0 They    + they    PRON  PRP nsubj 2 - -          -   B-ARG0 B-ARG0 B-ARG0 -            they/Ci
663 1 were    + be      AUX   VBD aux   2 - be.03      B-V -      -      -      -            were/Mv.<
663 2 trying  + try     VERB  VBG ROOT  2 - try.01     -   B-V    -      -      try.v.01     trying/Pd.sr:01:01.|pg:01
663 3 to      + to      PART  TO  aux   4 - -          -   B-ARG1 -      -      -            to/Mi.<
663 4 help    + help    VERB  VB  xcomp 2 - help.01    -   I-ARG1 B-V    -      help.v.01    help/P.--:01:01.-i:012
663 5 and     + and     CCONJ CC  cc    4 - -          -   I-ARG1 -      -      -            and/J
663 6 support + support VERB  VB  conj  4 - support.01 -   I-ARG1 -      B-V    support.v.01 support/P.-o:01:01.-i:01
663 7 you     - you     PRON  PRP dobj  6 - -          -   I-ARG1 B-ARG1 B-ARG1 -            you/Ci
663 8 .       - .       PUNCT .   punct 2 - -          -   -      -      -      -            -

